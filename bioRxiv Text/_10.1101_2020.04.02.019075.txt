bioRxiv preprint doi: https://doi.org/10.1101/2020.04.02.019075; this version posted July 29, 2020. The copyright holder for this preprint (which
was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made
available under aCC-BY 4.0 International license.

Rapid community-driven development of a SARSCoV-2 tissue simulator
Michael Getz1,**, Yafei Wang1,**, Gary An2,*, Andrew Becker2,*, Chase Cockrell2,*, Nicholson Collier3,4,*, Morgan
Craig5,6*, Courtney L. Davis7,*, James Faeder8,*, Ashlee N. Ford Versypt9,10,*,Juliano F. Gianlupi1,*, James A. Glazier1,*, Sara Hamis11,*, Randy Heiland1,*, Thomas Hillen12,*, Dennis Hou13,*, Mohammad Aminul Islam9,*, Adrianne
Jenner5,6,*, Furkan Kurtoglu1,*, Bing Liu8,*,†, Fiona Macfarlane11,*, Pablo Maygrundter14,*, Penelope A Morel15,*,
Aarthi Narayanan16,*, Jonathan Ozik3,4,*, Elsje Pienaar17,*, Padmini Rangamani18,*, Jason Edward Shoemaker19,*,
Amber M. Smith20,*, Paul Macklin1,***
1 Department

of Intelligent Systems Engineering, Indiana University. Bloomington, IN USA
University of Vermont Medical Center, Burlington, VT USA
3 Decision and Infrastructure Sciences, Argonne National Laboratory. Lemont, IL USA
4 Consortium for Advanced Science and Engineering, University of Chicago. Chicago, IL USA
5 Department of Mathematics, University of Montreal. Montreal, QC Canada
6 CHU Sainte-Justine Research Centre, Montreal, QC Canada
7 Natural Science Division, Pepperdine University, Malibu, CA USA
8 Department of Computational and Systems Biology, University of Pittsburgh. Pittsburgh, PA USA
9 School of Chemical Engineering, Oklahoma State University, Stillwater, OK USA
10 Oklahoma Center for Respiratory and Infectious Diseases, Oklahoma State University, Stillwater, OK USA
11 School of Mathematics and Statistics, University of St Andrews, St Andrews, Scotland.
12 Department of Mathematical and Statistical Sciences, University of Alberta. Edmonton, AB Canada
13 Department of Mathematics, Rutgers University. New Brunswick, NJ USA
14 Citizen scientist. Austin, TX USA
15 Department of Immunology, University of Pittsburgh. Pittsburgh, PA USA
16 National Center for Biodefense and Infectious Disease, George Mason University. Manassas, VA USA
17 Weldon School of Biomedical Engineering, Purdue University. West Lafayette, IN USA
18 Department of Mechanical and Aerospace Engineering, University of California. San Diego, CA USA
19 Department of Chemical and Petroleum Engineering, University of Pittsburgh. Pittsburgh, PA USA
20 Department of Pediatrics, University of Tennessee Health Science Center, Memphis, TN USA
2 The

* contributed equally to this work
** equally contributing lead authors
†
in memoriam
*** corresponding author: macklinp@iu.edu, @MathCancer

Note: This is a rapid prototyping project. For the very latest, see http://COVID-19.physicell.org
Abstract:
The 2019 novel coronavirus, SARS-CoV-2, is an emerging pathogen of critical significance to international public
health. Knowledge of the interplay between molecular-scale virus-receptor interactions, single-cell viral replication, intracellular-scale viral transport, and emergent tissue-scale viral propagation is limited. Moreover, little is
known about immune system-virus-tissue interactions and how these can result in low-level (asymptomatic) infections in some cases and acute respiratory distress syndrome (ARDS) in others, particularly with respect to
presentation in different age groups or pre-existing inflammatory risk factors like diabetes. Given the nonlinear
interactions within and among each of these processes, multiscale simulation models can shed light on the
emergent dynamics that lead to divergent outcomes, identify actionable “choke points” for pharmacologic interventions, screen potential therapies, and identify potential biomarkers that differentiate patient outcomes. Given
the complexity of the problem and the acute need for an actionable model to guide therapy discovery and optimization, we introduce and iteratively refine a prototype of a multiscale model of SARS-CoV-2 dynamics in lung
tissue. The first prototype model was built and shared internationally as open source code and an online interactive model in under 12 hours, and community domain expertise is driving rapid refinements with a two-to-four
week release cycle. In a sustained community effort, this consortium is integrating data and expertise across
virology, immunology, mathematical biology, quantitative systems physiology, cloud and high performance computing, and other domains to accelerate our response to this critical threat to international health.

1

bioRxiv preprint doi: https://doi.org/10.1101/2020.04.02.019075; this version posted July 29, 2020. The copyright holder for this preprint (which
was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made
available under aCC-BY 4.0 International license.

Introduction
The ongoing pandemic caused by the novel severe acute respiratory syndrome coronavirus 2 (SARS-CoV-2)
has illuminated the global public health threat posed by highly pathogenic coronaviruses that emerge from zoonotic sources. With the majority of the world’s population immunologically naïve and no available antivirals or
vaccines, over 14,000,000 infections and 600,000 deaths amassed by the end of July 20201. Coronavirus disease 2019 (COVID-19)—caused by SARS-CoV-2 infection—is characterized by a range of respiratory symptoms, including fever and cough2,3, that can progress to acute respiratory distress syndrome (ARDS) in some
patients4,5. Age and comorbidities appear to be the main risk factors for development of severe disease6-8. However, the dynamics of virus replication, interaction with host immune responses, and spread within the respiratory
tract are still being established. Because a vaccine may not be available for 9-18 months, there is a critical need
to further understand the infection in order to quickly identify pharmacologic interventions and optimal therapeutic
designs that work to lessen virus replication and disease severity. However, this requires an international community effort that integrates expertise across a variety of domains and a platform that can be iteratively updated
as new information and data arises.
To aid this effort, we have assembled an international, multi-disciplinary coalition to rapidly develop an open
source, multi-scale tissue simulator that can be used to investigate mechanisms of intracellular viral replication,
infection of epithelial cells, host immune response, and tissue damage. The aim of this project is to concentrate
community modeling efforts to create a comprehensive multiscale simulation framework that can subsequently
be calibrated, validated, and used to rapidly explore and optimize therapeutic interventions for COVID-19. Once
the prototype has been completed (after several design iterations), this coalition will transition to maintain and
support the simulation framework and aggregate calibrated/validated parameter values.
To address the acute need for rapid access to an actionable model, we are using a community-driven coalition
and best open science practices to build and iteratively refine the model:
(1) Open source and GitHub: All simulation source code is shared as open source on GitHub, with welldefined, versioned, and documented releases, and Zenodo-generated archives and DOIs.
(2) Interactive cloud-hosted models: Every prototype version is rapidly transformed into a cloud-hosted,
interactive model to permit faster scientific communication across communities, particularly with virologists, immunologists, pharmacologists, and others who have essential insights but ordinarily would not
directly run the simulation models.
(3) Social media and virtual feedback: We enlist community participation (feedback, modeling contributions, software contributions, and data contributions) through social media, virtual seminars, web forms,
a dedicated Slack workspace, and weekly team meetings. We particularly encouraging feedback and
data contributions by domain experts in virology, epidemiology, immunology, and mathematical biology.
(4) Frequent preprint updates: Each model iteration is accompanied by a cloud-hosted, interactive app
(see #2) and an updated preprint on bioRxiv.
(5) Integration of feedback: All community feedback is evaluated to plan the next set of model refinements
and recorded in an updated bioRxiv preprint.
Our first test of this workflow saw a first proof-of-concept software release (Steps 1-2) in 12 hours, and the first
integration of community feedback and preprint dissemination was complete within a week. We have begun
integrating community feedback, and it is our intention to continue rapid iteration, with a new candidate model
release every few weeks.

Goals and guiding principles
This project is community-driven, including the following contributions:
1) Community priorities: The community helps define the driving research questions, set the project
scope, and select the critical biological components to be modeled.
2) Consensus hypotheses: The community drives a shared, clearly-written consensus specification of the
underlying biological hypotheses.
2

bioRxiv preprint doi: https://doi.org/10.1101/2020.04.02.019075; this version posted July 29, 2020. The copyright holder for this preprint (which
was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made
available under aCC-BY 4.0 International license.

3) Mathematical modeling: The community helps develop, review, and refine the mathematical interpretation of the biological hypotheses.
4) Computational implementation: The computational implementation is shared as open source with community definition of specifications, unit tests, coding, and code review.
5) Community feedback: Community feedback on the model realism, hypotheses, mathematics, computational implementation, and techniques is encouraged throughout the development process.
6) Community parameters and data: Community contributions of parameter estimates and data contributions are aggregated to assist in model development and constraint.

Project scope
While by definition the project scope can be refined by the community, the initial project scope is to:
1) Develop the general computational framework sufficiently to address many of the community-driven research questions.
2) Deliver a working simulation framework for use by others to perform calibration and validation. That is,
the prototyping aims of this project are complete once the model is capable of demonstrating essential
biological behaviors qualitatively.
3) To provide a software framework whose underlying hypotheses, mathematics, and computational implementation have been rigorously assessed by appropriate domain experts.
In particular, while this project will work to constrain, estimate, and calibrate parameters to the greatest extent
possible, it is not within scope to delay software release until full calibration and validation. Those tasks are within
scope of fully funded teams with dedicated experiments.
This project aims to deliver software that one can reasonably expect to calibrate and validate, thus freeing funded
investigations from expensive early software development while providing a broad community consensus on key
biological hypotheses. By rapidly prototyping this software, we aim to accelerate many funded research efforts.

Essential model components
As part of defining the project scope, we have identified the following critical model components:
1)
2)
3)
4)
5)
6)
7)
8)

Virus dissemination in epithelial tissue
Virus binding, endocytosis, replication, and exocytosis
Infected cell responses, including changes to metabolism, secreted signals, and death
Inflammatory response
Ramp up of the immune response (particularly in lymph nodes)
Immune cell infiltration
Immune cell predation of infected and other cells
Tissue damage by death of cells due to infection or host response; serves as a surrogate marker for
organ dysfunction

Guiding principles
The coalition aims to model not merely the disease endpoints, but the disease dynamics. This will allow scientists
to investigate mechanistic “what if” questions on potential interventions: What if we could inhibit endocytosis?
What if we could introduce a cytokine early or late in the disease course? What if the infected cell apoptosis
could be accelerated or delayed?
To accomplish this, we use a modular design: an overall tissue-scale model integrates an array of targeted
submodels that simulate critical processes (e.g., receptor binding and trafficking and virus replication). Each
submodel is clearly specified to enable interoperability and to make it feasible for subteams to simultaneously
develop and test the model components in parallel. Throughout development, we use open source methodologies that enhance communication, transparency, and reproducibility. See Box 1.
3

bioRxiv preprint doi: https://doi.org/10.1101/2020.04.02.019075; this version posted July 29, 2020. The copyright holder for this preprint (which
was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made
available under aCC-BY 4.0 International license.

Guiding principles: motivation



The model should investigate the dynamics of infection and treatment, not merely endpoints.
The model should help the community ask “what if” questions to guide experiments and interventions9,10.

Guiding principles: approach













Community consensus will be gathered and efforts pooled into a “standardized” model that captures key SARS-CoV-2 dynamics. The model will
be supplied to the community for parallel studies by multiple labs.
The model framework will be built with relatively sparse data, relying upon domain expertise and observations to choose its general form and
assess its qualitative behavior.
The model will be modular. Each submodel will have well-defined inputs and outputs, allowing parallel development and replacement of submodels
with improved versions without change to the overall integrated model or other submodels.
As part of the model formulation, documentation, and dissemination, we will craft clearly delineated “conceptual model and hypotheses” to encourage development of independent models with distinct methodologies and software frameworks.
The submodels will be independently executable and verifiable, allowing parallel development.
The overall model framework will be released periodically released numbered versions (distributions) that bundle the best working version of each
submodel as it exists at the time of release, allowing end-users (the community) to use well-defined, well-tested snapshots of the project.
The model (and known parameter values) will be made publicly available as open source for maximum public benefit.
The model will be made publicly available as an interactive web app to encourage community participation, to accelerate scientific dissemination,
and to increase public educational benefit.
Rapid prototyping will be used to encourage a fast develop-test-refine cycle, build expertise, and gain community feedback.
Data and parameter sharing is encouraged throughout this effort for use in the user community following the model’s “completion.”
The model will be developed to a point that it has correct qualitative behavior so that calibration is likely to succeed. This is the “product” for use
in subsequent investigations by multiple teams. See the scoping statements above.
After the model prototyping is complete (the goal of this paper), a maintenance and support phase will be entered to fix bugs, support scientist
users, and add features identified by the user community.

Box 1: Guiding principles for the rapid prototyping a modular, multiscale model.

Critical questions for the model framework
The community identified a series of driving biological questions concerning COVID-19 to guide the development
of the model framework (see Box 2). It is expected that the model will not initially be able to address all of the
questions listed; rather, the development plan envisions that with each iteration of the model framework it will
expand in its representational capacity as directed by the topics listed in Box 2. Furthermore, as with all modeling
projects, we anticipate that as the framework develops it will generate new questions and/or be responsive to
the rapidly evolving knowledge-base concerning COVID-19.
1.
2.
3.
4.
5.
6.
7.
8.
9.
10.
11.
12.
13.
14.
15.
16.
17.

What are the critical “choke points” in viral infection, replication, and propagation?
Which interventions could most effectively leverage identified vulnerabilities in viral replication?
What unanticipated dynamics can emerge from a single molecular-scale inhibition?
Does the initial level of exposure to the virus affect the severity of the progression of the disease and how could this be ameliorated?
What are the key points of virus-immune interactions that drive mild versus severe (e.g., ARDS) responses?
What are key differences at the target cell level during innate versus adaptive immune responses?
Are there threshold levels of infection at the cellular or tissue level that indicate a switch from asymptomatic to symptomatic or from mild to severe
disease in a patient?
Through what mechanisms do certain patient characteristics, pre-existing conditions, or background medications increase the likelihood of adverse
outcomes?
What interventions could accelerate immunity?
What interventions can reduce or reverse adverse immune reactions?
At what stage is an intervention most beneficial?
How does viral mutagenicity affect the robustness of a therapy or a therapeutic protocol?
How does cellular heterogeneity affect infection dynamics?
How does the nearby tissue environment, such as the mucus layer, affect infection dynamics?
How does the infection spread from its initial locus of infection to other tissues (in particular, from upper respiratory tract to the bronchi, bronchioles,
and alveoli within lungs)? How does stochasticity impact these dynamics?
How do tissues recover after clearance of local infection? Can scarring be minimized to reduce long-term adverse effects in recovered patients?
How do adverse effects in SARS-CoV-2 infected epithelia differ (mechanistically) from other infections and other modes of epithelial dysfunction?

Box 2: Community-selected scientific questions driving the model’s development.

Key biology for the simulation model
This rapid prototyping effort brings together specialists from a broad variety of domains: virology and infectious
4

bioRxiv preprint doi: https://doi.org/10.1101/2020.04.02.019075; this version posted July 29, 2020. The copyright holder for this preprint (which
was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made
available under aCC-BY 4.0 International license.

diseases, mathematical biology, computer science, high performance computing, data science, and other disciplines. Therefore, it is critical that all members of the project have access to a clear description of underlying
biology that drive the model’s assumptions. In this section we outline key aspects of viral replication and host
response in functional terms needed for development of agent-based, multi-scale and multi-physics models.

Cell infection and viral replication
The key cell-level process is viral infection of a single cell, followed by replication to create new virions:
1. SARS-CoV-2 is a single-stranded enveloped RNA virus11. A virion (single virus particle) has a lipid coating (envelope) that protects the virus when outside a cell (or host). Each virus has dozens of spike glycoproteins that bind to ACE2 (receptors) on select cell membranes3,11.
2. Virions travel in the tissue microenvironment to reach a cell membrane. The spike binds to an available
ACE2 receptor on the cell membrane. Prior to binding to the ACE2 receptor, the spike is cleaved by the
protease, TMPRSS2, which is required for efficient cell entry12. Multiple modes of transport (e.g., passive
diffusion in fluids and porous tissues, mucociliary clearance, chemotaxis, ultrafiltration driven by hydrostatic and oncotic pressure through permeable cell junctions, and cellular active transport) may play a
role at slow and fast time scales. There may also be surface contact transmission between neighboring
cells.
3. The cell internalizes the adhered virus via endocytosis into a vesicle.
4. The endocytosed virion—now residing in a vesicle with lowered pH—is uncoated to release its mRNA
contents into the cell cytoplasm.
5. Copying viral RNA creates a (-) RNA template, which is used for (+) RNA production.
6. RNA is used to synthesize viral RNA and proteins.
7. Viral proteins are transported to the interior surface of the cell membrane.
8. Viral proteins at the cell membrane are assembled into virions.
9. Assembled virions are exported from the cell by exocytosis.
10. When a cell dies and lyses, some or all partly and fully assembled virions can be released into the tissue
microenvironment.
Once infected, an individual cell cannot “recover” (e.g., by actively degrading viral RNA and stopping endocytosis) to return to normal function. Rather, the cell is irreversibly committed to eventual death. For further detail,
see review articles on RNA virus replication dynamics13,14.

Infected cell responses
Although infected cells (e.g., type 1 or type 2 alveolar cells in the lung) cannot recover, their respond can slow
viral replication and reduce infection of nearby cells. Infected cells do this by secreting type I interferons (IFN⍺,β), which diffuse and bind to receptors on nearby cells to reduce viral replication following infection, activate
an inflammatory response, and induce gene transcription15 to minimize cycling and/or induce apoptosis in these
cells16. Secreted IFN-α,β are important activators and regulators of the innate and adaptive immune responses16.
Many respiratory viruses, including influenza and SARS-CoVs17, have evolved to inhibit IFN activation18, and
evidence is emerging that certain non-structural proteins produced by SARS-CoV-2 infected cells interfere with
IFN-𝛼, 𝛽 and chemokines by inhibiting production and suppressing signaling17,18.
Eventually, infected cells die (by apoptosis, necroptosis, or pyroptosis19), lyse, and release unassembled viral
components19. While the mechanism of cell death in SARS-CoV-2 is currently unknown, in other RNA virus
infections, cells can undergo apoptotic, necrotic, or pyroptotic death over the course of viral infection20. Disruption
of cell metabolism and competition for critical substrates may also contribute to cell death21,22.

5

bioRxiv preprint doi: https://doi.org/10.1101/2020.04.02.019075; this version posted July 29, 2020. The copyright holder for this preprint (which
was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made
available under aCC-BY 4.0 International license.

Inflammatory and immune responses
Lethal SARS and MERS in humans has been correlated with elevated IFN-⍺,β 23, myeloid activity, and impaired
T and B cells24,25, with the timing of IFN-𝛼, 𝛽 critical26,27. IFN-𝛼, 𝛽s secreted by infected cells or by immune cells
diffuse to surrounding cells and recruit innate immune cells, such as macrophages and neutrophils, to the area.
Recent studies comparing SARS-CoV-2 with SARS-CoV have revealed that SARS-CoV-2 replicates more efficiently in pneumocytes and alveolar macrophages, but IFN-𝛼, 𝛽 secretion is blunted in SARS-CoV-2 infected
cells28. In COVID-19 patients, decreased numbers of T cells, natural killer (NK) cells, and, to a lesser extent, B
cells occur, and the extent of depletion of T cells has been correlated with disease severity2,3,29. Rapid inhibition
of viral replication requires early and high levels of IFN-𝛼, 𝛽 secretion and activation30. The production of excess
inflammatory cytokines, such as IL-1, IL-6 and TNF-𝛼 and other chemokines by infected cells results in increased
macrophage and neutrophil presence, which correlates with lung dysfunction31,32. Delayed IFN-⍺,β production
also promotes inflammatory macrophage recruitment that contributes to vascular leakage and impaired T-cell
function26,27. Activated macrophages also produce other proinflammatory cytokines like IL-1, IL-6, and TNF-⍺,
among others, that enhance infiltration of immune cells and interact with endothelial cells to cause vasodilation33.
The excess production of IL-1 and IL-6 may be related to several viral proteins shown to directly activate the
inflammasome pathway, the innate immune response responsible for IL-1β secretion34-36. Moreover, epithelial
tissue death can reduce tissue integrity, contributing to further immune infiltration, fluid leakage and edema, and
acute respiratory distress37-39.
In severe cases, a “cytokine storm” of pro-inflammatory cytokines (e.g., IL-2, IL-7, IL-10, G-CSF, IP-10, MCP-1,
MIP-1A, and TNF-⍺) induces extensive tissue damage31. During influenza virus infection, there is some evidence
that ARDS is correlated with the extent of infection in the lower respiratory tract and increased cytokine activity
resulting from exposure of the endothelium40. Increases in neutrophil counts and the neutrophil-to-lymphocyte
ratio (NLR) have been observed in patients with severe COVID-1941. The NLR has also been shown to be an
important clinical predictor of disease severity42, as it reflects the innate to adaptive immune response. Neutrophils generally produce reactive oxygen species ROS, which can induce the death of infected and healthy cells
in the local environment, further contributing to tissue damage37.
Coronaviruses have been shown to evade and modulate various host immune responses43-45. In addition to
those discussed above, some evidence suggests that an antibody to spike protein enhances disease during
SARS-CoV infection by inducing macrophage switching from a wound healing phenotype to an inflammatory
phenotype46. Furthermore, influenza viruses and other SARS-CoVs are known to infect macrophages and T
cells3,47, raising the possibility for SARS-CoV-2 to similarly infect these cell types. However, it has not yet been
shown that SARS-CoV-2 infection of these cells is productive or simply alters their cytokine expression31. However, the ACE2 receptor has been linked to acute lung injury for both influenza and SARS-CoV viruses48,49.

Links between inflammation and poor clinical outcomes
Coronavirus death is often correlated with pre-existing medical conditions such as diabetes, hypertension, cardiac diseases and obesity6,50,51. While the primary effect of SARS-CoV-2 is clearly the lung infection, several
secondary effects play a role in the clinical outcome for a given patient. The complex interactions of viral infection,
cytokine production, immune response, and pre-existing diseases is an active field of current research. Although
the underlying risk factors for an individual to develop ARDS in response to SARS-CoV-2 infection have not yet
been elucidated, it appears that a dysregulated immune response is central to this aspect of the disease2,3,29,52.
In particular, chemokines are released following viral infection, which leads to the invasion of neutrophils and
macrophages and release of ROS. IL-6 levels have been associated with more severe disease as patients who
required ventilation exhibit increased systemic IL-6 levels, as reported by studies from Germany and China53-55.
In addition, replication in the lower airways and exposure of endothelial cells may further amplify the inflammatory
response40. Collectively, this leads to extensive tissue damage and depletion of epithelial cells, which may be
connected to lethality56. Within the alveolar tissue and systemically, the feedback between viral load, adaptive
and innate immune responses, and tissue damage is clearly a complex system. By utilizing a multi-scale framework to implement these interactions, we aim to connect circulating biomarkers, putative treatments, and clinically observed disease progression to pathophysiological changes at the cell and tissue level.
6

bioRxiv preprint doi: https://doi.org/10.1101/2020.04.02.019075; this version posted July 29, 2020. The copyright holder for this preprint (which
was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made
available under aCC-BY 4.0 International license.

Anticipated data to drive development and validation
It is important that model development takes into account the types of measurements and biological observations
that will be available for later model constraint, calibration, and validation. As participation by the virology and
pharmacology communities broadens, we anticipate that this list will grow. While we will endeavor to constrain
and validate submodels of the model framework independently, we anticipate human clinical data to not fully
determine parameters of the model. To address this concern, we will apply a “virtual population” approach and
sensitivity analysis to explore model variability within clinically relevant bounds57,58. We anticipate the following
data:

Organoid data for viral replication and targeted inhibition
Aarthi Narayanan’s virology lab is optimizing SARS-CoV-2 cultures in organoid model systems. These 3D model
systems infect epithelial cells co-cultured with fibroblasts and endothelial cells and track the viral replication
kinetics under control conditions and after treatment by inhibitors. These experiments measure (at various time
points) infectious viral titers and genomic copy numbers in supernatants (outside the cells), viral genomic copy
numbers in the infected cells¸ host cell death and inflammatory responses, and ATP and mitochondrial disruptions. See Appendix 2 for further detail.

Inflammation, ACE2 binding, and host response data
The international focus on SARS-CoV-2 is generating an unprecedented amount of mechanistic clinical and
preclinical data. Randomized controlled interventional trials in general or specific populations will be of particular
value to test and refine the model. As of June 30 2020, there were 1,055 trials registered at clinicaltrials.gov
under the search term “COVID-19+Drug”. Within these 1,055 trials, there are multiple interventions at different
points of the pathophysiology, including, but not limited to: broad acting antivirals (e.g., remdesivir), hyperimmune
plasma, IL-6 antibody (e.g., tocilizumab), protease inhibitors (e.g., lopinavir/ritonavir), chloroquine/hydroxychloroquine, and Janus kinase inhibitors (e.g., baricitinib). As this platform develops, we anticipate predicting the
responses to such therapies and refining the model with emerging data such that the range of clinical responses
are captured with adequate fidelity. In addition, data collected from patients or animals during infection, including
the presence of various immune cell subsets in lung tissue and systemic markers of inflammation, will serve to
differentiate responses to SARS-CoV-2. These data will be similarly integrated to calibrate and validate the
model to ensure accurate predictions of therapeutic outcomes based on clinical characteristics.

Relevant prior modeling
Spurred initially by the emergence of HIV and relevant to the present SARS-CoV-2 pandemic, the field of viral
dynamics modeling has been instrumental for understanding the evolution of host-virus interactions59-67, predicting treatment responses68-72, and designing novel and more effective therapeutic approaches73-75. The classic
within-host mathematical model of viral infection uses a system of ordinary differential equations (ODEs) to describe the dynamics between uninfected epithelial (“target”) cells, infected cells in the eclipse phase, infected
cells producing virus, and infectious virus76. This basic model has been shown to capture dynamics of both acute
and chronic infection77, and has been extended to also include multiple viral (potentially resistant) strains73 and
various aspects of host immune responses78,79. While such cell population-level ODE models generally do not
account for single-cell effects, they are effective for detailing viral load, host immune response, and pathology
dynamics80-85. Moreover, they can often be used to constrain and estimate parameters for more detailed models,
develop novel hypotheses, and design confirmatory experiments86,87.
Some have modeled intracellular virus replication, including detailed models used for understanding replication
and intervention points58,88, typically using systems of ODEs89,90. These models often include virus-receptor binding, receptor trafficking, endocytosis, viral uncoating, RNA transcription, protein synthesis, viral assembly, and
viral exocytosis. However, to date no such model has been integrated with detailed spatiotemporal models of
viral propagation in 3D tissues with dynamical models of immune interactions.
7

bioRxiv preprint doi: https://doi.org/10.1101/2020.04.02.019075; this version posted July 29, 2020. The copyright holder for this preprint (which
was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made
available under aCC-BY 4.0 International license.

Agent-based models have been used to simulate viral propagation in 2D tissues with simplified models of viral
replication in individual cells, particularly in the field of influenza virus infection 91-95, spatial patterns from singlecell infections for a variety of other viral infections96-98 such as SARS99, and oncolytic viral therapies100-103. These
models have generally not included detailed intracellular models of viral replication and individual cell responses
to infection. However, they demonstrate the potential for including detailed intracellular models of viral replication
in 2D and 3D tissues with the milieu of immune and epithelial cell types expected in actual patients, while also
offering the opportunity to test hypotheses on the impact of viral mutagenicity and host cell heterogeneity on
disease progression.
Agent-based models have also been used extensively to characterize the inflammatory dysfunction that produces the most severe manifestations of COVID19. The dynamics of forward feedback inflammation-induced
tissue damage was examined with an early agent-based model of systemic inflammation104; this model was
further developed into the Innate Immune Response ABM (IIRABM), which was used to perform in silico trials of
anti-mediator/cytokine interventions (not too different from the types being tried for COVID19)105. More recently,
the IIRABM has been used as a test platform for the application of genetic algorithms106 and model-based deep
reinforcement learning107 to discover multi-modal and potentially adaptive mediator-directed therapies for acute
systemic inflammation; this work is particularly relevant given the attempts to use anti-cytokine biologics during
the current COVID19 pandemic. Finally, the IIRABM, as an endothelial-based model, was integrated with models
of epithelial dysfunction to simulate individual and multiple organ dysfunction and failure seen with systemic
hyper-inflammation108. As noted above, there are significant differences between the pathophysiology of bacterial sepsis and that of severe viral infections, but it appears that at some level of tissue damage the dynamics of
the innate system come to fore in terms of the clinical significance.
The rapid prototyping approach of this coalition will use a performance-driven agent-based modeling platform109
to combine detailed intracellular models of viral endocytosis, replication, and exocytosis, disruption of cell processes (e.g., metabolism and compromised membranes) that culminate in cell death, inflammation signaling and
immune responses, tissue damage, and other key effects outlined above in a comprehensive, open source simulation platform. We will deploy and refine interactive, web-hosted versions of the model to critical contributions
by virologists, infectious disease modelers, and other domain experts. We will frequently update preprints to
foster the fastest possible scientific dialog to iteratively refine this community resource.

Related modeling efforts and other future data sources
We are coordinating with related modeling efforts by a number of groups, such as early pilot work by David Odde
and colleagues at the University of Minnesota, and early simulation work in Chaste110,111 (James Osborne and
colleagues), Morpheus112 (Andreas Deutsch and colleagues), CompuCell3D113, and Biocellion114 (Ilya Shmulevich and co-workers). Thomas Hillen has hosted a COVID-19 Physiology Reading Group115 to exchange information and progress. We are in regular contact with these communities to share data and biological hypotheses
and to seek feedback, parameter insights, and data and code contributions.
The COVID-19 Cell Atlas116 organizes a variety of cell-scale datasets relevant to COVID-19; these may be of
particular importance to intracellular modeling components of the project. The COVID-19 Disease Map117 also
has a wealth of host-pathogen interaction data. The Human Biomolecular Atlas Program (HuBMAP)118 is creating
detailed maps of the human respiratory system at cell- and molecular-scale resolution; this will be an excellent
data source for tissue geometry in later versions of the model.

Methods
PhysiCell: agent-based cell modeling with extracellular coupling
PhysiCell is an open source simulation agent-based modeling framework for multicellular systems in 2D and 3D
dynamical tissue environments109. (See Metzcar et al. (2019) for a general overview of agent-based modeling
8

bioRxiv preprint doi: https://doi.org/10.1101/2020.04.02.019075; this version posted July 29, 2020. The copyright holder for this preprint (which
was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made
available under aCC-BY 4.0 International license.

techniques in tissue-scale biology119.) In this framework, each cell (of any type) is an off-lattice agent with independent cell cycle progression, death processes, volume changes, and mechanics-driven movement. Each cell
agent can have independent data and models attached to it, allowing substantial flexibility in adapting the framework to problems in cancer biology, microbiology, tissue engineering, and other fields. PhysiCell is coupled to
BioFVM (an open source biological diffusion solver)120 to simulate the chemical microenvironment. As part of
this coupling, each individual agent can secrete or uptake diffusing substrates and track the total amount of
material entering and leaving the cell.
Relevant applications of PhysiCell-powered models have included modeling cancer nanotherapy121, oncolytic
virus therapies122, tissue biomechanical feedbacks during tumor metastatic seeding123, and cancer immunology109,124,125. The platform was built with a focus on computational efficiency and cross-platform compatibility: the
same source code can be compiled and run without modification on Linux, OSX, and Windows, and simulations
of up to 10 diffusing substrates on 10 mm3 of tissue with 104 to 106 cells are routinely performed on desktop
workstations. The platform has been combined with high-throughput computing124 and active learning techniques125 to power large-scale model exploration on high performance computing resources.

Integration of intracellular models in PhysiCell agents
Custom functions can be attached to individual cell agents to model molecular-scale, intracellular processes and
to couple these with cell phenotypic parameters. These internal models are often implemented as systems of
ODEs. For example, cell uptake of diffusing substrates can be coupled with a metabolism model that is defined
by a system of ODEs, and the resulting energy output can be used to set the cycle progression and necrotic
death probability of a cell126. For small systems of ODEs, these models are currently coded “by hand” with standard finite difference techniques. More complex models are written in systems biology markup language
(SBML)127 for reliable scientific communication. Development versions of PhysiCell can read and integrate an
individual SBML-encoded model in each cell agent using libRoadrunner—a highly efficient SBML integrator128.
Similar approaches have been used to integrate Boolean signaling networks129 in PhysiCell in the PhysiBoSS
extension130.
These approaches will initially be used to assess (1) viral replication dynamics in each cell agent, (2) cell death
responses to viral load, (3) cell responses to interferons, and (4) changes in the virion endocytosis rate based
on the availability of ACE2 and its receptor trafficking dynamics.

Cellular Immunity Agent-Based Model (CIABM)
As an independent model component, co-authors An, Becker, and Cockrell are developing CIABM: an agentbased model of immune system activation and expansion in lymph nodes in response to SARS-CoV-2 infections.
This model will be coupled with the overall simulator to mechanistically drive immune expansion and infiltration
during inflammatory responses.
The CIABM is intended to be a generalizable model of CD8+ T cell dynamics, designed to represent different
disease states resulting from different perturbations (i.e., specific infections of specific pathogens, putative vaccines and their administration strategy). This is consistent with our philosophy of pathophysiological unification
through modeling. We have developed multiple ABMs related to the immune response and diseases related to
inflammation and immune dysfunction131,132 and will leverage this experience to integrate various aspects of
these models as components of the CIABM. Many of these models are based on the IIRABM131, which is an
abstract representation and simulation of the human inflammatory signaling network response to injury; the
model has been calibrated such that it reproduces the general clinical trajectories seen in sepsis. The IIRABM
operates by simulating multiple cell types and their interactions, including endothelial cells, macrophages, neutrophils, TH0, TH1, and TH2 cells and their associated precursor cells. The simulated system dies when total
damage (defined as aggregate endothelial cell damage) exceeds 80%; this threshold represents the ability of
current medical technologies to keep patients alive (i.e., through organ support machines) in conditions that
previously would have been lethal. The IIRABM will be used in the CIABM to represent the innate and host tissue
component of the CIABM.
9

bioRxiv preprint doi: https://doi.org/10.1101/2020.04.02.019075; this version posted July 29, 2020. The copyright holder for this preprint (which
was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made
available under aCC-BY 4.0 International license.

The design principles of the CIABM are 1) CD8+ T-cell dynamics focused detail, 2) incorporation of the IIRABM
as the innate-host tissue module, and 3) incorporation of humoral and CD4+ T-cell function at an abstracted
level. The justification for aggregating humoral and CD4+ T-cell functions is that they are primarily governed by
interactions through the MHC2 complex, and, therefore, represent a distinct sensing/recognition capacity than
CD8+MHC1-mediated recognition. While we recognize that CD4-helper activity is known to assist the generation
of CD8+ T cells, at the outset of this project we will attempt to see how well we can reproduce our clinicallyacquired data without having to explicitly represent CD4-helper function. If we are unable to satisfactorily map
CIABM behavior to our experimental/clinical data, we will then add these components.
As a general description, the initial components of the innate immune response represent the end-effector of the
system, primarily responsible for interactions influencing tissue damage, microbial killing, and abstracted tissue
reconstitution. This component incorporates both pro- and anti-inflammatory components, consistent with a selfcontained control structure befitting its role as a highly-evolutionarily conserved, fundamental function of multicellular organisms. These agent types are: tissue, viral antigen, polymorphonuclear neutrophil cells (PMNs),
macrophages, dendritic cells, naïve and cytotoxic CD8+ T cells, and regulatory T cells.

HPC-driven model exploration and parameterization
The concurrent growth and advancements in the three areas of 1) mechanistic simulation modeling, 2) advanced,
AI-driven model exploration algorithms, and 3) high-performance computing (HPC) provides the opportunity for
large-scale exploration of the complex design spaces in detailed dynamical simulation models. However, if we
do not take deliberate efforts to formally facilitate this intersection across our research communities, we risk
producing a series of disparate individual efforts, limited in interoperability, transparency, reproducibility and
scalability. The EMEWS (extreme model exploration with Swift) framework133 was developed to directly address
this issue and to provide a broadly applicable cyberinfrastructure to lower the barriers for utilization of advanced,
large-scale model exploration on HPC resources. The EMEWS paradigm allows for the direct exploitation of
cutting edge statistical and machine learning algorithms that make up the vibrant ecosystem of free and open
source libraries that are continually added to and updated as research frontiers are expanded, all while controlling simulation workflows that can be run anywhere from desktops to campus clusters and to the largest HPC
resources.
We have utilized EMEWS for learning-accelerated exploration of the parameter spaces of agent-based models
of immunosurveillance against heterogeneous tumors124,125. The approach allowed for iterative and efficient discovery of optimal control and regression regions within biological and clinical constraints of the multi-scale biological systems. We have applied EMEWS across multiple science domains134-137 and developed large-scale
algorithms to improve parameter estimation through approximate Bayesian computation (ABC) approaches 138.
These approaches, applied to the multi-scale modeling of SARS-CoV-2 dynamics, will provide the ability to robustly characterize model behaviors and produce improved capabilities for their interpretation.

nanoHUB platform
The nanoHUB platform (nanohub.org)139 is a free, cloud-based service offering lectures, tutorials, and, of particular interest to us, interactive Web-based simulation tools. As its name implies, it is primarily focused on nanoscale science education and research. To make their simulation tools easier to use, nanoHUB provides a
custom toolkit for developing graphical user interfaces (GUIs). However, since 2017, they have adopted and
promoted the use of Jupyter notebooks140, with accompanying Python modules to provide GUI widgets and
visualization. Cloud-based computing and data analysis platforms are well established now, in both academic
and commercial settings. Those platforms, such as nanoHUB, that provide easy-to-use web-based GUIs and
APIs and offer affordable pricing will likely have their rate of adoption continue to increase, especially among
researchers who may lack the expertise or resources to install complex pieces of software.

xml2jupyter and cloud deployment of PhysiCell models
10

bioRxiv preprint doi: https://doi.org/10.1101/2020.04.02.019075; this version posted July 29, 2020. The copyright holder for this preprint (which
was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made
available under aCC-BY 4.0 International license.

Compiled PhysiCell models generate executable software that runs at the command line. Model parameters are
set by editing XML (extensible markup language) configuration files, and the models save data as a combination
of vector graphics outputs (scalable vector graphics: SVG) and XML and MATLAB data (.mat) files based on the
draft MultiCellDS data standard141.
To facilitate rapid cloud-hosted dissemination of PhysiCell-powered models on the nanoHUB platform, we developed xml2jupyter to automatically generate a Jupyter-based GUI for any PhysiCell model142. The Jupyter
notebook includes widgets to set parameters, initiate a simulation run, and visualize diffusing substrates and cell
agents. In turn, we also developed a protocol to deploy the PhysiCell model and the Jupyter notebook interface
on nanoHUB as a cloud-hosted, interactive model. This allows developers to rapidly convert a locally executable
command-line model to a cloud-hosted shared model with graphical interface in a matter of minutes to hours
(depending upon testing speed on nanoHUB).
In our rapid prototyping, we use rapidly-generated nanoHUB apps for scientific communication across disciplines; virologists, pharmacologists, and other domain experts can explore and visualize the model prototypes
without need to download, compile, or understand the code. This facilitates faster multidisciplinary dialog and
helps to draw in broader community feedback and contributions.

Modular design
The model is being evolved with a modular architecture. The overall model and each individual model component
(submodel) have a separate GitHub software repository in the pc4COVID-19 GitHub organization, available at
https://github.org/pc4COVID-19.
Each submodel repository consists of a master branch that matches the latest numbered release and a development branch. Contributors will fork the development branch, complete their milestones, and submit a pull
request to incorporate their progress in the development branch. Whenever a submodel team is ready to make
a numbered release, they will use a pull request from the development branch to the master branch and create
a numbered release.
The overall model framework and each submodel will keep a versioned design document to include:













A unique name for the model component
A clear version number and last update timestamp
A list of contributors, including 1-2 chief scientists who serve as primary points of contact
A “plain English” description of the primary purpose of the component
A statement of model inputs with units of measure
A clear statement of the biological hypotheses and assumptions of the component
A record of the current mathematical form of the model (generally maintained in a separate Overleaf
LaTeX document), with a snapshot of the equations in the main design document
Any computational implementation details needed to understand the code
A link to a GitHub repository
A list of model parameters, units, biophysical meaning, best estimate, and data source(s) for the parameter estimate (see the discussion in MultiCellDS141)
A clear list of model outputs with units
A set of qualitative and/or quantitative unit tests to ensure proper functionality of the module.

A snapshot of this design document will be included in each release of the (sub)model.
The overall model releases will include a clear list of the version of each submodel included in its release.

Coalition structure
After group discussion and prioritization, coalition members self-assigned themselves to one or more subteams
responsible for developing the submodels. Each subteam has 1-2 chief scientists in charge of managing development, while a technical contact approves pull requests from the subteam’s contributors and coordinates with
11

bioRxiv preprint doi: https://doi.org/10.1101/2020.04.02.019075; this version posted July 29, 2020. The copyright holder for this preprint (which
was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made
available under aCC-BY 4.0 International license.

the integration team (see below). The submodel chief scientist(s) meet regularly with their team to assign tasks,
set milestones, and assess when to make a release. The submodel chief scientist(s) also coordinate their progress with the other submodel teams.
The integration team—consisting of the overall leads (as of April 1, 2020: Paul Macklin, Randy Heiland, and
Yafei Wang) and other contributors—is responsible for developing and maintaining the overall integrated model,
integrating and testing updated submodels, and providing technical support to the subteams.
The core team consists of the overall leads and the chief scientists. They meet to coordinate progress of the
submodels, refine project scope, exchange ideas on model hypotheses, evaluate community feedback, and plan
overall strategy. They cooperate with the overall leads to create model releases (which will always bundle the
most stable version of each submodel), update the nanoHUB models, and update the bioRxiv preprint.
The current list of subteams can be found in Box 3.

Three main phases of community-driven development
Phase 1: Building the coalition and model infrastructure
In the first phase, the overall and integration leads build the overall tissue model structure (a model that integrates
several independent submodels) and create “placeholder” models that serve as working proof-of-concept starting points for further expansion. This phase also builds and organizes the subteams responsible for the submodels and provides them with training and documentation on the model and submodel architecture.
We anticipate that Phase 1 will require six-to-eight weeks, although Phases 1 and 2 may overlap as individual
subteams assume full leadership of their submodel code repositories.

Phase 2: Community-driven development
In this phase, the integration team transitions the primary development of each of the submodels to appropriate
domain experts in the subteams, to ensure that each submodel reflects the best available science. During this
phase, the integration team supports each subteam in mathematical model development, PhysiCell implementation, and nanoHUB deployment for rapid subteam testing, dissemination, and community feedback on the
submodels.
The integration team continues to lead overall model integration, testing, and deployment as a cloud-hosted
model, and development of further infrastructure (e.g., HPC investigations) and PhysiCell and xml2jupyter refinements needed by the subteams (e.g., full support for SBML for molecular-scale model integration).
Once the integrated model can qualitatively produce expected viral and immune behaviors (as determined by
the core group) and receives no major domain expert or community critiques, the major goal of the coalition (and
this paper) will be met: to create a SARS-CoV-2 modeling framework suitable for subsequent calibration, validation, and exploration by the community. It will be submitted to scientific peer review, disseminated to the community, and maintained. This will mark the conclusion of Phase 2.
We anticipate that Phase 2 will require three to nine months.

Phase 3: widespread scientific use and model maintenance
Once the overall model and submodels are largely complete, the model will be a mature, open source community
resource available for use in scientific investigations. Moreover, due to our iterative approach, we envision that
teams will have begun using earlier versions of the model for investigations by this point. The integration team
will transition to supporting parallel investigations by independent groups using the models, and aggregating and
sharing best data, parameter estimation, and results. The integration team and subteams will coordinate to encourage full scientific publication of the overall model and the submodels, and resulting scientific investigations.

12

bioRxiv preprint doi: https://doi.org/10.1101/2020.04.02.019075; this version posted July 29, 2020. The copyright holder for this preprint (which
was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made
available under aCC-BY 4.0 International license.

This phase will also focus on code hardening, documentation, and development of training and outreach materials. This phase is critical for knowledge capture, so that the model remains usable beyond the involvement of
the original teams and can be rapidly adapted to emerging health challenges in the future. We also envision
continued refinement of the model to reflect improved biological knowledge.
Integration: Coordinates overall project and leads multiscale model integration and dissemination.
Chief scientist: Paul Macklin
Technical contact(s): Randy Heiland, Yafei Wang
Members: Paul Macklin, Randy Heiland, Michael Getz, Yafei Wang
Viral Replication: Builds the submodel of viral replication (and release) within individual cells.
Chief scientist(s): Jim Faeder
Technical contact(s): Yafei Wang, Ali Sinan Saglam
Members: Jim Faeder, Yafei Wang, Paul Macklin, Ali Sinan Saglam
Infected cell response: Builds the submodel of individual cell responses to infection, such as secretion of chemokines and apoptosis.
Chief scientist(s): Jason Shoemaker, James Glazier, Sara Hamis, Fiona Macfarlane
Technical contact(s): Jordan Weaver, Josua Aponte, Sara Hamis, Fiona Macfarlane
Members: Jason Shoemaker, Jim Faeder, Penny Morel, James Glazier, Ashok Prasad, Elsje Pienaar, Jordan Weaver, T.J. Sego,
Josua Aponte, Yafei Wang, Sara Hamis, Fiona Macfarlan
Pharmacodynamics: Modifies the submodels to simulate pharmacologic interventions.
Chief scientist(s): Robert Stratford, Morgan Craig
Technical contact(s): Tarunendu Mapder, Yafei Wang, Sara Hamis, Fiona Macfarlane
Members: Robert Stratford, Morgan Craig, Sara Quinney, Mark AJ Chaplain, Tarunendu Mapder, Yafei Wang, Sara Hamis, Fiona
Macfarlane, Richard F. Bergstrom
Receptor trafficking: Builds the submodel of ACE2 receptor trafficking, including virus binding and endocytosis.
Chief scientist(s): Padmini Rangaman
Technical contact(s): Andy Somogyi
Members: Padmini Rangamani, Andy Somogyi
Tissue immune response: Builds the submodels of individual immune cells and their interactions within an infected tissue.
Chief scientist(s): Morgan Craig, Courtney Davis, Amber Smith, Adrianne Jenner, Penny Morel
Technical contact(s): Adrianne Jenner
Members: Adrianne Jenner, Courtney Davis, Morgan Craig, Amber Smith, Penny Morel, Sofia Alfonso, Rosemary Aogo, Elsje Pienaar,
Dennis Hou
Lymph node: Builds the submodel of immune cell expansion at nearby lymph nodes to drive immune cell recruitment.
Chief scientist(s): Gary An, Tarunendu Mapde
Technical contact(s): TBD
Members: Gary An, Chase Cockrell, Marc-Andre Rousseau, James Glazier, T.J. Sego, Tarunendu Mapde, Juliano Ferrari Gianlupi
Tissue damage: Builds models of tissue damage (and potentially recovery).
Chief scientist(s): Ashlee Ford Versypt, Amber Smith
Technical contact(s): TBD
Members: Amber Smith, Ashlee Ford Versypt, Thomas Hillen, Mohammad Aminul Islam
Drug testing/experiment: Explores drug inhibiting virus endocytosis and replication in cell culture
Chief scientist(s): Aarthi Narayanan
Technical contact(s): Kenneth Risner
Members: Aarthi Narayanan, Kenneth Risner
SBML integration: Refines PhysiCell integration with libRoadrunner to support direct execution of SBML models
Chief scientist(s): Randy Heiland
Technical contact(s): Randy Heiland, Andy Somogyi
Members: Andy Somogyi, Randy Heiland, Furkan Kurtoglu, Pablo Maygrundter, Jim Faeder
Visualization and analytics: Refines standalone and integrated visualization and analytics for nanoHUB apps.
Chief scientist(s): Randy Heiland, Amber Smith, Courtney Davis
Technical contact(s): Randy Heiland, Dennis Hou
Members: Randy Heiland, Amber Smith, Courtney Davis , Hadi Taghvafard, Andy Somogyi, Furkan Kurtoglu, Pablo Mayrgundter,
Dennis Hou
Box 3: Current subteams.

Iterative development
We use rapid prototyping using lessons learned from each step to drive iteration towards improving the model.
13

bioRxiv preprint doi: https://doi.org/10.1101/2020.04.02.019075; this version posted July 29, 2020. The copyright holder for this preprint (which
was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made
available under aCC-BY 4.0 International license.

Each submodel undergoes its own development sprints, contained within a broader development cycle for the
overall integrated model (See Fig. 0.1.).

Fig 0.1: Overall development cycle: Throughout the overall development cycle, the core team (integration leads + subteam leads) set priorities and
coordinate work of the subteams. Each subteam performs a short sprint to update its submodel. At the end of the 3-week cycle, the integration team
bundles the most up-to-date submodels for the next overall model release, while the subteams update the preprint and refine domain knowledge and
mathematics for the next sprint.

Overall integrated model development cycle
We aim for a 3-week development cycle for the overall integrated model, although early development cycles
may last longer to accommodate building computational infrastructure, development of new core features to
support model development, and training.

Start of cycle
The design cycle starts with an initial core team meeting where we discuss feedback from prior design cycles
and set priorities for the current design cycle. In particular, we discuss:
 What changes are needed to the submodels? Prioritize changes that can be made within a 7-10 day
sprint.
 What changes are needed in the overall integrative framework to facilitate the improved submodels? Set
framework goals for early and mid-cycle development.
 Are any funding, personnel, scope, or other changes needed?
Within the working week, the subteams meet to further set and accomplish their sprint goals. (See Submodel
design cycle). The integration team (1) works on refinements to the PhysiCell and nanoHUB frameworks to
facilitate subteam work, (2) provides technical consulting to the subteams to implement their model refinements,
and (3) makes any final edits needed to the preprint from the last design cycle.

Mid-cycle advances
The design cycle continues with a core team meeting to discuss the current subteam model sprints:
 Each team gives a brief report on their model advances and a live demo of either the standalone C++
code or a nanoHUB submodel app.
 The teams “cross-pollinate” to exchange ideas and give feedback on each of the submodels.
 The core team decides on any additional changes needed to continue the design cycle.
 The integration team and subteam chief scientists set final deadlines to end the sprints and release the
updated submodels.
Within the working week, the subteams continue and complete their developing and testing for their respective
sprints, create new submodel releases on GitHub, and update their submodel nanoHUB apps. The integration
team continues support for the subteam work and completes any changes to the overall integrative model
needed for the upcoming integration.

14

bioRxiv preprint doi: https://doi.org/10.1101/2020.04.02.019075; this version posted July 29, 2020. The copyright holder for this preprint (which
was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made
available under aCC-BY 4.0 International license.

As the subteams advance towards their releases, the integration team updates and tests the respective submodels in the overall framework and updates the overall nanoHUB app.

End of cycle
The design cycle nears completion with a core team meeting to discuss integration and preprinting:
 The integration team gives an update on current integration testing.
 The team coordinates any remaining submodel releases.
 The team sets plans for updating the preprint.
Within the working week, the subteams complete their releases (if not already complete in week 2) and begin
revising the preprint. They also begin testing the integrated model as it comes online to integrate new simulation
results and insights into the preprint.
The integration team updates the submodels, performs final testing, and creates both GitHub and nanoHUB
releases. Once complete, the integration team joins the subteams on preprint updates.

Submodel design cycle
Each submodel is developed in parallel with a unified design cycle (a 7-to-14-day software sprint) in coordination
with the other subteams during the weekly core team meetings and via a dedicated Slack workspace.

Start of sprint
The sprint cycle starts with an initial subteam meeting to communicate the results and priorities of the core team
meeting to the subteam. The team edits the submodel design document, discusses any necessary changes to
the mathematics and parameter values, and assigns implementation tasks. The team coordinates with the integration team via the Slack workspace for any needed assistance on model implementation.

End of sprint
The design cycle continues with a core team meeting to discuss the current subteam model sprints:
 Each team gives a brief report on their model advances and a live demo of either the standalone C++
code or a nanoHUB submodel app.
 The teams “cross-pollinate” to exchange ideas and give feedback on each of the submodels.
 The core team decides on any additional changes needed to continue the design cycle.
 The integration team and subteam chief scientists set final deadlines to end the sprints and release the
updated submodels.
Within the working week, the subteams continue and complete their developing and testing for their respective
sprints, create new submodel releases on GitHub, and update their submodel nanoHUB aps. The integration
team continues support for the subteam work and completes any changes to the overall integrative model
needed for the upcoming integration.
As the subteams advance towards their releases, the integration team updates and tests the respective submodels in the overall framework and updates the overall nanoHUB app.
See Appendix 4: Submodel development details for more implementation details.

Results
Version 1 (March 25-March 31, 2020)
Version 1 was designed as proof of concept rapid prototype to capture essential (but highly simplified) elements
of viral endocytosis, protein synthesis, viral assembly, release, and diffusion to infect other cells. The model was
15

bioRxiv preprint doi: https://doi.org/10.1101/2020.04.02.019075; this version posted July 29, 2020. The copyright holder for this preprint (which
was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made
available under aCC-BY 4.0 International license.

tailored to RNA viruses on a tissue monolayer (modeled as a layer of epithelium over a basement membrane).
This version was kept deliberately simple to create an early starting framework to help coalesce community
feedback and contributions. It was also designed to test the use of interactive cloud-hosted models to help accelerate feedback by virologists and other domain experts through live demos.
The proof of concept model was created by the overall leads (Macklin, Heiland, Wang) while assembling the
modeling coalition as an initial starting point and feasibility test for rapid prototyping. Feedback on this version
drove the formulation of the design protocols reported above.

Submodels
The Version 1 model includes the following submodel components:
●

T: tissue (which contains epithelial and other cells)

●

V: viral endocytosis, replication, and exocytosis responses

●

VR: cell response to viral replication, including cell death and IFN synthesis

●

E: epithelial cell (incorporates V and VR).

The overall model components are summarized in Fig 1.1.

Biological hypotheses
In this proof of concept prototype, we modeled a simplified set of biological hypotheses:
1.T.1
1.T.2

Virus diffuses in the microenvironment with low diffusion coefficient
Virus adhesion to a cell stops its diffusion (acts as an uptake term)

1.V.1
1.V.2
1.V.3
1.V.4
1.V.5

Adhered virus undergoes endocytosis and then becomes uncoated
Uncoated virus (viral contents) lead to release of functioning RNA
RNA creates protein at a constant rate, unless it is degraded
Protein is transformed to an assembled virus state
Assembled virus is released by the cell

1.VR.1
As a proxy for viral disruption of the cell, the probability of cell death increases with the total
number of assembled virions
1.VR.2
Apoptosed cells lyse and release some or all of their contents
(In the above, X.C.Y denotes prototype X, model component C, biological hypothesis Y, allowing us to easily refer
to any individual hypothesis or assumption in discussion
and community feedback.) In the next version of this
model, we will use the design document protocols for each
of these components.

Unit tests
The first prototype should demonstrate the following behaviors for a single cell infected by a single virion:
●
●
●
●

The virion progresses to the uncoated state.
The uncoated virion progresses to the RNA state.
With export and death off, RNA produces protein.
With export and death turned off, protein produces
and accumulates assembled virus (linearly).
16

Fig. 1.1: Version 1 model schematic: Left: In the overall model
structure, a tissue component (T) contains multiple epithelial
cells (E). Viral particles diffuse through this domain and can enter
the cells (by adhering as an uptake term) or be exported by cells.
Each cell includes an intracellular virus model (V) for viral replication kinetics and a viral response model (VR) which uses a pharmacodynamic model to control cell apoptotic response to viral load.
Right: Each epithelial cell individually models its viral kinetics: adhered virions complete endocytosis, are uncoated, functionalize
their RNA, synthesize viral components, and assemble them into
virions that are subsequently exported to the external tissue compartment (T).

bioRxiv preprint doi: https://doi.org/10.1101/2020.04.02.019075; this version posted July 29, 2020. The copyright holder for this preprint (which
was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made
available under aCC-BY 4.0 International license.

●
●
●
●

With export off and death on, cell undergoes apoptosis with increasing likelihood as assembled virus
accumulates.
With export on and death on, surrounding cells get infected and create virion.
Cells nearest the initial cell are infected first.
Apoptosis is most frequent nearest to the initial infected cell.

Translation to mathematics, rules, and model components
Extracellular virion transport (Tissue submodel T)
To rapidly implement extracellular viral transport using existing model capabilities, we approximated the process
as diffusion with a small diffusion coefficient as in prior nanoparticle models. Using the standard BioFVM formulation120, if 𝜌 is the concentration or population density of virions (virions / μm3), then the population balance is
modeled as a partial differential equation (PDE) for diffusion, decay, and sources and sinks from interactions
with cells:
𝜕𝜌
= 𝐷𝛻 2 𝜌 − 𝜆𝜌 + ∑ 𝛿(𝐱 − 𝐱 𝑖 )(−𝑈𝑖 𝑉𝑖 𝜌 + 𝐸𝑖 ),
𝜕𝑡

(1)

cells 𝑖

where 𝐷 is the diffusion coefficient, 𝜆 is the net decay rate (which can include other removal processes), 𝛿 is the
Dirac delta function, 𝐱𝑖 is the position of the center of cell 𝑖, 𝑈 is the uptake rate (by adhering to ACE2 and
initiating endocytosis), 𝑉 is the volume of cell 𝑖, and 𝐸 is the virion export rate from the cell. Note that in the
default BioFVM implementation, uptake processes are spread across the volume of a cell.
Note that virus propagation may require more explicit modeling of cell-cell surface contact in later versions, and
cilia-driven advective transport and virion deposition (e.g., through airway transport).

Intracellular viral replication dynamics (Virus intracellular model V)
Within each cell, we track V (adhered virions in the process of endocytosis), U (uncoated viral RNA and proteins),
R (viral RNA ready for protein synthesis; R = 1 denotes the total mRNA of one virion), P (synthesized viral
proteins; P = 1 denotes sufficient viral protein to assemble a complete virion), and A (total assembled virions
ready for exocytosis). Virion import (a source term for V) is handled automatically by the mass conservation
terms for PhysiCell in the PDE solutions.
We model these dynamics of internalized virions through a simplified system of ODEs:
𝑑𝑉
= −𝑟𝑈 𝑉
𝑑𝑡

(2)

𝑑𝑈
= 𝑟𝑈 𝑉 − 𝑟𝑃 𝑈
𝑑𝑡

(3)

𝑑𝑅
= 𝑟𝑃 𝑈 − 𝜆𝑅 𝑅
𝑑𝑡

(4)

𝑑𝑃
(5)
= 𝑟𝑆 𝑅 − 𝑟𝐴 𝑃 − 𝜆𝑃 𝑃
𝑑𝑡
𝑑𝐴
(6)
= 𝑟𝐴 𝑃
𝑑𝑡
Here, 𝑟𝑈 is the viral uncoating rate, 𝑟𝑃 is the rate of preparing uncoated viral RNA for protein synthesis, 𝑟𝑆 is the
rate of protein synthesis, 𝑟𝐴 is the rate of virion assembly, 𝜆𝑅 is the degradation rate of RNA, and 𝜆𝑃 is the
degradation rate of viral protein. We model exocytosis by setting the net export E of the assembled virions, in
17

bioRxiv preprint doi: https://doi.org/10.1101/2020.04.02.019075; this version posted July 29, 2020. The copyright holder for this preprint (which
was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made
available under aCC-BY 4.0 International license.

units of virions per time:
𝐸 = 𝑟𝐸 𝐴,

(7)

where 𝑟𝐸 is the assembled virus export rate.

Cell response (Viral response submodel VR)
In this proof of concept prototype, we modeled apoptotic response to cell disruption but did not model interferon
processes. As a simplification, we modeled cell disruption as correlated with assembled virions A, and we used
a Hill function to relate the apoptosis rate of a cell to A:
𝐴𝑛
(8)
𝐴𝑛𝐻 + 𝐴𝑛
where 𝑒 is the effect, 𝑛 is the Hill coefficient, and 𝐴𝐻 is the amount of virions at which half of the maximum effect
is achieved. After calculating this effect e, we set the apoptotic death rate as
𝑒=

𝑟death = 𝑟max 𝑒

(9)

where 𝑟max is the maximum apoptosis rate (at full effect, 𝑒 = 1). As analyzed for agent-based models with stochastic death rates109,143, in any time interval [t, t+∆t], the cell has probability 𝑟death Δ𝑡 of apoptosing, and the
mean cell survival time (for fixed e and thus fixed 𝑟death) is 1/𝑟death.
In PhysiCell, we can set the lysing cells to release any fraction (0 ≤ 𝑓release ≤ 1) of V, A, U, R, and P into the
extracellular environment as diffusing substrates.

Other implementation notes
To differentiate between incoming imported and exported virions within the computational implementation, we
modeled two diffusing fields (for extracellular concentrations of V and A). However, the models only require
extracellular V. At the end of each computational step (advancing by one diffusional time step), we iterate through
each voxel and transfer all of the extracellular diffusing A to V. We also created diffusing fields for uncoated
virions, RNA, and viral proteins, although these were removed from later model versions.

Software release
The core model associated with the v1 prototype is Version 0.1.3. The nanoHUB app associated with the v1
prototype is Version 1.0. GitHub releases and Zenodo snapshots are given in the Appendix.

Cloud-hosted model
We rapidly created and deployed a cloud-hosted model with an interactive web-based GUI running on nanoHUB
(nanohub.org) using xml2jupyter Version 1.1142. The web-hosted model can be run at:
https://nanohub.org/tools/pc4COVID-19.
This workflow uses a Python script that converts a PhysiCell configuration file (in XML) into a Jupyter notebook
and adds additional Python modules for the GUI. The automated process of converting a standalone PhysiCell
model into an interactive Jupyter notebook version (a GUI) takes just a few minutes. The resulting GitHub repository is shared with the nanoHUB system administrators who install it for testing as an online, executable
model (an “app”). After we perform usability and other testing and finalize documentation, it is published and
becomes available for public use. The whole process (including the initial development of the core PhysiCell
model) took less than 12 hours for the Version 1 GUI on nanoHUB (Fig. 1.2).

18

bioRxiv preprint doi: https://doi.org/10.1101/2020.04.02.019075; this version posted July 29, 2020. The copyright holder for this preprint (which
was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made
available under aCC-BY 4.0 International license.

Fig. 1.2: Version 1 on nanoHUB: A. The About tab includes background information on the model, run directions, and a legend. B.
The Config basics tab allows users to set the domain size. (These should be not be edited in this version.) C. The Microenvironment
tab lets users set diffusion and decay coefficients, as well as initial and boundary conditions. The track_in_agents option must be
enabled for the model to work correctly. D. The User Params tab sets key model parameters. E-F. Sample outputs in the Out: Plots
tab. Users can scroll the “frame” tab to advance the simulation time and choose whether to plot the cells, a diffusing substrate, or
both. These plots display a sheet of epithelium (circles are individual cells). Brighter yellow cells contain more assembled virion. Black
cells are apoptotic, and clear spaces show tissue damage (where cells have apoptosed and have been removed.) This version of the
nanoHUB model was released at DOI 10.21981/19BB-HM69.

Model behavior: what does the current version teach us?
Except as noted below, all simulation results use the v1 model default parameters, which are supplied in the
XML configuration parameter file of the version 0.1.2 core model repository.
In all plots, dark blue cells have 0 assembled virus, pale blue cells have 1-9 assembled virions, grey cells have
10-99 assembled virions, light yellow cells have 100-999 assembled virions, and bright yellow cells contain 1000
or more assembled virions. Black cells are apoptotic, and white spaces show regions devoid of cells (extensive
tissue damage). See the legend in Fig. 1.2 (A) and the caption in Fig. 1.3 (A).

Behavior with default parameters
Running the overall model (with virus release turned on and off as appropriate for the respective unit tests) shows
that the v1 prototype satisfies all the qualitative unit tests. A single cell is infected with a virion in the center of
the tissue. Over time, the virion is uncoated to create functionalized RNA, which is synthesized to viral proteins
and assembled to functional virus. The graphical output shows this center cell turning to a bright yellow as assembled virions accumulate. By enabling the substrate plot, we can see the diffusive field of virions first has zero
concentration (no virions have been released), but as the first cell’s viral production increases, it releases virus
particles that begin diffusing into the domain (Fig. 1.3 A).
Over time, neighboring cells also become infected and progress towards a higher viral load (increasingly bright
shades of yellow). The infection propagates outward from the initially infected cell into the remaining tissue. As
each cell’s viral load (here measured as number of assembled virions) increases, the viral response model calculates the increasing effect e, and cells have greater probability of apoptosis. Cells nearest to the initial site of
infection apoptose earliest. As these cells degrade, they are removed from the simulation, leading to the creation
19

bioRxiv preprint doi: https://doi.org/10.1101/2020.04.02.019075; this version posted July 29, 2020. The copyright holder for this preprint (which
was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made
available under aCC-BY 4.0 International license.

Fig. 1.3: Version 1 sample model results at 6, 12, 18, and 24 hours (vertical columns). In all plots, epithelial cells are colored from blue (no
assembled virions) to bright yellow (1000 or more virions). Black cells are apoptotic, and white regions show damaged tissues where apoptotic cells
have degraded to expose (unmodeled) basement membrane. Bar: 200 𝜇m. A. Simulation time course for the default parameters. Note the spread of
the infection from an initial infected cell at the center, with apoptotic death events focused near the center. B. Decreasing the diffusion coefficient of
virions by a factor of 10 drastically reduces the rate of spread, although focusing exocytosed virions in a smaller diffusion distance increases the
number of virions infecting nearby cells, leading to faster apoptosis. C. Allowing apoptosed cells to release their assembled virions at lysis had a
negligible effect for these parameters, given the dominant effects of releasing virions throughout the cell survival times. D. Decreasing the tolerance
(half max) of cells to assembled virions prior to apoptosis accelerates tissue damage but does not drastically accelerate the spread of the infection.
E. Increasing the apoptosis rate (or decreasing the survival time) for infected cells drastically increases tissue degradation.

of a degraded, cell-free region near the center of the tissue. This degraded region spreads outwards from the
20

bioRxiv preprint doi: https://doi.org/10.1101/2020.04.02.019075; this version posted July 29, 2020. The copyright holder for this preprint (which
was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made
available under aCC-BY 4.0 International license.

initial site of infection over time.
See Fig. 1.3 A for a simulation with default parameters. The nanoHUB distribution of this model takes approximately 60-90 seconds to execute.

Impact of the virion diffusion coefficient
We tested the effect of the viral diffusion coefficient by reducing it from 900 μm2/min to 90 μm2/min. Because the
viral particles spread more slowly after their release, the overall spread of the infection is slowed (Fig. 1.3 B).
We left D = 90 μm2/min for all subsequent investigations of the v1 model.

Impact of the viral release at cell death
We tested the effect of releasing all assembled viral particles at the time of cell death by setting frelease = 1. For
this set of model parameters, the release of assembled virions had a negligent impact of the overall spread of
infection: Compare the final frame of Fig. 1.3 B (no release: frelease = 0) to Fig. 1.3 C (complete release: frelease =
1). This is because cells release far more virions during their infected lifetimes, so the effect is dominant over
the one-time release of virions at cell death. We expect this behavior would change if the cells exocytosed virions
more slowly.

Impact of the cell tolerance to viral load
We decreased the cell tolerance to viral load by decreasing the AH of Equation 8 from 500 virions to 10, while
leaving frelease = 1. As expected, cell death and tissue damage occurred much more quickly under these parameters (Fig. 1.3 D). Interestingly (and contrary to intuition), this did not significantly alter the rate at which the
infection spread through the tissue. Compare the final frame of Fig. 1.3 C (higher tolerance to viral load) to Fig.
1.3 D (lower tolerance to viral load). This shows the importance of creating spatiotemporal models of viral replication in tissues, as the balance of competing processes can lead to unexpected dynamics at the tissue, organ,
and organism levels.

Impact of the cell survival time under high viral loads
We decreased the cell tolerance to viral load further by decreasing the mean cell survival time under high viral
loads, which is equivalent to increasing the maximum apoptosis rate rmax. Following prior analyses109,143, 1/rmax
is the mean expected survival time as 𝐴 → ∞. We increased rmax from 0.001 min-1 (1000 minute expected lifetime
at high loads) to 0.01 min-1 (100 minute expected lifetime at high viral loads). This drastically accelerated the
rate of tissue damage, leaving much more basement membrane (the assumed surface under the epithelial monolayer) exposed (Fig. 1.3 E). In a later version of this model framework, we would expect this to lead to earlier
onset of fluid leakage, edema, and ultimately adverse respiratory outcomes such as ARDS. Interestingly, this
did not significantly increase the rate of spread of the infection. Compare the final frame of Fig. 1.3 D (higher
tolerance to viral load) to Fig. 1.3 E (lower tolerance to viral load).

Selected feedback from domain experts and the community
We gathered feedback from the multidisciplinary community, several of whom joined the coalition for future work.
We summarize the feedback below.
A virologist noted that more detail on endocytosis, viral uncoating, and synthesis would expose more actionable
points in the replication cycle. Preliminary SARS-CoV-2 experiments in her laboratory suggest that the time
course (and thus general order of magnitude of rate parameters) is very similar to Venezuelan equine encephalitis virus (VEEV) dynamics measured earlier21,22. The exponential progression matches observations: the first
cell is infected with one virion and so at first produces virus slowly, but neighboring cells can be infected with
multiple virions and thus create virus particles more quickly.
A community member identified typographical errors in the original documentation but verified that that mathematics in the C++ implementation were not affected. He emphasized the importance of implementing RNA decay
(as a rate limiting step in virus replication) and the importance of integrating ACE2 receptor trafficking (as a rate
21

bioRxiv preprint doi: https://doi.org/10.1101/2020.04.02.019075; this version posted July 29, 2020. The copyright holder for this preprint (which
was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made
available under aCC-BY 4.0 International license.

limiting step in virus adhesion and endocytosis).
A mathematician noted the potential to simplify the model by removing the diffusing U, R, and P fields and
reported bugs in the initialization (where no cells are initially infected for some domain sizes, due to hard-coding
of the initial seeding). Other mathematicians emphasized the importance of varying virion “uptake” with ACE2
receptor availability and hence the need to integrate receptor trafficking.
A mathematical biologist noted prior work on other respiratory viruses will help estimate parameters and build
initial immunologic regulation models. Lung pathology and disease severity are closely tied to the immunologic
reaction, and prior data and images from influenza will help with calibrating spatial considerations. She expects
animal and drug data available for SARS-CoV-2 in the coming months. She noted the importance of distinguishing between mild and severe infections and ARDS. Matching the output to data will be imperative, with one quick
possibility to make this match data and distinguish between possibilities is to plot the resulting viral load. She
suggested that it would be helpful to show multi focal points of initial infection seeding (possibly of different initial
seeding size) that merge together over time, which would match observations of lung histology. Future work will
have a better impact if the models uses a true lung tissue geometry with immune cells limiting the peripheral
spread. The current model seems more relevant to in vitro growth of a single plaque, which may be scrutinized.
A quantitative systems pharmacologist pointed out the need for clearer scoping and diagrams to clearly lay out
the design of each submodel component. We will need procedures to choose future incorporations and changes
of scope. He also pointed out the need to understand what happens if you bind up a lot of ACE2 with receptor;
there are early insights online144.
A bioengineer with tissue damage and inflammation expertise noted that the diffusion coefficient of 900 μm2/min
= 15 μm2/s = 1.5e-11 m2/s is not particularly small; prior analyses145 considered virion diffusion in an lung epithelial monolayer for influenza with D = 3.18e-15m2/s estimating from experimental data. The virions for SARSCoV-2 could be more mobile though; it is uncertain. There are data146 about the diffusion coefficient for albumin
in tissue being on the order of 10-50 μm2/s. She stated that it makes sense for a virion (radius of 25-100 nm) to
move more slowly than a protein with radius < 5 nm unless “diffusive transport” in the model is encompassing
an active or facilitated transport mode beyond just classic diffusion. She also noted that her laboratory has looked
a lot at the renin-angiotensin-system systemically and in kidneys: the kinetics of AngII, ACE, and ACE2 in the
lungs would be of interest for connecting the next iteration of the ACE2 receptor model to connect to ARDS.
Pfizer may also have relevant related models.
A mathematical biologist with expertise in infectious diseases noted that the model could study immune responses and the impact of mucosal structure in future versions. She suggested quantifying damage or disease
metrics. She also noted that ultimately it would be useful to note which parameter estimates might be speciesspecific and which are not, to be able to switch between experimental and clinical systems, e.g., it is worth
recording if current estimates are from human, macaque, etc. She also noted that it may be important to determine if apoptotic cells are replaced or if there is permanent damage (in the model). If the model is run longer, it
would be worthwhile to translate the visual sense of damage to a quantitative metric.
An independent team of clinically-focused modelers noted their work on modeling immune expansion in “off
screen” lymph nodes and offered to link their model to our immune infiltration functions.
A mathematical biologist with a focus on model and data standards noted the need for clearly specifying each
model’s assumptions, inputs, and outputs to drive robust parallel development. He noted that it is critical to
consider information flow between submodels and revise these data flows as the iterations proceed. He suggested that we state separate execution of submodels as a key design goal to support parallel development.
Lastly, he noted that software should be released in conjunction with validation data and methodologies.

Core team discussion and priorities for v2
The core team met by virtual conference on April 1, 2020 to discuss the first preprint, model results, and feedback. The core team set as priorities (1) to formalize design specifications for each individual model component
and interfaces between components, (2) form teams responsible for each component, (3) focus v2 development
on refactoring into this modular format, (3) begin development of the submodels, and (4) begin refine parameter
22

bioRxiv preprint doi: https://doi.org/10.1101/2020.04.02.019075; this version posted July 29, 2020. The copyright holder for this preprint (which
was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made
available under aCC-BY 4.0 International license.

estimates. The clearer specification and organization of submodels was the top priority. As time permits, it was
also viewed as important to begin a receptor trafficking model.
The core team agreed to keep working via the dedicated Slack workspace to rapidly coalesce on the submodel
teams. Each subteam has a separate channel in the workspace.

Version 2 (April 1-May 9, 2020)
Version 2 incorporated key v1 feedback, with a focus on introducing a more modular design, improving default
model parameters, better initialization options, and a new ACE2 receptor trafficking submodel. This design cycle
lasted longer due in part to work spent on subteam organization. As with Version 1, the Version 2 model was
developed by the overall leads (Macklin, Heiland, Wang) to refine key model infrastructure for the forming subteams. (See the discussion in Three main phases of community-driven development.)
Version 2 also began work to test the design documents that were first discussed by the core team during the
v1 model feedback. The interactive nanoHUB model included new usability refinements, notably an option to animate the model outputs.

Model changes
The v2 model was expanded to include the following submodel components (Fig. 2.1):
●
●
●
●
●

T: tissue (which contains epithelial and other cells)
RT: ACE2 receptor trafficking (including virus endocytosis)
V: viral endocytosis, replication, and exocytosis responses
VR: cell response to viral replication, including cell
death and IFN synthesis
E: epithelial cell (incorporates RT, V and VR).

Based on community feedback, the default virion diffusion
coefficient was reduced by a factor of 10 to 90 μm2/min.
We may reduce this parameter further based upon oncolytic virus therapy modeling experience by Morgan Craig
and Adrianne Jenner.

Fig. 2.1: Version 2 model schematic: In the overall model structure, a tissue component (T) contains multiple epithelial cells (E).
Viral particles diffuse through this domain and can enter the cells
(by adhering as an uptake term) or be exported by cells. Each cell
includes an ACE2 receptor trafficking model (RT) where virus can
bind an unoccupied surface receptor, which is endocytosed to release its virion and eventually return to the surface. Each cell’s virus
lifecycle model (V) simulates viral replication kinetics, and its viral
response model (VR) uses a dose-response model to control cell
apoptotic response to viral load.

Biological hypotheses
The v2 model was similar to v1 with a simplified set of biological hypotheses:
2.T.1
2.T.2

Virus diffuses in the microenvironment with low diffusion coefficient
Virus adhesion to a cell stops its diffusion (acts as an uptake term)

2.RT.1

Virus adheres to unbound external ACE2 receptor to become external (virus)-bound ACE2
receptor
Bound external ACE2 receptor is internalized (endocytosed) to become internal bound ACE2
receptor
Internalized bound ACE2 receptor releases its virion and becomes unbound internalized receptor; the released virus is available for use by the viral lifecycle model V

2.RT.2
2.RT.3

23

bioRxiv preprint doi: https://doi.org/10.1101/2020.04.02.019075; this version posted July 29, 2020. The copyright holder for this preprint (which
was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made
available under aCC-BY 4.0 International license.

2.RT.4
2.RT.5

Internalized unbound ACE2 receptor is returned to the cell surface to become external unbound receptor
Each receptor can bind to at most one virus particle

2.V.1
2.V.2
2.V.3
2.V.4
2.V.5

Internalized virus (previously released in 2.RT.3) is uncoated
Uncoated virus (viral contents) lead to release of functioning RNA
RNA creates viral protein at a constant rate unless it degrades
Viral protein is transformed to an assembled virus state
Assembled virus is released by the cell (exocytosed)

2.VR.1

As a proxy for viral disruption of the cell, the probability of cell death increases with the total
number of assembled virions
Apoptosed cells lyse and release some or all of their contents

1.VR.2

(In the above, X.C.Y denotes prototype X, model component C, biological hypothesis Y, allowing us to easily
refer to any individual hypothesis or assumption in discussion and community feedback.) In the next version of
this model, we will use the design document protocols for each of these components.

Unit tests
The v2 prototype had no changes in qualitative unit tests; once the ACE2 receptor trafficking model works correctly, the model will behave as in v1.

Translation to mathematics, rules and model components
Extracellular virion transport (Tissue submodel T)
There were no changes in this integration-scale tissue model (T) for v2.

ACE2 receptor trafficking (submodel RT)
For each cell, we track REU (external unbound ACE2 receptors), REB (external virus-bound receptors), RIB (internalized virus-bound receptor), and RIU (internalized unbound receptor). We model hypotheses 2.RT.1-2.RT.5 as
a system of ordinary differential equations:
𝑑𝑅𝐸𝑈
= −𝑟bind 𝑛𝑉 𝑅𝐸𝑈 + 𝑟recycle 𝑅𝐼𝑈
𝑑𝑡

(10)

𝑑𝑅𝐸𝐵
= 𝑟bind 𝑛𝑉 𝑅𝐸𝑈 − 𝑟endo 𝑅𝐸𝐵
𝑑𝑡

(11)

𝑑𝑅𝐼𝐵
= 𝑟endo 𝑅𝐸𝐵 − 𝑟release 𝑅𝐼𝐵
𝑑𝑡

(12)

𝑑𝑅𝐼𝑈
= 𝑟release 𝑅𝐼𝐵 − 𝑟recycle 𝑅𝐼𝑈
𝑑𝑡

(13)

As in the v1 virus model, we estimate nV (the number of extracellular virions interacting with the cell) based upon
consistency with the BioFVM implementation and set
𝑟bind 𝑛𝑉 𝑅𝐸𝑈 = 𝑈𝑖 𝑉𝑖 𝜌

(14)

where U is the cellular uptake rate and V is the volume of the cell, and so
𝑛𝑉 ≈ 𝑉𝑖 𝜌
24

(15)

bioRxiv preprint doi: https://doi.org/10.1101/2020.04.02.019075; this version posted July 29, 2020. The copyright holder for this preprint (which
was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made
available under aCC-BY 4.0 International license.

𝑈𝑖 = 𝑟bind 𝑅EU

(16)

Thus, the virus endocytosis rate varies with the availability of unbound externalized ACE2 receptor, as expected.
To link with the viral replication submodel, the unbinding of virus from internalized receptor must act as a source
term for the internalized virus:
Source𝑉 = 𝑟release 𝑅𝐼𝐵

(17)

Intracellular viral replication dynamics (Virus lifecycle model V)
We make a small modification to the internalized virus model to account for the coupling with the receptor trafficking model:
𝑑𝑉
= Source𝑉 − 𝑟𝑈 𝑉
𝑑𝑡

(18)

𝑑𝑈
= 𝑟𝑈 𝑉 − 𝑟𝑃 𝑈
𝑑𝑡

(19)

𝑑𝑅
= 𝑟𝑃 𝑈 − 𝜆𝑅 𝑅
𝑑𝑡

(20)

𝑑𝑃
= 𝑟𝑆 𝑅 − 𝑟𝐴 𝑃 − 𝜆𝑃 𝑃
𝑑𝑡

(21)

𝑑𝐴
= 𝑟𝐴 𝑃 − 𝐸𝐴
𝑑𝑡

(22)

We model exocytosis by setting the export rate EA of the assembled virions, in units of virions per time:
𝐸 = 𝑟𝐸 𝐴

(23)

Cell response (Viral response submodel VR)
There were no changes from the v1 model.

Initialization
In v2, we added the option to specify the multiplicity of infection (MOI): the ratio of initial virions to number of
epithelial cells. These virions are placed randomly in the extracellular space. We use a default MOI = 0.01 to
model a fine mist of virions landing on the tissue. Users can also set an option to only infect the centermost cell,
which sets V = 1 for that cell.

Refined parameter estimates
Detailed experimental characterization of ACE2 receptor trafficking in SARS-CoV147 permits an initial estimation
of key model parameters. This experimental work reported that endocytosed receptors were observed in 3 hours
post infection, and that 10 hours later (13 hours elapsed time), receptors were observed in vesicles. This estimates the time scale of binding and endocytosis to be on the order of 3 hours, and that virion release occurs on
the order of 10 hours. Thus:
1
1
+
~ 3 hours
𝑟bind 𝑅𝐸𝑈 (0) 𝑟endo
25

(24)

bioRxiv preprint doi: https://doi.org/10.1101/2020.04.02.019075; this version posted July 29, 2020. The copyright holder for this preprint (which
was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made
available under aCC-BY 4.0 International license.

and
1
𝑟release

(25)

∼ 10 hours.

Supposing that binding is relatively fast compared to endocytosis, we set

1
𝑟bind 𝑅𝐸𝑈 (0)

~ 1 min, and so

1
𝑟endo

∼

3 hours. Recycled receptors were observedwithin 14 hours (1 hour after the appearance of endocytosed recep1
∼ 1 hour. Assuming there are 1,000 to 10,000 ACE2 receptors per cell, we set the paramtors), so we set 𝑟
recycle

eters (to order of magnitude) at
𝑟bind = 0.001 min−1

(26)

𝑟endo = 0.01 min−1

(27)

𝑟release = 0.001 min−1

(28)

𝑟recycle = 0.01 min−1

(29)

𝑟bind = 0.001 min−1

(30)

The report observed expression of viral proteins by 18 hours (5 hours after viral release from endocytosed ACE2
receptors). Assuming that 𝑟uncoat ∼ 𝑟prep ∼ 𝑟synth, each parameter has magnitude 0.01 min−1 . We similarly set
𝑟assemble = 𝑟exo = 0.01 min−1 in the v2 model.

Other implementation notes
To differentiate between incoming imported and exported virions within the computational implementation, we
modeled two diffusing fields (for extracellular concentrations of V and A). However, the models only require
extracellular V. At the end of each computational step (advancing by one diffusional time step), we iterate through
each voxel and transfer all of the extracellular diffusing A to V. We also created diffusing fields for uncoated
virions, RNA, and viral proteins, although these were removed from later model versions.
By setting the virus uptake rate U as noted above, PhysiCell (via BioFVM) automatically removes the correct
amount of virions from the extracellular diffusing field and places them in an internalized virus particle variable
n. By PhysiCell’s automated mass conservation:
Δ𝑛 = Δ𝑡 𝑟bind 𝑛𝑉 𝑅𝐸𝑈 = Δ𝑡 𝑈𝑖 𝑉𝑖 𝜌.

(31)

If n was previously set to zero, then the current value of n represents Δ𝑛. By assumption 2.RT.5, Δ𝑛 is equal
to the change in the number of external virus-bound receptors (one virion per receptor). Thus, these receptors
(Δ𝑛) represent the net increase in bound external receptors. So at each time step, we:
1) Increase REB by n
2) Decrease REU by n
3) Set n = 0 (because these virions have been “delivered” to the receptor trafficking model)

Software release
The core model associated with the v2 prototype is Version 0.2.1. The nanoHUB app associated with the v2
prototype is Version 2.1. GitHub releases and Zenodo snapshots are given in the Appendix.
The cloud-hosted interactive model can be run at https://nanohub.org/tools/pc4COVID-19.
26

bioRxiv preprint doi: https://doi.org/10.1101/2020.04.02.019075; this version posted July 29, 2020. The copyright holder for this preprint (which
was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made
available under aCC-BY 4.0 International license.

Fig. 2.2: Version 2 sample model results at 30, 60, 120, and 180 hours. In all plots, epithelial cells are colored from blue (no assembled virions) to
bright yellow (1000 or more virions). Black cells are apoptotic, and white regions show damaged tissues where apoptotic cells have degraded to
expose (unmodeled) basement membrane. Bar: 200 𝜇m. A. Simulation time course using the new initialization with an MOI (multiplicity of infection)
of 0.01. As virions land randomly on the tissue, they initiate multiple infections that spread and merge. B. After infecting a single cell (with the new
default parameters), the infected region (plaque) spreads radially as in the v1 model, but at a slower rate. As before, tissue degradation (black apoptotic
cells and white cleared tissue) has greatest frequency near the original site of infection. C. If the number of ACE2 receptors is cut by a factor of 10,
fewer virions infect cells, leading to slower viral replication. However, the reduced rate of virus binding and endocytosis leaves more extracellular viral
particles to disperse, leading to a larger spread of the region of infection. D. Decreasing instead the rate of virus release from internalized ACE2
receptor drastically slows the viral dynamics.

27

bioRxiv preprint doi: https://doi.org/10.1101/2020.04.02.019075; this version posted July 29, 2020. The copyright holder for this preprint (which
was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made
available under aCC-BY 4.0 International license.

Model behavior: what does the current version teach us?
Except as noted below, all simulation results use the v2 model default parameters, which are supplied in the
XML configuration parameter file of the version 0.2.1 core model repository.
In all plots, dark blue cells have 0 assembled virus, pale blue cells have 1-9 assembled virions, grey cells have
10-99 assembled virions, light yellow cells have 100-999 assembled virions, and bright yellow cells contain 1000
or more assembled virions. Black cells are apoptotic, and white spaces show regions devoid of cells (extensive
tissue damage).

Infection by a single virus versus a dispersion of virions
Compared to the previous method of initially infecting a single cell with a single virion, the v2 model simulation
using the new MOI initialization (MOI=0.01) showed viral particles nucleating multiple infections spread as independent plaques that later merge (Fig. 2.2 A and Fig. 2.2 B). For higher MOIs, some cells can be infected by
more than one virion, leading to faster viral replication.

Targeting the endocytosis cascade versus targeting ACE2 receptor
As more subcellular mechanisms are added to the model, we can ask what if questions about potential pharmacologic interventions9. Using the v2 model, we first investigated the impact of reducing the number of ACE2
receptors on each cell by a factor of 10 (e.g., by an intervention that targets ACE2 receptor or reduces its expression). We found that while this reduced the number of viral particles infecting each cell (thus slowing replication in individual cells), it paradoxically accelerated the spread of the infected region through the tissue (Fig.
2.2 C). This phenomenon can be understood by dimensional analysis: the effective transport length scale L of
𝐷
𝑈

the virus particle is 𝐿 = √ , where U is the uptake rate of the viral particles. In the v2 model, U is proportional to
the number of unbound external ACE2 receptors. If this number is reduced, then the length scale increases,
leading to a faster dissemination of virus particles, exposing more tissue to virus particles, and ultimately infecting
more cells earlier in the disease time course. On the other hand, with slower viral replication in individual cells,
tissue damage may be delayed. (Fig. 2.2 D).
We similarly investigated whether decreasing the rate of viral release from virus-bound endocytosed receptors
by reducing rrelease by a factor of 10. This drastically impaired the spread of the infection: ACE2 receptors trapped
and internalized more viral particles, which then replicated more slowly, thus reducing the severity of the infection.

Selected feedback from domain experts within the coalition and the community
The core team reviewed the v2 model and project progress on weekly between April 8, 2020 and May 4, 2020.
The team discussed the potential need for an improved viral replication model. In particular, for low virus counts
early in cellular infection, the continuum hypothesis needed for ordinary differential equations may not hold, and
non-physical behaviors (e.g., infection by less than a single virus) may prevent the eradication of infections in
the model. A discrete modeling approach may be required, although limiting mass transfers (e.g., from REU to
REB) to integer amounts could also help address this issue. The core team also reaffirmed the need to create a
simplified immune system model to continue progress.
The core team also identified needed refinements in xml2jupyter, particularly the ability to run additional analytics
on simulation outputs and visualize the results in the Jupyter notebook interface.
The core team formed the subteams, identified chief scientists, and organized the first rounds of subteam meetings. The core team also discussed the need to include subteam updates in the weekly core meetings. This was
first implemented in the May 4, 2020 call, and the development cycle discussed above reflects these communitydriven changes to team management.
We received additional feedback from the community from a postdoctoral fellow at Barcelona Supercomputing
28

bioRxiv preprint doi: https://doi.org/10.1101/2020.04.02.019075; this version posted July 29, 2020. The copyright holder for this preprint (which
was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made
available under aCC-BY 4.0 International license.

Center (BSC), who noted the number of virion particles should be constrained to integer values. He also suggested a branch of the sub-models may be reimplemented as stochastic differential equation. In addition, the
fellow pointed out that BSC is developing COVID-19 molecular disease maps, mainly by curating interactions
between viral and cellular proteins from several data sources and domain experts. It may be possible to “translate” these process descriptions to activity flow models for Boolean network simulations in PhysiBoSS130. Future
collaborations could test the COIVD-19 tissue simulator developed by this coalition in PhyiBoSS.

Core team discussion and priorities for v3
The highest priority for v3 is to start transitioning the development of the submodels to the subteams, thus moving
the project from Phase 1 to Phase 2. In particular, the team was keen to implement a basic immune model.

Version 3 (May 10 - July 27, 2020)
Version 3 focused on implementing a realistic representation of the tissue-level immune response to SARS-CoV2 and transitioning development of the submodels to the subteams. Due to the complexity of the immune system,
a significant portion of time was spent developing a realistic minimal model of the immune response.
This also represents the first model release to begin the transition from Phase 1 to Phase 2: the immune team
took on primary development of the C++ for their submodel. This development cycle also performed software
hardening on the core PhysiCell toolkit to facilitate complex immune behaviors (particularly phagocytosis and
CD8+ T cell attacks on infected cells) while improving multithreading safety and cross-platform compatibility.
Moreover, we performed a code refactoring to take advantage of new cell definition functionality in PhysiCell
1.7.1, which eased the development of the immune model with multiple cell types.

Key hypotheses
The overall aim of this submodel is to include features of the immune response to SARS-CoV-2 that are specific
to the local tissue environment. The main immune cellular components included at this stage are tissue-resident
macrophages, infiltrating neutrophils, and CD8+ T cells, which are
recruited as the infection progresses. The general pattern of
events that this model encompasses are summarized here.
When epithelial cells in the tissue
become infected with SARS-CoV2, they secrete chemokines that
cause macrophages to migrate towards them following a chemokine
gradient. In addition, the infected
cells may die as a result of the infection (see the cell response
model VR), and dead cells will release factors that cause macrophages to migrate towards them.
Macrophages phagocytose dead
cells and remove them from the tissue. When macrophages encounter dead cells, they begin to secrete Fig. 3.1: +Immune submodel schematic. Immune cells (macrophages, neutrophils,
and CD8 T cells) patrol within the tissue component (T), containing multiple epithelial
pro-inflammatory cytokines, and
cells (E). Cells infected by virus secrete chemokine, which attracts immune cells along
phagocytose any dead cell material
the chemokine gradient. CD8+ T cells induce apoptosis in infected cells, creating dead
they find. The result of pro-inflam- cells that are phagocytosed by macrophages and neutrophils that are attracted along
matory cytokine secretion is the in- debris gradients. Upon activation, macrophages secrete cytokine that recruits other
immune cell types.

29

bioRxiv preprint doi: https://doi.org/10.1101/2020.04.02.019075; this version posted July 29, 2020. The copyright holder for this preprint (which
was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made
available under aCC-BY 4.0 International license.

filtration of neutrophils into the tissue. Neutrophils are short-lived cells and are replenished in the tissue as long
as pro-inflammatory cytokines are still being produced. CD8+ T cells, presumed to be specific for SARS-CoV-2,
enter the tissue at a later time, and their role is to kill infected cells. CD8+ T cell entry is dependent upon the
presence of pro-inflammatory cytokines. Death of an infected cell is more likely after prolonged contact with one
or more CD8+ T cells. CD8+ T cells may also interact with macrophages that have phagocytosed dead cells or
virus as these macrophages will now be able to present viral antigens to both CD4+ and CD8+ T cells; however
antigen presentation is not directly included in this initial version of the model. As described below, simulations
were performed using a field of already infected epithelial cells, and the behavior of the immune cells in this
tissue appears to follow the established rules.
Owing to the immune response cascade outlined above, we first integrated macrophages, neutrophils, and CD8+
T cells into the SARS-CoV-2 tissue model. The adaptive immune response in a naïve host begins a few days
after innate immune action. For this version, we simplify dynamics by modeling only CD8+ T cells, and we do not
yet model antigen presentation via dendritic cells or macrophages. Thus, we assume that CD8+ T cells are
recruited around day 4 of infection in response to infected cells and pro-inflammatory cytokine production, where
infected cells are killed in response to sustained total contact with one or more CD8+ T cells. It is assumed that
immune actions only affect infected cells that are past the eclipse phase and are thus generating virus.
Immune cells travel in a biased correlated random walk along chemical gradients109. To control for spatial migration, the submodel contains three diffusing chemicals in addition to free virions: pro-inflammatory cytokines secreted by macrophages, CD8+ T cells, and post-eclipse phase infected cells recruit immune cells into tissue from
blood or lymph nodes, which could ultimately be modeled in a separate submodel. We assume all immune cells
migrate in the tissue toward infected cells along a chemokine gradient, which is assumed to be secreted by
infected cells for simplicity. Infected cells and macrophages also secrete IFN-I, which will reduce viral burst size
from neighboring infected cells in future versions of the model.

Model changes
The v2 model was expanded to include the following submodel components (Fig. 3.1):
●
●
●
●
●
●
●
●
●

T: tissue (which contains epithelial and other cells, and diffusible factors)
RT: ACE2 receptor trafficking (including virus endocytosis)
V: viral endocytosis, replication, and exocytosis responses
VR: cell response to viral replication, including cell death and IFN synthesis
E: epithelial cell (includes RT, V and VR).
D: dead cell
MPhi: macrophage
N: neutrophil
CD8: CD8+ T cell

Biological hypotheses
The v3 model introduced new assumptions regarding how the infected and dead cells are cleared and how immune cells act in the model (indicated by X.C.Y, where X denotes prototype, C denoted modeling component,
and Y denotes a biological hypothesis, for easy reference):
3.T.1
Virus diffuses in the microenvironment with low diffusion coefficient
3.T.2
Virus adhesion to a cell stops its diffusion (acts as an uptake term)
3.T.3
Pro-inflammatory cytokine diffuses in the microenvironment
3.T.4
Pro-inflammatory cytokine is taken up by recruited immune cells
3.T.5
Pro-inflammatory cytokine is eliminated or cleared
3.T.6
Chemokine diffuses in the microenvironment
3.T.7
Chemokine is taken up by immune cells during chemotaxis
3.T.8
Chemokine is eliminated or cleared
3.T.9
Debris diffuses in the microenvironment
3.T.10
Debris is taken up by macrophages and neutrophils during chemotaxis
30

bioRxiv preprint doi: https://doi.org/10.1101/2020.04.02.019075; this version posted July 29, 2020. The copyright holder for this preprint (which
was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made
available under aCC-BY 4.0 International license.

3.T.11

Debris is eliminated or cleared

3.RT.1

3.RT.5

Virus adheres to unbound external ACE2 receptor to become external (virus)-bound ACE2
receptor
Bound external ACE2 receptor is internalized (endocytosed) to become internal bound ACE2
receptor
Internalized bound ACE2 receptor releases its virion and becomes unbound internalized receptor. The released virus is available for use by the viral lifecycle model V
Internalized unbound ACE2 receptor is returned to the cell surface to become external unbound receptor
Each receptor can bind to at most one virus particle.

3.V.1
3.V.2
3.V.3
3.V.4
3.V.5

Internalized virus (previously released in 2.RT.3) is uncoated
Uncoated virus (viral contents) lead to release of functioning RNA
RNA creates viral protein at a constant rate unless it degrades
Viral protein is transformed to an assembled virus state
Assembled virus is released by the cell (exocytosis)

3.VR.1
3.VR.2

After infection, cells secrete chemokine
As a proxy for viral disruption of the cell, the probability of cell death increases with the total
number of assembled virions
Apoptosed cells lyse and release some or all of their contents

3.RT.2
3.RT.3
3.RT.4

3.VR.3
3.E.1
3.E.2
3.E.3
3.E.4
3.E.5

Live epithelial cells undergo apoptosis after sufficient cumulative contact time with adhered
CD8+ T cells.
Live epithelial cells follow all rules of RT
Live epithelial cells follow all rules of V
Live epithelial cells follow all rules of VR
Dead epithelial cells follow all rules of D.

3.D.1

Dead cells produce debris

3.Mphi.1
3.MPhi.2
3.Mphi.3
3.Mphi.4

Resident (unactivated) and newly recruited macrophages move along debris gradients.
Macrophages phagocytose dead cells
Macrophages break down phagocytosed materials
After phagocytosing dead cells, macrophages activate and secrete pro-inflammatory cytokines
3.Mphi.5 Activated macrophages can decrease migration speed
3.Mphi.6 Activated macrophages have a higher apoptosis rate
3.Mphi.7 Activated macrophages migrate along chemokine and debris gradients
3.Mphi.8 Macrophages are recruited into tissue by pro-inflammatory cytokines.
3.MPhi.9 Macrophages die naturally and become dead cells.
3.N.1
3.N.2
3.N.3
3.N.4
3.N.5
3.N.6
3.N.7

Neutrophils are recruited into the tissue by pro-inflammatory cytokines
Neutrophils die naturally and become dead cells
Neutrophils migrate locally in the tissue along chemokine and debris gradients
Neutrophils phagocytose dead cells and activate
Neutrophils break down phagocytosed materials
Activated neutrophils reduce migration speed
Neutrophils uptake virus

3.CD8.1
3.CD8.2

CD8+ T cells are recruited into the tissue by pro-inflammatory cytokines
CD8+ T cells apoptose naturally and become dead cells
31

bioRxiv preprint doi: https://doi.org/10.1101/2020.04.02.019075; this version posted July 29, 2020. The copyright holder for this preprint (which
was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made
available under aCC-BY 4.0 International license.

3.CD8.3
3.CD8.4

CD8+ T cells move locally in the tissue along chemokine gradients
CD8+ T cells adhere to infected cells. Cumulated contact time with adhered CD8+ T cells can
induce apoptosis (See 3.E.1)

Unit tests
To confirm the dynamics of the immune model qualitatively reproduce the in-situ dynamics, we monitored the
population numbers of immune cells (macrophages, neutrophils, CD8+ T cells) over time and compared with our
biological expectations.

Translation to mathematics, rules, and model components
There were no changes to the ACE2 receptor trafficking model RT or the intracellular viral replication dynamics
model V.

Extracellular transport (Tissue submodel T)
Extracellular densities of pro-inflammatory cytokine and chemokine were modelled using the standard BioFVM
formulation120, similar to that for extracellular virus (introduced above), i.e.:
𝜕𝜌
= 𝐷𝛻 2 𝜌 − 𝜆𝜌 + ∑ 𝛿(𝑥 − 𝑥𝑖 )(𝑆𝑖 (𝜌𝑖∗ − 𝜌) − 𝑈𝑖 𝜌)𝑉𝑖 ,
𝜕𝑡

(32)

cells 𝑖

where 𝐷 is the diffusion coefficient of each substrate, 𝜆 is the net decay rate, 𝛿 is the discrete Dirac delta function,
𝑥𝑖 is the position of the centre of cell 𝑖, 𝑆𝑖 is the secretion rate of cell 𝑖, 𝜌𝑖∗ is the saturation density at which cell 𝑖
stops secreting, 𝑈𝑖 is the uptake rate of the substrate by cell 𝑖, and 𝑉𝑖 is the volume of cell 𝑖. The concentration
𝜌, represents the density of pro-inflammatory cytokine 𝜌cytokine , chemokine 𝜌chemokine or dead cell debris 𝜌debris.
Similarly, diffusion, decay, secretion, and uptake parameters are all substrate specific rates, i.e. the diffusion
coefficients are 𝐷cytokine , 𝐷chemokine and 𝐷debris; the decay rates are 𝜆cytokine , 𝜆chemokine and 𝜆debris ; the secretion
rates are 𝑆cytokine , 𝑆chemokine and 𝑆debris ; the uptake rates are 𝑈cytokine , 𝑈chemokine and 𝑈debris ; and the saturation
∗
∗
∗
densities are 𝜌cytokine
, 𝜌chemokine
and 𝜌debris
.

Cell response (Viral response submodel VR)
We made a small addition to the cell response model. After infection, cells start secreting chemokine at a rate
𝐴
)
(33)
𝐴𝐻
where 𝐴 is the intracellular assembled virion count and 𝐴𝐻 is the amount of assembled virions at which half of
the maximum effect of virus-induced cell apoptosis is achieved. Secretion continues until the cell dies either
through lysis or CD8+ T cell induced apoptosis.
𝑆chemokine min (1,

Signaling, degradation, and phagocytosis of apoptotic cells (Dead cell dynamics D)
Cells that die release debris that attracts phagocytes and signals that that they can be cleared from the microenvironment. They secret these signals at a rate 𝑆debris .

Chemotaxis (Chemotaxis model MPhi, N, and CD8)
Macrophages and neutrophils undergo chemotaxis up the chemokine gradient and dead-cell debris gradients
released by infected cells and dead cells respectively. The velocity of cell chemotaxis is
𝑣⃗mot = 𝑠mot

(1 − 𝑏)𝜉 + 𝑏𝑏⃗⃗
||(1 − 𝑏)𝜉 + 𝑏𝑏⃗⃗||

32

(34)

bioRxiv preprint doi: https://doi.org/10.1101/2020.04.02.019075; this version posted July 29, 2020. The copyright holder for this preprint (which
was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made
available under aCC-BY 4.0 International license.

where 𝑠𝑚𝑜𝑡 is the speed of chemotaxis (cell-type-specific), 0 ≤ 𝑏 ≤ 1 is the migration bias (also cell-type-specific), 𝜉 is a random unit vector direction in 3D (or 2D) and 𝑏⃗⃗ is the migration bias direction defined by
𝑏⃗⃗ =

𝜎𝑐ℎ𝑒𝑚𝑜𝑘𝑖𝑛𝑒 𝛻𝜌𝑐ℎ𝑒𝑚𝑜𝑘𝑖𝑛𝑒 + 𝜎𝑑𝑒𝑏𝑟𝑖𝑠 𝛻𝜌𝑑𝑒𝑏𝑟𝑖𝑠

(35)
||𝜎𝑐ℎ𝑒𝑚𝑜𝑘𝑖𝑛𝑒 𝛻𝜌𝑐ℎ𝑒𝑚𝑜𝑘𝑖𝑛𝑒 + 𝜎𝑑𝑒𝑏𝑟𝑖𝑠 𝛻𝜌𝑑𝑒𝑏𝑟𝑖𝑠 ||
where 𝜎𝑐ℎ𝑒𝑚𝑜𝑘𝑖𝑛𝑒 and 𝜎𝑑𝑒𝑏𝑟𝑖𝑠 are the sensitivity of chemotaxis along either the chemokine or dead-cell debris
gradient. CD8+ T cells also undergo chemotaxis, but along the chemokine gradient, i.e. 𝜎𝑑𝑒𝑏𝑟𝑖𝑠 = 0 and
𝜎𝑐ℎ𝑒𝑚𝑜𝑘𝑖𝑛𝑒 = 1. Chemotaxing cells take up chemokine at a rate 𝑈𝑐ℎ𝑒𝑚𝑜𝑘𝑖𝑛𝑒 .

Phagocytosis dynamics (Phagocytosis of apoptotic cells MPhi and N)
Once a macrophage or neutrophil has found a cell to phagocytose, it reduces its speed from 𝑠𝑚𝑜𝑡,𝑎 (active chemotaxis speed) to 𝑠𝑚𝑜𝑡,𝑝 (phagocytosis/attached speed) and starts searching locally for material to phagocytose.
If there is a dead cell in contact with a macrophage or neutrophil (i.e., if there is a dead cell in the cell’s ~30
𝜇m mechanical interaction voxel as in PhysiCell109), the immune cell will phagocytose the dead cell with rate
𝑟𝑝ℎ𝑎𝑔 , which is cell-type specific and reflects the efficacy with which each immune cell subtype clears debris. If
the immune cell is in contact with a dead cell over a period of [𝑡, 𝑡 + Δ𝑡], then the probability of phagocytosis is
𝑟𝑝ℎ𝑎𝑔 Δ𝑡. When an immune cell phagocytoses a dead cell, the immune cell absorbs the volume of that cell and
subsequently increases its volume, i.e., the phagocytosing cell gains:
(a) all of the dead cell’s fluid volume;
(b) all of the dead cell’s nuclear solid and cytoplasmic solid volume (which are added to the nuclear cytoplasmic solid volume)
This implies that after phagocytosis within time 𝛥𝑡, the volume of a macrophage or neutrophil 𝑖 that phagocytoses
a dead cell 𝑗 will be given by
𝑉𝑐𝑠,𝑖 (𝑡 + 𝛥𝑡) = 𝑉𝑐𝑠,𝑖 (𝑡) + 𝑉𝑐𝑠,𝑗 (𝑡) + 𝑉𝑛𝑠,𝑗 (𝑡),

𝑉𝑐𝑓,𝑖 (𝑡 + 𝛥𝑡) = 𝑉𝑐𝑓,𝑖 (𝑡) + 𝑉𝑉𝑓,𝑗 (𝑡),

(36)

where 𝑉𝑐𝑠,𝑘 is the volume of the cytoplasmic solid volume in cell 𝑘, 𝑉𝑛𝑠,𝑘 is the volume of nuclear solid volume in
cell 𝑘, 𝑉𝑐𝑓,𝑘 is the cytoplasmic fluid volume in cell 𝑘, and 𝑉𝑉𝑓,𝑘 is the total fluid volume of cell 𝑘. Because this will
typically increase the cell’s volume above its “target” equilibrium volume, the standard PhysiCell volume model109
will begin to shrink the cell’s volume back towards its resting volume, allowing us to model degradation of phagocytosed materials. After phagocytosing dead material, macrophages start secreting pro-inflammatory cytokines
at a rate 𝑆𝑐𝑦𝑡𝑜𝑘𝑖𝑛𝑒 .

Neutrophil viral clearance (N)
Neutrophils take up extracellular virus at a rate 𝑈. We assume this uptake rate is equivalent to the ACE2 receptor
binding rate 𝑟𝑏𝑖𝑛𝑑 .

Immune cell recruitment (Mphi, N, and CD8)
Macrophages, neutrophils and CD8+ T cells are recruited to the tissue by pro-inflammatory cytokines through
capillaries/vasculature in the lung. The density of vasculature accounts for approximately 8.8% of the tissue 148.
Accordingly, at the start of each simulation we randomly assign 8.8% of the tissue voxels as vasculature points
through which immune cells arrive randomly throughout the course of the simulation. (Note that the v1-v3 models
simulate a single layer of epithelium where immune cells are allowed to move freely through or just above the
tissue; this 2-D formulation is implemented as a single layer of 3D voxels109.)
At regular time intervals Δ𝑡immune , we integrate the recruitment signal to determine the number of immune cells
recruited to the tissue. The number of cells recruited into the tissue between t and 𝑡 + Δ𝑡immune varies with the
pro-inflammatory cytokine recruitment signal across the tissue:
𝜌cytokine − 𝜌min
# of recruited cells = 𝑟recruit ∫ min (1, max (0,
)) 𝑑𝑉 Δ𝑡immune
(37)
𝜌sat − 𝜌min
Ω
33

bioRxiv preprint doi: https://doi.org/10.1101/2020.04.02.019075; this version posted July 29, 2020. The copyright holder for this preprint (which
was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made
available under aCC-BY 4.0 International license.

where Ω is the computational domain, 𝑟recruit is the recruitment rate (per volume), 𝜌min is the minimum recruitment signal, 𝜌sat is the maximum (or saturating), and 𝜌cytokine is the pro-inflammatory cytokine concentration.
The value of 𝜌min , ρ𝑠𝑎𝑡 , and 𝑟recruit are cell-type specific, i.e. macrophages, neutrophils, and CD8+ T cells have
different minimum and saturating recruitment signal concentrations which results in heterogenous arrival times
into the tissue.
Recruited cells are randomly seeded at vessel locations. In the v3 model, we set Δ𝑡immune = 10 min. Notice
that the number of recruited cells scales with duration of the time interval and the size of the tissue.

CD8+ T cell induction of infected cell apoptosis (CD8 dynamic model)
When a CD8+ T cell is in contact with a cell (based on PhysiCell’s mechanical interaction testing; see the note
in phagocytosis above) with intracellular assembled virion is greater than 1, i.e. 𝐴 > 1, the T cell attempts to
attach to the infected cell with an attachment rate rattach. Following prior immune modeling work124,125, if the cell
is in contact for a duration Δ𝑡, then the probability of forming an attachment in that time period is 𝑟attach Δ𝑡.
While the cells are attached, the immune cell’s cumulative CD8+ T cell contact time is increased by Δ𝑡. The T
cell has a mean attachment lifetime 𝑇attach. Between t and 𝑡 + Δ𝑡, the probability of detaching is given by
Δ𝑡/𝑇attach.
We assume that an infected cell will undergo apoptosis after its cumulative attachment time exceeds a threshold
𝑇CD8_contact_death. This can be either from a single or multiple T cell attachments. All attached T cells detach when
a cell undergoes apoptosis. When CD8+ T cells adhere to another cell, their motility is turned off, i.e. 𝑠𝑚𝑜𝑡,𝑝 = 0,
and when they detach from a cell, their speed returns to their active chemotaxis speed 𝑠𝑚𝑜𝑡,𝑎 .

Initialization
An initial population of 𝑀𝑃ℎ𝑖0 macrophages is seeded randomly throughout the tissue.

Estimates for immune parameters
The diffusion coefficient for the chemokine, pro-inflammatory cytokine, and debris, 𝐷chemokine , 𝐷cytokine , and
𝐷𝑑𝑒𝑏𝑟𝑖𝑠 , were set at 555.56 𝜇𝑚2 /𝑚𝑖𝑛 which was estimated by Matzavinos et al as the diffusion coefficient for
monoclonal antibodies149. This is equivalent to 8 × 10−3 𝑐𝑚2 /𝑑𝑎𝑦, which is similar to 1.25 × 10−3 𝑐𝑚2 /𝑑𝑎𝑦 estimated by Liao et al.150,151. Decay and secretion rates of the pro-inflammatory cytokine, chemokine, and debris
were assumed to be equivalent. Decay rates for the signaling substrates, 𝜆𝑐ℎ𝑒𝑚𝑜𝑘𝑖𝑛𝑒 , 𝜆𝑐𝑦𝑡𝑜𝑘𝑖𝑛𝑒 and 𝜆𝑑𝑒𝑏𝑟𝑖𝑠 , were
all set to 1.02 × 10−2 /𝑚𝑖𝑛, which was estimated as the decay rate of IL-6 by Buchwalder et al.152.The secretion
rate for each signaling substrate, 𝑆𝑐ℎ𝑒𝑚𝑜𝑘𝑖𝑛𝑒 , 𝑆𝑐𝑦𝑡𝑜𝑘𝑖𝑛𝑒 and 𝑆𝑑𝑒𝑏𝑟𝑖𝑠 , was 0.8254/𝜌∗ 1/𝑚𝑖𝑛, obtained through fitting
the secretion rate of infected cells to the production of IL-6 by infected basal epithelial cells measured by Ye et
al.153 over 25 hour153. The uptake rate of pro-inflammatory cytokine, 𝑈𝑐𝑦𝑡𝑜𝑘𝑖𝑛𝑒 , was estimated to be
0.0018 (𝑝𝑔/𝑚𝑙)−1 𝑑𝑎𝑦 −1 from measurements of the binding rate of IL-6 154. The chemokine uptake
rate, 𝑈𝑐ℎ𝑒𝑚𝑜𝑘𝑖𝑛𝑒 , was estimated to be 0.0510 (𝑝𝑔𝑚𝑙)−1 𝑑𝑎𝑦 −1 155. The uptake rate of debris, 𝑈𝑑𝑒𝑏𝑟𝑖𝑠 , was assumed
to be equivalent to that of 𝑈𝑐ℎ𝑒𝑚𝑜𝑘𝑖𝑛𝑒 , because it acts as a chemoattractant.
Macrophages, neutrophils and CD8+ T cells all have different sizes. Macrophages have an average diameter of
21 𝜇𝑚 156, giving a total volume of 4849𝜇𝑚3 . Neutrophils have an average diameter of 14 𝜇𝑚 157, giving a total
volume of 1437 𝜇𝑚3 . When activated, CD8+ T cells have a diameter of 0.7 9.7 𝜇𝑚158, giving a total volume of
478𝜇𝑚3 . For all immune cells, the volume of nucleus was assumed to be 10% of the cells total volume159.
The active migration rate of macrophages and CD8+ T cells along the chemokine gradient was 𝑠𝑚𝑜𝑡,𝑎 =
4𝜇𝑚/𝑚𝑖𝑛 based on in vitro and in vivo measurements of leukocyte chemotaxis rates160. We assume these cells
have a migration bias of 0.5 (unitless). Neutrophils move faster with stronger bias along the chemokine gradient at 𝑠𝑚𝑜𝑡 = 19𝜇𝑚/𝑚𝑖𝑛, with a bias of 0.91160. Once macrophages and neutrophils encounter material to
phagocytose, their motility reduces to 𝑠𝑚𝑜𝑡,𝑝 = 0.4𝜇𝑚/𝑚𝑖𝑛 and if a CD8+ T cell connects to an infected cell they
34

bioRxiv preprint doi: https://doi.org/10.1101/2020.04.02.019075; this version posted July 29, 2020. The copyright holder for this preprint (which
was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made
available under aCC-BY 4.0 International license.

are no longer motile, i.e., 𝑠𝑚𝑜𝑡,𝑝 = 0𝜇𝑚/𝑚𝑖𝑛. Cells persist on their given trajectory for 5 minutes before a new
trajectory is chosen. All immune cells undergo apoptosis at different rates, with neutrophils undergoing apoptosis on average after 18.72 hours161 (i.e. 𝑎𝐼,𝑁 = 8.87 × 10−4 min-1), macrophages on average every 3.3 days162
(i.e. 𝑎𝐼,𝑀Φ = 2.083 × 10−4 min-1) and CD8+ T on average every 2.5 days (i.e. 𝑎𝐼,𝑇 = 2.778 × 10−4 min-1)163.
Macrophages are well known for their capability in phagocytosing dead cell debris164. As such, we set the probability of a macrophage phagocytosing a dead cell in its neighborhood to 𝑝𝑝ℎ𝑎𝑔,𝑀Φ = 1. To account for the fact
that neutrophils split their time between phagocytosing dead cells and taking up virus165, we set the probability
that neutrophils phagocytose dead cells as 𝑝𝑝ℎ𝑎𝑔,𝑁 = 0.7.
For the recruitment of immune cells, parameters were chosen to achieve immunologically reasonable arrival
times for the immune cell subsets. Neutrophil and macrophage infiltration into tissue is faster than T cell infiltration, with neutrophils and macrophages arriving within 1 to 2 days after infection166 and CD8+ T cells arriving
closer to 4-5 days after infection167. The minimum and saturated signal concentrations, 𝜌𝑚𝑖𝑛 and 𝜌𝑠𝑎𝑡 , for macrophages and neutrophils were, therefore, assumed to be equivalent and fixed as 𝜌𝑚𝑖𝑛 = 0.1 substrate/𝜇𝑚3 and
𝜌𝑠𝑎𝑡 = 0.3 substrate/𝜇𝑚3 . Whereas, CD8+ T cells had higher signal concentrations for their minimum and saturated recruitment signals, i.e. 𝜌𝑚𝑖𝑛 = 0.4 substrate/𝜇𝑚3 and 𝜌𝑠𝑎𝑡 = 0.7 substrate/𝜇𝑚3. The recruitment rate for
the different immune types was assumed to be equivalent, i.e. 𝑟recruit = 4 × 10−9 cells/min/𝜇𝑚3 and the immune
recruitment rate time-step was Δ𝑡𝑖𝑚𝑚𝑢𝑛𝑒 = 10 min.
Direct observations of CD8+ T cell-infected cell interactions and quantification of infected cell fate revealed that
death required a median of 3.5 distinct CD8+ T cell contacts. Killed infected cells have a cumulative median
contact time of 50 min and individual contacts between CD8+ T cells and infected cells lasts on average 8.5
min168. We therefore set 𝑇CD8_contact_death = 50 min.

Other implementation notes
This simplified immune model does not yet include many key immune agents, including dendritic cells, natural
killer (NK) cells, B cells, antibodies, the complement system, and most cytokines. No anti-inflammatory cytokines
are modeled, nor can this model return to homeostasis following potential infection clearance. Dynamics of cytokine binding and unbinding to receptors are also omitted. The model does not yet incorporate known SARSCoV-2 immune evasion techniques, such as a delayed IFN-I response and lymphopenia (decreased CD8+ T
cells) from early in infection. In addition, the antigen-presentation from macrophages and subsequent activation
process of CD4+ and CD8+ T cells has been omitted. Many of these important mechanisms are planned for
inclusion in future versions. See further discussion in v3 modeling results below.

Software release
The core model associated with the v3 prototype is Version 0.2.1. The nanoHUB app associated with the v3
prototype is Version 3.2. GitHub releases and Zenodo snapshots are given in the Appendix.
The cloud-hosted interactive model can be run at https://nanohub.org/tools/pc4COVID-19.

Model behavior: what does the current version teach us?
Except as noted below, all simulation results use the v3 model default parameters, which are supplied in the
XML configuration parameter file of the version 0.3.2 core model repository.
In all plots, dark blue cells have 0 assembled virus, pale blue cells have 1-9 assembled virions, grey cells have
10-99 assembled virions, light yellow cells have 100-999 assembled virions, and bright yellow cells contain 1000
or more assembled virions. Black cells are apoptotic, and white spaces show regions devoid of cells (extensive
tissue damage). Unactivated macrophages are green, activated macrophages are magenta, CD8 + T cells are
red, and neutrophils are cyan. Apoptotic immune cells are light orange.
35

bioRxiv preprint doi: https://doi.org/10.1101/2020.04.02.019075; this version posted July 29, 2020. The copyright holder for this preprint (which
was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made
available under aCC-BY 4.0 International license.

Fig. 3.2: Version 3 model at 46, 72, 108, and 144 hours (default immune settings). In all plots, epithelial cells are colored from blue (no assembled
virions) to bright yellow (1000 or more virions). Black cells are apoptotic, and white regions show damaged tissues where apoptotic cells have degraded
to expose (unmodeled) basement membrane. Green cells are macrophages, magenta cells are activated macrophages, cyan cells are neutrophils,
and red cells are CD8+ T cells. Bar: 200 𝜇m.
Rows 1-2: Simulated dynamics starting with an MOI (multiplicity of infection) of 0.10 without an immune response (Row 1) and with an immune
response (Row 2). Plots A-B show uninfected (blue), infected (orange), and dead (yellow) cell counts and total extracellular virion (purple) without an
immune response (A) and with an immune response (B). The immune response clears infected and dead cells more quickly and limits the maximum
extracellular viral load, but the underlying tissue is completely destroyed.
Rows 3-4: Simulated dynamics starting with an MOI (multiplicity of infection) of 0.01 without an immune response (Row 3) and with an immune
response (Row 4). Plots C-D show uninfected, infected, and dead cell counts and total extracellular virion without an immune response (C) and with
an immune response (D) (same coloring as A-B). The immune response slows the spread of the infection and increases uninfected cell survival.

Impact of adding the immune response (default parameters)
Figs. 3.2-3.5 demonstrate the results of simulating SARS-Cov-2 infection under different parameter regimes.
Fig. 3.2 simulates the dynamics without and with an immune response for a MOI of 0.10 (top results) and 0.01
(bottom results), using the default immune parameters. When the MOI is 0.10, most of tissue is destroyed, either
36

bioRxiv preprint doi: https://doi.org/10.1101/2020.04.02.019075; this version posted July 29, 2020. The copyright holder for this preprint (which
was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made
available under aCC-BY 4.0 International license.

by the virus (Fig. 3.2 top row) or the immune system (Fig. 3.2 second row). Reducing the MOI allows some of
the tissue to survive the infection in the absence (Fig. 3.2, third row) or presence (Fig. 3.2, fourth row) of the
immune response. All subsequent model results will show a MOI of 0.01 to highlight differences in dynamics to
changes in immune parameters. As discussed below, this may not be necessary once the interferon response
in infected cells is added to the model.
At high MOI, macrophages are rapidly activated (Fig. 3.2, first panel in row 2), and the release of inflammatory
cytokines results in the infiltration of CD8+ T cells by day 3 (Fig. 3.2, second panel in row 2). The CD8+ T cells
kill all infected cells and the tissue is destroyed. At low MOI (0.01), the number of tissue cells surviving is greater
(Fig. 3.2, fourth row, panel 4). However, macrophage activation is delayed, which further delays the infiltration
of CD8+ T cells. At the end of the simulation, on day 6, there is a large number of infected cells (Fig. 3.2 D), and
the viral titers are still rising. This suggests that, under these default conditions, the lower MOI simply delays the

Fig. 3.3: Version 3 model at 108 and 144 hours (modified T cell characteristics). We show late simulation times with MOI = 0.01 with the default
immune parameters (top row), faster T cell killing (middle row), and faster T cell recruitment (bottom row). A, D, and G plot immune cell dynamics,
B, E, and H plot infected cell and virion dynamics, and C, F, and I plot changes in signaling factors for each simulated scenario. Faster T cell killing
and faster T cell recruitment both slow infection dynamics and (nearly) control the infection by 6 days. Cells are colored as in Fig. 3.2.

37

bioRxiv preprint doi: https://doi.org/10.1101/2020.04.02.019075; this version posted July 29, 2020. The copyright holder for this preprint (which
was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made
available under aCC-BY 4.0 International license.

infection; the tissue is completely destroyed if the simulation is continued beyond 6 days, as seen with the higher
MOI of 0.10 (result not shown).

Changing T cell parameters
In the initial model v3 simulation results introduced in Fig. 3.2, it appeared that the dynamics of CD8+ T cell
recruitment and activation relative to viral replication might be important. Thus, we varied some of the immune
cell parameters to determine whether the survival of the tissue could be improved. Fig. 3.3 (second row) shows
the results when the rate of CD8+ T cell killing was doubled by reducing the threshold contact time for cell death
from 50 min to 25 min. Even macrophage, neutrophil, and CD8+ T cell recruitment were slightly reduced compared to the default parameters (compare Fig. 3.3 D to Fig. 3.3 A), the increased ability of CD8+ T cells to kill
infected cells results in fewer infected cells and the viral titers are falling (Fig. 3.3 B and E).

Fig. 3.4: Version 3 model at 108 and 144 hours (modified resident immune cell populations). We show late simulation times with MOI = 0.01
with the default immune parameters (top row), increased resident macrophages (middle row), and addition of resident T cells (bottom row). A, D,
and G plot immune cell dynamics, B, E, and H plot infected cell and virion dynamics, and C, F, and I plot changes in signaling factors for each
simulated scenario. Increasing the resident macrophage population did not appreciably inhibit the infection, while introducing resident T cells reduced
viral titers and better controlled the infection. Cells are colored as in Fig. 3.2.

38

bioRxiv preprint doi: https://doi.org/10.1101/2020.04.02.019075; this version posted July 29, 2020. The copyright holder for this preprint (which
was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made
available under aCC-BY 4.0 International license.

We also increased the recruitment rate of CD8+ T cells to the tissue in response to inflammatory cytokines by
reducing 𝜌min from 0.4 to 0.1, and by reducing 𝜌sat from 0.7 to 0.4; see Fig. 3.3 (third row). This resulted in
greater sparing of tissue, and the virus was completely cleared under these conditions (Fig. 3.3 H).

Changing resident immune cell populations
We also investigated whether the outcome would be influenced by the number of macrophages and T cells that
might be resident within the tissue at the time of infection. We first increased the initial number of macrophages
from 50 to 150 (Fig. 3.4, second row). Interestingly, this did not result in an improved outcome over that seen
with the default parameters (compare Fig. 3.4, top row). CD8+ T cell recruitment was enhanced (Fig. 3.4 D) but
the viral load was continuing to increase at day 6 (Fig. 3.4 B), suggesting that increased number of macrophages
did not result in more virus control. This could be because in the present model macrophages essentially removed dead cells and do not have a role in killing infected cells. Moreover, because the model’s macrophages
cannot activate until dead infected cells are present, increasing the number of macrophages cannot trigger a
faster immune response. This suggests that after reaching a minimal number of macrophages, adding more
resident macrophages has a minimal impact on improving immune response.
In contrast, the presence of resident T cells (Fig. 3.4, bottom row) did result in an improved outcome, with more
tissue spared and essentially no viral replication (Fig. 3.4 H). The final viral count on day 6 was under 15 as T
cells were able to kill every infected cell before it could release a significant amount of assembled virions (Fig.
3.4 H). This drastically slowed the spread of the infection through the tissue. We also note that the faster T cell
killing resulted in earlier accumulation of apoptotic cells, leading to faster activation of macrophages and hence
accelerated immune cell recruitment (Fig. 3.4 G).
The addition of an interferon response (which could prevent nearby cells from endocytosing these few virions)

Fig. 3.5: Comparison of version 3 model runs. We show late simulation times with MOI = 0.01 with the default immune parameters (top row),
increased resident macrophages (middle row), and addition of resident T cells (bottom row). A, D, and G plot immune cell dynamics, B, E, and H
plot infected cell and virion dynamics, and C, F, and I plot changes in signaling factors for each simulated scenario. Increasing the resident macrophage
population did not appreciably inhibit the infection, while introducing resident T cells reduced viral titers and better controlled the infection. Cells are
colored as in Fig. 3.2.

39

bioRxiv preprint doi: https://doi.org/10.1101/2020.04.02.019075; this version posted July 29, 2020. The copyright holder for this preprint (which
was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made
available under aCC-BY 4.0 International license.

or antibodies (which could directly neutralize the released virions) could potentially completely control the infection in future versions of the model.

Further comparison of v3 model results
When we compare these simulations side by side (Fig. 3.5) we can see that the two scenarios with the best
outcomes are those in which the recruitment rate of T cells is increased and when resident T cells are included.
These resulted in the largest amount of surviving uninfected tissue (Fig. 3.5 A) as well as viral clearance (Fig.
3.5 B). It is interesting to note that the increase in recruitment resulted in T cells arriving in the tissue only one
day earlier than the default scenario (Fig. 3.5 D), but this had a dramatic effect. Under these conditions, the virus
expanded but was cleared within 6 days of infection. This model provides a mechanism to explore how CD8+ T
cell recruitment could be enhanced in COVID-19 patients. While the presence of resident T cells prevented the
viral infection from propagating there was still a significant amount of tissue loss in the current model.

Discussion of v3 model results
The inclusion of the basic tissue immune system to the model has provided some interesting new avenues for
research. It is important to note some of the caveats with the existing model. In order to be able to reliably see
the beneficial effect of the immune response we had to reduce the viral MOI tenfold. This was because at the
higher MOI, either the virus killed the tissue in the absence of the immune response, whereas when the immune
response was present it was the immune response that destroyed the tissue (although in this model, the immune
cells only destroyed infected cells and did not damage uninfected cells). It is important to note that the present
model does not include the cellular interferon response, which would have the effect of slowing viral replication
and making more cells resistant to viral infection. When this aspect is included, it is possible that the MOI will not
need to be reduced to the same degree.
The results of the simulations so far suggest that controlling the recruitment of CD8+ T cells is a critical parameter
leading to viral clearance and reduced tissue destruction. Recent single cell RNA sequencing studies of cells
from bronchoalveolar lavage fluid from COVID-19 patients have demonstrated that individuals with moderate
disease have increased numbers of CD8+ T cells infiltrating the lungs compared to those with severe disease169.
This suggests that aspects of the model that can influence this parameter should be explored further. This could
include the addition of a more detailed lymph node model in which the kinetics of activation and proliferation of
specific CD8+ T cells can be explored.
The presence of resident CD8+ T cells prior to infection effectively prevented viral replication, although at the
cost of some tissue damage. It is known that resident memory CD8+ T cells in the lung can provide protection
from subsequent infection170. It is possible that certain individuals infected with SARS-CoV-2 have been exposed
to related coronaviruses and recent studies have observed that up to 40% of unexposed individuals have detectable T cell responses to SARS-CoV-2 proteins171,172. Moreover, presence of CD8+ T cells is plausible in
uninfected tissues that are adjacent to infected tissues: an initial infection may resemble the default scenario of
extensive damage, but the recruited CD8+ T cells could provide protection to nearby tissues from such damage.
In the present simulations, it was assumed that all of the resident CD8+ T cells could recognize SARS-CoV-2,
but, in reality, only a small fraction of these T cells would be specific for the virus. This can be explored in future
simulations.
The fact that increasing the macrophage number did not affect the outcome could reflect the fact that in the
present model, these cells have no role in removing infected cells and only remove cells once they have died.
Thus, they do not influence the infection beyond secreting inflammatory cytokines that are necessary for the
recruitment of CD8+ T cells and neutrophils to the tissue. In subsequent model versions it may be possible to
add an interaction between macrophages that have taken up virus and/or dead infected cells with CD8+ T cells.
This interaction could further activate macrophages and allow them to kill infected cells before they die.

Selected feedback from domain experts within the coalition and the community
During the extensive v3 model development cycle, the modeling coalition met weekly to discuss and refine the
model assumptions and record feedback for future work. Several members presented results at virtual seminars
40

bioRxiv preprint doi: https://doi.org/10.1101/2020.04.02.019075; this version posted July 29, 2020. The copyright holder for this preprint (which
was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made
available under aCC-BY 4.0 International license.

and virtual conferences; feedback from audience questions and interactions are also reflected here.
Several members noted that because the ACE2 and viral replication dynamics models use ODEs, it is possible
that a cell in a low extracellular viral concentration could endocytose less than one full virion. These cells (with <
1 endocytosed virion) can still synthesize viral proteins and assemble virions in the current ODE model, leading
to artificially fast viral propagation in the tissue. Future model versions must compensate for this by only allowing
integer numbers of virions to uncoat and replicate. Moreover, for a coated virus such as SARS-CoV-2, we must
ensure that only live cells release assembled virions; this is the default model setting in v3 (lysed cells release
0% of their assembled virions by default settings).
It was also widely noted the antiviral effects of interferons should be incorporated to more accurately model the
rate of spread of an infection. This is of critical importance in light of recent news reports that interferon beta
treatment is emerging as a treatment option173,174. Within infected cells, further feedbacks (e.g., on endocytosis)
may be needed to prevent further re-infection of those cells. We may also need to model heterogeneity in cells’
susceptibility to infection and cytokine production. Cytokine production by infected cells may or may not vary with
the amount of virus in those cells.
While the initial immune model in v3 was able to address open questions on the effect of T cells, further work is
needed, including explicit cross-talk and feedback between pro- and anti-inflammatory cytokines. Future models
should include more neutrophil behaviors, including their own secretion of pro-inflammatory cytokines.
Future immune models should also include activation of antigen-presenting cells (APCs) and T helper cells.
Macrophages that have taken up dead infected cells should present antigens to CD4+ and CD8+ T cells. Interactions of macrophages with CD4+ T cells should render them capable of killing infected cells, particularly those
with antibodies bound to their surface.
While lymphopenia is a topic of significant clinical interest 175,176, there is currently no mechanism for it in the
model. This could be addressed by linking T cell death to the level of inflammatory cytokines, since the degree
of lymphopenia has been correlated with levels of IL-6, IL-10 and TNF-175. Also, the current model only captures
a “cytokine storm” in the sense that as more macrophages are recruited, they also secrete pro-inflammatory
cytokines, leading to an accelerated accumulation of cytokines as macrophages accumulate. Future models will
need to address this more mechanistically.
In terms of the model development process, we found that there may need to be more flexibility in the length of
each development cycle. The transition from Phase 1 to Phase 2 of the project requires substantial training of
new developers and creation of software infrastructure. The two-to-three week development cycle noted above
is more appropriate to late Phase 2 when all this infrastructure is in place and model changes are more minor
from one version to the next.

Core team discussions and priorities for v4
In the next development cycle, we plan to introduce type I IFN secretion and its antiviral effects in nearby uninfected cells, particularly reduced receptor endocytosis and viral replication. This will allow us to investigate recent
reports on interferon beta
We also plan to introduce a refined, expert-driven model of viral replication to avoid the model artifacts discussed
above and to ensure that cells can only replicate virus if they are infected by at least one whole virion, that they
can only replicate viral proteins if they have at least one full set of viral RNA coated, and they can only assemble
virions if they have at least one set of replicated viral proteins. Adding discrete / integer checks on these behaviors may introduce delays analogous to delay differential equations that improve model realism.
We plan to continue refining the immune response submodel as addressed above, with a focus on improving
pro- and anti-inflammatory responses and adding missing immune cell types. We plan to link this with a new
lymph node model that will more mechanistically regulate T cell expansion, “education” and recruitment.

Discussion
41

bioRxiv preprint doi: https://doi.org/10.1101/2020.04.02.019075; this version posted July 29, 2020. The copyright holder for this preprint (which
was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made
available under aCC-BY 4.0 International license.

Within three weeks of the World Health Organization’s declaration of a global pandemic of COVID-19177, community-based prototyping built upon an existing PhysiCell 3D cell-modeling framework to rapidly develop Version
1 of an intracellular and tissue-level model of SARS-CoV-2109. A growing coalition of domain experts from across
STEM fields are working together to ensure accuracy and utility of this agent-based model of intracellular, extracellular, and multicellular SARS-CoV-2 infection dynamics. Version 1 development underscored the necessity of
clearly explaining model components, defining scope, and communicating progress as it occurs for invaluable
real-time feedback from collaborators and the broader community. This rapid prototyping already helped in growing the coalition and recruiting complementary expertise; for instance, a team modeling lymph node dynamics
and immune infiltration joined during the Version 1 cycle after seeing initial progress.
The version 1 prototype also showed the scientific benefit of rapid prototyping: even a basic coupling between
extracellular virion transport, intracellular replication dynamics, and viral response (apoptosis) showed the direct
relationship between the extracellular virion transport rate and the spread of infection in a tissue. More importantly, it showed that for viruses that rapidly create and exocytose new virions, release of additional assembled virions at the time of cell death does not significantly speed the spread of infection. Moreover, decreasing
the cell tolerance to viral load does not drastically change the rate at which the infection spreads, but it does
accelerate the rate of tissue damage and loss, which could potentially trigger edema and ARDS earlier. This
suggests that working to slow apoptosis may help preserve tissue integrity and delay adverse severe respiratory
responses. That such a simple model could already point to actionable hypotheses for experimental and clinical
investigations points to the value of rapid model iteration and investigation, rather than waiting for a “perfect”
model that incorporates all processes with mechanistic molecular-scale detail.
Version 2 showed promise of increasing mechanistic details to evaluate potential inhibitors. For example, it was
found that that reducing the expression of ACE2 receptors could paradoxically lead to faster spread of the infection across the tissue, although the individual infected cells would replicate virus more slowly. On the other hand,
taking advantage of high receptor expression but interfering with viral release from internalized receptors may
help slow infectious dynamics. Generally, adding sufficient actionable cell mechanisms to the model framework
allows us to ask pharmacologically-driven questions on potential pharmacologic interventions, and how these
findings are affected by heterogeneity, stochasticity, and the multiscale interactions in the simulated tissue.
Version 3 allowed our first investigations of immune system responses. We found that T cell behaviors are critical
to controlling the spread of an infection through the tissue. In particular, rapid recruitment as well as the presence
of “educated” CD8+ T cells prior to infection (e.g., after responding to infection in a nearby tissue) had a significant
protective effect, even in the current model that does not explicitly model antibodies. This is consistent with
emerging studies that link T cell responses to patients with the best recovery169,171,172.
As work on future versions progresses, teams will work in parallel on submodels to add, parameterize, and test
new model components. It will be important to balance the need for new functionality with the requirement for
constrained scope, while also balancing the importance of model validation with timely dissemination of results.
Thus, this preprint will be updated with every development cycle to invite feedback and community contributions.
Between cycles, the most up-to-date information about this model can be found at http://COVID-19.physicell.org.

Getting involved
To get involved, we welcome biological expertise, especially related to model assumptions, hypotheses, infection
dynamics, and interpretation of results. Mathematical contributions to the underlying model or model analysis
and data contributions for crafting, parameterizing, and validating model predictions are particularly sought.
We encourage the community to test the web-hosted hosted model at https://nanohub.org/tools/pc4COVID-19.
This model will be frequently updated to reflect progress, allowing the public to take advantage of this rapid
prototyping effort.
We avidly encourage the community to test the model, offer feedback, and join our growing coalition via Google
survey (https://forms.gle/12vmLR7aiMTHoD5YA), by direct messaging Paul Macklin on Twitter (@MathCancer),
42

bioRxiv preprint doi: https://doi.org/10.1101/2020.04.02.019075; this version posted July 29, 2020. The copyright holder for this preprint (which
was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made
available under aCC-BY 4.0 International license.

or by joining the pc4COVID-19 Slack workspace (invitation link). Updates will frequently be disseminated on
social media by Paul Macklin (@MathCancer), the PhysiCell project (@PhysiCell), the Society for Mathematical
Biology subgroup for Immunobiology and Infection Subgroup (@smb_imin), and others.
We also encourage developers to watch the pc4COVID-19 GitHub organization and to contribute bug reports
and software patches to the corresponding (sub)model repositories. See https://github.com/pc4COVID-19
We are encouraged by the fast recognition of the computational and infectious disease communities that we can
make rapid progress against COVID-19 if we pool our expertise and resources. Together, we can make a difference in understanding viral dynamics and suggesting treatment strategies to slow infection, improve immune
response, and minimize or prevent adverse immune responses. We note that this work will not only help us
address SARS-CoV-2 but will also provide a framework for readiness for future emerging pathogens.

Acknowledgements
PM thanks the Jayne Koskinas Ted Giovanis Foundation for Health and Policy for generous support. PM, RH,
and YW thank the National Institutes of Health (U01-CA232137-01) for support. PM, RH, JAG, YW, and JFG
thank the National Science Foundation for funding and resources via the nanoBIO Node for nanoHUB (1720625).
AS thanks the NIH for support from the NIAID (R01 AI139088). MC and AJ were supported under NSERC
Discovery Grant RGPIN-2018-04546. ANFV acknowledges support from the NIH (R35-GM133763). We thank
the NCN CP for fast-tracked deployment of models on nanoHUB.
We thank the scientific community for model feedback, including Simon Parkinson, Richard Allen (Pfizer Inc.),
David Dai (Pfizer Inc.), Rohit Rao (Pfizer Inc.), and the co-authors of this manuscript. We thank Furkan Kurtoglu
(Indiana University) for contributions to SBML integration efforts and other multiscale design aspects. We thank
Mark Chaplain for his assistance in coordinating with the UK Royal Society's RAMP Initiative.
All the authors dedicate this work in memory of Bing Liu, our co-author, colleague, and friend. His insights and
community-minded contributions are sorely missed.

Appendices
Appendix 1: Code availability
All code is being made available as open source under the standard 3-Clause BSD license. Users should cite
this preprint (or the final published paper, as the case may be).

Core model releases
Version 1 model
Version 0.1.0 (released March 26, 2020)
GitHub: https://github.com/pc4COVID-19/COVID-19/releases/tag/0.1.0
Notes: First release.
Version 0.1.1 (released March 26, 2020)
GitHub: https://github.com/pc4COVID-19/COVID-19/tree/0.1.1
Notes: Minor bugfixes and first inclusion of “math” directory.
Version 0.1.2 (released March 26, 2020)
43

bioRxiv preprint doi: https://doi.org/10.1101/2020.04.02.019075; this version posted July 29, 2020. The copyright holder for this preprint (which
was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made
available under aCC-BY 4.0 International license.

GitHub: https://github.com/pc4COVID-19/COVID-19/releases/tag/0.1.2
Zenodo: https://doi.org/10.5281/zenodo.3733336
Notes: First release with Zenodo integration. Last release in 0.1.x chain (v1 model chain).
Version 0.1.3 (released April 1, 2020)
GitHub: https://github.com/pc4COVID-19/COVID-19/tree/0.1.3
Zenodo: https://doi.org/10.5281/zenodo.3737166
Notes: First release after transferring the COVID-19 tissue-level model (overall model) from Paul Macklin’s personal GitHub account to the new pc4COVID-19 GitHub organization.

Version 2 model
Version 0.2.0 (released April 9, 2020)
GitHub: https://github.com/pc4COVID-19/COVID-19/tree/0.2.0
Zenodo: https://doi.org/10.5281/zenodo.3747011
Notes: First v2 prototype. Introduced modular design and ACE2 receptor trafficking
Version 0.2.1 (released April 10, 2020)
GitHub: https://github.com/pc4COVID-19/COVID-19/tree/0.2.1
Zenodo: https://doi.org/10.5281/zenodo.3747011
Notes: Minor bugfixes for cell visualization.

Version 3 model
Version 0.3.0 (released July 3, 2020)
GitHub: https://github.com/pc4COVID-19/COVID-19/tree/0.3.0
Zenodo: http://doi.org/10.5281/zenodo.3929320
Notes: First v3 prototype. First integration of new immune submodel. Upgrade to PhysiCell Version 1.7.1, allowing use of XML-based cell definitions to define the behavior of immune cell types. Upgrade to PhysiCell Version
1.7.2 beta to improve multithreaded performance, add new cell-cell interaction features, and fix concurrency
issues on some platforms.
Version 0.3.1 (released July 3, 2020)
GitHub: https://github.com/pc4COVID-19/COVID-19/tree/0.3.1
Zenodo: http://doi.org/10.5281/zenodo.3929726
Notes: This release improves parameter estimates for digestion of phagocytosed material and has an immune
model refinement to prevent runaway macrophage death.
Version 0.3.2 (released July 15, 2020)
GitHub: https://github.com/pc4COVID-19/COVID-19/tree/0.3.2
Zenodo: https://dx.doi.org/10.5281/zenodo.3946820
Notes: This release simplifies the macrophage rules.

nanoHUB cloud-hosted model releases
The latest version can always be accessed directly at https://nanohub.org/tools/pc4COVID-19

Version 1 model
Version 1.0 (released March 26, 2020):
GitHub: https://github.com/rheiland/pc4COVID-19/releases/tag/v1.0
44

bioRxiv preprint doi: https://doi.org/10.1101/2020.04.02.019075; this version posted July 29, 2020. The copyright holder for this preprint (which
was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made
available under aCC-BY 4.0 International license.

Zenodo: http://doi.org/10.5281/zenodo.3733276
nanoHUB DOI: http://dx.doi.org/doi:10.21981/19BB-HM69
Notes: First published version.

Version 2 model
Version 2.1 (released April 14, 2020):
GitHub: https://github.com/pc4COVID-19/pc4COVID-19/releases/tag/v2.1
Zenodo: http://doi.org/10.5281/zenodo.3766879
nanoHUB DOI: http://dx.doi.org/doi:10.21981/2B1H-GX51
Notes: Second published version. Moved GitHub repository to the pc4COVID-19 GitHub organization. Added
another tab in the GUI for generating animation of cells (from SVG output files).

Version 3 model
Version 3.0 (released July 3, 2020):
GitHub: https://github.com/pc4COVID-19/pc4COVID-19/tree/v3.0
Zenodo: http://doi.org/10.5281/zenodo.392953 9
nanoHUB DOI: http://dx.doi.org/doi:10.21981/V52J-0S03
Notes: The major change to the GUI in this release is the addition of a “Cell Types” tab. This allows editing
parameters associated with <cell_definitions> in the configuration file. This version also includes a <style> block
in the Jupyter notebook that fixed an unwanted scrollbar in the lengthy About tab.
Version 3.1 (released July 3, 2020):
GitHub: https://github.com/pc4COVID-19/pc4COVID-19/tree/v3.1
Zenodo: http://doi.org/10.5281/zenodo.3929960
nanoHUB DOI: http://dx.doi.org/doi:10.21981/YNWZ-GE50
Notes: Minor updates to “About” text, e.g., explaining nature of stochastic results. Edits to immune_submodels.cpp (see details in the core model repository).
Version 3.2 (released July 21, 2020):
GitHub: https://github.com/pc4COVID-19/pc4COVID-19/tree/v3.2
Zenodo: http://doi.org/10.5281/zenodo.3954019
nanoHUB DOI: http://dx.doi.org/doi:10.21981/843E-JE78
Notes: Update to use core model 0.3.2

Appendix 2: Organoid platform details
Aarthi Narayanan’s virology lab is optimizing SARS-CoV-2 cultures in organoid model systems. The viral replication kinetics will be assessed by infection of different lung epithelial, fibroblast and endothelial cells, in addition
to standard cell lines such as Vero cells, which are one of the cell lines in use for inhibitor assessment studies.
Primary cells and/or cell lines will be infected with SARS-CoV-2 at increasing multiplicities of infection (MOI) and
infectious viral titers in the supernatants assessed by plaque assays at multiple time points post infection (pi).
This will stretch from ~3 hours post infection (phi) to 48 hpi depending on the cell type and the MOI.
In parallel, the viral genomic copy numbers will be assessed in the same supernatant samples by qRT-PCR with
virus specific primers. This will provide information on how the production of infectious virions compares with the
number of genomic copies available outside the cell. If the numbers are skewed in the direction of genomic
copies (which may happen in the context of some kinds of inhibitors), it will shed light on the mechanisms of
inhibition involving inhibition of infectivity of progeny virions.
The viral genomic copy numbers inside the cells will also be assessed by qRT-PCR and compared to the genomic copies outside the cell. This will provide direction on the efficacy of particle packaging and the extent of
45

bioRxiv preprint doi: https://doi.org/10.1101/2020.04.02.019075; this version posted July 29, 2020. The copyright holder for this preprint (which
was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made
available under aCC-BY 4.0 International license.

production of infectious versus noninfectious virus. While it will not provide directly pertinent information about
the possibility of heterogeneity of released virus populations and quasispecies, it can provide initial clues in that
direction, which can then trigger more specific questions and relevant approaches. These approaches will be
pursued for cell lines, primary cells and, hopefully, subsequently transitioned to organoid platforms.
From a host response point of view, we will pursue two aspects: host cell death and inflammatory responses.
For cell survival and death measurements, we will employ an assay that measures ATP activity in cells (hence
a reflection of a live cell) in the context of infection and inhibitor treatments. For inflammatory responses, we will
assess supernatants for inflammatory mediators by ELISA (multiplexed). The cells will be lysed to obtain RNA,
which will be queried for transcription of several genes associated with inflammatory responses using gene expression arrays (multiplexed).
Additional host response events will include mitochondrial activity and ROS production assessments in the context of infection and inhibitor treatments. The impact of anti-inflammatory strategies on mitochondrial activity and
cell survival will be assessed to determine correlations between viral replication dependent and independent
events.

Appendix 3: Overall design cycle development details
In each prototyping or design cycle:
1. The core team sets priorities for the design iteration:
a. Discuss feedback and identify highest priority model refinements.
b. Collaborate to update the submodel design documents to address feedback.
c. Update the overall model design document as needed.
d. Assess new data to refine parameter estimates.
e. Refine submodel input/output formats as necessary.
f. Assess next release dates for the submodels.
2. Submodel teams meet to refine their code and put out their next releases. The chief scientists communicate releases to the overall leads.
3. The integration team integrates the latest submodel releases into a new release candidate for the overall
model.
a. Address any bug reports.
b. Test new or altered functions.
c. Satisfy all qualitative and/or quantitative unit tests.
d. Qualitatively test the model for new or improved behaviors over the last iteration.
4. The integration team prepares a software release:
a. Update documentation.
b. Create a new numbered release on GitHub.
c. Update list of available validation data and best parameter estimates.
d. Create a Zenodo snapshot.
e. Announce on Twitter (via @PhysiCell, @MathCancer, and @SMB_imin).
5. The integration team updates the cloud-hosted model for multidisciplinary testing:
a. Update the nanoHUB app repository with new code.
b. Run xml2jupyter to update the Jupyter interface.
c. Update project on nanoHUB, test/refine until successful release.
d. Update documentation, numbered GitHub release, Zenodo snapshot of deployed model.
e. Perform live demos with domain experts and community to gather feedback.
6. The whole team seeks additional community feedback via Twitter and the pc4COVID-19 Slack workspace. The team integrates comments received from scientific peer review as appropriate.
46

bioRxiv preprint doi: https://doi.org/10.1101/2020.04.02.019075; this version posted July 29, 2020. The copyright holder for this preprint (which
was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made
available under aCC-BY 4.0 International license.

7. The core team evaluates progress:
a. Distill feedback to assess the need for new model hypotheses, behaviors, or components.
b. Assess which biological behaviors are currently exhibited by the model.
c. Refine the design protocol (e.g., with refined model specification methods) as necessary.
d. Assess the need for an additional design iteration.
8. Update preprint for scientific dissemination. Return to Step 1 if there is substantial feedback, or if the core
team determines that further refinements are within project scope.

Appendix 4: Submodel development details
In each software sprint, each submodel team will
1. Set priorities for the design iteration:
a. Discuss feedback and identify highest priority model refinements.
b. Refine model assumptions and hypotheses.
c. Assess new data to refine parameter estimates.
2. “Translate” biological hypotheses into agent model rules and other mathematical model components:
a. Run the new hypotheses and rules by domain experts as their time permits.
b. Define new qualitative and/or quantitative unit tests for new behaviors and functions.
c. Assign implementation tasks.
3. Perform computational implementation of refined mathematical model (and submodels):
a. Address any bug reports.
b. Add or modify functions based on new rules in steps 1-2.
c. Test new or altered functions.
d. Satisfy all qualitative and/or quantitative unit tests.
e. Qualitatively test the model for new or improved behaviors over the last iteration.
4. Create a software release:
a. Update documentation.
b. Create a new numbered release on GitHub.
c. Update list of available validation data and best parameter estimates.
d. Create a Zenodo snapshot.
e. Communicate with the core team on the software release.
5. Create a cloud-hosted submodel for multidisciplinary testing:
a. Update the nanoHUB app repository with new code.
b. Run xml2jupyter to update the Jupyter interface.
c. Update project on nanoHUB, test/refine until successful release.
d. Update documentation, numbered GitHub release, and Zenodo snapshot of deployed model.
e. Perform live demos with the core team as needed.
While waiting for the start of the next software sprint, each submodel team will
1. Perform model evaluation:
a. Distill feedback to assess the need for new model hypotheses, behaviors, or components.
b. Assess which biological behaviors are currently exhibited by the model.
c. Refine the design protocol (e.g., with refined model specification methods) as necessary.
d. Assess the need for an additional design iteration.
2. Help update the preprint for scientific dissemination.
In the next software sprint, return to Step 1 if there is substantial feedback, or if the core team determines that
further refinements are within project scope.
47

bioRxiv preprint doi: https://doi.org/10.1101/2020.04.02.019075; this version posted July 29, 2020. The copyright holder for this preprint (which
was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made
available under aCC-BY 4.0 International license.

References
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23

Dong, E., Du, H. & Gardner, L. An interactive web-based dashboard to track COVID-19 in real time. The
Lancet Infectious Diseases, doi:10.1016/s1473-3099(20)30120-1 (2020).
Rozenblatt-Rosen, O. et al. The Human Tumor Atlas Network: Charting Tumor Transitions across Space
and Time at Single-Cell Resolution. Cell 181, 236-249, doi:10.1016/j.cell.2020.03.053 (2020).
Zhou, P. et al. A pneumonia outbreak associated with a new coronavirus of probable bat origin. Nature
579, 270-273, doi:10.1038/s41586-020-2012-7 (2020).
Bouadma, L., Lescure, F.-X., Lucet, J.-C., Yazdanpanah, Y. & Timsit, J.-F. Severe SARS-CoV-2
infections: practical considerations and management strategy for intensivists. Intensive Care Medicine
46, 579-582, doi:10.1007/s00134-020-05967-x (2020).
Yang, X. et al. Clinical course and outcomes of critically ill patients with SARS-CoV-2 pneumonia in
Wuhan, China: a single-centered, retrospective, observational study. The Lancet Respiratory Medicine,
doi:10.1016/s2213-2600(20)30079-5 (2020).
Zhou, F. et al. Clinical course and risk factors for mortality of adult inpatients with COVID-19 in Wuhan,
China: a retrospective cohort study. The Lancet 395, 1054-1062, doi:10.1016/s0140-6736(20)30566-3
(2020).
Zhang, J.-j. et al. Clinical characteristics of 140 patients infected with SARS‐CoV‐2 in Wuhan, China.
Allergy, doi:10.1111/all.14238 (2020).
Liang, W. et al. Cancer patients in SARS-CoV-2 infection: a nationwide analysis in China. The Lancet
Oncology 21, 335-337, doi:10.1016/s1470-2045(20)30096-6 (2020).
Macklin, P. When Seeing Isn't Believing: How Math Can Guide Our Interpretation of Measurements and
Experiments. Cell Systems 5, 92-94, doi:10.1016/j.cels.2017.08.005 (2017).
Macklin, P. Key challenges facing data-driven multicellular systems biology. GigaScience 8,
doi:10.1093/gigascience/giz127 (2019).
Wrapp, D. et al. Cryo-EM structure of the 2019-nCoV spike in the prefusion conformation. Science 367,
1260-1263, doi:10.1126/science.abb2507 (2020).
Hoffmann, M. et al. SARS-CoV-2 Cell Entry Depends on ACE2 and TMPRSS2 and Is Blocked by a
Clinically Proven Protease Inhibitor. Cell 181, 271-280.e278, doi:10.1016/j.cell.2020.02.052 (2020).
Sahin, A. R. 2019 Novel Coronavirus (COVID-19) Outbreak: A Review of the Current Literature. Eurasian
Journal of Medicine and Oncology, doi:10.14744/ejmo.2020.12220 (2020).
White, K. A., Enjuanes, L. & Berkhout, B. RNA virus replication, transcription and recombination. RNA
Biology 8, 182-183, doi:10.4161/rna.8.2.15663 (2014).
Stark, G. R., Kerr, I. M., Williams, B. R. G., Silverman, R. H. & Schreiber, R. D. How Cells Respond to
Interferons. Annual Review of Biochemistry 67, 227-264, doi:10.1146/annurev.biochem.67.1.227 (1998).
Perry, A. K., Chen, G., Zheng, D., Tang, H. & Cheng, G. The host type I interferon response to viral and
bacterial infections. Cell Research 15, 407-422, doi:10.1038/sj.cr.7290309 (2005).
Spiegel, M. et al. Inhibition of Beta Interferon Induction by Severe Acute Respiratory Syndrome
Coronavirus Suggests a Two-Step Model for Activation of Interferon Regulatory Factor 3. Journal of
Virology 79, 2079-2086, doi:10.1128/jvi.79.4.2079-2086.2005 (2005).
Hale, B. G., Randall, R. E., Ortín, J. & Jackson, D. The multifunctional NS1 protein of influenza A viruses.
Journal of General Virology 89, 2359-2376, doi:10.1099/vir.0.2008/004606-0 (2008).
Danthi, P. Viruses and the Diversity of Cell Death. Annual Review of Virology 3, 533-553,
doi:10.1146/annurev-virology-110615-042435 (2016).
Yue, Y. et al. SARS-Coronavirus Open Reading Frame-3a drives multimodal necrotic cell death. Cell
Death & Disease 9, doi:10.1038/s41419-018-0917-y (2018).
Keck, F. et al. Altered mitochondrial dynamics as a consequence of Venezuelan Equine encephalitis
virus infection. Virulence 8, 1849-1866, doi:10.1080/21505594.2016.1276690 (2017).
Keck, F. et al. Mitochondrial-Directed Antioxidant Reduces Microglial-Induced Inflammation in Murine In
Vitro Model of TC-83 Infection. Viruses 10, doi:10.3390/v10110606 (2018).
Thiel, V. et al. Lack of Innate Interferon Responses during SARS Coronavirus Infection in a Vaccination
and Reinfection Ferret Model. PLoS ONE 7, e45842, doi:10.1371/journal.pone.0045842 (2012).
48

bioRxiv preprint doi: https://doi.org/10.1101/2020.04.02.019075; this version posted July 29, 2020. The copyright holder for this preprint (which
was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made
available under aCC-BY 4.0 International license.

24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45

Widagdo, W., Okba, N. M. A., Stalin Raj, V. & Haagmans, B. L. MERS-coronavirus: From discovery to
intervention. One Health 3, 11-16, doi:10.1016/j.onehlt.2016.12.001 (2017).
Channappanavar, R. et al. Dysregulated Type I Interferon and Inflammatory Monocyte-Macrophage
Responses Cause Lethal Pneumonia in SARS-CoV-Infected Mice. Cell Host & Microbe 19, 181-193,
doi:10.1016/j.chom.2016.01.007 (2016).
Channappanavar, R. et al. IFN-I response timing relative to virus replication determines MERS
coronavirus infection outcomes. Journal of Clinical Investigation 129, 3625-3639, doi:10.1172/jci126363
(2019).
Al-Hazmi, A. Challenges presented by MERS corona virus, and SARS corona virus to global health.
Saudi Journal of Biological Sciences 23, 507-511, doi:10.1016/j.sjbs.2016.02.019 (2016).
Yuen, K.-Y. et al. Comparative replication and immune activation profiles of SARS-CoV-2 and SARSCoV in human lungs: an ex vivo study with implications for the pathogenesis of COVID-19. Clinical
Infectious Diseases, doi:10.1093/cid/ciaa410 (2020).
Qin, C. et al. Dysregulation of Immune Response in Patients with COVID-19 in Wuhan, China. SSRN
Electronic Journal, doi:10.2139/ssrn.3541136 (2020).
Jamilloux, Y. et al. Should we stimulate or suppress immune responses in COVID-19? Cytokine and anticytokine interventions. Autoimmunity Reviews 19, 102567, doi:10.1016/j.autrev.2020.102567 (2020).
Prompetchara, E., Ketloy, C. & Palaga, T. Immune responses in COVID-19 and potential vaccines:
Lessons learned from SARS and MERS epidemic. Asian Pacific Journal of Allergy and Immunology,
doi:10.12932/ap-200220-0772 (2020).
Channappanavar, R. & Perlman, S. Pathogenic human coronavirus infections: causes and
consequences of cytokine storm and immunopathology. Seminars in Immunopathology 39, 529-539,
doi:10.1007/s00281-017-0629-x (2017).
Nahrendorf, M., Pittet, M. J. & Swirski, F. K. Monocytes: Protagonists of Infarct Inflammation and Repair
After Myocardial Infarction. Circulation 121, 2437-2445, doi:10.1161/circulationaha.109.916346 (2010).
Fung, S.-Y., Yuen, K.-S., Ye, Z.-W., Chan, C.-P. & Jin, D.-Y. A tug-of-war between severe acute
respiratory syndrome coronavirus 2 and host antiviral defence: lessons from other pathogenic viruses.
Emerging Microbes & Infections 9, 558-570, doi:10.1080/22221751.2020.1736644 (2020).
Siu, K. L. et al. Severe acute respiratory syndrome Coronavirus ORF3a protein activates the NLRP3
inflammasome by promoting TRAF3‐dependent ubiquitination of ASC. The FASEB Journal 33, 88658877, doi:10.1096/fj.201802418R (2019).
Chen, I. Y., Moriyama, M., Chang, M.-F. & Ichinohe, T. Severe Acute Respiratory Syndrome Coronavirus
Viroporin 3a Activates the NLRP3 Inflammasome.
Frontiers in Microbiology 10,
doi:10.3389/fmicb.2019.00050 (2019).
Camp, J. V. & Jonsson, C. B. A Role for Neutrophils in Viral Respiratory Disease. Frontiers in Immunology
8, doi:10.3389/fimmu.2017.00550 (2017).
Weitnauer, M., Mijošek, V. & Dalpke, A. H. Control of local immunity by airway epithelial cells. Mucosal
Immunology 9, 287-298, doi:10.1038/mi.2015.126 (2015).
Crane, M. J., Lee, K. M., FitzGerald, E. S. & Jamieson, A. M. Surviving Deadly Lung Infections: Innate
Host Tolerance Mechanisms in the Pulmonary System. Frontiers in Immunology 9,
doi:10.3389/fimmu.2018.01421 (2018).
Teijaro, John R. et al. Endothelial Cells Are Central Orchestrators of Cytokine Amplification during
Influenza Virus Infection. Cell 146, 980-991, doi:10.1016/j.cell.2011.08.015 (2011).
Liu, J. et al., doi:10.1101/2020.02.16.20023671 (2020).
Liu, J. et al., doi:10.1101/2020.02.10.20021584 (2020).
Shokri, S., Mahmoudvand, S., Taherkhani, R. & Farshadpour, F. Modulation of the immune response by
Middle East respiratory syndrome coronavirus. Journal of Cellular Physiology 234, 2143-2151,
doi:10.1002/jcp.27155 (2018).
Kong, W. p. et al. Modulation of the Immune Response to the Severe Acute Respiratory Syndrome Spike
Glycoprotein by Gene-Based and Inactivated Virus Immunization. Journal of Virology 79, 13915-13923,
doi:10.1128/jvi.79.22.13915-13923.2005 (2005).
Cruz, J. L. G. et al. Alphacoronavirus Protein 7 Modulates Host Innate Immune Response. Journal of
Virology 87, 9754-9767, doi:10.1128/jvi.01032-13 (2013).
49

bioRxiv preprint doi: https://doi.org/10.1101/2020.04.02.019075; this version posted July 29, 2020. The copyright holder for this preprint (which
was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made
available under aCC-BY 4.0 International license.

46
47
48
49
50
51
52
53
54

55
56
57
58
59
60
61
62
63
64
65
66
67
68

Liu, L. et al. Anti–spike IgG causes severe acute lung injury by skewing macrophage responses during
acute SARS-CoV infection. JCI Insight 4, doi:10.1172/jci.insight.123158 (2019).
Leong, A. S. Y. et al. Multiple organ infection and the pathogenesis of SARS. Journal of Experimental
Medicine 202, 415-424, doi:10.1084/jem.20050828 (2005).
Yang, P. et al. Angiotensin-converting enzyme 2 (ACE2) mediates influenza H7N9 virus-induced acute
lung injury. Scientific Reports 4, doi:10.1038/srep07027 (2014).
Kuba, K. et al. A crucial role of angiotensin converting enzyme 2 (ACE2) in SARS coronavirus–induced
lung injury. Nature Medicine 11, 875-879, doi:10.1038/nm1267 (2005).
Madjid, M., Safavi-Naeini, P., Solomon, S. D. & Vardeny, O. Potential Effects of Coronaviruses on the
Cardiovascular System: A Review. JAMA Cardiol, doi:10.1001/jamacardio.2020.1286 (2020).
Wadman, M., Couzin-Frankel, J., Kaiser, J. & Matacic, C. A rampage through the body. Science 368,
356-360, doi:10.1126/science.368.6489.356 (2020).
Stebbing, J. et al. COVID-19: combining antiviral and anti-inflammatory treatments. The Lancet Infectious
Diseases 20, 400-402, doi:10.1016/s1473-3099(20)30132-8 (2020).
Herold, T. et al., doi:10.1101/2020.04.01.20047381 (2020).
Zhang, C., Wu, Z., Li, J.-W., Zhao, H. & Wang, G.-Q. The cytokine release syndrome (CRS) of severe
COVID-19 and Interleukin-6 receptor (IL-6R) antagonist Tocilizumab may be the key to reduce the
mortality. International Journal of Antimicrobial Agents, 105954, doi:10.1016/j.ijantimicag.2020.105954
(2020).
Schett, G., Sticherling, M. & Neurath, M. F. COVID-19: risk for cytokine targeting in chronic inflammatory
diseases? Nature Reviews Immunology, doi:10.1038/s41577-020-0312-7 (2020).
Sanders, C. J. et al. Compromised respiratory function in lethal influenza infection is characterized by the
depletion of type I alveolar epithelial cells beyond threshold levels. American Journal of Physiology-Lung
Cellular and Molecular Physiology 304, L481-L488, doi:10.1152/ajplung.00343.2012 (2013).
Allen, R. J., Rieger, T. R. & Musante, C. J. Efficient Generation and Selection of Virtual Populations in
Quantitative Systems Pharmacology Models. CPT: Pharmacometrics & Systems Pharmacology 5, 140146, doi:10.1002/psp4.12063 (2016).
Cassidy, T. & Craig, M. Determinants of combination GM-CSF immunotherapy and oncolytic virotherapy
success identified through in silico treatment personalization. PLOS Computational Biology 15,
doi:10.1371/journal.pcbi.1007495 (2019).
Nowak, M. et al. Antigenic diversity thresholds and the development of AIDS. Science 254, 963-969,
doi:10.1126/science.1683006 (1991).
Wei, X. et al. Viral dynamics in human immunodeficiency virus type 1 infection. Nature 373, 117-122,
doi:10.1038/373117a0 (1995).
Rosenbloom, D. I. S., Hill, A. L., Laskey, S. B. & Siliciano, R. F. Re-evaluating evolution in the HIV
reservoir. Nature 551, E6-E9, doi:10.1038/nature24634 (2017).
Reeves, D. B. et al. A majority of HIV persistence during antiretroviral therapy is due to infected cell
proliferation. Nature Communications 9, doi:10.1038/s41467-018-06843-5 (2018).
Koelle, K., Farrell, A. P., Brooke, C. B. & Ke, R. Within-host infectious disease models accommodating
cellular coinfection, with an application to influenza†. Virus Evolution 5, doi:10.1093/ve/vez018 (2019).
Perelson, A. S., Neumann, A. U., Markowitz, M., Leonard, J. M. & Ho, D. D. HIV-1 Dynamics in Vivo:
Virion Clearance Rate, Infected Cell Life-Span, and Viral Generation Time. Science 271, 1582-1586,
doi:10.1126/science.271.5255.1582 (1996).
Smith, A. M. & Ribeiro, R. M. Modeling the Viral Dynamics of Influenza A Virus Infection. Critical
Reviews™ in Immunology 30, 291-298, doi:10.1615/CritRevImmunol.v30.i3.60 (2010).
Smith, A. M. & Perelson, A. S. Influenza A virus infection kinetics: quantitative data and models. Wiley
Interdisciplinary Reviews: Systems Biology and Medicine 3, 429-445, doi:10.1002/wsbm.129 (2011).
Smith, A. M., McCullers, J. A. & Adler, F. R. Mathematical model of a three-stage innate immune
response to a pneumococcal lung infection. Journal of Theoretical Biology 276, 106-116,
doi:10.1016/j.jtbi.2011.01.052 (2011).
Bonhoeffer, S., May, R. M., Shaw, G. M. & Nowak, M. A. Virus dynamics and drug therapy. Proceedings
of the National Academy of Sciences 94, 6971-6976, doi:10.1073/pnas.94.13.6971 (1997).
50

bioRxiv preprint doi: https://doi.org/10.1101/2020.04.02.019075; this version posted July 29, 2020. The copyright holder for this preprint (which
was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made
available under aCC-BY 4.0 International license.

69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89

Hill, A. L., Rosenbloom, D. I. S., Fu, F., Nowak, M. A. & Siliciano, R. F. Predicting the outcomes of
treatment to eradicate the latent reservoir for HIV-1. Proceedings of the National Academy of Sciences
111, 13475-13480, doi:10.1073/pnas.1406663111 (2014).
Rosenbloom, D. I. S., Hill, A. L., Rabi, S. A., Siliciano, R. F. & Nowak, M. A. Antiretroviral dynamics
determines HIV evolution and predicts therapy outcome. Nature Medicine 18, 1378-1385,
doi:10.1038/nm.2892 (2012).
Mueller, S. N. et al. Mathematical Modeling Predicts that Increased HSV-2 Shedding in HIV-1 Infected
Persons Is Due to Poor Immunologic Control in Ganglia and Genital Mucosa. Plos One 11, e0155124,
doi:10.1371/journal.pone.0155124 (2016).
Perelson, A. S. et al. Decay characteristics of HIV-1-infected compartments during combination therapy.
Nature 387, 188-191, doi:10.1038/387188a0 (1997).
Kirtane, A. R. et al. Development of an oral once-weekly drug delivery system for HIV antiretroviral
therapy. Nature Communications 9, doi:10.1038/s41467-017-02294-6 (2018).
Schiffer, J. T. & Gottlieb, S. L. Biologic interactions between HSV-2 and HIV-1 and possible implications
for HSV vaccine development. Vaccine 37, 7363-7371, doi:10.1016/j.vaccine.2017.09.044 (2019).
Schiffer, J. T. et al. Mathematical modeling of herpes simplex virus-2 suppression with pritelivir predicts
trial
outcomes.
Science
Translational
Medicine
8,
324ra315-324ra315,
doi:10.1126/scitranslmed.aad6654 (2016).
Perelson, A. S. Modelling viral and immune system dynamics. Nature Reviews Immunology 2, 28-36,
doi:10.1038/nri700 (2002).
Hill, A. L., Rosenbloom, D. I. S., Nowak, M. A. & Siliciano, R. F. Insight into treatment of HIV infection
from viral dynamics models. Immunological Reviews 285, 9-25, doi:10.1111/imr.12698 (2018).
Wang, Y., Zhou, Y., Brauer, F. & Heffernan, J. M. Viral dynamics model with CTL immune response
incorporating antiretroviral therapy. Journal of Mathematical Biology 67, 901-934, doi:10.1007/s00285012-0580-3 (2012).
Schiffer, J. T. & Corey, L. Rapid host immune response and viral dynamics in herpes simplex virus-2
infection. Nature Medicine 19, 280-288, doi:10.1038/nm.3103 (2013).
Jenner, A. L., Yun, C.-O., Kim, P. S. & Coster, A. C. F. Mathematical Modelling of the Interaction Between
Cancer Cells and an Oncolytic Virus: Insights into the Effects of Treatment Protocols. Bulletin of
Mathematical Biology 80, 1615-1629, doi:10.1007/s11538-018-0424-4 (2018).
Möhler, L., Flockerzi, D., Sann, H. & Reichl, U. Mathematical model of influenza A virus production in
large-scale microcarrier culture. Biotechnology and Bioengineering 90, 46-58, doi:10.1002/bit.20363
(2005).
Schulze-Horsel, J., Schulze, M., Agalaridis, G., Genzel, Y. & Reichl, U. Infection dynamics and virusinduced apoptosis in cell culture-based influenza vaccine production—Flow cytometry and mathematical
modeling. Vaccine 27, 2712-2722, doi:10.1016/j.vaccine.2009.02.027 (2009).
Banks, H. T., Bortz, D. M. & Holte, S. E. Incorporation of variability into the modeling of viral delays in
HIV infection dynamics. Mathematical Biosciences 183, 63-91, doi:10.1016/s0025-5564(02)00218-3
(2003).
Culshaw, R. V., Ruan, S. & Webb, G. A mathematical model of cell-to-cell spread of HIV-1 that includes
a time delay. Journal of Mathematical Biology 46, 425-444, doi:10.1007/s00285-002-0191-5 (2003).
Li, M. Y. & Shu, H. Impact of Intracellular Delays and Target-Cell Dynamics on In Vivo Viral Infections.
SIAM Journal on Applied Mathematics 70, 2434-2448, doi:10.1137/090779322 (2010).
Smith, A. M. Validated models of immune response to virus infection. Current Opinion in Systems Biology
12, 46-52, doi:10.1016/j.coisb.2018.10.005 (2018).
Smith, A. M. Host-pathogen kinetics during influenza infection and coinfection: insights from predictive
modeling. Immunological Reviews 285, 97-112, doi:10.1111/imr.12692 (2018).
Guedj, J. et al. Modeling shows that the NS5A inhibitor daclatasvir has two modes of action and yields a
shorter estimate of the hepatitis C virus half-life. Proceedings of the National Academy of Sciences 110,
3991-3996, doi:10.1073/pnas.1203110110 (2013).
Heldt, F. S., Frensing, T. & Reichl, U. Modeling the Intracellular Dynamics of Influenza Virus Replication
To Understand the Control of Viral RNA Synthesis. Journal of Virology 86, 7806-7817,
doi:10.1128/jvi.00080-12 (2012).
51

bioRxiv preprint doi: https://doi.org/10.1101/2020.04.02.019075; this version posted July 29, 2020. The copyright holder for this preprint (which
was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made
available under aCC-BY 4.0 International license.

90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111

Sidorenko, Y. & Reichl, U. Structured model of influenza virus replication in MDCK cells. Biotechnology
and Bioengineering 88, 1-14, doi:10.1002/bit.20096 (2004).
Fachada, N., Lopes, V. V. & Rosa, A. Simulating antigenic drift and shift in influenza A. 2093,
doi:10.1145/1529282.1529744 (2009).
Levin, D. et al. A spatial model of the efficiency of T cell search in the influenza-infected lung. Journal of
Theoretical Biology 398, 52-63, doi:10.1016/j.jtbi.2016.02.022 (2016).
Beauchemin, C., Samuel, J. & Tuszynski, J. A simple cellular automaton model for influenza A viral
infections. Journal of Theoretical Biology 232, 223-234, doi:10.1016/j.jtbi.2004.08.001 (2005).
Beauchemin, C. Probing the effects of the well-mixed assumption on viral infection dynamics. Journal of
Theoretical Biology 242, 464-477, doi:10.1016/j.jtbi.2006.03.014 (2006).
Beauchemin, C., Forrest, S. & Koster, F. T. Modeling Influenza Viral Dynamics in Tissue. 4163, 23-36,
doi:10.1007/11823940_3 (2006).
Akpinar, F., Inankur, B., Yin, J. & Lyles, D. S. Spatial-Temporal Patterns of Viral Amplification and
Interference Initiated by a Single Infected Cell. Journal of Virology 90, 7552-7566, doi:10.1128/jvi.0080716 (2016).
Bauer, A. L., Beauchemin, C. A. A. & Perelson, A. S. Agent-based modeling of host–pathogen systems:
The successes and challenges. Information Sciences 179, 1379-1389, doi:10.1016/j.ins.2008.11.012
(2009).
Medyukhina, A., Timme, S., Mokhtari, Z. & Figge, M. T. Image-based systems biology of infection.
Cytometry Part A 87, 462-470, doi:10.1002/cyto.a.22638 (2015).
Bankhead, A. et al. A simulation framework to investigate in vitro viral infection dynamics. Journal of
Computational Science 4, 127-134, doi:10.1016/j.jocs.2011.08.007 (2013).
Wilke, C. O. et al. Complex Spatial Dynamics of Oncolytic Viruses In Vitro: Mathematical and
Experimental Approaches. PLoS Computational Biology 8, e1002547, doi:10.1371/journal.pcbi.1002547
(2012).
Sun, G.-Q. et al. Spatiotemporal Dynamics of Virus Infection Spreading in Tissues. Plos One 11,
e0168576, doi:10.1371/journal.pone.0168576 (2016).
Jenner, A. L., Frascoli, F., Coster, A. C. F. & Kim, P. S. Enhancing oncolytic virotherapy: Observations
from a Voronoi Cell-Based model. Journal of Theoretical Biology 485, 110052,
doi:10.1016/j.jtbi.2019.110052 (2020).
Quintela, B. M. et al. An Age-based Multiscale Mathematical Model of the Hepatitis C Virus Life-cycle
During Infection and Therapy: Including Translation and Replication. 60, 508-511, doi:10.1007/978-98110-4086-3_128 (2017).
An, G. Agent-based computer simulation and sirs: building a bridge between basic science and clinical
trials. Shock 16, 266-273, doi:10.1097/00024382-200116040-00006 (2001).
An, G. In silico experiments of existing and hypothetical cytokine-directed clinical trials using agent-based
modeling*. Critical Care Medicine 32, 2050-2060, doi:10.1097/01.ccm.0000139707.13729.7d (2004).
Hunt, C. A., Cockrell, R. C. & An, G. Examining the controllability of sepsis using genetic algorithms on
an agent-based model of systemic inflammation. PLOS Computational Biology 14, e1005876,
doi:10.1371/journal.pcbi.1005876 (2018).
Petersen, B. K. et al. Deep Reinforcement Learning and Simulation as a Path Toward Precision Medicine.
Journal of Computational Biology 26, 597-604, doi:10.1089/cmb.2018.0168 (2019).
An, G. Introduction of an agent-based multi-scale modular architecture for dynamic knowledge
representation of acute inflammation. Theoretical Biology and Medical Modelling 5, doi:10.1186/17424682-5-11 (2008).
Ghaffarizadeh, A., Heiland, R., Friedman, S. H., Mumenthaler, S. M. & Macklin, P. PhysiCell: An open
source physics-based cell simulator for 3-D multicellular systems. PLoS Comput Biol 14, e1005991,
doi:10.1371/journal.pcbi.1005991 (2018).
Cooper, F. et al. Chaste: Cancer, Heart and Soft Tissue Environment. Journal of Open Source Software
5, 1848, doi:10.21105/joss.01848 (2020).
Prlic, A. et al. Chaste: An Open Source C++ Library for Computational Physiology and Biology. PLoS
Computational Biology 9, e1002970, doi:10.1371/journal.pcbi.1002970 (2013).
52

bioRxiv preprint doi: https://doi.org/10.1101/2020.04.02.019075; this version posted July 29, 2020. The copyright holder for this preprint (which
was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made
available under aCC-BY 4.0 International license.

112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134

Starruß, J., de Back, W., Brusch, L. & Deutsch, A. Morpheus: a user-friendly modeling environment for
multiscale
and
multicellular
systems
biology.
Bioinformatics
30,
1331-1332,
doi:10.1093/bioinformatics/btt772 (2014).
Sego, T. J. et al. A Modular Framework for Multiscale Spatial Modeling of Viral Infection and Immune
Response in Epithelial Tissue. bioRxiv, 2020.2004.2027.064139, doi:10.1101/2020.04.27.064139
(2020).
Kang, S., Kahan, S., McDermott, J., Flann, N. & Shmulevich, I. Biocellion: accelerating computer
simulation of multicellular biological system models. Bioinformatics 30, 3101-3108,
doi:10.1093/bioinformatics/btu498 (2014).
Hillen, T. COVID-19 Physiology Group, <https://sites.google.com/ualberta.ca/cov-pg/home> (2020).
COVID-19 Cell Atlas, <https://www.covid19cellatlas.org/> (2020).
Ostaszewski, M. et al. COVID-19 Disease Map, building a computational repository of SARS-CoV-2
virus-host interaction mechanisms. Scientific Data 7, doi:10.1038/s41597-020-0477-8 (2020).
Hu, B. C. The human body at cellular resolution: the NIH Human Biomolecular Atlas Program. Nature
574, 187-192, doi:10.1038/s41586-019-1629-x (2019).
Metzcar, J., Wang, Y., Heiland, R. & Macklin, P. A Review of Cell-Based Computational Modeling in
Cancer Biology. JCO Clin Cancer Inform 3, 1-13, doi:10.1200/CCI.18.00069 (2019).
Ghaffarizadeh, A., Friedman, S. H. & Macklin, P. BioFVM: an efficient, parallelized diffusive transport
solver for 3-D biological simulations. Bioinformatics 32, 1256-1258, doi:10.1093/bioinformatics/btv730
(2016).
Wang, Y., Heiland, R. & Macklin, P. pc4nanobio: cancer nanotherapy simulator [nanoHUB app, Version
0.9.1], <https://nanohub.org/resources/pc4nanobio> (2019).
Jenner, A. L. Replication Competent Oncolytic Virus expressing secretable trimeric TRAIL: hypothesis
testing [nanoHUB app, Version 0.3], <https://nanohub.org/resources/iu399sp19p101> (2019).
Wang, Y., Heiland, R. & Macklin, P. Physicell: liver tissue mechanobiology [nanoHUB app, Version 1.2],
<https://nanohub.org/resources/pc4livermedium> (2019).
Ozik, J. et al. High-throughput cancer hypothesis testing with an integrated PhysiCell-EMEWS workflow.
BMC Bioinformatics 19, 483, doi:10.1186/s12859-018-2510-x (2018).
Ozik, J., Collier, N., Heiland, R., An, G. & Macklin, P. Learning-accelerated discovery of immune-tumour
interactions. Mol Syst Des Eng 4, 747-760, doi:10.1039/c9me00036d (2019).
Wang, Y. et al. Rapid community-driven development of a SARS-CoV-2 tissue simulator. bioRxiv,
10.1101/2020.1104.1102.019075, doi:10.1101/2020.04.02.019075 (2020).
Hucka, M. et al. The systems biology markup language (SBML): a medium for representation and
exchange of biochemical network models. Bioinformatics 19, 524-531, doi:10.1093/bioinformatics/btg015
(2003).
Somogyi, E. T. et al. libRoadRunner: a high performance SBML simulation and analysis library.
Bioinformatics 31, 3315-3321, doi:10.1093/bioinformatics/btv363 (2015).
Stoll, G. et al. MaBoSS 2.0: an environment for stochastic Boolean modeling. Bioinformatics 33, 22262228, doi:10.1093/bioinformatics/btx123 (2017).
Letort, G. et al. PhysiBoSS: a multi-scale agent-based modelling framework integrating physical
dimension and cell signalling. Bioinformatics 35, 1188-1196, doi:10.1093/bioinformatics/bty766 (2019).
Cockrell, C. & An, G. Sepsis reconsidered: Identifying novel metrics for behavioral landscape
characterization with a high-performance computing implementation of an agent-based model. J Theor
Biol 430, 157-168, doi:10.1016/j.jtbi.2017.07.016 (2017).
Cockrell, R. C. & An, G. Examining the controllability of sepsis using genetic algorithms on an agentbased model of systemic inflammation. PLOS Computational Biology 14, e1005876,
doi:10.1371/journal.pcbi.1005876 (2018).
Ozik, J., Collier, N. T., Wozniak, J. M. & Spagnuolo, C. in 2016 Winter Simulation Conference (WSC)
206-220 (2016).
Ozik, J., Collier, N. T., Wozniak, J. M., Macal, C. M. & An, G. Extreme-Scale Dynamic Exploration of a
Distributed Agent-Based Model With the EMEWS Framework. IEEE Transactions on Computational
Social Systems 5, 884-895, doi:10.1109/tcss.2018.2859189 (2018).
53

bioRxiv preprint doi: https://doi.org/10.1101/2020.04.02.019075; this version posted July 29, 2020. The copyright holder for this preprint (which
was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made
available under aCC-BY 4.0 International license.

135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158

Wozniak, J. M. et al. CANDLE/Supervisor: a workflow framework for machine learning applied to cancer
research. BMC Bioinformatics 19, doi:10.1186/s12859-018-2508-4 (2018).
Khanna, A. S. et al. A modeling framework to inform preexposure prophylaxis initiation and retention
scale-up in the context
of
‘Getting to Zero’ initiatives.
Aids 33, 1911-1922,
doi:10.1097/qad.0000000000002290 (2019).
Tatara, E. et al. in 2019 Winter Simulation Conference (WSC) 1008-1019 (2019).
Rutter, C. M., Ozik, J., DeYoreo, M. & Collier, N. Microsimulation model calibration using incremental
mixture approximate Bayesian computation. The Annals of Applied Statistics 13, 2189-2212,
doi:10.1214/19-aoas1279 (2019).
Madhavan, K. et al. nanoHUB.org: cloud-based services for nanoscale modeling, simulation, and
education. Nanotechnology Reviews 2, doi:10.1515/ntrev-2012-0043 (2013).
Kluyver, T. et al. in ELPUB. 87-90.
Friedman, S. H. et al. MultiCellDS: a community-developed standard for curating microenvironmentdependent multicellular data [Preprint]. bioRxiv 090456, doi:10.1101/090456 (2016).
Heiland, R., Mishler, D., Zhang, T., Bower, E. & Macklin, P. xml2jupyter: Mapping parameters between
XML and Jupyter widgets. J Open Source Softw 4, doi:10.21105/joss.01408 (2019).
Macklin, P., Edgerton, M. E., Thompson, A. M. & Cristini, V. Patient-calibrated agent-based modelling of
ductal carcinoma in situ (DCIS): from microscopic measurements to macroscopic predictions of clinical
progression. J Theor Biol 301, 122-140, doi:10.1016/j.jtbi.2012.02.002 (2012).
Lowe,
D.
Angiotensin
and
the
Coronavirus,
<https://blogs.sciencemag.org/pipeline/archives/2020/03/17/angiotensin-and-the-coronavirus> (2020).
Beauchemin, C., Forrest, S. & Koster, F. T. 23-36 (Springer Berlin Heidelberg).
Sniekers, Y. H. & van Donkelaar, C. C. Determining Diffusion Coefficients in Inhomogeneous Tissues
Using Fluorescence Recovery after Photobleaching. Biophysical Journal 89, 1302-1307,
doi:10.1529/biophysj.104.053652 (2005).
Wang, H. et al. SARS coronavirus entry into host cells through a novel clathrin- and caveolaeindependent endocytic pathway. Cell Research 18, 290-301, doi:10.1038/cr.2008.15 (2008).
Pienaar, E. et al. A computational tool integrating host immunity with antibiotic dynamics to study
tuberculosis treatment. Journal of Theoretical Biology 367, 166-179, doi:10.1016/j.jtbi.2014.11.021
(2015).
Matzavinos, A. Mathematical modelling of the spatio-temporal response of cytotoxic T-lymphocytes to a
solid tumour. Mathematical Medicine and Biology 21, 1-34, doi:10.1093/imammb/21.1.1 (2004).
Liao, K.-L., Bai, X.-F. & Friedman, A. The role of CD200–CD200R in tumor immune evasion. Journal of
Theoretical Biology 328, 65-76, doi:10.1016/j.jtbi.2013.03.017 (2013).
Secomb, T. W., Liao, K.-L., Bai, X.-F. & Friedman, A. Mathematical Modeling of Interleukin-27 Induction
of Anti-Tumor T Cells Response. PLoS ONE 9, doi:10.1371/journal.pone.0091844 (2014).
Buchwalder, P.-A., Buclin, T., Trinchard, I., Munafo, A. & Biollaz, J. Pharmacokinetics and
Pharmacodynamics of IFN-β1a in Healthy Volunteers. Journal of Interferon & Cytokine Research 20,
857-866, doi:10.1089/10799900050163226 (2000).
Ye, S., Lowther, S., Stambas, J. & Sandri-Goldin, R. M. Inhibition of Reactive Oxygen Species Production
Ameliorates Inflammation Induced by Influenza A Viruses via Upregulation of SOCS1 and SOCS3.
Journal of Virology 89, 2672-2683, doi:10.1128/jvi.03529-14 (2015).
Tenhumberg, S. et al. Structure-guided Optimization of the Interleukin-6 Trans-signaling Antagonist
sgp130. Journal of Biological Chemistry 283, 27200-27207, doi:10.1074/jbc.M803694200 (2008).
Arnaud, P. Les différents interférons : Pharmacologie, mécanismes d'action, tolérance et effets
secondaires. La Revue de Médecine Interne 23, 449S-458S, doi:10.1016/s0248-8663(02)00659-8
(2002).
Krombach, F. et al. Cell size of alveolar macrophages: an interspecies comparison. Environmental Health
Perspectives 105, 1261-1263, doi:10.1289/ehp.97105s51261 (1997).
Blood and Bone Marrow Pathology. (2011).
Du, M., Kalia, N., Frumento, G., Chen, F. & Zhang, Z. Biomechanical properties of human T cells in the
process of activation based on diametric compression by micromanipulation. Medical Engineering &
Physics 40, 20-27, doi:10.1016/j.medengphy.2016.11.011 (2017).
54

bioRxiv preprint doi: https://doi.org/10.1101/2020.04.02.019075; this version posted July 29, 2020. The copyright holder for this preprint (which
was not certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made
available under aCC-BY 4.0 International license.

159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177

Heyden, S. & Ortiz, M. Investigation of the influence of viscoelasticity on oncotripsy. Computer Methods
in Applied Mechanics and Engineering 314, 314-322, doi:10.1016/j.cma.2016.08.026 (2017).
Trepat, X., Chen, Z. & Jacobson, K. in Comprehensive Physiology (2012).
Craig, M., Humphries, A. R. & Mackey, M. C. An upper bound for the half-removal time of neutrophils
from circulation. Blood 128, 1989-1991, doi:10.1182/blood-2016-07-730325 (2016).
Eftimie, R. & Eftimie, G. Tumour-associated macrophages and oncolytic virotherapies: a mathematical
investigation
into
a
complex
dynamics.
Letters
in
Biomathematics
5,
S6-S35,
doi:10.30707/LiB5.2Eftimiea (2018).
Kim, P. S., Lee, P. P. & Levy, D. Modeling regulation mechanisms in the immune system. Journal of
Theoretical Biology 246, 33-69, doi:10.1016/j.jtbi.2006.12.012 (2007).
Klöditz, K. & Fadeel, B. Three cell deaths and a funeral: macrophage clearance of cells undergoing
distinct modes of cell death. Cell Death Discovery 5, doi:10.1038/s41420-019-0146-x (2019).
Selders, G. S., Fetz, A. E., Radic, M. Z. & Bowlin, G. L. An overview of the role of neutrophils in innate
immunity, inflammation and host-biomaterial integration. Regenerative Biomaterials 4, 55-68,
doi:10.1093/rb/rbw041 (2017).
Brandes, M., Klauschen, F., Kuchen, S. & Germain, Ronald N. A Systems Analysis Identifies a
Feedforward Inflammatory Circuit Leading to Lethal Influenza Infection. Cell 154, 197-212,
doi:10.1016/j.cell.2013.06.013 (2013).
Janeway Jr, C. A., Travers, P. T., Walport, P. & Shlomchik, M. J. Immunobiology. 5th edn, (Garland
Science, 2001).
Halle, S. et al. In Vivo Killing Capacity of Cytotoxic T Cells Is Limited and Involves Dynamic Interactions
and T Cell Cooperativity. Immunity 44, 233-245, doi:10.1016/j.immuni.2016.01.010 (2016).
Liao, M. et al. Single-cell landscape of bronchoalveolar immune cells in patients with COVID-19. Nature
Medicine 26, 842-844, doi:10.1038/s41591-020-0901-9 (2020).
McMaster, S. R., Wilson, J. J., Wang, H. & Kohlmeier, J. E. Airway-Resident Memory CD8 T Cells Provide
Antigen-Specific Protection against Respiratory Virus Challenge through Rapid IFN-γ Production. The
Journal of Immunology 195, 203-209, doi:10.4049/jimmunol.1402975 (2015).
Grifoni, A. et al. Targets of T Cell Responses to SARS-CoV-2 Coronavirus in Humans with COVID-19
Disease and Unexposed Individuals. Cell 181, 1489-1501.e1415, doi:10.1016/j.cell.2020.05.015 (2020).
Sette, A. & Crotty, S. Pre-existing immunity to SARS-CoV-2: the knowns and unknowns. Nature Reviews
Immunology 20, 457-458, doi:10.1038/s41577-020-0389-z (2020).
Wadman, M. Can boosting interferons, the body's frontline virus fighters, beat COVID-19? Science,
doi:10.1126/science.abd7137 (2020).
Rowlatt, J. Coronavirus: Protein treatment trial 'a breakthrough', <https://www.bbc.com/news/health53467022> (2020).
Diao, B. et al. Reduction and Functional Exhaustion of T Cells in Patients With Coronavirus Disease 2019
(COVID-19). Frontiers in Immunology 11, doi:10.3389/fimmu.2020.00827 (2020).
Mathew, D. et al., doi:10.1101/2020.05.20.106401 (2020).
Organization, W. H. WHO Director-General's opening remarks at the media briefing on COVID-19 - 11
March 2020, <https://www.who.int/dg/speeches/detail/who-director-general-s-opening-remarks-at-themedia-briefing-on-covid-19---11-march-2020> (2020).

55

