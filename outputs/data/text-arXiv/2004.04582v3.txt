arXiv:2004.04582v3 [eess.IV] 6 Jun 2020

DeepCOVIDExplainer: Explainable COVID-19 Diagnosis
Based on Chest X-ray Images
Md. Rezaul Karim

Till Döhmen

Dietrich Rebholz-Schuhmann

Fraunhofer FIT, Aachen, Germany
RWTH Aachen University, Germany

Fraunhofer FIT, Aachen, Germany
RWTH Aachen University, Germany

German National Library of Medicine,
University of Cologne, Germany

Stefan Decker

Michael Cochez

Oya Beyan

Fraunhofer FIT, Aachen, Germany
RWTH Aachen University, Germany

Dept. of Computer Science, Vrije
Universiteit Amsterdam, Netherlands

RWTH Aachen University, Germany
Fraunhofer FIT, Aachen, Germany

ABSTRACT
Amid the coronavirus disease (COVID-19) pandemic, humanity
experiences a rapid increase in infection numbers across the world.
Challenge hospitals are faced with, in the fight against the virus, is
the effective screening of incoming patients. One methodology is
the assessment of chest radiography (CXR) images, which usually
requires expert radiologists’ knowledge. In this paper, we propose
an explainable deep neural networks (DNN)-based method for automatic detection of COVID-19 symptoms from CXR images, which
we call ‘DeepCOVIDExplainer’. We used 15,959 CXR images of 15,854
patients, covering normal, pneumonia, and COVID-19 cases. CXR
images are first comprehensively preprocessed, before being augmented and classified with a neural ensemble method, followed
by highlighting class-discriminating regions using gradient-guided
class activation maps (Grad-CAM++) and layer-wise relevance propagation (LRP). Further, we provide human-interpretable explanations of the predictions. Evaluation results based on hold-out data
show that our approach can identify COVID-19 confidently1 with
a positive predictive value (PPV) of 91.6%, 92.45%, and 96.12%; precision, recall, and F1 score of 94.6%, 94.3%, and 94.6%, respectively
for normal, pneumonia, and COVID-19 cases, respectively, making
it comparable or improved results over recent approaches. We hope
that our findings will be a useful contribution to the fight against
COVID-19 and, in more general, towards an increasing acceptance
and adoption of AI-assisted applications in the clinical practice.

KEYWORDS
COVID-19, Biomedical imaging, Deep neural networks, Explainability, Grad-CAM++, Layer-wise relevance propagation.

1

INTRODUCTION

The ongoing coronavirus pandemic (declared a pandemic by the
World Health Organization (WHO) in March 2020) has had a devastating impact on the health and well-being of the global population
already [10, 31]. As of June 4, 2020, more than 6.6 million infections
of COVID-19 and 388,502 fatalities due to the disease were reported2 .
Recent studies show that COVID-19, caused by severe acute respiratory syndrome coronavirus 2 (SARS-CoV-2) [5], often, but by no
means exclusively, affects elderly persons with pre-existing medical
conditions [2, 8, 12, 23, 33]. While hospitals are struggling with scaling up capacities to meet the rising number of patients, it is crucial
1 Findings

are not externally (e.g., with radiologists/clinicians) validated yet.

2 https://www.worldometers.info/coronavirus/

to make use of the screening methods at hand to identify COVID-19
cases and discriminate them from other conditions [31]. The definitive test for COVID-19 is the reverse transcriptase-polymerase
chain reaction (RT-PCR) test [5], which has to be performed in specialized laboratories and is a labour-intensive process. COVID-19
patients, however, show several unique clinical and para-clinical
features, e.g., presenting abnormalities in medical chest imaging
with commonly bilateral involvement. The features were shown to
be observable on chest X-ray (CXR) and CT images [12], but are
only moderately characteristic to the human eye [23] and not easy
to distinguish from pneumonia features.
AI-based techniques have been utilized in numerous scenarios,
including automated diagnoses and treatment in clinical settings.
Deep neural networks (DNNs) have recently been employed for
the diagnosis of COVID-19 from medical images, leading to promising results [12, 23, 24, 29, 31]. However, many current approaches
are “black box" methods without providing insights into the decisive image features. Let’s imagine a situation where resources are
scarce, e.g., a hospital runs out of confirmatory tests or necessary
radiologists are occupied, where AI-assisted tools could potentially
help less-specialized general practitioners to triage patients, by
highlighting critical chest regions to lead automated diagnosis decision [31]. A fully automated method without the possibility for
human verification would, however, at the current state-of-the-art,
be unconscionable and potentially dangerous in a practical setting. As a first step towards an AI-based clinical assistance tool for
COVID-19 diagnosis, we propose ‘DeepCOVIDExplainer’, a novel diagnosis approach based on neural ensemble method. The pipeline of
‘DeepCOVIDExplainer’ starts with histogram equalization enhancement, filtering, and unsharp masking of CXR images, followed by
the training of DenseNet, ResNet, and VGGNet architectures in a
transfer learning (TL) setting, creating respective model snapshots.
Those are incorporated into an ensemble, using Softmax class posterior averaging (SCPA) and prediction maximization (PM) for the
best performing models.
Finally, class-discriminating attention maps are generated using
gradient-guided class activation maps (Grad-CAM++) and layerwise relevance propagation (LRP) to provide explanations of the
predictions and to identify the critical regions on patients chest.
We hope that ‘DeepCOVIDExplainer’ will be a useful contribution
towards the development and adoption of AI-assisted diagnosis
applications in general, and for COVID-19 in particular. To allow
for the reproduction of results and derivative works, we will make
the source code, documentation and links to used data publicly

,,

Karim, Döhmen, Rebholz-Schuhmann, Decker, Cochez, and Beyan

available. The rest of the paper is structured as follows: Section 2
outlines related works and points out potential limitations. Section 3
describes our proposed approach, before demonstrating experiment
results in section 4. Section 5 summarizes the work and provides
some outlook before concluding the paper.

2

RELATED WORK

Bullock et al. [4] provide a comprehensive overview of recent application areas of AI against COVID-19, mentioning medical imaging
for diagnoses first, which emphasizes the prevalence of the topic.
Although PCR tests offer many advantages over CXR and CT [2],
shipping the sample of patients is necessary, whereas X-ray or CT
machines are readily available even in rather remote areas. In a
recent study by K. Lee et al. [33], CXR and CT images from nine
COVID-19 infected patients were analyzed by two radiologists to
assess the correspondence of abnormal findings on X-rays with
those on CT images. The proportion of patients with abnormal
initial radiographic findings was 78.3% to 82.4% for SARS and 83.6%
for MERS, while being only 33% for COVID-19 cases [33]. Chest CT
images, in contrast, showed double lung involvement in eight out
of nine patients. In other words, X-ray may not be the best imaging
method for detecting COVID-19, judging by the small cohort of nine
patients [33]. Another study by Yicheng Fang et al. [8], however,
supports those findings and argues in favour of the effectiveness of
CT over X-ray. CT should hence cautiously be considered as the
primary imaging source for COVID-19 detection in epidemic areas [2]. Nevertheless, the limited patient cohort size leaves room for
statistical variability and, in contrast to those findings, a few other
studies have reported rather promising results for the diagnosis
based on CXR imaging [9, 22, 31].
Narin et al. [22] evaluated different convolutional neural networks (CNN) for the diagnosis of COVID-19 and achieved an accuracy of 98% using a pre-trained ResNet50 model. However, the
classification problem is overly simplified by only discriminating
between healthy and COVID-19 patients, disregarding the difficulty
of distinguishing regular pneumonia conditions from COVID-19
conditions. Wang et al. [31] proposed COVID-Net to detect distinctive abnormalities in CXR images among samples of patients with
non-COVID-19 viral infections, bacterial infections, and healthy
patients. On a test sample of 92 positive COVID-19 cases among
approx. 300 other cases, COVID-Net reaches an overall accuracy
of 92.6% with 97.0%, 90.0 %, and 87.1 % sensitivity for normal, NonCOVID-19, and COVID-19 cases, respectively. On the other hand,
COVID-Net achieves PPV of 90.5%, 91.3%, and 98.9% for normal,
Non-COVID-19, and COVID-19 cases, respectively. Still, the small
sample size does not enable generalizable statements about the
reliability of the method. Highlighted regions using ‘GSInquire’
are also not well-localized to critical areas. Overall, training on
imbalance data, lack of thorough image preprocessing, and poor
decision visualization have hindered this approach.
In another study by Ozturk et al. [24], a deep learning model
called DarkCovidNet is proposed for the automatic diagnosis of
COVID-19 based on CXR images. Trained only 125 CXR images
DarkCovidNet model to provide COVID-19 diagnosis in two ways:

i) binary classification showing COVID-19 vs no-findings and multiclass classification showing COVID-19 vs no-findings vs pneumonia, giving an accuracy of 98.08% and 87.02% for binary and multiclass classification settings, respectively. Although the end-to-end
COVID-19 diagnostic pipeline is very comprehensive and backed by
‘you only look once’ (YOLO) real-time object detection system, it has
two potential limitations, including a severely low number of image
samples and imprecise localization on the chest region. Biraja G. et
al. [9] employed uncertainty estimation and interpretability based
on Bayesian approach to CXR-based COVID-19 diagnosis, which
shows interesting results. The results may, however, be impaired
by a lack of appropriate image preprocessing and the resulting attention maps show somewhat imprecise areas of interest. In a very
recent approach, Tabik et al. [29] curated a richer dataset called
COVIDGR-1.0 containing 377 positive and 377 negative PA (Postero
Anterior) CXR views. They subsequently, proposed COVID Smart
Data based Network (aka. COVID-SDNet). As claimed, their approach reaches an accuracy of 97.37%1.86%,88.14%2.02%, 66.5%8.04%
in severe, moderate and mild COVID severity levels.
Although these results look promising when compared to expert
radiologist sensitivity of 69% [29], in most of the cases, the reliability
can be questioned for three main reasons: i) the datasets used are
severely biased due to a deficient number of COVID-19 cases [29].
Secondly, some results are not statistically reliable and lack of
decision biases given the fact that they were mostly made based on
a single model’s outcome. Thirdly, less accurate localization and
visualization of critical chest regions. Therefore, to overcome these
shortcomings of state-of-the-art approaches, our approach first
enriches existing datasets with more COVID-19 samples, followed
by a comprehensive preprocessing pipeline for CXR images and data
augmentation. The COVID-19 diagnosis of ‘DeepCOVIDExplainer’ is
based on snapshot neural ensemble method with a focus on fairness,
algorithmic transparency, and explainability, with the following
assumptions:
• By maximum (or average) voting from a panel of independent
radiologists (i.e., ensemble), we get the final prediction fair
and trustworthy than a single radiologist.
• By localizing class-discriminating regions with Grad-CAM++
and LRP, we not only can mitigate the opaqueness of the
black-box model by providing more human-interpretable
explanations of the predictions but also identify the critical
regions on patients chest.

3

METHODS

In this section, we discuss our approach in detail, covering network
construction and training, followed by the neural ensemble and
decision visualizations.

3.1

Preprocessing

Depending on the device type, radiographs almost always have dark
edges on the left and right side of the image. Hence, we would argue
that preprocessing is necessary to make sure the model not only
learns to check if the edges contain black pixels or not but also to
improve its generalization. We perform contrast enhancement, edge
enhancement, and noise elimination on entire CXR images by employing histogram equalization (HGE), Perona-Malik filter (PMF),

DeepCOVIDExplainer: Explainable COVID-19 Diagnosis Based on Chest X-ray Images

and unsharp masking edge enhancement. Since images with distinctly darker or brighter regions impact the classification [25],
we perform the global contrast enhancement of CXR images using HGE. By merging gray-levels with low frequencies into one,
stretching high frequent intensities over high range of gray levels,
HGE achieves close to equally distributed intensities [1], where the
probability density function p(X k ) of an image X is defined as [1]:
n
p(X k ) = k ,
(1)
N
where k is the grey-level ID of an input image X varying from 0
to L, nk is the frequency of a grey level X k appearing in X , and N
is the number of image samples. A plot of nk vs. X k is specified
as the histogram of X , while the equalization transform function
f (X k ) is tightly related to cumulative density function [1]:
f (X k ) = X 0 + (X L − X 0 )c(X k )
c(X k ) =

k
Õ

p(X j ).

(2)
(3)

j=0

Output of HGE, Y = Y (i, j) is synthesized as follows [1]:
Y = f (X ) = { f (X (i, j))|∀X (i, j) ∈ X } .

(4)

Image filters ‘edge enhances’ and ‘sharpen’ are adopted with the
convolution matrices as kernel д(.). PMF is used to preserve the
edges and detailed structures along with noise reduction as long
as the fitting diffusion coefficient c(.) and gradient threshold K are
separate [16]. As a non-linear anisotropic diffusion model, PMF
smoothens noisy images θ (x, y) w.r.t. partial derivative as [16]:
∂u
= div(c(|∇u(x, y, t)|)∇u(x, y, t)),
∂t

(5)

where u(x, y, 0) is the original image, θ (x, y), u(x, y, t) is a filtered
image after t iteration diffusion; div and ∇ are divergence and
gradient operators w.r.t spatial variables x and y, where the diffusion
coefficient c(.) is computed as [26]:
 !
|∇I | 2
c 1 (|∇I |) = exp −
K


c 2 (|∇I |) =

1
1+




| ∇I | 2
K

.

(6)
(7)

To decide if the local gradient magnitudes is robust for edge
preservation, diffusion coefficient function c(.) is then computed as
follows [26]:


 2

√

| 2

 1 1 − | ∇I
√
, |∇I | ≤ K 2
2
c 3 (|∇I |) =
(8)
K 2
√

 0,
|∇I | > K 2

where c 3 is the Tukey’s biweight function. Since the boundary
between noise and edge is minimal, c 3 is applied as the fitting diffusion coefficient [16]. Further, we attempt to remove textual artefacts
from CXR images, e.g., a large number of images annotate right
and left sides of chest with a white ‘R’ and ‘L’ characters. To do

,,

so, we threshold the images first to remove very bright pixels, and
the missing regions were in-painted. In all other scenarios, image
standardization and normalization are performed. For image standardization, the mean pixel value is subtracted from each pixel and
divided by the standard deviation of all pixel values. The mean and
standard deviation is calculated on the whole datasets and adopted
for training, validation and test sets. For image normalization, pixel
values are rescaled to a [0,1] by using a pixel-wise multiplication
factor of 1/255, giving a collection of grey-scale images. Further,
CXR images are resized 224 × 224 × 3 before starting the training.

3.2

Network construction and training

We trained VGG, ResNet, and DenseNet architectures and created
several snapshots during a single training run with cyclic cosine
annealing (CAC) (see fig. 2)[19], followed by combining their predictions to an ensemble prediction [13, 17]. We pick VGG-16 and
VGG-19 due to their general suitability for image classification.
Based on the dense evaluation concept [28], VGG variants convert
the last three fully connected layers (FCLs) to 2D convolution operations to reduce the number of hyperparameters. We keep last 2
layers fixed to adopt a 1×1 kernel, leaving the final one equipped
with a Softmax activation. However, owing to computational complexity of VGG-16 due to consecutive FCLs, the revised VGG-19 is
trained with a reduced number of hidden nodes in first 2 FCLs.
Next, we pick ResNet-18 [32]) and ResNet-34 [11]) architectures.
ResNets are lightweight stack-based CNNs, with their simplicity
arising from small filter sizes (i.e., 3×3) [28], where apart from common building blocks, two bottlenecks are present in the form of
channel reduction. A series of convolution operators without pooling is placed in between, forming a stack. The first conv layer of
each stack in ResNets (except for the first stack) are down-sampled
at stride 2, which provokes the channel difference between identity
and residual mappings. A series of convolution operators without
pooling is then placed in between and recognized as a stack, as
shown in fig. 1. However, w.r.t regularisation, a 7×7 conv filter is
decomposed into a stack of three 3×3 filters with non-linearity
injected in between [28]. DenseNet-161 and DenseNet-201 architectures are picked that concatenate additional inputs from preceding
layers, while ResNets merge feature-maps through summation. It
not only strengthens feature propagation and moderates information loss but also increases feature reusing capability by reducing
numbers of parameters [14].
To avoid possible overfitting, L 2 weight regularization, dropout,
and data augmentation (by rotating CXR images by up to 15◦ )
were employed. We do not initialize networks weights with any
pretrained (e.g., ImageNet) models. ImageNet contains photos of
general objects, which would activate the internal representation
of the network’s hidden layers with geometrical forms, colourful
patterns, or irrelevant shapes that are usually not present CXR
images. We set the number of epochs (NE), maximum learning
rate (LR), number of cycles, and current epoch number, where
initial LR and NE are two hyperparameters. CAC starts with a large
LR and rapidly decreases to a minimum value before it dramatically
increases to the following LR for that epoch [13]. During each model
training, CAC changes the LR aggressively but systematically over
epochs to produce different network weights [13]:

,,

Karim, Döhmen, Rebholz-Schuhmann, Decker, Cochez, and Beyan

Figure 1: The classification with ResNet-based networks

Figure 2: Training loss of VGG-19 network with standard learning rate (green) and cosine annealing cycles (red), the intermediate models, denoted by the dotted lines form an ensemble at the end of training

α(t) =

π mod (t − 1, ⌈T /C⌉)
α0
cos
+1 ,
2
⌈T /C⌉








(9)

where α(t) is the LR at epoch t, α 0 is the maximum LR, T is
the total epoch, C is the number of cycles and mod is the modulo
operation. After training a network for C cycles, best weights at
the bottom of each cycle are saved as a model snapshot (m), giving
M model snapshots, where m ≤ M.

3.3

Model ensemble

When a single practitioner makes a COVID-19 diagnosis, the chance
of a false diagnosis is high. In case of doubt, a radiologist should,
therefore, ask for a second or third option of other experts. Analog to this principle, we employ the principle of model ensembles,
which combine the ‘expertise’ of different predictions algorithms

into a consolidated prediction and hereby reducing the generalization error [13]. Research has shown that a neural ensemble method
by combining several deep architectures is more effective than
structures solely based on a single model [13, 17]. Inspired by [30],
we apply both SCPA and PM of best-performing snapshot models,
ensemble their predictions, and propagate them through the Softmax layer, where the class probability of the ground truth j for a
given image x is inferred as follows [30]:

P(y = j |x) =

 ÍM

exp m=1
P̂m (y = j |x)
hÍ
i,
K ÍM P̂ (y = k |x)
exp k=1
m
m=1

(10)

where m is the last snapshot model, M is the number of models, K is
the number classes, and P̂m (y = j |x) is the probability distribution.

DeepCOVIDExplainer: Explainable COVID-19 Diagnosis Based on Chest X-ray Images

,,

Figure 3: Classification and decision visualization with CNN-based approach

3.4

Decision visualizations

To improve the COVID-19 detection transparency, class-discriminating
regions on the subjects chest are generated by employing GradCAM [27], Grad-CAM++ [6], and LRP [15]. The idea is to explain
where the model provides more attention for the classification.
CAM computes the number of weights of each feature map (FM)
based on the final conv layer to calculate the contribution to prediction yc at location (i, j), where the goal is to obtain Lcij that satisfies
Í
y c = i, j Lcij . The last FM Ai jk and the prediction yc are represented in a linear relationship in which linear layers consist of global
Í
average pooling (GAP) and FCLs: i) GAP outputs Fk = i, j Akij , ii)
c
FCL that holds weight w k , generates the following output [18]:
c

y =

Õ
k

w kc Fk

=

Õ
k

w kc

Õ
i, j

Akij

=

ÕÕ
i, j

k

w kc Akij ,

1 Õ Õ ∂y c
,
Z i j ∂Ak
ij

(12)

where Z is the number of pixels in an FM, c is the gradient of
the class, and Akij is the value of k t h FM. Having gathered relative weights, the coarse saliency map (SM), Lc is computed as the
weighted sum of α kc ∗Akij of the ReLU activation. It introduces linear
combination to the FM as only the features with a positive influence
on the respective class are of interest [6] and the negative pixels
that belong to other categories in the image are discarded [27]:
Õ
Lc = ReLU( α kc Ak ),
(13)
i

w kc =

ÕÕ

α ikc
j · ReLU(

α ikc
j =

∂y c

)
∂Akij
ÕÕ
Õ
yc =
w kc ·
Akij
i

j

i

k

2

∂2y c
(∂Akij )2

+

Í Í
a

b

Akab

(14)
(15)

j

∂2y c
(∂Akij )2

(11)

where Ak represents the visualization of the k t h feature map,
Í
c
Li j = k w kc Akij [18]. Due to the vanishing of non-linearity of
classifiers, CAM is an unsuitable method. Hence, we employ GradCAM to globally average the gradients of FM as weights instead of
pooling. While heat maps (HM) are plotted, class-specific weights
are collected from the final conv layer through globally averaged
gradients (GAG) of FM instead of pooling [6]:
α kc =

Grad-CAM++ (see fig. 3) replaces the GAG with a weighted average of the pixel-wise gradients as the weights of pixels contribute
to the final prediction w.r.t the following iterators over the same
activation map Ak , (i, j) and (a, b).

∂3y c
{(∂Akij )3 }

.

(16)

Even though CXR images rarely contain multiple targets, revealing particular image parts that contributed to the prediction,
rather than the entire chest area is still helpful. CAM variants backpropagate the gradients all the way up to the inputs, are essentially
propagated only till the final conv layer. Besides, CAM methods are
limited to specific architectures, where an average-pooling layer
connects conv layers with an FCL. LRP is another robust technique
of propagating relevance scores (RSs) and, in contrast to CAM, redistributes proportionally to the activation of previous layers. LRP
assumes that the class likelihood can be traced backwards through
a network to the individual layer-wise nodes of the input [15]. From
a network of L layers, 1, 2, ..., N nodes in layer l, 1, 2, .., M nodes in
(l )
layer l +1, the RS, Rn at node n in layer l is recursively defined [15]:

(l )

Rn =

(l ) +(l )

an w n,m

Õ
m

Í

n′

(l ) +(l )

an ′ w n ′,m

(l +1)

Rm

.

(17)

Node-level RS for negative values is calculated with ReLU activation
function as follows [15]:

,,

Karim, Döhmen, Rebholz-Schuhmann, Decker, Cochez, and Beyan

(l )

Rn =

(l ) (l )
(l ) +(l )
(l ) −(l )
Õ
x n w n,m − bn w n,m − hn w n,m
.
Í (l ) (l )
(l ) +(l )
(l ) −(l +1)
m
n ′ x n ′ w n ′,m − bn ′ w n ′,m − hn ′ w n ′,m

(18)

Then the output layer RS is calculated before being back-propagated
as follows [15]:
(L)

Rn =



(L)

zt
0

n=t
otherwise

(19)

First, an image x is classified in a forward pass, where LRP
identifies important pixels. The backward pass is a conservative rel(L)
evance (i.e., R t ) redistribution procedure with back-propagation
using deep Taylor decomposition [21], to generate a relevance map
Rlr p , for which the nodes contributing most to the higher-layer, also
receive most relevance. Finally, heat maps for all the test samples
are generated based on the trained models, indicating the relevance
for the classification decision.

13,870 patient cases5 . COVIDx is mainly based on RSNA Pneumonia
Detection Challenge6 , ActualMed COVID-19 Chest X-ray Dataset
Initiative7 , COVID-19 radiography database8 , giving 219 COVID-19
positive images, 1,341 normal images, and 1,345 viral pneuomonia
images. This gives 358 CXR images from 266 COVID-19 patient
cases and total of 8,066 patient cases who have no pneumonia (i.e.,
normal) and 5,538 patient cases who have non-COVID19 pneumonia. The updated dataset, which we refer to ‘COVIDx v2.0’ is
categorized as normal (i.e., no-findings), pneumonia, and COVID-19
viral are enriched with CXR images of adult subjects of COVID19, pneumonia, and normal examples, leaving 15,959 CXR images
across 15,854 patients:
• COVID chest X-ray-dataset: Joseph P.C. et al. [7]9 : 660 PA (i.e.,
frontal view) CXR images.
• COVID-19 patients lungs X-ray images10 : 70 COVID-19 and
70 normal CXR images.
• Chest X-ray images by Ozturk et al. [24] 11 : 125 COVID-19,
500 normal, and 500 pneumonia CXR images.

4.3
4

EXPERIMENT RESULTS

In this section, we discuss our evaluation results both quantitative
and qualitatively, showing a comparative analysis.

4.1

Experiment setup

Experiments were carried out on a machine having an Intel(R)
Xeon(R) E5-2640, 256 GB of RAM, and Ubuntu 16.04 OS. All the
programs3 were written in Python, where the software stack consists of scikit-learn and Keras with the TensorFlow backend. The
LRP-based visualization and relevance calculation are generated using the iNNvestigate toolbox4 . Networks were trained on an Nvidia
Titan Xp GPU with CUDA, and cuDNN enabled to make the overall
pipeline faster. When we create snapshots, we set the number of
epochs to 200, maximum LR to 1.0, and the number of cycles to 20,
giving 20 snapshots for each model. For 6 architectures, we get 120
snapshot models in total, on which we construct the ensemble. The
best snapshot model is used for the decision visualizations, which
we choose using WeightWatcher.
To tackle the class imbalance issue, we apply class weighting to
penalize a model when it misclassifies a positive sample. Although
accuracy is an intuitive evaluation criterion for many bio-imaging
problems, e.g., osteoarthritis severity prediction [3], those evaluation criteria are most suitable for balanced class scenarios. Keeping
in mind the imbalanced scenario with widely different class distributions between classes, we report precision, recall, F1, and positive
predictive value (PPV) produced through random search and 5-fold
cross-validation tests, i.e., for each hyperparameter group of the
specific network structure, 5 repeated experiments are conducted.

4.2

Performance of individual model

Overall results are summarized in table 1: VGG-19 and DenseNet161 performed best on both balanced and imbalanced datasets, while
VGG-16 turns out to be the lowest performer. In direct comparison,
diagnosis of VGG-19 yields much better results than VGG-16, which
can be explained by the fact that a classifier with more formations
requires more fitting of FMs, which again depends on conv layers.
The architecture modification of VGG-19 by setting 2 conv layers
and the filter size of 16, visibly enhances the performance. ResNet-18
performed better, although it’s larger counterpart ResNet-34 shows
very unexpected low performance. Evidently, due to structured
residual blocks, the accumulation of layers could not promote FMs
extracted from the CXR images.
Both DenseNets architectures show consistent performance owing to clearer image composition. DenseNet-161 outperforms not
only DenseNet-201 but also all the other models. In particular,
DenseNet-161 achieves precision, recall, and F1 scores of 0.952,
0.945, and 0.945, respectively, on balanced CXR images. VGG-19
also gives a comparable performance, giving precision, recall, and
F1 scores of 0.943, 0.935, and 0.939, respectively. On imbalanced
image sets, both DenseNet-161 and ResNet-18 perform consistently.
Although VGG-19 and ResNet-18 show competitive results on the
balanced dataset, the misclassification rate for normal and pneumonia samples are slightly elevated than DenseNet-161, which
poses a risk for clinical diagnosis. In contrast, DenseNet-161 is
found to be resilient against class imbalanced. Hence, models like
DenseNet-161, which can handle moderately imbalanced class scenarios, seem better suited for the clinical setting, where COVID-19
cases are rare compared to pneumonia or normal cases. The ROC
curve of DenseNet-161 model in fig. 4 shows consistent AUC scores

Datasets
5 As

of June 6, 2020

We consider 2 different versions of the datasets: first, we used the
‘COVIDx v1.0’ dataset by Wang et al. [31] used to train and evaluate
the COVID-Net, comprised of a total of 13,975 CXR images across

7 https://github.com/agchung/Figure1-COVID-chestxray-dataset

3 https://github.com/rezacsedu/DeepCOVIDExplainer

10 https://www.kaggle.com/nabeelsajid917/covid-19-x-ray-10000-image

4 https://github.com/albermax/innvestigate

11 https://github.com/muhammedtalo/COVID-19

6 https://www.kaggle.com/c/rsna-pneumonia-detection-challenge
8 https://www.kaggle.com/tawsifurrahman/covid19-radiography-database
9 https://github.com/ieee8023/covid-chestxray-dataset

DeepCOVIDExplainer: Explainable COVID-19 Diagnosis Based on Chest X-ray Images

,,

Table 1: Classification results of each model on balanced and imbalanced datasets
Balanced dataset
Network
VGG-16
ResNet-34
DenseNet-201
ResNet-18
VGG-19
DenseNet-161

Precision
0.783
0.884
0.916
0.924
0.943
0.952

Recall
0.771
0.856
0.905
0.925
0.935
0.945

Imbalanced dataset
F1
0.761
0.861
0.905
0.921
0.925
0.948

Precision
0.734
0.852
0.805
0.873
0.862
0.893

Recall
0.753
0.871
0.773
0.847
0.848
0.874

F1
0.737
0.851
0.826
0.852
0.845
0.883

across folds, indicating not only stable predictions but also better
prediction than random guessing.
Nevertheless, lousy snapshot models can contaminate the overall predictive powers of the ensemble model. Hence, we employ
WeightWatcher [20] in two levels: i) level 1: we choose the top-5
snapshots to generate a full model, ii) level 2: we choose the top-3
models for the final ensemble model. In level 2, WeightWatcher
is used to compare top models (by excluding VGG-16, ResNet-34,
and DenseNet-201) and choose the ones with the lowest log norm
and highest weighted alpha (refer to section 4 in supplementary for
details), where a low (weighted/average) log-norm signifies better
generalization of network weights [20]. Figure 5 shows choosing
the better model between VGG-16 and VGG-19 with WeightWatcher
in terms of weighted alpha and log norm.

4.4

Model ensemble

We perform the ensemble on following top-2 models: ResNet-18
and DenseNet-161. Besides, to ensure a variation of network architectures within the ensemble, VGG-19 is also included. As demonstrated in table 2, the ensemble based on the SCPA method moderately outperforms the ensemble based on the PM method. The
reason is that the PM approach appears to be easily influenced by
outliers with high scores. To a great extent, the mean probabilities
for each class affect the direction of outliers. For the SCPA-based
ensemble, the combination of VGG-19 + DenseNet-161 outperforms
other ensemble combination.
The confusion matrix of the best ensemble’s performance on
balanced data is shown in fig. 6. The results show that a majority
of samples were classified correctly, with precision, recall, and F1
scores of 0.937, 0.926, and 0.931, respectively, using the PM ensemble
method. For the SCPA-based ensemble, precision, recall, and F1 are
even slightly higher, yielding 0.946, 0.943, and 0.945, respectively.
Additionally, we report the class-specific measures in table 3 to give
a better view in both the balanced and imbalanced scenario.

4.5

Quantitative analysis

Since we primarily want to limit the number of missed COVID-19
instances, the achieved recall of 90.5% is still an acceptable metric
compared to 91% by Wang et al. [31], which means that a certain
fraction of all patients who test positive, will actually not have
the disease. To determine how many of all infected persons would
be diagnosed positive by the method, we calculate the positive
predictive value (PPV). Out of our test set with 129 COVID-19
patient samples, only 3 were misclassified as pneumonia and two

Figure 4: ROC curves of the ensemble model (black lines)
for the detection of infection types on test set, color circles
mean different folds, showing stable convergence
as normal, which results in a PPV of 96.12% for COVID-19 cases,
which is still an acceptable metric compared to 98.9% by Wang
et al. [31]. Besides, to provide a direct comparison, our approach
slightly outperforming COVID-Net [31] in terms of identifying
normal and non-COVID19 cases.
Further, to provide a one-to-one comparison with COVID-Net,
we further apply similar techniques on the ‘COVIDx v1.0’ dataset.
The evaluation result carried out on a test set of 92 COVID-19
cases, only 3 were misclassified as pneumonia, resulting in a PPV
of 96.74% for COVID-19 cases. This is, however, slightly lower
than that of COVID-Net. However, we would still argue that it
is an acceptable metric compared to 98.9% by Wang et al. [31]. It
is important to note that PPV was reported for a low prevalence
of COVID-19 in the cohorts. In a setting with high COVID-19
prevalence, the likelihood of false-positives is expected to reduce
in favour of correct COVID-19 predictions. In our case, results
are backed up by i) a larger test set, ii) better localization and
explanation capability, which contributes to the reliability of our
evaluation results (refer to section 4.6 for further details), given the
fact that in healthcare predicting something with high confidence
only is not enough, but requires trustworthiness.

4.6

COVID-19 predictions and explanations

Precise decisive feature localization is vital not only for the explanation but also for rapid confirmation of the reliability of outcomes,

,,

Karim, Döhmen, Rebholz-Schuhmann, Decker, Cochez, and Beyan

Figure 5: Choosing VGG model with WeightWatcher: a) w.r.t weighted alpha, b) w.r.t log-norm
Table 2: Classification results for ensemble methods on balanced dataset
Prediction maximization
Architecture combination
ResNet-18+DenseNet-161
VGG-19+DenseNet-161
VGG-19+ResNet-18
DN-161+VGG-19+ResNet-18

Precision
0.915
0.937
0.917
0.926

Recall
0.924
0.926
0.923
0.901

F1
0.928
0.931
0.912
0.901

Softmax posterior averaging
Precision
0.925
0.946
0.923
0.924

Recall
0.94
0.943
0.945
0.937

F1
0.933
0.945
0.934
0.935

Table 3: Classwise classification results of ensemble model on chest x-rays
Balanced dataset
Infection type
Normal
Pneumonia
COVID-19

Precision
0.942
0.916
0.904

Recall
0.927
0.928
0.905

Imbalanced dataset

F1
0.935
0.922
0.905

Precision
0.906
0.864
0.877

Recall
0.897
0.853
0.881

F1
0.902
0.858
0.879

maps are overlapping. The critical regions of some CXR images of
COVID-19 cases are demonstrated in fig. 7, fig. 8, and fig. 9, where
class-discriminating areas within the lungs are localized.
As seen, HMs generated by Grad-CAM and Grad-CAM++ are
fairly consistent and alike, but those with Grad-CAM++ are more
accurately localized. The reason is that instead of certain parts,
Grad-CAM++ highlights conjoined features more precisely. On the
other hand, although LRP highlights regions much more precisely, it
fails to provide attention to critical regions. It turned out that GradCAM++ generates the most reliable HM’s when compared to GradCAM and LRP. To provide more human-interpretable explanations,
let’s consider the following examples (based on ResNet-18):
Figure 6: confusion matrix of the ensemble model
especially for potentially false-positive cases [6]. Attention map
highlighting of critical regions on the chest advocate transparency
and trustworthiness to clinicians and help them leverage their
screening skills to make faster and yet more accurate diagnoses
[31]. In general, the more accurate a model is, the more consistent
the visualizations of Grad-CAM and Grad-CAM++ will be. Key
features can then easily be identified based on where the activation

• Example 1: the CXR image is classified to contain a confirmed COVID-19 case with a probability of 58%, the true
class is COVID-19, as shown in fig. 7.
• Example 2: the CXR image is classified to contain a confirmed COVID-19 case with a probability of 58%, the true
class is COVID-19, as shown in fig. 8.
• Example 3: the CXR image is classified to contain COVID19 case with a classification score of 10.5, the true class is
COVID-19, as shown in fig. 9.

DeepCOVIDExplainer: Explainable COVID-19 Diagnosis Based on Chest X-ray Images

,,

Figure 7: The input chest x-ray classification, decision visualization with Grad-CAM and explanation

Figure 8: The input chest x-ray classification, decision visualization with Grad-CAM++ and explanation

Figure 9: The input chest x-ray classification, decision visualization with LRP and explanation

4.7

Discussion and diagnosis recommendations

Based on the above analyses, ‘DeepCOVIDExplainer’ disseminates
the following recommendations: even if a specific approach does not
perform well, an ensemble of several models still may outperform
individual models. Since accurate diagnosis is a mandate, models
trained on imbalanced training data may provide distorted or wrong
predictions during inference time, due to possible overfitting during
the training. In this case, even a high accuracy score can be achieved
without predicting minor classes, hence might be uninformative.
Thirdly, taking COVID-19 diagnosis context into account, the
risk resulting from a pneumonia diagnosis is much lower than
for a COVID-19 diagnosis. Hence, it is more reasonable to make
a decision based on the maximum score among all single model
predictions. Fourthly, due to the nature of neural networks, decision
visualizations cannot be provided based on ensemble models, even
though their usage contributes to decision fairness and reliability.
For the decision visualization, therefore, it is recommended to pick
the single best model as a basis and to employ Grad-CAM++ for
providing the most reliable localization.

5

CONCLUSION AND OUTLOOK

In this paper, we proposed ‘DeepCOVIDExplainer’ to leverage explainable COVID-19 prediction based on CXR images. Evaluation

results show that our approach can identify COVID-19 with a PPV
of 96.12% and recall of 94.3%, outperforming a recent approach.
Further, as Curtis Langlotz12 stated “AI won’t replace radiologists,
but radiologists who use AI will replace radiologists who don’t”.
However, we would argue that ‘DeepCOVIDExplainer’ is not to
replace radiologists, instead of to be evaluated in a clinical setting
and by no means a replacement for a human radiologist. In contrast,
human judgement is indispensable when the life of patients is at
stake. Further, we hope our findings will be a useful contribution to
the fight against COVID-19 and towards an increasing acceptance
and adoption of AI-assisted applications in the clinical practice.
Lastly, we want to outline potential areas of improvements: first,
since only a limited amount of CXR images for COVID-19 infection cases were at hand, it would be unfair to claim that we can
rule out overfitting for our models. More unseen data from similar
distributions is necessary for further evaluation to avoid possible
out-of-distribution issues. Secondly, due to external conditions, we
were yet not been able to verify the diagnoses and localization accuracies with the radiologists. Thirdly, accurate predictions do not
only depend on single imaging modalities but could also build upon
additional modalities like CT and other decisive factors such as
e.g., patients demographic and symptomatic assessment report [30].
12 https://www.nature.com/articles/d41586-019-03847-z

,,

Karim, Döhmen, Rebholz-Schuhmann, Decker, Cochez, and Beyan

Nevertheless, we would argue that explaining predictions with plots
and charts are useful for exploration and discovery. Explaining them
to patients may be tedious and require more human-interpretable
decision rules in natural language. In future, we intend to overcome
these limitations by i) alleviating more data (e.g., CT, phenotype,
and history) and training a multimodal neural network, and ii) incorporating domain knowledge with symbolic reasoning to generate
decision rules to make the diagnosis fairer.

ACKNOWLEDGMENTS
This work was supported by the German Ministry for Research
and Education (BMBF) as part of the SMITH consortium (grant no.
01ZZ1803K). This work was conducted jointly by RWTH Aachen
University and Fraunhofer FIT as part of the PHT and GoFAIR
implementation network, which aims to develop a proof of concept
information system to address current data reusability challenges of
occurring in the context of so-called data integration centers that are
being established as part of ongoing German Medical Informatics
BMBF projects.

ACRONYMS
Acronyms and their full forms used in this paper are as follows:
AUC Area Under the receiver operating
characteristic Curves
CAM Class Activation Maps
CXR Chest X-ray
CNN Convolutional Neural Network
CLRP Contrastive Layer-wise Relevance
Propagation
COVID-19 Corona virus disease
CT Computed Tomography
CAC Cyclic Cosine Annealing
DNN Deep Neural Networks
DL Deep Learning
DenseNet Dense Convolutional Network
DTD Deep Taylor Decomposition
FCL Fully-Connected Layer
FCN Fully Convolutional Neural Network
FM Feature Maps
GAG Globally Averaged Gradients
GAP Global Averaged Pooling
Grad-CAM Gradient-guided
class-activation maps
HM Heat Maps

HGE Histogram Equalization
ICU Intensive Care Unit
LR Learning Rate
LRP Layer-wise relevance propagation
ML Machine Learning
NE Number of Epochs
PMF Perona-Malik Filter
PM Prediction Maximization
PPV Positive Predictive Value
ROC Receiver Operating Characteristic
ResNet Residual Network
RS Relevance Score
RT-PCR Reverse Transcriptasepolymerase Chain Reaction
SARS-CoV-2 Severe Acute Respiratory
Syndrome Coronavirus 2
SM Saliency Maps
SGD Stochastic Gradient Descent
SCPA Softmax Class Posterior Averaging
SGLRP Softmax-gradient LRP
TBF Tukey’s biweight function
TL Transfer Learning.

REFERENCES
[1] Tarun Kumar Agarwal, Mayank Tiwari, and Subir Singh Lamba. 2014. Modified
histogram based contrast enhancement using homomorphic filtering for medical
images. In 2014 IEEE International Advance Computing Conference (IACC). IEEE,
964–968.
[2] Tao Ai, Zhenlu Yang, Hongyan Hou, Chenao Zhan, and Liming Xia. 2020. Correlation of chest CT and RT-PCR testing in coronavirus disease 2019 (COVID-19)
in China: a report of 1014 cases. Radiology (2020), 200642.
[3] Alireza Baratloo, Mostafa Hosseini, and Gehad El Ashal. 2015. Simple Definition
and Calculation of Accuracy, Sensitivity and Specificity. Emergency (Tehran, Iran)
3, 2 (2015), 48–49.
[4] Joseph Bullock, Katherine Hoffmann Pham, and Miguel Luengo-Oroz. 2020. Mapping the Landscape of Artificial Intelligence Applications against COVID-19.
arXiv:2003.11336 (2020).
[5] Makeda Moore Candace and Daniel. 2020. COVID-19. (2020). https://radiopaedia.
org/articles/covid-19-3?lang=us Online; accessed April-July-2020.
[6] Aditya Chattopadhay and Anirban Sarkar. 2018. Grad-CAM++: Generalized
gradient-based visual explanations for convolutional networks. In Applications
of Computer Vision(WACV). IEEE, 839–847.
[7] Joseph Paul Cohen, Paul Morrison, and Lan Dao. 2020. COVID-19 image data
collection. arXiv 2003.11597 (2020). https://github.com/ieee8023/covid-chestxraydataset
[8] Yicheng Fang, Huangqi Zhang, Jicheng Xie, Minjie Lin, Lingjun Ying, Peipei
Pang, and Wenbin Ji. 2020. Sensitivity of chest CT for COVID-19: comparison to
RT-PCR. Radiology (2020), 200432.

[9] Biraja Ghoshal and Allan Tucker. 2020. Estimating Uncertainty and Interpretability in Deep Learning for Coronavirus (COVID-19) Detection. arXiv:2003.10769
(2020).
[10] Ophir Gozes, Maayan Frid-Adar, Hayit Greenspan, and Eliot Siegel. 2020. Rapid
AI development cycle for the coronavirus pandemic: Initial results for automated detection and patient monitoring using deep learning CT image analysis.
arXiv:2003.05037 (2020).
[11] Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian Sun. 2016. Deep residual
learning for image recognition. In Proc. of the IEEE CVPR. 770–778.
[12] Chaolin Huang, Yeming Wang, Xingwang Li, Lili Ren, and Xiaoying Gu. 2020.
Clinical features of patients infected with novel coronavirus in Wuhan, China.
The Lancet 395, 10223 (2020), 497–506.
[13] Gao Huang, Yixuan Li, Geoff Pleiss, and Kilian Q Weinberger. 2017. Snapshot
Ensembles: Train 1, get m for free. arXiv:1704.00109 (2017).
[14] Gao Huang, Zhuang Liu, and Kilian Q Weinberger. 2017. Densely connected
convolutional networks. In proc of the IEEE CVPR. 4700–4708.
[15] Brian Kenji Iwana, Ryohei Kuroki, and Seiichi Uchida. 2019. Explaining Convolutional Neural Networks using Softmax Gradient Layer-wise Relevance Propagation. arXiv:1908.04351 (2019).
[16] V Kamalaveni, R Anitha Rajalakshmi, and KA Narayanankutty. 2015. Image
denoising using variations of Perona-Malik model with different edge stopping
functions. Procedia Computer Science 58 (2015), 673–682.
[17] Md. Rezaul Karim, Ashiqur Rahman, João Bosco Jares, Stefan Decker, and Oya
Beyan. 2019. A Snapshot Neural Ensemble Method for Cancer-type Prediction
Based on Copy Number Variations. Neural Computing and Applications (2019),
1–19.
[18] Bum Jun Kim, Gyogwon Koo, Hyeyeon Choi, and Sang Woo Kim. 2020. Extending
Class Activation Mapping Using Gaussian Receptive Field. arXiv:2001.05153
(2020).
[19] Ilya Loshchilov and Frank Hutter. 2016. SGDR: Stochastic Gradient Descent with
Warm Restarts. arXiv:1608.03983 (2016).
[20] Charles H Martin and Michael W Mahoney. 2019. Traditional and heavy-tailed
self regularization in neural network models. arXiv:1901.08276 (2019).
[21] Grégoire Montavon, Sebastian Lapuschkin, and Klaus-Robert Müller. 2017. Explaining nonlinear classification decisions with deep taylor decomposition. Pattern Recognition 65 (2017), 211–222.
[22] Ali Narin, Ceren Kaya, and Ziynet Pamuk. 2020. Automatic Detection of Coronavirus Disease using X-ray Images and Deep Convolutional Neural Networks.
arXiv:2003.10849 (2020).
[23] Ming-Yen Ng, Elaine Y Lee, Jin Yang, and Pek-Lan Khong. 2020. Imaging profile
of COVID-19 infection: radiologic findings and literature review. Cardiothoracic
Imaging 2, 1 (2020).
[24] Tulin Ozturk, Muhammed Talo, Eylul Azra Yildirim, Ulas Baran Baloglu, Ozal
Yildirim, and U Rajendra Acharya. 2020. Automated detection of COVID-19
cases using deep neural networks with X-ray images. Computers in Biology and
Medicine (2020), 103792.
[25] Sampada S Pathak, Prashant Dahiwale, and Ganesh Padole. 2015. A combined
effect of local and global method for contrast image enhancement. In International
Conference on Engineering & Technology. IEEE, 1–5.
[26] Pietro Perona and Jitendra Malik. 1990. Scale-space and edge detection using
anisotropic diffusion. IEEE Tras. on pattern analysis and machine intelligence 12,
7 (1990), 629–639.
[27] Ramprasaath R Selvaraju, Michael Cogswell, Abhishek Das, Ramakrishna Vedantam, Devi Parikh, and Dhruv Batra. 2017. Grad-CAM: Visual explanations from
deep networks via gradient-based localization. In Proceedings of the IEEE ICCV.
618–626.
[28] Karen Simonyan and Andrew Zisserman. 2014. Very deep convolutional networks
for large-scale image recognition. arXiv:1409.1556 (2014).
[29] S Tabik, A Gómez-Ríos, JL Martín-Rodríguez, I Sevillano-García, M Rey-Area,
D Charte, E Guirado, JL Suárez, J Luengo, MA Valero-González, et al. 2020.
COVIDGR dataset and COVID-SDNet methodology for predicting COVID-19
based on Chest X-Ray images. arXiv preprint arXiv:2006.01409 (2020).
[30] Aleksei Tiulpin, Jérôme Thevenot, Esa Rahtu, Petri Lehenkari, and Simo
Saarakkala. 2018. Automatic Knee Osteoarthritis Diagnosis from Plain Radiographs: A Deep Learning-based Approach. Scientific reports 8, 1 (2018), 1727.
[31] Linda Wang and Alexander Wong. 2020. COVID-Net: A Tailored Deep Convolutional Neural Network Design for Detection of COVID-19 Cases from Chest
X-ray Images. arXiv:2003.09871 (2020).
[32] Saining Xie, Ross Girshick, and Kaiming He. 2017. Aggregated residual transformations for deep neural networks. In proc. of IEEE conference on computer vision
and pattern recognition. 1492–1500.
[33] Kate Madden Yee. 2020. X-ray may be missing COVID cases found with CT.
Korean Journal of Radiology (2020), 1–7.

