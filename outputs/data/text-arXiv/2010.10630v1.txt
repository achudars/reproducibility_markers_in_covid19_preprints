An Optimization-and-Simulation Framework for Redesigning University
Campus Bus System with Social Distancing

arXiv:2010.10630v1 [eess.SY] 20 Oct 2020

Gongyu Chen, Xinyu Fei, Huiwen Jia, Xian Yu∗ Siqian Shen†

Abstract
The outbreak of coronavirus disease 2019 (COVID-19) has led to significant challenges for
schools, workplaces and communities to return to operations during the pandemic, while policymakers need to balance between individuals’ safety and operational efficiency. In this paper,
we present a mixed-integer programming model for redesigning routes and bus schedules for
the University of Michigan (UM)’s campus bus system, to prepare for students’ return in the
2020 Fall semester. To ensure less than 15-minute travel time for all routes and to enforce
social distancing among passengers, we propose a hub-and-spoke design and utilize real data
of student activities to identify hub locations and reduce the number of bus stops used in the
new routes. The new bus routes, although using only 50% or even fewer seats in each bus,
can still satisfy peak-hour demand in regular semesters at UM. We sample a variety of scenarios that cover variations of peak demand, social-distancing requirements, broken-down buses
or no-shows of drivers, to demonstrate the system resiliency of the new routes and schedules
via simulation. Our approach can be generalized to redesign public transit systems with social
distancing requirement during the pandemic, to reduce passengers’ infection risk.

Keywords: Bus scheduling, integer programming, simulation, social distancing, COVID-19
pandemic

1

Introduction

The University of Michigan (UM)’s fleet of buses provides an estimated 8 million rides between
its three Ann Arbor campuses in Year 2019 (Michigan News, 2020). In an effort to design a safe
campus bus system for the fall semester of 2020 in light of COVID-19, researchers at UM simulated
∗
Department of Industrial and Operations Engineering, University of Michigan at Ann Arbor, USA. Email:
chgongyu,xinyuf,hwjia,yuxian@umich.edu;
†
Corresponding author; Department of Industrial and Operations Engineering, University of Michigan at Ann
Arbor, USA. Email: siqian@umich.edu.

1

how aerosol particles exhaled from passengers sitting in any seat would travel through the interior of
a campus bus (see Zhang et al., 2020). There physics-based computer models of aerosol dispersion
were developed under different social-distancing and bus-operating conditions and the results were
validated with experiments using water vapor in a real bus. Following the results, all bus riders
and drivers must wear face coverings, and the capacity of buses also needs to be reduced to half
of the original capacity (i.e., approximately 78 seats on each bus) or even lower, while the length
of each trip needs to be limited to 15 minutes or less, to minimize riders’ possible exposure to the
virus.
Shortening rides presents a challenge, as the pre-COVID campus bus system at UM uses long
routes designed to minimize transfers. Some routes (e.g., the original Commute South, Commute
North and Northeastern Shuttle) take 45 minutes to 1 hour to travel even without including the
passenger loading/unloading time at each bus stop. Simply breaking down the original long routes
into shorter ones will significantly increase the number of buses needed to cover all the original
demand, especially when only half bus capacity can be utilized. Meanwhile, it is not possible
to add more buses and drivers due to the high cost of purchasing a campus bus (approximately
$800,000 each) and the difficulty of retaining and hiring qualified drivers during the pandemic
(Dolen et al., 2020).
In this paper, we develop a mathematical optimization model and a simulation platform to
design a hub-and-spoke system that relies on short, direct routes with fewer stops. The shorter
routes not only limit all the rides to 15 minutes or less, but also enable more frequent service
using the same number of buses, and therefore reduce passenger wait time as well as the number
of passengers on each bus. We validate the results via simulation by generating a diverse set of
scenarios that take into account spatial-temporal variations of demand, changes of social-distancing
requirements, and random bus broken-down (or equivalently driver no-shows). The simulation
results show that our new design of the campus bus system can satisfy regular peak demand using
the same number of buses but only 50% or even fewer seats in each bus, while all the riders can
find a bus stop within 5 minutes of walking distance and 70% of riders still take only one transit
for completing their trips. For 35% riders, the average waiting time is less than 5 minutes in all the
stops and for 70% riders, the average waiting time is less than 10 minutes. Through simulation,
we also identify the routes that have higher utilization on average or during peak hours, and the
bus stops that have longer average waiting time. Based on these results, we develop contingency
plans of adding more buses to these routes from others in case of some bus failures, to improve the

2

system resilience.

2

Literature Review

Our work is broadly related to prior work on Transit Network Planning (TNP), including Transit
Network Design (TND) (see, e.g., Yu et al., 2012; Ouyang et al., 2014), Transit Network Timetabling
(TNT) (see, e.g., Ibarra-Rojas and Rios-Solis, 2012; Fonseca et al., 2018), Vehicle Scheduling Problem (VSP) (see, e.g., Naumann et al., 2011; Yan et al., 2012), and Transit Network Evaluation (see,
e.g., Chandrasekar et al., 2002; Zhang et al., 2019). The methods we use for redesigning campus
bus routes are also closely related to School Bus Routing Problem (SBRP) (see, e.g., Park and
Kim, 2010) and hub-spoke system design (also referred to as Hub Location Problems, see, e.g.,
Campbell and O’Kelly, 2012).

2.1

Transit Network Design (TND)

TND determines the lines, types of vehicles, and stop spacing to meet population’s movement
requirements. Yu et al. (2012) use a direct traveler density model (first proposed in Yang et al.,
2007) to maximize demand density of route under resource constraints. They propose to use ant
colony to solve the model and conduct numerical study with data from Dalian, China. Ouyang et al.
(2014) represent passenger demand as a continuous function over a geographical space to address
heterogeneous densities across a city. They propose a hierarchical system, consisting of a main grid
and several local grids, to minimize a weighted sum of the total bus idle time, traveled distance,
vehicle usage, passenger walking, waiting at stops, in-vehicle travel time, and penalties for transfers.
Kim and Schonfeld (2014) propose a probabilistic analytical model to design and synchronize a bus
transit network by integrating conventional and flexible bus services and coordinating bus arrivals
at transfer terminals. We refer to Guihaire and Hao (2008) for a comprehensive review of TND
problems.

2.2

Transit Network Timetabling (TNT)

TNT determines the departure and arrival times for a set of trips along the stops of the transit
network in order to optimize a specific objective function. Ibarra-Rojas and Rios-Solis (2012)
consider bus timetable generation for large bus networks where passenger transfers are favored.
The authors formulate an integer program to facilitate passenger transfers and avoid bus bunching

3

in the network. They analyze the structural properties of the feasible solution space and propose a
meta-heuristic method. Extending the results in Ibarra-Rojas and Rios-Solis (2012), both Fonseca
et al. (2018) and Carosi et al. (2019) integrate timetable design and vehicle scheduling problems,
and specifically, Fonseca et al. (2018) formulate a bi-objective mixed-integer programming model to
minimize the transfers and operational cost, solved by meta-heuristic; Carosi et al. (2019) formulate
the integrated problem as a multicommodity flow problem and propose a diving-type approach to
obtain heuristic solutions.

2.3

Vehicle Scheduling Problem (VSP)

For public transit systems, VSP assigns trips to each bus to meet travel demand. Forbes et al. (1994)
propose a mathematical formulation for solving multi-depot scheduling problem (MDSP) and show
the equivalence between MDSP and the multicommodity flow problem. The authors develop an
exact algorithm for solving large-sized MDSPs by (i) solving a pure network flow problem, (ii)
solving a linear relaxation of the MDSP starting from the optimal solution obtained in step (i), and
then (iii) re-optimizing an integer solution via branch-and-bound. Different from the connectionbased network used by Forbes et al. (1994), Kliewer et al. (2006) use a time-space-based network,
which leads to a significant size reduction of the corresponding mathematical model and allows
solving large-scale instances using commercial solvers. Recent studies on VSP (see, e.g., Naumann
et al., 2011; Yan et al., 2012) consider data uncertainty during practical operations and develop
robust solutions. Specifically, Naumann et al. (2011) employ the time–space formulation in Kliewer
et al. (2006) and formulate a robust optimization model for bus scheduling to obtain Pareto optimal
solutions, with the consideration of disruption costs caused by delays in the original schedule. Yan
et al. (2012) focus on schedule design for fixed bus routes with time control points. They consider
uncertain bus travel time where bus drivers are allowed to recover a schedule. The authors develop
a robust optimization model and implement numerical tests using real bus routes in China and
Monte Carlo simulation. Furthermore, Haghani and Shafahi (2002) focus on daily inspection and
maintenance schedules for the buses to minimize interruptions in the daily bus operating schedule
and maximize the utilization of maintenance facilities. They formulate integer programming models
and develop heuristics for obtaining solutions.
Recently, several papers consider the integration of TNT and VSP, such as Wu et al. (2019)
and Dou and Meng (2019). Wu et al. (2019) propose a bi-level model for bus schedule coordination
design, allowing passengers to modify routes multiple times. The upper-level problem is a mixed-

4

integer program minimizing total system cost and the lower-level problem is a route choice model.
They develop a heuristic algorithm to solve this model and show that a more cost-effective schedule
can be obtained by taking rerouting behaviour into consideration. Dou and Meng (2019) propose a
mixed-integer program for a feeder bus timetabling problem to minimize transfer waiting, transfer
failure cost and bus operational cost. This model can handle both transfer passengers and local
passengers whose behavior is constrained by bus capacity during peak hours. They develop a hybrid
artificial bee colony (ABC) algorithm to solve the problem.

2.4

Transit Network Evaluation

To evaluate a given transit network, Chandrasekar et al. (2002) employ a simulation model to
continuously monitoring the bus position and evaluate the efficacy of route-based control of bus
operations. El-Geneidy and Surprenant-Legault (2010) specifically evaluate the performance of
limited-stop service and provide insights for deciding which stops to include. Zhang et al. (2019)
propose a statistical method to analyze operational stability of bus network based on global positioning systems (GPS) trajectory data. They test this method on real world transit networks in
Jinan, China and conclude that unstable situations usually appear in the suburbs and the fringe
area of downtown during the time before peak hours.

2.5

Transit Network Planning (TNP)

Desaulniers and Hickman (2007) conduct a thorough survey on mathematical methods used for
individual steps of strategic, tactical, operational planning, as well as real-time control related
to TNP. Guihaire and Hao (2008) present a global review of the crucial strategic and tactical
steps of transit planning: the design and scheduling of the network. Ibarra-Rojas et al. (2015)
present a comprehensive review of literature on TNP and real-time control strategies suitable to
bus systems. The book by Ceder (2016) summarizes related efficient solutions of TNP, which have
been developed and tested by the author in over thirty years of research work together with mass
transit policymakers and operators all over the world.

2.6

School Bus Routing Problem (SBRP)

There has been a growing body of literature in the context of SBRP since the first paper by Newton
and Thomas (1969). However, there is no single dominant approach for SBRP. The reason is that
each real-world SBRP problem has specific assumptions and constraints and thus the proposed
5

approaches among the literature are highly problem-dependent (see, e.g., Li and Fu, 2002). A
recent survey paper by Park and Kim (2010) provides a comprehensive review of SBRP. They
decompose the SBRP as sub-problems involving data preparation, bus stop selection, bus route
generation, school bell time adjustment, and bus scheduling. They summarize works on SBRP
and present (i) the sub-problems (see Table 1 in Park and Kim, 2010), (ii) the various problem
settings, including the assumptions, constraints, objectives and so on (see Table 4 in Park and
Kim, 2010), and (iii) mathematical models and the corresponding solution methods (see Table 5 in
Park and Kim, 2010) among the literature. Mixed-integer programming models are ubiquitously
adopted to formulate SBRP as well as exact or heuristic-based algorithms (see, e.g., Fügenschuh,
2009; Sun et al., 2018; Bertsimas et al., 2019; Hulagu and Çelikoglu, 2019). Fügenschuh (2009)
considers integrated coordination of school starting time and school bus system while allowing
student transshipment from a route to another. The model is efficiently solved by a branchand-cut algorithm with preprocessing techniques and valid inequalities. Bertsimas et al. (2019)
develop bi-objective routing decomposition (BiRD) algorithm to design school bus route. They
formulate school time selection problem (STSP) as a multiobjective quadratic assignment problem
minimizing community objectives and proxy to transportation costs constructed by BiRD. Local
search methods are proposed to find solutions of this model. Hulagu and Çelikoglu (2019) formulate
electric bus routing problems using multi-objective optimization and solve them for a route starting
from a single depot and serving all campuses. The various objectives include distance cost, vehicle
cost, recharging station cost and environmental cost. Sun et al. (2018) consider stochastic travel
time and build a robust optimal model with hard time window constraints to minimize the worstcase cost of schedule delays in the stochastic and time-varying transportation network.

2.7

Hub-spoke System Design

The early work on hub-spoke system design is initiated by O’kelly (1986); O’Kelly (1986), and hubspoke system design is also referred to as Hub Location Problems (HLP). From then on, hub–spoke
network systems have been attracting the attention of researchers in telecommunication (see, e.g.,
Carello et al., 2004; Kim and O’Kelly, 2009), cost allocation (see, e.g., Matsubayashi et al., 2005),
air transportation (see, e.g., Aykin, 1995; Bryan and O’kelly, 1999), and good delivery networks
(see, e.g., Wasner and Zäpfel, 2004; Yaman et al., 2007). For example, Masson et al. (2017) adopt
a hub-spoke system in logistic transportation. They consider a two-tiered problem where the
the goods are transferred to cities from distribution centers in the first-tier problem and goods

6

are delivered to customers by smaller vehicles in the second-tier problem. They develop a mixedinteger programming model and an adaptive neighbourhood search to solve this problem. Campbell
et al. (2002) and Farahani et al. (2013) provide comprehensive review on mathematical models,
solution methods, and applications of hub-spoke systems. Campbell and O’Kelly (2012) reflect on
the origins of hub location research, especially in transportation, provide some commentary on the
present status of the field, and discuss some promising directions for future effort.

3

An Integer Programming Model for Route Design

We first describe a mathematical programming formulation for designing a hub-and-spoke system
for operating campus buses at UM. We identify locations for bus stops and also the “hubs” using
real travel demand data that have information of potential passengers’ origins and destinations. In

Figure 1: An illustration of the hub-and-spoke system for operating UM buses in Ann Arbor
campuses
Figure 1, we show an abstract hub-and-spoke system with three hub locations (i.e., the squares) in
the UM North Campus, Central-South Campus and Medical Campus, respectively, where the most
number of transits take place during peak hours in regular semesters. A Campus Connector route
will connect these hubs with very frequent buses. Shorter routes are designed to connect other
popular bus stops within each of the three campuses (i.e., sub-regions) from and to each hub. The

7

goal is to reduce the total travel time of all the buses and to increase the bus frequency on each
(shorter) route, so that we only use 50% or less capacity of each bus to meet the same amount of
peak-hour travel demand.
We define notation and formulate an integer programming model for designing bus routes originating from and returning to each hub location as follows. Let I, J, K be the sets of all physical
locations of bus stops, routes and stops in each route for each sub-region that contains one hub
(e.g., each UM campus), respectively. We want to assign one bus stop to each stop in each route.
For notation convenience and without loss of generality, all routes contain the same number of
stops, |K|. The value of |K| is set as the maximum number of stops in any route in a real bus
system.
Let cj be the cost of operating route j for all j ∈ J, ti1 ,i2 be average travel time from stop i1
to stop i2 for all i1 , i2 ∈ I ∪ {hub}, and t̃stop be average loading/unloading time at each stop. We
define binary variables xj , yij , uji,k , ujhub,k ∈ {0, 1} for all i ∈ I, j ∈ J, k ∈ K such that xj = 1 if
we operate route j, yij = 1 if we assign bus stop i to route j, uji,k = 1 if bus stop i is the k-th stop
in route j, and ujhub,k = 1 if the hub is the k-th stop in route j, respectively.
A mixed-integer programming model is given below to design routes for each sub-region that
contains one hub, to satisfy the travel demand from/to the hub.

min

X

s.t.

X

j∈J

cj xj +

X


|K|−1
X
X

thub,i uji,1 +

j∈J

i∈I


ti1 ,i2 uji1 ,k uji2 ,k+1 +

X

X

ti,hub uji,K 

(1a)

i∈I

k=1 i1 ,i2 ∈I∪{hub}

yij = 1, ∀i ∈ I,

(1b)

j∈J

yij ≤ xj , ∀i ∈ I, j ∈ J,
X j
ui,k = yij , ∀i ∈ I, j ∈ J,

(1c)
(1d)

k∈K

X

uji,k + ujhub,k = xj , ∀k ∈ K, j ∈ J,

(1e)

uji,k+1 ≤

(1f)

i∈I

X
i∈I

X

uji,k , ∀k = 1, . . . , |K| − 1, j ∈ J,

i∈I
|K|−1

X
i∈I

thub,i uji,1

+

X

X

ti1 ,i2 zij1 ,i2 ,k

+

X

ti,hub uji,K

+ t̃stop (|K| −

i∈I

k=1 i1 ,i2 ∈I∪{hub}

|K|
X
k=1

∀j ∈ J,
xj ∈ {0, 1} , yij ∈ {0, 1} , uji,k ∈ {0, 1} , ∀i ∈ I, k ∈ K, j ∈ J.

8

ujhub,k ) ≤ T ,
(1g)
(1h)

Figure 2: Optimal routes obtained by solving Model (1) for operating UM buses under COVID-19
The objective function (1a) minimizes the total operational cost and the total travel time for all
routes. (When cj is a constant for all j ∈ J, the objective minimizes the total number of routes
operated and also keeps each route as short as possible.) Constraints (1b)–(1d) ensure that every
bus stop location is assigned to one stop in an operating route. Constraints (1e) assign at most one
bus stop to each stop in each route, and if all the stops have been filled up in a route, we return
to the hub. Constraints (1f) prohibit assigning a bus stop to a stop in a route if an earlier stop
has not been filled. Constraints (1g) enforce a time limit T (e.g., 15 minutes given by COVID19 guideline) for completing each route (including the riding and loading/unloading time), where
P|K|
|K| − k=1 ujhub,k is the number of stops in route j for all j ∈ J.
The objective function (1a) involves bilinear terms uji1 ,k uji2 ,k+1 , which cause the main computational difficulty. Because variables uji1 ,k and uji2 ,k+1 are binary-valued, we can provide an exact
reformulation of Model (1) using McCormick envelopes (McCormick, 1976):
zij1 ,i2 ,k ≤ uji1 ,k , ∀i1 , i2 ∈ I ∪ {hub} , k = 1, . . . , |K| − 1, j ∈ J,
zij1 ,i2 ,k ≤ uji2 ,k+1 , ∀i1 , i2 ∈ I ∪ {hub} , k = 1, . . . , |K| − 1, j ∈ J,
zij1 ,i2 ,k ≥ uji1 ,k + uji2 ,k+1 − 1, ∀i1 , i2 ∈ I ∪ {hub} , k = 1, . . . , |K| − 1, j ∈ J.

9

(a) Campus Connector

(b) Stadium-Diag Loop

(c) Oxford-Markley Loop

(d) Bursley-Baits Loop

(e) Northwood Loop

(f) Green Rd-NW5 Loop

Figure 3: Individual routes and bus stops used in the hub-and-spoke system
We present optimal routes produced by Model (1) in Figure 2 and individual routes with
detailed stops in Figure 3 for operating UM campus buses during the pandemic. Among these
six routes, Bursley-Baits Loop, Northwood Loop and Green Rd-NW5 Loop operate in the north
campus of UM, while Oxford-Markley Loop and Stadium-Diag Loop operate in the central and
south campuses. The Campus Connector operates in between respective hubs in the north and
central campuses.

4

Bus Frequency and Timetable Design for Each Route

Next, we describe procedures for designing bus frequency given all the route information. Let J be
the set of all new routes, and C be the number of seats on each bus. (For notation convenience, we
use the same capacity C for all buses.) For each new route j ∈ J , we first extract the single-trip
time Tj on Google Map API, and then examine all the old routes that pass through each stop in
route j, to calculate an approximate frequency provided by buses in the old system that the new
route j needs to match. We denote this bus frequency as fjold (in minute) for each new route j and
the corresponding transportation capability as HCjold = (60/fjold ) × C, representing the maximum
number of passengers that the old bus system can ride during an hour on the new route j based
10

on its frequency fjold .
We aim at achieving the same or higher hourly transportation capability using s% of the total
bus capacity C on each new route. Specifically, the number of buses we assign to new route j
during each hour can be determined as
&
nj =

'
2 × Tj
,
fjold × s%

and the new bus frequency and hourly transportation capability of route j become
fjnew =
HCjnew

2 × Tj
≤ fjold × s%,
nj
60
= new × C × s% ≥ HCjold .
fj

(2)
(3)

We provide several examples through Tables 1 and 2 to illustrate how the formulas work.
Table 1: Time table and bus frequency of Green Rd-NW5 Loop with single-trip time Tj being 10
minutes
Current (100% capacity)
Hub-and-Spoke (50% capacity**)
Time Frequency fjold HCjold Frequency fjnew HCjnew # of buses nj
6:30am – 8:30pm Every 15 mins*
140 Every 6.67 mins
162
3
*Originally covered by one route: North-East Shuttle with bus capacity C = 35.
**Using 50% capacity, each bus can accommodate 35 × 50% = 18 passengers.

Table 2: Time table and bus frequency of Stadium-Diag Loop with single-trip time Tj being 15
minutes
Current (100% capacity)
Hub-and-Spoke (50% capacity**)
Time Frequency fjold HCjold Frequency fjnew HCjnew # of buses nj
6am – 8:30pm Every 10 mins*
420
Every 5 mins
420
6
8:30pm – 1:30am Every 15 mins*
280 Every 7.5 mins
280
4
*Originally covered by routes: Commuter South/Commuter North for different directions with bus capacity C = 70.
**Using 50% capacity, each bus can accommodate 70 × 50% = 35 passengers.

5

A Simulation Platform for Improving the Design

We validate and improve the performance of the proposed route and bus frequency design using
a discrete-event simulation model. The software ProModel (Harrell and Tumay, 1992) is used to
build the simulation platform. Buses and passengers are defined as entities. Bus stops and routes
are modeled as locations and path networks, respectively. We define three sub-locations–wait area

11

(WA), load area (LA), and unload area (UA) for each stop. A summary of “Variables” and entityspecified “Attributes” of the simulation model is presented in Table 3.
Table 3: Attributes and variables of the simulation model
Variables
stopID: ID associated with each stop
currStop: stopID of the stop where an entity currently stays
maxCap: the maximum number of passengers a bus can hold
Bus-associated Attributes
currCap: current capacity of the bus
Route: route ID of the bus
Passenger-associated Attributes
origin: stopID of the origin stop that the passenger arrives at
dest: stopID of the destination stop that the passenger is moving to
Buses arrive at each hub according to given frequency during different hours and move cyclically
along the route paths. At each stop, buses unload passengers at UA, move to LA and load passengers
from WA, and then leave for UA of the next stop along the route path. A passenger entity, who
either gets off a bus or newly enters the system, will arrive at UA of the stop. The entity will decide
whether to leave the system, to wait at WA, or to move to a near stop for transit. A passenger
moves from WA to LA once a bus with sufficient capacity arrives and if the passenger needs to get
on the bus.
The logic process described above is detailed in Algorithm 1. Passengers enter the bus system
by arriving at their origin stops and move with the buses to reach their destination stops. The
system must know at which stop a passenger can get off and which bus the passenger can take. In
addition, a passenger may take a transit at some stop if the origin and destination stops are on
different routes. In this case, the system needs to select a stop for the passenger to wait. These
decision-making processes are achieved by solving for the shortest path between the passenger’s
origin stop and destination stop through algorithms such as Dijkstra’s. Functions GetOn, GetOff,
and NextStop shown in Algorithm 2 use the shortest path found by Dijkstra and the current stop
to determine if the passenger needs to get on a bus, get off a bus, or select a stop to wait/exit
the system, respectively. An external function block written in C++ is connected to the ProModel
through a DLL application extension file for performing these decision-making functions.
We instantiate the new bus route design with the following settings. We test the six routes produced by Model (1) described in the previous section. Route information, including bus frequency,
availability, and single-trip travel time, is summarized in Table 4. Stop lists for the six routes,

12

Algorithm 1 Main logic process in the simulation.
if Entity is Bus then
if Location is LA then
Compute WaitTime
Load currCap Passenger From WA In WaitTime If GetOn(Passenger, currStop) = Route
Compute currCap
Move To UA
end if
if Location is UA then
Unload (maxCap - currCap) Passenger If GetOff(Passenger, currStop) is True
Compute currCap
Move To LA of the next stop on the Route
end if
end if
if Entity is Passenger then
if Location is UA then
stopID ← NextStop(Passenger, currStop)
Exit If stopID = −1
Move To WA of stopID If stopID ≥ 0
end if
if Location is WA then
Move To LA If Load Requested and GetOn(Passenger, currStop) = Route
end if
if Location is LA then
Loaded On Bus
end if
end if

Algorithm 2 Functions used in the simulation to decide individual passengers’ actions.
function Dijkstra(origin, dest):
Input: route graph, stopID origin, and stopID dest
Require: stop dest is accessible to stop origin
Output: the shortest path between the given stops: origin and dest
end function
function GetOn(Passenger, currStop):
Input: Passenger’s attributes (origin and dest), stopID currStop that Passenger is currently at
Require: currStop is on the shortest path; Passenger is at WA
Output: Route that Passenger can take to move on the shortest path
end function
function GetOff(Passenger, currStop):
Input: Passenger’s attributes (origin and dest), stopID currStop that Passenger is currently at
Require: currStop is on the shortest path; Passenger is on bus
Output: True if currStop is the destination stop or a transit stop
end function
function NextStop(Passenger, currStop):
Input: Passenger’s attributes (origin and dest), stopID currStop that Passenger is currently at
Require: currStop is on the shortest path; Passenger is at UA
Output: stopID of the next stop to wait; -1 (Exit) if currStop is the destination stop;
end function

including the between-stop travel time and the wait time estimation at each stop, are presented in
Tables 11– 16 in Appendix. We use Google Map to estimate the total travel time of each route and
13

travel time between each pair of neighboring stops. For wait time at each stop, the values presented
in Tables 11–16 indicate the wait time at that stop in most cases. The determination of actual wait
time follows the following rules. A bus waits 1 minute for most stops if it needs to load/unload
passengers. It waits 2 minutes at a stop that has more than 10 passengers needing to board, or at
the two hubs: Central Campus Transit Center (CCTC in central campus) and Pierpont Commons
(in north campus). The baseline capacity of each bus is set as 40 passengers, being around 50% of
the full capacity (i.e., 78 seats).
Table 4: Overall information of the six routes
Route
Campus Connector
Stadium-Diag Loop
Oxford-Markley Loop
Green Rd-NW5 Loop
Bursley-Baits Loop
Northwood Loop

Departure Stop
Pierpont Bonisteel
Oxford Housing
Crisler Lot SC-7
Green Road Park
Pierpont Murfin
Pierpont Murfin

Freq. (min)
2
5
5
10
5
5

# of Buses
10
3
5
3
3
3

Travel Time (min)
15
14
25
20
11
10

We focus on bus operations during two peak periods: 8am–10am and 12pm–2pm. The average
hourly total number of passengers is an adjustable input parameter with the default total being
2625 passengers arriving at all stops per hour. Passengers’ arrival follows exponential distribution
and the actual hourly demand fluctuates around the given value of the parameter. The percentage
of Origin-Destination pair (O-D pair) is assumed to be fixed as shown in Table 5 and Table 6 for
periods 8am-10am and 12pm-2pm, respectively. The O-D pair estimation during 8am-10am is based
on the analysis of number of residents in different student dorms, their majors, daily activities, and
course schedules in Fall 2019. The O-D pair settings during 12pm-2pm are the reverse of the
settings in the morning (i.e., 8am-10am). Additionally, 12% randomly generated passengers will
arrive at one of the 44 stops with equal probability (i.e., each stop has 0.27% random passengers
arriving) and get off at all the other 43 stops randomly.
We assume that passengers can make transits at the same stops or at tuples of nearby stops.
Stops, through which at least two routes pass, enable passengers to perform same-stop transit with
no transit time. Some pairs or triples of stops are considered to be within walking distance, so that
passengers can make a transit among them with a transit time set as 0.5 minute. List of stops that
allow same-stop transit is presented in Table 7 and list of stops that allow nearby-stop transit is
presented in Table 8.

14

Table 5: Passengers’ arrival during 8am–10am
Origin Stop
Plymouth Road Crosswalk
Northwood Community Center
Northwood 2
Northwood 5
Michigan Union (NB State)
CCTC
Baits 2
Bursley
IM Building Outbound
Green Road Park and Ride
Random
Total

Percentage (%)
7.08
1.92
2.36
0.64
2.36
0.64
4.55
2.45
14
19
12
8
1.35
1.5
4.2
2.8
12
100

Destination Stop
Pierpont - Murfin
Museum
Pierpont - Murfin
Museum
Pierpont - Murfin
Museum
Art and Architecture
Museum
Pierpont - Bonisteel
Pierpont - Bonisteel
Museum
Museum
CCTC - Chemistry
Pierpont - Murfin
FXB Inbound
Hubbard and Hayward - Inbound
Random

Table 6: Passengers’ arrival during 12pm–2pm
Origin Stop
Pierpont - Murfin

Pierpont - Bonisteel
Art and Architecture
CCTC - Chemistry
Museum

FXB Outbound
Hubbard and Hayward - Outbound
Random
Total

Percentage (%)
7.08
2.36
2.36
1.5
10
14
4.55
1.35
1.92
0.64
0.64
2.45
12
8
4.2
2.8
12
100

Destination Stop
Plymouth Road Crosswalk
Northwood Community Center
Northwood 2
IM Building
CCTC - Chemistry
Michigan Union (NB State)
Northwood 5
New Inbound IM
Plymouth Road Crosswalk
Northwood Community Center
Northwood 2
Northwood 5
Baits 2
Bursley
Green Road Park and Ride
Green Road Park and Ride
Random

Table 7: Stops where same-stop transits are available
Stop
CCTC-Chemistry
East Quad
FXB Inbound
Pierpont - Murfin
Hubbard/Hayward Lot 46

Route 1
Stadium-Diag Loop
Stadium-Diag Loop
Bursley-Baits Loop
Northwood Loop
Northwood Loop

15

Route 2
Oxford-Markley Loop
Oxford-Markley Loop
Green Rd-NW5 Loop
Bursley-Baits Loop
Bursley-Baits Loop

Table 8: Stops that allow nearby-stop transits
Location
CCTC
FXB Building
NCAC
Pierpont

Admin. Service
Mitchell Field
Glen and Catherine
IM Building
Hubbard/Hayward

6

Stops
Chemistry
Museum
Inbound
Outbound
Hubbard
South Outbound
Bonisteel
Murfin
Art & Architecture
Kipke and Green
ICLE
Lot NC - 78
Lot M - 75
Inbound
Outbound
New Inbound
Outbound
Lot NC - 46
Inbound
Outbound

Passing Routes
Stadium-Diag Loop, Oxford-Markley Loop
Campus Connector
Green Rd-NW5 Loop
Green Rd-NW5 Loop
Green Rd-NW5 Loop
Green Rd-NW5 Loop
Campus Connector
Bursley-Baits Loop, Northwood Loop
Green Rd-NW5 Loop
Stadium-Diag Loop
Stadium-Diag Loop
Campus Connector
Campus Connector
Campus Connector
Campus Connector
Oxford-Markley Loop
Oxford-Markley Loop
Bursley-Baits Loop, Northwood Loop
Green Rd-NW5 Loop
Green Rd-NW5 Loop

Result Analysis and System Resiliency

We test the redesigned bus system’s performance given three scenarios that have different bus
capacities and hourly demand estimations. We also conduct tests about the system’s resilience
when there exists a random bus broken-down on any of the six routes. We run 40 replicates for
each scenario setting and the average results of the 40 replicates are analyzed in this section. We use
the statistics “average utilization rate per stop-to-stop trip” Us and “percentage stop-to-stop trip
with at least 75% utilization rate” S0.75 to measure bus operational performance. A stop-to-stop
trip is defined as the buses’ travel for one stop, i.e., from the previous stop to the next stop along
a route. When a bus leaves a stop, we compute its utilization rate as
U =1−

currCap
,
maxCap

(4)

and then calculate Us as the accumulated utilization rate divided by the total number of stops
that buses have passed by. To obtain S0.75 , we count the percentage of stop-to-stop trips that have
utilization rate no less than 75%. We present the results of bus operational performance in Table 9,
where three scenarios A, B, C are tested. Note that in scenario A, we allow to use 50% of the total
number of seats as the desired capacity, while the social-distancing requirement is more strict and

16

we only allow 25% bus capacity use in both scenarios B and C. In scenario C, we have to handle
2625 passengers per hour, being around 150% of the peak-hour travel demand in regular fall terms
at the UM in the past (e.g., in Year 2019).
Table 9: Bus-operational and passenger-related performance measures under different socialdistancing settings
Scenario
Desired Capacity (C)
Hourly demand (D)
Us
All routes
Campus Connector
Stadium-Diag Loop
Oxford-Markley Loop
Green Rd-NW5 Loop
Bursley-Baits Loop
Northwood Loop
S0.75
All routes
Campus Connector
Stadium-Diag Loop
Oxford-Markley Loop
Green Rd-NW5 Loop
Bursley-Baits Loop
Northwood Loop
Passenger-related
Avg. minutes in system
Avg. minutes waiting
Avg. minutes on a bus
Avg. transit times
% who take transits

A
40
2625

B
20
1500

C
20
2625

0.33
0.22
0.09
0.28
0.51
0.54
0.33

0.35
0.24
0.10
0.31
0.51
0.56
0.35

0.43
0.29
0.17
0.47
0.53
0.61
0.43

0.08
0.47
0
0.38
0.49
0.15
0.22

0.11
0.49
0
0.38
0.5
0.17
0.24

0.31
0.54
0.01
0.39
0.5
0.19
0.32

19.29
6.78
12.51
0.25
20.10%

20.68
8.42
12.26
0.25
20.20%

26.59
14.46
12.13
0.25
20.00%

For passenger-related measurements, we focus on the time each passenger spends in the system
on average and how many transits they have to take. We also measure the average wait time of
each passenger spent on each bus stop. If a passenger experiences any transit, the wait time is the
sum of wait time at all the transit stops. Nearby-stop transit time (0.5 minute) is also included in
the wait time. In Table 9, we present results of the passenger-related performance of the system
under different scenario settings during 8am-10am. (Period 12pm-2pm has similar results and
performance, which are omitted for brevity.)
From Table 9, the maximum utilization rate of buses on any of the six routes is around 50%-60%,
indicating that on average the number of passengers on each bus would be no more than 25. This
satisfies the social-distancing requirement discussed in Zhang et al. (2020) for public transit systems.
In addition, no more than 54% stop-to-stop trips load more than 75% of its desired capacity (either
40 or 20 according to the first row in Table 9.) Although increasing hourly demand and decreasing
17

Figure 4: Comparing wait time distribution
capacity result in higher utilization of buses on each route, the change is not significant. This
justifies that the redesigned system will not be overloaded under any of scenario settings. In
Figure 4, we further investigate passengers’ wait time distribution given different capacity-demand
settings during period 8am–10am. For all passengers, the average wait time is less than 15 minutes.
More than half passengers wait less than 5 minutes. Only 1 passenger in 5 needs at least one transit
to complete a trip.
Next, we perform stress tests by randomly breaking down one bus (i.e., reducing the total
number of buses by one) on a route in each scenario setting, while keeping other parameter settings
the same. Using Scenario A (C = 40, D = 2625) as the baseline, we present statistics of passengerrelated performance measures in Table 10.
Table 10: Results of one bus broken-down on each route given C = 40, D = 2625
Breakdown
Avg. time in system
Avg. time on wait
Percent wait ≥ 5 min

Baseline
18.51
5.32
29.23%

Campus Connector
18.57
5.45
29.77%

Stadium-Diag Loop
18.70
5.54
29.81%

Oxford-Markley Loop
19.33
6.29
32.67%

Green Rd-NW5 Loop
18.81
5.64
30.68%

Bursley-Baits Loop
18.59
5.43
29.56%

Northwood Loop
17.59
4.86
31.85%

The performance results in Table 10 are similar to the ones in Table 9 and Figure 4 for all three
scenarios, which implies that the system is insensitive to small changes of bus availability on any
route and it is resilient to capacity reduction.

18

7

Conclusion

A hub-and-spoke transportation system relies on short, direct routes with fewer number of stops.
The shorter routes can meanwhile enable more frequent services for public transit systems, to reduce
passenger wait time as well as the number of passengers on each vehicle. Through studying how
particles exhaled from passengers travel in a vehicle under various conditions, Zhang et al. (2020)
developed guidelines for operating campus buses more safely during the COVID-19 pandemic.
Among these guidelines, each UM campus bus cannot hold more than 50% capacity (or even lower)
and each passenger is desired to ride no more than 15 minutes in the same bus. In this work, we
redesigned the UM campus bus system to (i) shorten routes that connect the four UM campuses
and (ii) increase overall bus capacity utilization and frequency. We consolidated bus stops to reduce
the number of stops and shorten loading/unloading time. To obtain the hub-and-spoke design, we
estimated critical demand for essential bus stops and O-D pairs, built an integer programming
model to generate initial routes, run simulation to evaluate the performance and resilience of the
new design, and also improved it by identifying bottlenecks through stress-tests.
As it is essential to enforce social distancing to control virus spread during the pandemic, our
approach can be utilized to redesign and improve other public transit systems in different scales.
Acknowledgements: The authors are grateful for the support from University of Michigan (UM)
Logistics, Transportation and Parking Department, for supplying data of the UM campus bus
system. The authors also thank the College of Engineering at UM for administrative support to
the team and financial support to all students who are involved in the research during Summer
2020.

References
T. Aykin. Networking policies for hub-and-spoke systems with application to the air transportation
system. Transportation science, 29(3):201–221, 1995.
D. Bertsimas, A. Delarue, and S. Martin. Optimizing schools’ start time and bus routes. Proceedings
of the National Academy of Sciences, 116(13):5943–5948, 2019.
D. L. Bryan and M. E. O’kelly. Hub-and-spoke networks in air transportation: an analytical review.
Journal of regional science, 39(2):275–295, 1999.
J. Campbell, A. Ernst, and M. Krishnamoorthy. Hub location problems. 2002.
19

J. F. Campbell and M. E. O’Kelly. Twenty-five years of hub location research. Transportation
Science, 46(2):153–169, 2012.
G. Carello, F. Della Croce, M. Ghirardi, and R. Tadei. Solving the hub location problem in telecommunication network design: A local search approach. Networks: An International Journal, 44
(2):94–105, 2004.
S. Carosi, A. Frangioni, L. Galli, L. Girardi, and G. Vallese.

A matheuristic for integrated

timetabling and vehicle scheduling. Transportation Research Part B: Methodological, 127:99–
124, 2019.
A. Ceder. Public transit planning and operation: Modeling, practice and behavior. CRC press,
2016.
P. Chandrasekar, R. Long Cheu, and H. C. Chin. Simulation evaluation of route-based control of
bus operations. Journal of transportation engineering, 128(6):519–527, 2002.
G. Desaulniers and M. D. Hickman. Public transit. Handbooks in operations research and management science, 14:69–127, 2007.
S. Dolen, M. Denemy, and S. Shen. Conversation with the University of Michigan Campus Transit
Operational Team, 2020.
X. Dou and Q. Meng. Feeder bus timetable design and vehicle size setting in peak hour demand
conditions. Transportation Research Record, 2673(10):321–332, 2019.
A. M. El-Geneidy and J. Surprenant-Legault. Limited-stop bus service: an evaluation of an implementation strategy. Public Transport, 2(4):291–306, 2010.
R. Z. Farahani, M. Hekmatfar, A. B. Arabani, and E. Nikbakhsh. Hub location problems: A
review of models, classification, solution techniques, and applications. Computers & Industrial
Engineering, 64(4):1096–1109, 2013.
J. P. Fonseca, E. van der Hurk, R. Roberti, and A. Larsen. A matheuristic for transfer synchronization through integrated timetabling and vehicle scheduling. Transportation Research Part
B: Methodological, 109:128–149, 2018.
M. Forbes, J. Holt, and A. Watts. An exact algorithm for multiple depot bus scheduling. European
Journal of Operational Research, 72(1):115–124, 1994.
20

A. Fügenschuh. Solving a school bus scheduling problem with integer programming. European
Journal of Operational Research, 193(3):867–884, 2009.
V. Guihaire and J.-K. Hao. Transit network design and scheduling: A global review. Transportation
Research Part A: Policy and Practice, 42(10):1251–1273, 2008.
A. Haghani and Y. Shafahi. Bus maintenance systems and maintenance scheduling: model formulations and solutions. Transportation research part A: Policy and Practice, 36(5):453–482,
2002.
C. R. Harrell and K. Tumay. Promodel tutorial. In Proceedings of the 24th conference on Winter
simulation, pages 405–410, 1992.
S. Hulagu and H. B. Çelikoglu. A multiple objective formulation of an electric vehicle routing
problem for shuttle bus fleet at a university campus. In 2019 6th International Conference on
Models and Technologies for Intelligent Transportation Systems (MT-ITS), pages 1–5. IEEE,
2019.
O. J. Ibarra-Rojas and Y. A. Rios-Solis. Synchronization of bus timetabling. Transportation
Research Part B: Methodological, 46(5):599–614, 2012.
O. J. Ibarra-Rojas, F. Delgado, R. Giesen, and J. C. Muñoz. Planning, operation, and control of
bus transport systems: A literature review. Transportation Research Part B: Methodological, 77:
38–75, 2015.
H. Kim and M. E. O’Kelly. Reliable p-hub location problems in telecommunication networks.
Geographical Analysis, 41(3):283–306, 2009.
M. E. Kim and P. Schonfeld. Integration of conventional and flexible bus services with timed
transfers. Transportation Research Part B: Methodological, 68:76–97, 2014.
N. Kliewer, T. Mellouli, and L. Suhl. A time–space network based exact optimization model for
multi-depot bus scheduling. European journal of operational research, 175(3):1616–1627, 2006.
L. Li and Z. Fu. The school bus routing problem: a case study. Journal of the Operational Research
Society, 53(5):552–558, 2002.

21

R. Masson, A. Trentini, F. Lehuédé, N. Malhéné, O. Péton, and H. Tlahig. Optimization of
a city logistics transportation system with mixed passengers and goods. EURO Journal on
Transportation and Logistics, 6(1):81–109, 2017.
N. Matsubayashi, M. Umezawa, Y. Masuda, and H. Nishino. A cost allocation problem arising in
hub–spoke network systems. European Journal of Operational Research, 160(3):821–838, 2005.
G. McCormick. Computability of global solutions to factorable nonconvex programs: Part i–convex
underestimating problems. Mathematical Programming, 10(1):147–175, 1976.
Michigan News. Safe busing during COVID-19: The science behind U-M’s changes. https://news.
umich.edu/safe-busing-during-covid-19-the-science-behind-u-ms-changes/, 2020.
M. Naumann, L. Suhl, and S. Kramkowski. A stochastic programming approach for robust vehicle
scheduling in public bus transport. Procedia-Social and Behavioral Sciences, 20:826–835, 2011.
R. M. Newton and W. H. Thomas. Design of school bus routes by computer. Socio-Economic
Planning Sciences, 3(1):75–85, 1969.
M. E. O’Kelly. Activity levels at hub facilities in interacting networks. Geographical Analysis, 18
(4):343–356, 1986.
M. E. O’kelly. The location of interacting hub facilities. Transportation science, 20(2):92–106, 1986.
Y. Ouyang, S. M. Nourbakhsh, and M. J. Cassidy. Continuum approximation approach to bus
network design under spatially heterogeneous demand. Transportation Research Part B: Methodological, 68:333–344, 2014.
J. Park and B.-I. Kim. The school bus routing problem: A review. European Journal of operational
research, 202(2):311–319, 2010.
S. Sun, Z. Duan, and Q. Xu. School bus routing problem in the stochastic and time-dependent
transportation network. PloS one, 13(8):e0202618, 2018.
M. Wasner and G. Zäpfel. An integrated multi-depot hub-location vehicle routing model for network
planning of parcel service. International journal of production economics, 90(3):403–419, 2004.
W. Wu, R. Liu, W. Jin, and C. Ma. Stochastic bus schedule coordination considering demand
assignment and rerouting of passengers. Transportation Research Part B: Methodological, 121:
275–303, 2019.
22

H. Yaman, B. Y. Kara, and B. Ç. Tansel. The latest arrival hub location problem for cargo delivery
systems with stopovers. Transportation Research Part B: Methodological, 41(8):906–919, 2007.
Y. Yan, Q. Meng, S. Wang, and X. Guo. Robust optimization model of schedule design for a fixed
bus route. Transportation Research Part C: Emerging Technologies, 25:113–121, 2012.
Z. Yang, B. Yu, and C. Cheng. A parallel ant colony algorithm for bus network optimization.
Computer-Aided Civil and Infrastructure Engineering, 22(1):44–55, 2007.
B. Yu, Z.-Z. Yang, P.-H. Jin, S.-H. Wu, and B.-Z. Yao. Transit route network design-maximizing
direct and transfer demand density. Transportation Research Part C: Emerging Technologies, 22:
58–75, 2012.
H. Zhang, H. Cui, and B. Shi. A data-driven analysis for operational vehicle performance of public
transport network. IEEE Access, 7:96404–96413, 2019.
Z. Zhang, T. Han, K.-H. Yoo, J. Capecelatro, A. Boehman, and K. Maki. Disease transmission
through expiratory aerosols on an urban bus. Available online at https://arxiv.org/abs/
2010.06690, 2020.

APPENDIX
A

Stops on Each Route and Their Simulation Parameter Setup

Below are tables showing stops on each new route and their estimated travel time, wait time setup
for the simulation.
Table 11: Stops on route Campus Connector
Stop
Pierpont - Bonisteel
Mitchell Field (Lot NC 78)
Glen and Catherine Inbound
Museum
Power Center
Glen and Catherine Outbound
Mitchell Field Lot M75
Cooley - Inbound
Pierpont - Bonisteel

Between-Stop Travel Time
1.7
2.9
2.2
0.9
1.0
2.9
2.8
0.7
–

23

Wait Time Estimation
2
1
1
2
1
1
1
1
–

Table 12: Stops on route Stadium-Diag Loop
Stop
Between-Stop Travel Time Wait Time Estimation
Oxford Housing
1.7
1
Stockwell
3.0
1
Mott Inbound
1.8
1
BSRB
1.5
1
Rackham
1.5
1
CCTC - Chemistry
1.7
2
East Quad
1.2
2
Henderson House
2.2
1
Oxford Housing
–
–

Table 13: Stops on route Oxford-Markley Loop
Stop
Crisler Center Lot SC-7
Kipke and Green
IM Building Outbound
Law Quad
Michigan Union (NB State)
Kraus
CCTC - Chemistry
East Quad
Hill at Oakland
New Inbound IM
ICLE
Crisler Center Lot SC-7

Between-Stop Travel Time
2.0
1.8
2.3
0.7
2.0
1.3
2.4
2.5
3.3
1.6
5.2
–

Wait Time Estimation
1
1
2
1
2
1
2
2
1
1
1
–

Table 14: Stops on route Green Rd-NW5 Loop
Stop
Green Road Park and Ride
Northwood 5
NCAC (on Hubbard)
Hubbard and Hayward - Inbound
FXB - Inbound
LMBE
Art and Architecture
FXB - Outbound
Hubbard and Hayward - Outbound
NCAC
Northwood 5
Green Road Park and Ride

Between-Stop Travel Time
3.6
0.8
0.7
1.1
1.3
2.1
2.3
1.4
1.0
1.9
4.2
–

24

Wait Time Estimation
2
2
1
1
1
1
2
1
1
1
2
–

Table 15: Stops on route Bursley-Baits Loop
Stop
Pierpont-Murfin
Baits 2
Bursley
Northwood 1
Hubbard/Hayward Lot (NC46)
FXB Inbound
Pierpont-Murfin

Between-Stop Travel Time
2.3
0.8
1.3
1.9
1.6
2.6
–

Wait Time Estimation
2
2
2
1
2
1
–

Table 16: Stops on route Northwood Loop
Stop
Pierpont - Murfin
Northwood 3
Northwood 2
Plymouth Road Crosswalk
Northwood Community Center
Hubbard/Hayward Lot (NC46)
Pierpont - Murfin

Between-Stop Travel Time
1.3
1.9
1.7
1.1
0.6
3.4
–

25

Wait time indicator
2
1
2
2
2
2
–

