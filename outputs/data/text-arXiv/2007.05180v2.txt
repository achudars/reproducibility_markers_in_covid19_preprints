Fast and Accurate Forecasting of COVID-19 Deaths
Using the SIkJα Model
Ajitesh Srivastava, Tianjian Xu, and Viktor K. Prasanna
University of Southern California

arXiv:2007.05180v2 [q-bio.PE] 13 Jul 2020

{ajiteshs,frostxu,prasanna}@usc.edu

Abstract
Forecasting the effect of COVID-19 is essential to design policies that may prepare us to handle the pandemic. Many methods have already been proposed,
particularly, to forecast reported cases and deaths at
country-level and state-level. Many of these methods
are based on traditional epidemiological model which
rely on simulations or Bayesian inference to simultaneously learn many parameters at a time. This
makes them prone to over-fitting and slow execution. We propose an extension to our model SIkJα
to forecast deaths and show that it can consider the
effect of many complexities of the epidemic process
and yet be simplified to a few parameters that are
learned using fast linear regressions. We also present
an evaluation of our method against seven approaches
currently being used by the CDC, based on their
two weeks forecast at various times during the pandemic. We demonstrate that our method achieves
better root mean squared error compared to these
seven approaches during majority of the evaluation
period. Further, on a 2 core desktop machine, our
approach takes only 3.18s to tune hyper-parameters,
learn parameters and generate 100 days of forecasts of
reported cases and deaths for all the states in the US.
The total execution time for 184 countries is 11.83s
and for all the US counties (> 3000) is 101.03s.

1

Introduction

COVID-19 has severely affected global health and
economy. Accurate forecasts of the effect of such a
pandemic is essential to design policies regarding resource management and economic decisions. Center
for Disease Control is using around 20 different death
forecasting approaches for this purpose, including our
method [3]. Many of these models are based on the
traditional SEIR model [15], and yet they produce
different results. This suggests that the choice of

the training approach is critical in generating accurate forecasts. Further, fast training and forecasting
is desirable so that the policy-makers can generate
forecasts for different future scenarios for many regions (countries, states, counties) to choose policies
and evaluate possible effects.
We extend our prior model SIkJα [21] to forecast deaths and demonstrate that it provides accurate and fast predictions. Often epidemic models
are trained through numerical solutions to differential
equations [7] or through Bayesian inference [13, 9].
These training approaches may be prone to overfitting as they attempt to simultaneously learn many
parameters of a non-linear model without providing
learnability guarantees, with the exception of few
works [20, 8, 17]. Instead, we transform our model
into a system of simple linear models for learning the
parameters. We show that our model considers many
complexities such as unreported cases due to any reason (asymptomatic, mild symptoms, willingness to
get tested), immunity (if any) or complete isolation,
and reporting delay, and yet, it can be reduced to a
system of two linear equations which can be fitted one
after the other resulting in fast yet reliable forecasts.
We compare our approach with 7 other models that
are being used for forecasting deaths in the United
States by the CDC [3]. We show that our approach
outperforms all the other methods during majority of
the evaluation period (May 10, 2020 – June 28, 2020).
On a 2 core desktop machine, our approach takes only
3.18s to tune hyper-parameters, learn parameters and
generate 100 days of forecasts of reported cases and
deaths for all the states in the US. The total execution time for 184 countries is 11.83s and for all the
US counties (> 3000) is 101.03s.
Our US state-level forecasts and global countrylevel forecasts can be found on our interactive webpage1 , which is updated 3-4 times a week. All
the codes for generating the forecasts and perform1 https://scc-usc.github.io/ReCOVER-COVID-19/

Page 1

ing comparisons with other methods are available on
github2 .

2

The SIkJα Model: Extension
and Simplification

In [21], we proposed the SI-kJα model for the spread
of a virus like COVID-19 across the world which captures (i) temporally varying infection rates (ii) arbitrary regions, and (iii) human mobility patterns.
Within every region (hospital/city/state/country),
an individual can exist in either one of two states: susceptible and infected. A susceptible individual gets
infected when in contact with an infected individual
at a rate depending on when that individual got infected, i.e., rate of infection is β1 for an individual
infected between t − 1 and t − J, β2 for an individual
infected between t − J and t − 2J, and so on, thus
resulting in k sub-states of infection. J is a hyperparameters introduced for a smoothing effect to deal
with noisy data. It also avoids over-fitting the model
by using a small k to capture dependency on the last
kJ days. The hypothesis is that how actively one
passes on the infection is affected by when they get
infected. We assume that after being infected for a
certain time, individuals no longer spread the infection, i.e., ∃k, such that βi = 0∀i > k.
Also, people traveling from other regions can increase the number of infections in a given region.
Suppose F (q, p) represents mobility from region q to
region p. Further extensions were proposed in [20]
to account for the fraction of the population that is
either immune or completely isolated, thus not participating in the epidemic (non-carriers). The probability of reporting a case is also accounted for. A case
may not have been reported if a person is asymptomatic or has mild symptoms, or has symptoms but
decides not to get tested. Our model is represented
by the following system of recurrence relations for a
region p at time t.
(p)

= (1 − ρ(p) )N (p) − It ,

(p)

= γ (p) It−λ ,

St

Rt

(p)

(p)

(p)

(p)

∆It

(1)
(2)

k

X (p) (p)
St
(p)
βi (It−(i−1)J − It−iJ )
(p)
(p)
(1 − ρ )N
i=1
Pk
(q) (q)
(q)
X
i=1 βi (It−(i−1)J − It−iJ )
+δ
F (q, p)
,
(1 − ρ(q) )N (q)
q
=

(3)
2 https://github.com/scc-usc/ReCOVER-COVID-19

Equation 1 suggests that the number of suscepti(p)
ble individuals St is determined by the difference
between the population that is not immune/isolated
and cumulative infections It so far. Here ρ(p) represents the fraction of population out of total population N (p) that is immune/isolated. Equation 2
suggests that an infected case is reported with prob(p)
ability γ (p) after a constant lag λ, resulting in Rt
observed reported cases. Equation 3 describes how
(p)
new infections ∆It are created after time t. It consists of infections from the same region (community
spread) accounting for heterogeneous infection rates
(p)
βi . The new infections may also be created by incoming travel (travel spread). Parameter δ captures
the influence of passengers coming into the region.
Observe that the the new infections at time t are dependent only on the new infections in the last kJ time
units. Therefore, the model implicitly assumes that
after kJ days an individual is not infectious, for any
reason such as recovery, death or being quarantined.

2.1

Death Modeling and Simplification

We extend this model to measure number of deaths
as a function of infected cases:
∆Dt =

kD
X

(p)

(p)

(p)

θi (It−(i−1)JD − It−iJD ).

(4)

i=1

Equation 4 suggests that new deaths ∆Dt occur at
time t as individuals infected between time t − (i −
(p)
1)JD and t − iJD with probability θi . Note that we
do not require kD = k or JD = J. For state-level
forecasts when many states have experienced a rapid
rise of the pandemic, travel is being avoided. Therefore, we may assume that the community spread is
dominant and travel spread can be ignored. Ignoring
travel spread in Equation 3 and combining with 1,
we get
! k
(p)
X (p) (p)
It
(p)
(p)
βi (It−(i−1)J − It−iJ )
∆It = 1 −
(p)
(p)
(1 − ρ )N
i=1
(5)
Combining the above with Equation 2 and setting
γ̄ (p) = γ (p) (1 − ρ(p) ), we get
! k
(p)
X (p) (p)
Rt
(p)
(p)
∆Rt = 1 − (p) (p)
βi (Rt−(i−1)J −Rt−iJ )
γ̄ N
i=1
(6)
Note that the constant lag λ has no effect above. Similarly, from Equation 4 and Equation 2, and setting

Page 2

(p)

θ̄i

(p)

(p)

= θi /γi , we get

∆Dt =

kD
X

(p)

(p)

(p)

θ̄i (Rt+λ−(i−1)JD − Rt+λ−iJD ).

(7)

i=1

Assuming that the time period between contracting
the virus and reporting of the positive case is shorter
than contracting the virus and death, we can rewrite
Equation 7 as:
∆Dt =

kD
X

(p)

(p)

(p)

θ̄i (Rt−(i−1)JD − Rt−iJD ).

(8)

i=1

We first generate forecasts for reported cases using
Equation 6 and then use those forecasts along with
historical reported cases as inputs in Equation 8 to
forecast deaths.

setting and it produces worse results. Further, these
parameters may not provide meaningful insights in a
non-linear setting – as shown in [20], learning the true
value of γ̄ (p) can be done reliably only under certain
condition. We used the results obtained in [20] for
some US states (γ̄ ∈ (1/40, 1/20)) and assume that all
states will stay in the same range. We observed that
γ̄ = 1/40 generally produced good results, however,
the difference in short-term forecasts was not significant when changing γ̄. We perform a grid search for
k ∈ {1, 2} and J ∈ {7, 8, . . . , 14}, while ensuring that
kJ ≤ 14. This is along the lines of the motivation
for 14 days of quarantine3 . The value of J below 7
was not considered driven by the observed weekly periodicity in the data [19], suggesting that we should
smooth over at least 7 days. These hyper-parameters
are allowed to be different for different states. The
values of kD and JD can also be selected by a grid
search. However kD JD is allowed to be higher. We
observed that kD = 2 and JD = 7 generally performed well. Note that the evaluations to identify
best hyper-parameters were performed on a held-out
portion of training data (validation set), and no part
of test data is used. For each state, the evaluation on
the validation set was performed using the root mean
squared error (RMSE) of the predictions on the last
H = 7 days of training data.
s
PT
(p)
(p) 2
t=T −H+1 (∆R̂t − ∆Rt )
, (9)
RM SE =
H
(p)

Figure 1: Disregarding travel spread and simplifying
the model to reduce the number of parameters.
Figure 1 summarizes the transformation of the
model that we started with and its simplification.
The learning of parameters is described next.

2.2

Parameter Learning
(p)

(p)

We consider βi
and θ̄i
as learnable parameters, and k, kD , J, JD and γ̄ (p) are treated as hyperparameters. We let each region have independent
hyper-parameters. The reason for considering γ̄ (p) as
a hyper-parameter is to keep the model linear during
training. We have tested the model in a non-linear

where R̂t is the observed value of reported cases for
state p at time t.
(p)
We learn the parameters βi as described in [21],
which incorporates the fast evolving trend of COVID19 due to changing policies using weighted least
squares. The best fit in the least-squares sense minimizes the sum of squared weighted residuals, i.e., the
difference between observed data and predicted values provided by our learned model. The weighing
scheme is determined by a hyper-parameter α ≤ 1 to
put more weight to the recent infection trend when
learning the model. Lower α implies more emphasis
on the more recent data. We minimize the sum of
squares of weighted errors as
LSER =

T
X
(p)
(p)
(αT −t (∆R̂t − ∆Rt ))2

(10)

t=1

Where Rt is given by the linear equation 6. For learn(p)
ing θ̄i , we assume that the death rates do not evolve
3 https://www.cdc.gov/coronavirus/2019-ncov/
travelers/after-travel-precautions.html

Page 3

very rapidly and can be learned considering a window
of the last w time steps. This introduces another
hyper-parameter, which we find to generally perform
well at w = 50. We minimize the unweighted least
(p)
squared error to obtain θ̄i .
LSED =

T
X

(p)

(∆D̂t

(p)

− ∆Dt )2

dynamics; and 3) module 3 is a health outcomes projection model that takes in consideration of realistic
time delays between infection, symptoms, hospitalization, intensive care, ventilator use, and death to
model deaths and hospitalizations in the population.
As pointed out by the authors [14], the model does
not account for asymptomatic transmissions.

(11)

t=T −w+1
(p)

where D̂t is the true number of new deaths at time t
in region p. Note that before we attempt to learn the
parameters, we perform a moving average smoothing over 7 days to reduce noise due to periodicity in
reporting. This is performed in irrespective of the
smoothing hyper-parameter J.

3

Other Models as Baselines

We picked those methods as baselines from COVID19 Forecast Hub4 that had their reports available every Sunday in the month of May and June. This day
was chosen based on CDC’s definition of a week [5].
Here we provide an overview of the baselines.
CU SELECT. The Shaman Group from Columbia
university uses a meta-population county-level SEIR
model [18] to make COVID-19 projections in the US
based on various contact rates between counties. SELECT is a selection of their forecast reports that tries
to fit the realistic contact rates during different time
periods given current observations and planned intervention policies. The method considers county-tocounty commuters and random visitors, and formulates the transmission during day-time and night-time
separately. They use a combination of iterated filtering (IF) and the Ensemble Adjustment Kalman
Filter (EAKF) [6] framework [11, 12] to calibrate
the model’s parameters. They integrate their model
equations using a Poisson process to represent the
stochasticity of the transmission process.
JHU IDD. The Johns Hopkins ID Dynamics
COVID-19 Group has developed a scenario modeling pipeline [14] for the epidemic projection. The
pipeline contains three module: 1) module 1 is an epidemic seeding module that incorporates the first case
appearance in data and air travel import model; 2)
module 2 is a disease transmission model that takes in
the seeding information and simulates a county-level
meta-population model with stochastic SEIR disease
4 https://github.com/reichlab/covid19-forecasthub/tree/master/data-processed

UCLA SuEIR. UCLA Statistical Machine Learning Lab5 has proposed a variant of the SEIR model
called SuSEIR [22]. It accounts for the untested and
unreported COVID-19 cases. The model can be described by the following ODE:
dSt
dt
dEt
dt
dIt
dt
dRt
dt

β(It + Et )St
,
N
β(It + Et )St
=
− σEt ,
N
=−

(12)

= µσEt − γIt ,
= γIt

The key claim of the SuEIR model is that it can
infer the untested cases as well as unreported cases,
although a discussion on learnability [20] is not provided. More specifically, they treat the “Exposed”
group in the SEIR model as the individuals that have
already been infected and have not been tested, which
are also capable of infecting the “Susceptible” group.
Moreover, some of the people in the “Exposed” group
can get tested and transferred to the “Infectious”
group (which are reported to the public), while the
rest of them will recover/die and transit to the socalled “Unreported Recovered” group (which are not
reported to the public). They use gradient-based optimizers to minimizing a loss function composed of
squared errors on infected and removed cases.
IowaStateLW STEM. Lily Wang’s Research
Group from Iowa State University6 has developed a
non-parametric spatio-temporal epidemic transmission model [16]. They have designed a space-time
epidemic modeling framework by including area-level
characteristics to the traditional SIR model. The
model assumes that there are local characteristics of
a given area that will not vary with time. It further
assumes that such characteristics will influence the
daily new cases in the local area and its surrounding
areas.
5 https://covid19.uclaml.org/
6 https://covid19.stat.iastate.edu

Page 4

Covid19Sim Simulator. COVID-19 Simulator is
developed to simulate the trajectory of COVID-19
in US state-level by researchers from Mass General
Hospital, Harvard Medical School, Georgia Tech and
Boston Medical Center7 . The compartment model is
defined using the SEIR model with continuous time
progression. The model parameters are learned by
first defining sensible ranges on the parameters and
then using simulated annealing8 . The model can simulate three intervention strategies: minimal restriction, current intervention in each state, and complete
lockdown. The forecast reports we use is the simulation of the current intervention in each state.
CovidActNow. CovidActNow is a team of computer scientists, epidemiologists, health experts, and
public policy leaders9 . They use an SEIR model to
forecast trajectory of COVID-19 in US state-level.
Their forecasts rely on fitting predicted cases, deaths,
and hospitalizations to the observations using known
ranges of the parameters and maximum-likelihood
optimization.
YYG ParamSearch. YYG ParamSearch uses an
SEIR model10 . It fixes some of the parameters that it
considers to be known such as the latency of reporting, infectious period, time between illness onset to
hospitalization, time between illness onset to death,
hospital stay time, and time to recovery. It learns
the basic reproduction number R0 , mortality rate,
and the reproduction numbers in various mitigation
scenarios using a grid-search, evaluated using means
squared error.

4

Experiments

4.1

Data

We use three sources of data for positive cases and
number of deaths in the US states.
• JHU: The JHU CSSE COVID19 dataset [1].
This dataset is used by YYG ParamSearch and
Covid19Sim Simulator.
• NYT: The New York Times dataset [2]. This
dataset is used by UCLA SuEIR, COVIDActNow SEIR CAN, and IowaStateLW STEM.
7 https://covid19sim.org/
8 https://covid19sim.org/images/docs/COVID19_simulator_methodology_download_20200507.pdf
9 https://covidactnow.org/
10 https://covid19-projections.com/

• USF: The US Facts dataset [4]. This dataset is
used by JHU IDD CovidSP and CU select.
The three data sources have some inconsistencies as
shown in Figure 2a as three heatmaps obtained by
subtracting the data of NYT from JHU (JHU −
NYT), USF from NYT (NYT − USF), and JHU from
USF (USF−JHU). The y-axis represents the days of
the evaluation period and the x-axis represents the
states. It can be observed that the discrepancy is
limited to few states, but it can be significant – over
150 deaths. Due to such inconsistencies, we present
separate evaluation for methods using different data
sources. Figure 2b shows the number of states and
deaths covered by various ranges of deviations (absolute value) in data. For a fixed value of the deviation
d, we pick the states such that the range of the number of deaths for that state at any given point in the
evaluation period is less than d. We observe that all
three datasets are consistent across 31 states (d < 1)
that approximately cover approximately 33.7% of total deaths at the end of our evaluation period (June
28, 2020). For these 31 states, we are able to compare
all the methods together.

4.2

Runtime

We implemented our approach in Matlab R2020a
on an Intel(R) Core(TM) i3-3220, 3.30GHz CPU (2
cores) running Windows 10 with 8GB RAM. Since
our approach reduces to fitting two linear functions,
the parameters can be learned very quickly. Table 1
shows the runtimes of all the steps involved in generating forecasts – hyper-parameter tuning, parameter
learning for reported cases and deaths, and forecasting reported cases and deaths for 100 days. For all the
states in the US, the entire process takes 3.18s. This
enables extremely fast scenario analysis. We do not
include hyper-parameter tuning for death forecasting,
as so far, we have the hyper-parameters fixed, and did
not see a significant improvement by identifying new
hyper-parameters every time. To demonstrate scalability of our approach we have also presented the
runtimes for global forecasts for 184 countries, and
that for more than 3000 US counties. Our approach
takes 11.83s to for the whole process for 184 countries
and 101.03s for the US counties. Note that we do not
attempt to learn different hyper-parameters for different counties. Instead, we pick the hyper-parameters
corresponding to the state that county belongs to.
We have observed that picking hyper-parameters independently for regions with small number of infections (which is the case with most counties) can lead
to over-fitting.

Page 5

(a) Pairwise differences among the three datasets. Brighter green denotes a higher magnitude positive difference, and
brighter red denotes a higher magnitude negative difference. Black represents no difference

(b) Cumulative number of states and fraction of total deaths among states with increasing deviations in the datasets.

Figure 2: Discrepancies among the three data sources.

Page 6

Table 1: Runtimes for various steps in generating learning and forecasting using our approach.
Step
Hyper-parameter selection
Reported cases param learning
Reported cases forecasts (100 days)
Deaths param learning
Death forecasts (100 days)
Total

US states
2.80 s
0.17 s
0.07 s
0.09 s
0.08 s
3.18 s

184 countries
10.46 s
0.55 s
0.33 s
0.29 s
0.20 s
11.83 s

3000 counties
2.81 s
29.01 s
43.46 s
8.37 s
17.38 s
101.03 s

Table 2: Comparison of all models based on average RMSE

Methods
SIkJa
YYG ParamSearch
Covid19Sim Simulator
UCLA SuEIR
CovidActNow SEIR CAN
IowaStateLW STEM
CU select
JHU IDD CovidSP

4.3

JHU
23.634
26.67
27.82

Daily RMSE
NYT
USF
No Conflict
22.01 22.97
48.74
51.54
65.92
22.97
48.13
33.08
81.57
35.41
65.31
32.36
55.05
48.97
67.04

Evaluation Metric

We evaluate the incident (new) death forecasts using the Root Mean Squared Error (RMSE). We consider two windows of forecasts, daily and weekly. The
provided forecasts are daily which can be aggregated
over a week to evaluate weekly forecasts. For a given
date of forecast release, we compare the true incident
deaths to the forecasted deaths over the next 14 days,
i.e, over T = 2 points for weekly evaluation and over
T = 14 points for daily evaluation. The RMSE is
calculated separately for each state and averaged to
get the final error. Mathematically, for a given set of
states S, we evaluate
s
P
2
1 X
τ (Dτ − D̂τ )
RM SE =
.
(13)
|S|
T
s∈S

Dτ denotes the forecasted death in the period τ
(day/week) and D̂τ denotes the observed incident
deaths.

4.4

Results

Table 2 provides a comparison of all the methods
based on RMSE measured daily and weekly, averaged ovber the evaluation period. Our approach
(SIkJα) produces the best forecasts in all the datasets
based on daily RMSE. For RMSE calculated weekly,
UCLA SuEIR performs slightly better in case of NYT

JHU
75.22
84.42
105.63

Weekly RMSE
NYT
USF
No Conflict
74.21
78.48
139.23
156.83
218.99
73.80
140.84
130.29
256.03
133.81
209.48
120.67
175.71
185.71
254.20

dataset. For other datasets, our approach tops the
list. When considering the 31 states which do not
show any conflict among the three datasets, our approach performs the best based on weekly RMSE,
while UCLA SuEIR outperforms our approach by a
close margin. Overall, in most cases, our approach
produces the best RMSE, and in other cases it is close
to the performance of best performing baseline.
Figures 3 shows the performance of all the forecasts released weekly based on daily RMSE aggregated over two weeks. Note that a higher RMSE on
one week compared to another does not imply worse
performance as higher ground truth may lead to
higher RMSE. These plots should be assessed based
on relative performance on every day of forecast release rather than absolute numbers across the weeks.
We observe that our approach SIkJαconsistently performs well over the evaluation period on all three
datasets.
To observe the effect of data on the performance,
we split the dataset into two halves - high death states
consisting of the top 25 states with most deaths at the
start of the evaluation, and low death states constituting the rest of the states. The results are shown
in Figures 4 and 5 . We observe that the relative performance all the methods are closer to each other on
high death states compared to low death states. This
is expected as states with higher deaths are likely to
average out noise/anomalies, making it easier to train
models and forecast.

Page 7

We also evaluated all the methods on the 31 states
for which there is no conflict among the three datasets
(see Figure 10). We compare this against the errors
obtained by all the methods on the three datasets
calculated on each forecast day. We observe that the
relative errors of the methods are closer to each other
when considering the states with no conflict. This
suggests that the inconsistency in reporting may have
introduced additional noise making it difficult to train
the models.
We repeated the above experiments for the forecasts released weekly based on weekly RMSE aggregated over two weeks. We observe similar trends in
all the figures as noted above, with the exception
of YYG ParamSearch and UCLA SuEIR performing
slightly better than our approach on some forecasts.
Our online interactive website has a dedicated page to
update and show the comparison our approach with
the baselines11 .

5

Discussions

(p)

if Rt < 1 the disease will die out, as it will create
fewer new infections. The basic reproduction number,
that assumes the entire population to be susceptible,
P
(p)
is R0 = J i βi .
Model-based Case Fatality Rate. Case fatality
rate is given by the fraction of reported positive cases
that end up in death. A simple way of calculating
this is by taking the ratio of total deaths and total reported cases. However, this does not consider
the lag between reporting positive and then dying,
and also does not account for recent changes in the
(p)
dynamics. The learned values of θ̄i can be used to
compute model-based case fatality rate (MCFR). According to Equation 8, an individual reported positive
at time t dies on each of the time steps among t + 1 to
(p)
t + J with probability θ̄i , t + J + 1 to t + 2J, and so
on. Therefore, MCFR can be calculated as expected
number of new deaths created by one reported case
as
X (p)
M CF Rt = J
θ̄i .
(16)
i

Reproduction Number. Based on the learned
(p)
values of βi at a time t for a region p, we can identify the dynamic reproduction number [10] of the epidemic in that region, defined as the number of new
infections created by one infected individual in the
remaining susceptible population. Suppose, the individual is infected at time t, then according to Equations 3, they remain active for kJ time steps. From
t + 1 to t + J they will contribute to new infections
(p)
at the rate of β1 , from t + J + 1 to t + 2J at the
(p)
rate of β2 , and so on. Therefore, the total infections
created by one individual is:
(p)

Rt

=J

≈


J 
X
Iτ +(i−1)J+j
1−
(1 − ρ(p) )N (p)
j=1
i
!
(p)
X (p)
Rt
1−
J
βi
(14)
γ̄N
i
X

(p)

βi

Note that if we assume that the new reported cases
in Equation 6 in the last kJ time steps are roughly
equal, then
!
(p)
X (p)
Rt
(p)
(p)
(p)
(p)
∆Rt = 1 −
J
βi ∆Rt−1 = (Rt )∆Rt−1 ,
γ̄N
i
(15)
which suggests that the traditional interpretation of
reproduction number applies to our model as well –
11 https://scc-usc.github.io/ReCOVER-COVID-19/#/
leaderboard

The weekly updated reproduction numbers and
model-based case fatality rates for all US states and
all the countries can be found on our webpage12 .

Acknowledgments
This work was supported by National Science Foundation Award No. 2027007.

References
[1] 2019 novel coronavirus covid-19 (2019-ncov)
data repository by johns hopkins csse. https:
//github.com/CSSEGISandData/COVID-19.
[2] Coronavirus (Covid-19) data in the united
states. https://github.com/nytimes/covid19-data.
[3] Coronavirus disease 2019 (covid-19), forecasts of total deaths.
https://www.
cdc.gov/coronavirus/2019-ncov/coviddata/forecasting-us.html.
[4] Coronavirus locations: COVID-19 map by
county and state.
https://usafacts.org/
visualizations/coronavirus-covid-19spread-map/.
12 https://scc-usc.github.io/ReCOVER-COVID-19/#/score

Page 8

Figure 3: Comparison of all the methods separated by their respective datasets, based on RMSE measured daily.

Figure 4: Comparison of all the methods on high-death states separated by their respective datasets, based on
RMSE measured daily.

Figure 5: Comparison of all the methods on low-death states separated by their respective datasets, based on
RMSE measured daily.

Page 9

Figure 6: Comparison of the methods on all datasets on all states and the states with no-conflict, based on
RMSE measured daily.

Figure 7: Comparison of all the methods on high-death states separated by their respective datasets, based on
RMSE measured weekly.

Figure 8: Comparison of all the methods on high-death states separated by their respective datasets, based on
RMSE measured weekly.

Page 10

Figure 9: Comparison of all the methods on low-death states separated by their respective datasets, based on
RMSE measured weekly.

Figure 10: Comparison of the methods on all datasets on all states and the states with no-conflict, based on
RMSE measured weekly.

Page 11

[5] Mmwr weeks. https://wwwn.cdc.gov/nndss/
document/MMWR_Week_overview.pdf.
[6] Jeffrey L Anderson. An ensemble adjustment
kalman filter for data assimilation. Monthly
weather review, 129(12):2884–2903, 2001.
[7] Ariel Cintrón-Arias, Carlos Castillo-Chávez,
Luis Bettencourt, Alun L Lloyd, and Harvey Thomas Banks. The estimation of the effective reproductive number from disease outbreak
data. arXiv preprint arXiv:2004.06827, 2020.
[8] Arnaud Ducrot, P Magal, Thanh Nguyen, and
GF Webb. Identifying the number of unreported cases in sir epidemic models. Mathematical medicine and biology: a journal of the IMA,
37(2):243–261, 2020.
[9] Vanja Dukic, Hedibert F Lopes, and Nicholas G
Polson. Tracking epidemics with google flu
trends data and a state-space seir model. Journal of the American Statistical Association,
107(500):1410–1426, 2012.
[10] LL Huang, SP Shen, P Yu, and YY Wei. Dynamic basic reproduction number based evaluation for current prevention and control of
covid-19 outbreak in china. Zhonghua liu xing
bing xue za zhi= Zhonghua liuxingbingxue zazhi,
41(4):466–469, 2020.
[11] Edward L Ionides, Carles Bretó, and Aaron A
King. Inference for nonlinear dynamical systems.
Proceedings of the National Academy of Sciences,
103(49):18438–18443, 2006.
[12] Aaron A King, Edward L Ionides, Mercedes Pascual, and Menno J Bouma. Inapparent infections
and cholera dynamics. Nature, 454(7206):877–
880, 2008.
[13] Phenyo E Lekone and Bärbel F Finkenstädt.
Statistical inference in a stochastic epidemic seir
model with control intervention: Ebola as a case
study. Biometrics, 62(4):1170–1177, 2006.
[14] Joseph Chadi Lemaitre, Kyra H Grantz, Joshua
Kaminsky, Hannah R Meredith, Shaun A Truelove, Stephen A Lauer, Lindsay T Keegan, Sam

Shah, Josh Wills, Kathryn Kaminsky, Javier
Perez-Saez, Justin Lessler, and Elizabeth C Lee.
A scenario modeling pipeline for covid-19 emergency planning. medRxiv, 2020.
[15] Michael Y Li, John R Graef, Liancheng Wang,
and János Karsai. Global dynamics of a seir
model with varying total population size. Mathematical biosciences, 160(2):191–213, 1999.
[16] Lei Gao Xinyi Li Shan Yu Myungjin Kim Yueying Wang Zhiling Gu Li Wang, Guannan Wang.
Spatiotemporal dynamics, nowcasting and forecasting of covid-19 in the united states. arXiv,
2020.
[17] Pierre Magal and Glenn Webb. The parameter
identification problem for sir epidemic models:
identifying unreported cases. Journal of mathematical biology, 77(6-7):1629–1648, 2018.
[18] Sen Pei and Jeffrey Shaman. Initial simulation of
sars-cov2 spread and intervention effects in the
continental us. medRxiv, 2020.
[19] Itay Ricon-Becker, Ricardo Tarrasch, Pablo
Blinder, and Shamgar Ben-Eliyahu. A seven-day
cycle in covid-19 infection and mortality rates:
Are inter-generational social interactions on the
weekends killing susceptible people? medRxiv,
2020.
[20] Ajitesh Srivastava and Viktor K Prasanna. Datadriven identification of number of unreported
cases for covid-19: Bounds and limitations.
arXiv preprint arXiv:2006.02127, 2020.
[21] Ajitesh Srivastava and Viktor K Prasanna.
Learning to forecast and forecasting to learn
from the covid-19 pandemic. arXiv preprint
arXiv:2004.11372, 2020.
[22] Difan Zou, Lingxiao Wang, Pan Xu, Jinghui
Chen, Weitong Zhang, and Quanquan Gu. Epidemic model guided machine learning for covid19 forecasts in the united states. medRxiv, 2020.

Page 12

