When the Open Source Community Meets
COVID-19: Characterizing COVID-19 themed
GitHub Repositories
Liu Wang1 , Ruiqing Li2 , Jiaxin Zhu3 , Guangdong Bai2 , Haoyu Wang1
1

arXiv:2010.12218v1 [cs.SE] 23 Oct 2020

2

Beijing University of Posts and Telecommunications, Beijing, China
The University of Queensland, Australia 3 Institute of Software, Chinese Academy of Sciences, China

Abstract—Ever since the beginning of the outbreak of the
COVID-19 pandemic, researchers from interdisciplinary domains
have worked together to fight against the crisis. The open source
community, plays a vital role in coping with the pandemic
which is inherently a collaborative process. Plenty of COVID19 related datasets, tools, software, deep learning models, are
created and shared in research communities with great efforts.
However, COVID-19 themed open source projects have not been
systematically studied, and we are still unaware how the open
source community helps combat COVID-19 in practice. To fill
this void, in this paper, we take the first step to study COVID19 themed repositories in GitHub, one of the most popular
collaborative platforms. We have collected over 67K COVID-19
themed GitHub repositories till July 2020. We then characterize
them from a number of aspects and classify them into six
categories. We further investigate the contribution patterns of the
contributors, and development and maintenance patterns of the
repositories. This study sheds light on the promising direction
of adopting open source technologies and resources to rapidly
tackle the worldwide public health emergency in practice, and
reveals existing challenges for improvement.

I. I NTRODUCTION
The COVID-19 pandemic has quickly become a worldwide crisis. Since its outbreak, COVID-19 has attracted great
attention from various research communities. Researchers
from interdisciplinary domains work together to fight against
the crisis. Beyond the medical domain, computer scientists
have adopted advanced information techniques like machine
learning to help medical practitioners deal with COVID-19 [1],
[2], [3]. The open source community plays a vital role in
coping with the pandemic which is inherently a collaborative
process. Existing research efforts necessitate that the datasets
used for the studies should be open sourced to promote the
extension and collaboration of the work in the fight against
COVID-19. Thus, in the early stage of COVID-19, plenty
of datasets including the statistics of COVID-19 cases, the
COVID-19 diagnosis datasets from X-ray images and cough
sounds, and COVID-19 emotional and sentiment datasets from
social media, are created and shared in our research communities with great efforts [4], [5]. Beyond the datasets, the open
source community has shared a large number of tools (e.g.,
online tracker), software (e.g., contact tracing mobile apps),
deep learning models (e.g., diagnose models and prediction
models) to help combat COVID-19.

GitHub, as the most popular collaborative platform in the
open source community, has gained great attention during this
pandemic. Most of the COVID-19 datasets and software are
open sourced on it. By the time of this study, there are over
67K COVID-19 themed GitHub repositories. Although plenty
of research studies in the software engineering community
have analyzed GitHub from different perspectives [6], [7], [8],
to the best of our knowledge, the COVID-19 themed GitHub
repositories have not been systematically characterized. We
are still unaware how the open source community helps
combat COVID-19 in practice, and there remain a number
of interesting directions to explore, e.g., the popularity and
trends of COVID-19 themed repositories, the characteristics
of contributors, the features and categories of COVID-19
repositories, and the development and maintenance behaviors.
This Work. In this paper, we present the first large-scale
empirical study of COVID-19 themed repositories on GitHub.
We first make efforts to harvest a comprehensive dateset of
COVID-19 themed GitHub repositories. By the time of July
17, 2020, we have collected 67,079 repositories in total (See
Section III-B). Leveraging the dataset, we perform a systematic analysis including popularity and trends analysis, contributor characterization, and national responsiveness analysis (See
Section IV). Then, we take advantage of natural language
processing (NLP) techniques to classify these repositories into
six major categories, including data, contact tracing, toolkit,
forecast & simulation, detection & diagnosis, and helpful in
some ways (See Section V). We further perform an analysis
to understand the development and maintenance behaviors of
COVID-19 themed repositories (See Section VI). Our work is
the first comprehensive study to demystify the reaction of open
source community to the pandemic. Our exploration gives a
first impression on the landscape of the COVID-19 themed
GitHub repositories, revealing some interesting observations:
•

COVID-19 themed repositories are prevalent in
GitHub. We have identified over 67K COVID-19 themed
GitHub repositories contributed by around 68K unique
contributors. Most repositories were created after March
11th, the time when COVID-19 outbreak was officially
declared a pandemic by WHO. As the disease spread
widely, the number of related repositories in GitHub immediately and significantly increased, demonstrating the

As collaboration is an inherent feature of software engineering projects, many studies take use of GitHub to investigate
efficient collaboration models. Thanks to the rich data GitHub
provides, many insights have been identified. Studies show
that the pull-based collaboration model is more effective [13],
although it faces a number of challenges [14]. Factors which
impact the integration of pull-requests are studied from many
perspectives [15], [16], [17]. Pull-request reviewers are recommended [18], [19], and team structures are studied [20] to
improve the efficiency. The code and development techniques
in GitHub are also analyzed. Cross-project code clones [21]
and code quality [22] are studied. The performance of test case
prioritization techniques [23] and test driven development [24]
are evaluated. These studies have greatly enriched our understanding of the software development process in open source
community. In this paper, we intend to have an overview of
the GitHub repositories from similar aspects in the context of
COVID-19, and obtain implications of tackling the large-scale
emergencies from the perspective of open source community.

open source community’s rapid response to the pandemic.
The aims of COVID-19 themed repositories cover various aspects. We found a wide diversity of repositories
and constructed a taxonomy to classify them into six
categories. Repositories are unevenly distributed across
categories. Subtle differences arise when looking in detail
on a per-category basis with regard to the boom time.
• Most COVID-19 repositories are developed rapidly,
while the maintenance lifecycles are short-lived. The
development process for most repositories is rapid and
intense in the early stages after creation. However, most
repositories are not well maintained over the long run, and
soon become inactive. Besides, the activity of contributors
are not significantly affected by the lockdown of cities.
Our results highlight the practical and potential value of
open source technologies and resources in handling global
crisis. They also imply that the advanced techniques and
mechanisms of popularization, internationalization, data and
software sharing, contribution gathering, etc., are required
for more effective collaboration of open source community
in global emergencies. To boost future research, we have
released the collected dataset to the research community at
https://covid19-repos.github.io.
•

C. Software Engineering and COVID-19
A growing number of studies targeting COVID-19 have
sprung in the community of software engineering. Neto et al.
[25] investigated the impact of COVID-19 on software projects
and software development professionals through mining software repositories and a survey study. A few studies seek to
understand developer productivity at technology companies
due to the almost overnight migration to working at home
for software developers. For example, Ford et al. [26] presented a survey study to understand benefits/challenges since
working from home and analyze factors that affect developer
productivity over time. Ralph et al. [27] used a survey to
understand the effects of the pandemic on developers’ wellbeing and productivity, and discussed how organizations may
better support their employed developers. Bao et al. [28] conducted a case study on Baidu Inc. to understand both positive
and negative impacts of working form home on developer
productivity. To the best of our knowledge, no previous studies
have systematically characterized the COVID-19 themed open
source repositories on GitHub.

II. BACKGROUND AND R ELATED W ORK
A. GitHub Repositories
GitHub is one of the most popular collaborative platforms
primarily used for software development. There have been
millions of open source repositories in GitHub so far, which
cover various topics including different languages, frameworks, applications, events, etc. Among them, COVID-19
studied in this paper is a very special one in 2020, and even in
the history of GitHub. The collaboration in GitHub is based on
the git version control system. Developers can create their own
copies of a repository (aka fork) and make local changes. The
git commits record what and when they modify. To contribute
back to the repository, developers request the maintainers to
pull the code from their forks (aka pull-request). Maintainers
can collaborate with others to review the pull-request and
decide to merge or not. The developers of the merged code
are contributors of the repository. GitHub also integrates some
social features. Users are able to follow other users, watch
and star repositories. Users also have profiles of identifying
information, e.g., their locations and companies.

III. S TUDY D ESIGN
We present the details of our characterization on COVID19 themed GitHub repositories. We first describe our research
questions, and then present the dataset used for our study.

B. Analyzing GitHub Repositories

Due to its popularity, social features, and availability of A. Research Questions
the rich data, GitHub has attracted great attention from the
Our study is driven by the following research questions:
software engineering community. Some studies have been
conducted to understand GitHub repositories. Kalliamvakou RQ1 Popularity and Trends. How many COVID-19 themed
et al. [9] highlighted important characteristics of the GitHub
repositories are there in GitHub and when are they
repositories, e.g., most repositories have very few commits
created? How do their creations and alterations correlate
and are inactive, and a large portion of repositories are not for
with the outbreak and evolvement of the pandemic?
software development. Meanwhile, techniques were proposed
It is interesting to investigate when the open source
to classify the GitHub repositories [10], commits [11] and
community reacts to the pandemic, and whether it follows
README [12].
similar trends with the evolvement of COVID-19.

2

1200

# New repositories

RQ2 Aims of COVID-19 themed Repositories. Considering
there are a large number of open source COVID-19
repositories on GitHub, it is unknown to us the aims (categories) of these repositories, i.e., what are they focused
on and how are are they distributed across categories?
RQ3 Development and Maintenance Behaviors. Since many
countries went into lockdown, we are curious whether
the contributors’ activities have been affected by the
quarantine? Due to the urgent nature of COVID-19,
we want to study the development and maintenance
behaviors of these repositories, i.e., are they developed
quickly and well maintained?

1.0

# new repositories
CDF of creation date
CDF of update date
CDF of push date

1000

0.8

800

CDF

0.6

600

0.4

400

0.2

200

0.0

-01
20
-07

-01
20

20
-06

-01
20

20
-05

-01
20

20
-04

-01
20

20
-03

-01
20

20
-02
20

20

20
-01

-01

0

Fig. 1. The distribution of creation date, update date and push date.

this repository meets our need and keep it. Otherwise, it
needs to be further examined. After this step, around 7,000
repositories are picked for inspection in the next step. 2) For
the repositories without a visible sign in their names, we turned
to their descriptions. If the repository description contains no
COVID-19 wordings, it is reasonable for us to consider it
trivial to our research and screen it out. Otherwise, it will be
put to the next inspection, i.e., contextual analysis. We used
regular expressions for fuzzy matching of keyword’s neighbors
via some conjunctions, including the prepositions (e.g., about,
regarding, response to, relevant to, etc.), verbs (e.g., track,
detect, simulate, visualize, etc.) and nouns (e.g., stats, tracker,
analysis, model, etc.), and if it matches successfully, we
regard it as associated with COVID-19 and thus retain it.
After this step, roughly 3,000 repositories are left to check
in the final step. 3) We manually checked the repository to
determine whether it should be kept. The first two authors
manually analyzed these repositories independently. For the
disagreements, a further discussion is performed. In this way,
we ended up filtering out 1,190 irrelevant repositories.
2) Dataset Overview: Finally, we have collected 67,079
COVID-19 themed repositories, by the time of July 17, 2020.
They are contributed by 67,985 unique contributors in total.

B. Data Collection
1) Method: We first need to harvest a comprehensive
dataset of COVID-19 themed repositories. Our collection
process is based on the official GitHub Search API1 , which is
designed to facilitate a wide search for the public repositories
and retrieve meta data about them (e.g., stars, forks, etc.).
Collecting the related repositories. We first rely on a
keyword matching based method to collect COVID-19 themed
repositories. We used three search keywords (i.e., “COVID19”, “COVID19” and “coronavirus”) as parameters to construct search queries respectively, such as “https://api.github.
com/search/repositories?q=covid-19”, and we can get a few
pages of search results that best match “covid-19” (The query
is case-insensitive). Since the GitHub Search API limitation of
1,000 results for each search, we have adopted a segmented
approach, i.e., narrow the results of one query using search
qualifiers and make multiple queries, and finally integrate
them. We used the repository creation time (i.e., created
qualifier) and the number of stars (i.e., stars qualifier) as the
primary and secondary qualifiers respectively. In this way, we
have collected 60,591 results for “covid-19”, 26,289 results
for “covid19” and 11,116 results for “coronavirus”, respectively. After the de-duplication process, we obtained a dataset
that contains 68,269 unique repositories. Besides the meta
information (e.g., id, owner, creation date, stars, programming
language) of each repository, we also collected profiles of
its corresponding contributors, including their names, ids,
locations, etc. We crawled these through the official API2 .

IV. G ENERAL OVERVIEW
In this section, we present the overview analysis of COVID19 themed repositories, including the trend of newly created
repositories, their activeness, their popularity, and the distribution of the contributors.

Filtering the dataset. Our keyword-based collection is
to match a keyword across the entire repository, such that
wherever the keyword appears in a repository, we include
it in our dataset. This may cause false positives. For example, a number of repositories that are irrelevant but with
description like “[TEMPORARILY SUSPENDED because of
COVID-19]” would appear in our search results. We therefore
conducted the following filtering process. 1) We started with
checking the repository name. If the full name of the repository
contains the COVID-19 wordings, e.g., covid-19, coronavirus,
2019-ncov, sars-cov-2, etc., and some anagrams of COVID19, e.g. codiv19, condiv19, cord19, etc., we would assume

A. Trend of COVID-19 themed Repositories
Overall Trend. COVID-19 has rapidly spread around the
world and become a global pandemic in early 2020. As it
spreads, new repositories regarding the disease emerge in
GitHub. We are curious about when these repositories were
created and whether their creation is in line with the trend
of the epidemic growth. Figure 1 presents the distribution of
daily created new repositories, from January to July in 2020. It
can be seen that the number of newly created repositories only
accounted for less than 0.2% before mid-January 2020, while
the number started to increase sharply from mid-late January
and peaked in mid-late March, after which there was a slowly
decreasing trend. Over 65K (98%) repositories were created
after March 1, 2020, and the day with the most creation was

1 https://docs.github.com/en/rest/reference/search
2 https://api.github.com/repos/{repo}/contributors

3

March 28, when 1,202 new repositories were created. Note
that March is also the time when WHO declared COVID-19
a pandemic that started spreading around the world.
Activeness. We also pay attention to the activeness of the
repositories during the pandemic. Through the updated_at and
pushed_at indicators which refer to the most recent update and
push time of the repository, we summarize the distribution
of the latest update date and push date of the repositories,
as shown in Figure 1. The distribution of pushed time is
almost the same as the updated time (see blue line and
purple line in Figure 1), which is expected as the most seen
update behavior is push. We thus only consider either of
them in our subsequent trend analysis. Over 37k (55%) of
the repositories were updated after May 1, 2020, and only
10k (15%) were updated after July 1, indicating that a large
number of repositories lack continuous activeness.

104
103

# Repository

# Repository

103

102

102

101

101
100

100

101

102

stars

103

100

104

100

101

102

forks

103

104

(a) stars
(b) forks
Fig. 2. The distribution of repository popularity.
ExpDev07/coronavirus-tracker-api
pomber/covid19

disease-sh/API

B. Repository Popularity
mathdroid/covid-19-api

In most previous studies [29], [30], the popularity of GitHub
repositories is usually measured by the number of received
stars because the stargazers button is an explicit feature for
users to manifest their interest or satisfaction with a repository.
In addition, the number of forks can be seen as a proxy for
the importance of a repository in GitHub because forks are
used to either propose changes to an existing repository or
as a starting point for a new repository. Besides, we found
that many COVID-19 themed repositories were built atop
of other repositories, and have shown explicitly links in the
Readme.md files, which we called cross-repository reference.
Thus, our investigation will focus on these three aspects.
The number of received stars. We counted the number
of repositories per star and found that the 0-star accounted
for the vast majority, up to 79.6%, followed by the 1star with 11.2%. Figure 2(a) shows the distribution of the
number of repositories with more than one star. Obviously,
it follows the typical power law distribution, i.e., there are
only a few repositories with large number of stars, while
most repositories receive few stars. The most representative
repository, CSSEGISandData/COVID-193 , which is a COVID19 data repository hosted by the Center for Systems Science
and Engineering (CSSE) at Johns Hopkins University, has
received 23,352 stars by the time of our study.
The number of forks. The forks have almost the same
power law distribution with the stars, which is consistent with
our intuition (see Figure 2(b)). There is a high percentage
of 0-fork repositories (88.5%), and the 0-fork and 1-fork
repositories make up the vast majority (95%). The repository
with the most forks is exactly the repository with the most
stars, i.e., the SSEGISandData/COVID-19, which has been
forked 14,392 times as of this writing.
Cross-repository Reference. In addition to the descriptions, we have collected the Readme.md files of all the
repositories in our dataset. We extracted the links from these
files and tried to investigate referencing relationships among

CSSEGISandData/COVID-19

nytimes/covid-19-data

ieee8023/covid-chestxray-dataset
pcm-dpc/COVID-19

Fig. 3. Cross-referencing of COVID-19 repositories.

the COVID-19 themed repositories. It turns out that, 4,811
repositories contain links in their Readme to other repositories
in our dataset, and 2,224 repositories have been referenced
by others. Figure 3 presents the cross-reference relations
among the repositories. The larger the node, the more the
corresponding repository is referenced. Note that we have
classified the repositories into six categories (to be detailed
in Section V), and the color of a node represents the category
of the corresponding repository. As can be seen in Figure 3,
the top 7 most referenced repositories are of the data category. The most frequently referenced repository is again the
CSSEGISandData/COVID-19, which has been referenced by
1,640 repositories.
C. The Distribution of Contributors
Next, we investigate the distribution of the 67,985 collected
contributors. As aforementioned, we gathered their location
information during our data collection, while unfortunately
35,537 (52%) of them did not provide their location data.
Among the location data provided, there are some invalid ones
like “somewhere”, “universe”, “planet”, “internet”, “home”,
etc. Besides, different formats/representations of the location
are provided, including city name only, country name only, and
both. Thus we started with filtering invalid location names, and
then used Geotext [31] to convert all the valid locations into
country names. Finally we acquired a total of 31,296 valid
locations mapping over 200 countries. A map displaying the
country distribution of these contributors is shown in Figure 4.
The top 10 countries in regards to the number of contributors
are the United States (6,436), India (5,389), Brazil (1,992), the
United Kingdom (1,529), Canada (1,132), Germany (1,089),

3 https://github.com/CSSEGISandData/COVID-19

4

TABLE I
D ISTRIBUTION OF CONTRIBUTORS AND REPOSITORIES IN TOP 6
COUNTRIES .
Contributors
Repositories

US

India

Brazil

UK

Canada

Germany

transnational

6,436
5,828

5,389
5,775

1,992
1,860

1,529
1,286

1,132
997

1,089
815

1,490

by a slow decline. While for India and Brazil, we can see
a lot of attention has been paid to the outbreak when it
became a pandemic in March, even though there was not yet a
widespread outbreak in their countries at the time. This reflects
the fact that national responses are not always fully aligned
with the epidemic situation in their own countries. Outbreaks
in other countries can serve as a cautionary tale for a country.

Fig. 4. The country distribution of contributors

Indonesia (877), France (764), Nigeria (606) and Italy (581),
respectively. The distribution of contributors is inline with the
distribution of COVID-19 cases around the world, i.e., United
States, India and Brazil are top countries with regard to the
confirmed COVID-19 cases.

Answer to RQ1: There are over 67K COVID-19 related
repositories in GitHub by the time of our study, and
98% of them were created after March 1, the time when
the coronavirus becomes a pandemic. As the outbreak
spread extensively, a significant increase in the creation
and alteration of related repositories in GitHub instantly
followed, indicating the open source community’s rapid
response to the pandemic.

D. Per Country Analysis
Considering that the emerging time of the COVID-19 pandemic varies from country to country, it is thus valuable to
investigate whether the number of daily new created repositories matches the number of daily new confirmed cases.
On account of this, we conducted case studies in the top 6
countries with the largest number of contributors, i.e., the
United States, India, Brazil, the United Kingdom, Canada
and Germany. We define which country a repository belongs
to by its contributors’ locations. If all the contributors (one
or more) of a repository are located in the same country,
we treat the repository as belonging to that country; if the
different contributors of a repository are located in multiple
countries, we take the repository as transnational. In this way,
we worked out the results as shown in Table I. Obviously,
the distribution of repositories is in line with the distribution
of contributors across countries. We notice that most of the
repositories are contributed by developers of a sole country,
while only 1,490 of them are transnational repositories that
contributed by developers from multiple countries.
We next investigate the correlation between the development
process and the COVID-19 evolvement in each country. We
collected the number of new infections per day as complete
as possible for each country. We show the comparison chart
of 6 countries in Figure 5. In each plot, the red scatter shows
the number of newly created repositories each day and the
blue line presents the number of newly confirmed cases per
day. Beyond this, we also take the latest updated time into
account and plot it with green scatter. From the graphs, we
can derive at least two interesting findings: 1) Regardless of
countries, the trend is relatively similar in both the number of
newly created repositories and latest update repositories, and
even consistent with their overall trends (see Figure 1). This
partly reflects a quick reaction to the public health emergency
in these countries. 2) Taking the blue line into account, we
can find that in some countries, the line and scatters show
a strong consistency in the trend (overall or in stages). For
four countries, i.e., US, UK, Canada and Germany, we can
observe that the blue line, red scatter and green scatter have
significant up-trends that almost overlap and are followed

V. C LASSIFYING COVID-19 R EPOSITORIES
In this section, we seek to understand the focus of collected
COVID-19 repositories. We first rely on manually efforts to
create a taxonomy. Then, we adopt an automated classification
method to classify them.
A. Taxonomy
We conduct a manual investigation to understand the subjects and contents of the COVID-19 themed repositories in
order to create the taxonomy. As it is infeasible for us to
inspect all collected repositories, we seek 200 representative
ones for our manual analysis. As we discussed in Section IV-B,
the number of stars partially indicates the popularity and
quality of a repository, so we picked the top 200 stared ones.
Through extensive manual analysis, we create a taxonomy
including the following six categories:
C1 Data. A large portion of the 200 samples are data-related,
including COVID-19 cases statistics, image datasets, data
visualization and analysis, etc.
C2 Contact tracing. Contact tracing is a key technique used
by public health authorities to contact and give guidance
to anyone who may have been exposed to COVID19 cases. Some repositories in our collection are opensource contact tracing apps or frameworks. For example,
the repository google/exposure-notifications-server4 implements the Exposure Notifications API and provides
reference code for working with Android and iOS apps.
C3 Toolkit. A number of tracking toolkits for COVID-19
epidemic have emerged in GitHub, including mobile
apps, APIs, crawlers, Python packages, etc. For example,
4 https://github.com/google/exposure-notifications-server

5

# New cases

# New cases

20000

10

10000
0

-01

-01

-07

-06

20
20

-01
-05

20
20

-01
-04

Creation
Update
New cases

40

6000
5000
4000
3000
2000
1000
0

# New cases

# Repositories

50
30
20
10

-01

20
-07

-01
20

20
-06

-01
20

20

20
-05

-01

-01

20
-04
20

-01

20
-03

20

20
-02
20

20
-01

-01

0

20

# New cases

-07

-06

20
20

20
20

-05

20
20

-04
20
20

20
20

-01

0

-01

0

-01

500

-01

5

20
20

20
20

-01

20
20

-01

-03

-02

20
20

-01
-01
20
20

20
20

-01
-07

-01
-06

20
20

-01

20
20

-01

-05

20
20

-01

1000

-01

10

-01

1500

-01

-01
-07

-01

20
20

-06

-01

20
20

-05

-01

20
20

-04
20
20

-01

-01

-03

20
20

-02

15

-01

0

0

2000

-03

2000

20
20

30000

20
0

2500

20
20

10

-01

40000

30

(c) Brazil

Creation
Update
New cases

20

-02

20

4000

-01

-04

-03

20
20

-01

20
20

20
20
6000

25

# Repositories

# New cases

# Repositories

8000

30

20
20

50000

(b) India

Creation
Update
New cases

40

Creation
Update
New cases

40

0

(a) US
50

50

# Repositories

10000

-01

-01
-07

-01

20
20

-01

-06
20

20

-01

-05

-04

20

20

-01

20
20

-01

-03

20

20

-01

-02
20

20

-01

20000

-01

0

0

30000

20
20

20000

50

20

Creation
Update
New cases

# New cases
# Repositories

# Repositories

40000

100

20

120
100
80
60
40
20
0

60000

-02

Creation
Update
New cases

150

(d) UK
(e) Canada
(f) Germany
Fig. 5. The number of newly created repositories and newly confirmed cases over time in each country

descending order of the number of stars, till each category has
been assigned 100 repositories. Considering there are multiple
languages in the descriptions, we used Google Translation to
translate all the descriptions into English before labelling. The
labeling was done by the first two authors independently too. A
discussion was performed to reach a consensus on the labels in
the end. After obtaining the ground truth, we utilize the labeled
descriptions to build a classification model that enables us to
classify other repositories.
Approach Overview. We adopted a distance-based classification methodology. Below we brief each step in our approach.
1) Keyword generation and feature set extraction. The
first step of our approach is to generate keywords for each
category such that the characteristics of each category can
be represented by its keywords. Considering that most of
the descriptions have few words, we merged all the 100
descriptions in a category into a single text, resulting in six
documents as our training data. Each of them has its category
name as its label. We extended emojis and those general-thusindistinguishing words like "COVID-19" and "coronavirus"
into the stopwords list (downloaded form www.nltk.org), so
that they are removed from the training data prior to our
keyword generation. All terms in the training data are then
taken to calculate their weights in differentiating the six
documents using the TF-IDF [32], which is a widely used
method to find out how important a word is to differentiate
the labelled documents from each other. We then took the
top 20 keywords for each category and merged them into a
feature set of length 117 (after deduplication). We list several
representative keywords in Table II.
2) Classification. The similarity of documents can be expressed by the angle or distance between their feature vectors
- the smaller the angle or distance means the more similar the
two documents [33]. Thus, we combine TF-IDF and the cosine
similarity for classification. Given a repository to classify,

TABLE II
A TAXONOMY OF COVID-19 THEMED REPOSITORIES .
Category
Data
Contact tracing
Toolkit
Forecast & simulation
Detection & diagnosis
Helpful in some ways

Keywords
data,stat,case,dataset,visual,analysi,updat, daili, death
trace, contact, exposur, notif, ble, bluetooth, privaci, infect
track, tracker, command, built, line, global, latest, statu
simul, model, forecast, predict, spread, estim, seir, trend
x-ray, chest, detect, imag, ct, neural, scan, diagnosi, lung
help, ventil, deliveri, shop, resourc, busi, support, suppli

some repositories provide APIs for tracking the outbreak
around the world or in specific regions; some repositories
release tracker apps with real-time information about the
novel coronavirus.
C4 Forecast and simulation. To assist in developing coping
strategies and decision making, there are a number of
open source repositories dedicated to forecasting, estimating or simulating the disease spread.
C5 Detection and diagnosis. In response to the tremendous
global toll of COVID-19, researchers have rapidly mobilized to investigate solutions for detection, diagnosis,
and treatment. For example, some repositories propose
to diagnose COVID-19 from chest CT or X-Rays, and
some of them implement web services that allow users
to take an at-home COVID-19 antibody test.
C6 Helpful in some ways. Repositories in this category may
not directly target COVID-19, but have a positive effect
on people’s life in some ways through the difficult period
including education, travel, medical equipment, business,
entertainment, communication, etc.
B. Classification Approach
We next seek to automatically classify the repositories.
Ground truth. We first built a ground truth dataset to be
used for training our classification model. It is intended to
include 600 labelled repositories, 100 per category. We built
it by manually labeling collected repositories one by one in

6

TABLE III
T HE PRECISION AND RECALL OF THE CROSS VALIDATION .

TABLE IV
OVERALL C LASSIFICATION R ESULT.

C2

C3

C4

C5

C6

Category

Precision
Recall

0.83
0.92

0.97
0.94

0.96
0.95

0.94
0.91

0.95
0.88

0.94
0.92

# repository
200

we take its description along with the training documents as
input to the TF-IDF method, which generates vectors including
the weights of all terms that appear in all documents. These
vectors are projected to our feature set (of length 117), so
that the feature vectors of all six categories and the tested
repository are derived. We then measure their cosine distance,
and the tested repository is classified into the nearest category.
3) Cross validation. We adopted a ten-fold cross validation
to measure its effectiveness. As shown in Table III, our method
achieves a promising performance, with an overall accuracy of
92%. It is thus feasible to apply our classification model to
large scale repository classification.
C. Overall Classification Results

100

C1

C2

C3

C4

C5

C6

10,882

276

3,276

2,231

1,064

2,010

C1
C2
C3
C4
C5
C6

0

1
1 1
1 1
1 1
1-0 2-0 3-0 4-0 5-0 6-0 7-0
0-0 0-0 0-0 0-0 0-0 0-0 0-0
202 202 202 202 202 202 202

1000

# Commit

C1

# Repositories

Category

500

C1
C2
C3
C4
C5
C6

0

1 1 1 1 1 1 1 1 1
1-0 2-0 3-0 4-0 5-0 6-0 7-0 8-0 9-0
0-0 0-0 0-0 0-0 0-0 0-0 0-0 0-0 0-0
202 202 202 202 202 202 202 202 202

(a) Create_at
(b) Commit
Fig. 6. The distribution of creation date and # of commits in each category

Table IV. Obviously, data category dominates the repositories
(55%). Only 276 repositories are related to contact tracing
techniques.
D. Category-level analysis
We next take a deeper dive into each category. First, we
explore whether there are differences in the timing of the
prevalence of different categories of repositories. Figure 6(a)
shows the distribution of creation date for all the repositories in
each category separately. Most categories have similar trends
and are consistent with the overall trends of creation time
(see Figure 1), while there is a distinct difference for the
“Detection and diagnosis” category, where the line peaks at
the end of April. This indicates that the repositories involving
detection and diagnosis elements flourished slightly later than
other categories, which is reasonable.
Next, we zoomed into several repositories of each category
to examine their activities. For each category, we ranked
the repositories by the number of stars and selected top
(correctly-classified) 100 of them for our study. We clone
these 600 top repositories and use git log command to get
the commit information about each repository. Similar to the
above analysis on the prevalent creation time of each category
( Figure 6(a)), we added up the number of commits per day
for each category to see their committing trends over time, as
shown in Figure 6(b). It can be seen that “Data” category has
far more commits than other categories, which is reasonable
because those repositories providing data require constantly
updating. Besides, the peaks of “Contact tracing” and “Detection and diagnosis” are somewhat later than others. From the
above two category-level comparisons we can discover that,
for repositories with diverse aims and focus, their boom period
are quite likely to be different.

We applied our classification method to the rest of the
dataset. We only focus on the six categories we have identified,
as they are the most dominant and representative (recall that
we identified them based on the top 200 stared repositories).
There are also a number of categories whose description
is either very short (even without description), unclear or
uncharacteristic such that it is infeasible to classify them into
any of our categories. Therefore, we conducted a filtering on
our dataset based on the 117 keywords we have obtained.
We consider introducing a threshold n, and filer out the
repositories whose description contains fewer than n keywords.
As such, the key becomes to figure out an appropriate n.
To this end, we analyzed the 600 labeled ground truth. We
learned that the minimum number of keywords included in
a description is 1 (with 130 descriptions), the maximum is
17 (with 2 descriptions), and the average is 3.08. We also
noticed that the descriptions with 2 keywords are the most
common (with 161 descriptions). It turns out that 21.6%
of the repositories are possible to be classified by a single
keyword, so we set n to 1. However, not every keyword has
the same capacity to distinguish categories, so we grouped
the keywords into two levels, i.e., primary and secondary.
The primary keyword means that the keyword itself could be
relied on to categorize the repository. We identified them from
those descriptions containing only one keyword. Overall, we
obtained 34 such keywords, including "stat", "data", "visual",
"track", "forecast", "predict", "detect", etc.; the remaining 83
are taken as secondary keywords. With obtained keywords,
we filtered the dataset in such a way that, if the description contains at least one primary keyword or at least two
secondary keywords, we keep it. Through this, we obtained
19,739 classifiable repositories. We had a sampling to test our
approach, and found that only 5 out of 200 randomly selected
repositories cannot be classified into any of our six categories,
which is acceptable. Finally, we have these repositories categorized using our classification method. The result is shown in

Answer to RQ2: We created a taxonomy and devised an
automated approach to classify the repositories into categories. The Data category makes up the largest proportion
of them, while the Contact tracing category accounts for
the least. Subtle differences arise when looking in detail
on a per-category basis with regard to the boom time.

7

20000

2000

2000
0

C1
C2
C3

0.6
0.4
0.0

Over the past few months, many countries around the world
went into lockdown to control the spread of COVID-19. We
are interested in investigating whether the quarantine has an
impact on the activity of the users on GitHub. Our study
covers all collected 67,857 contributors. For each contributor,
we collect the number of his/her contributions (e.g., commits,
issues and pull requests) to the GitHub repositories in each day
of the last year, from August 4, 2019 to August 4, 2020, and
use the number of contribution to represent his/her activeness.
We analyzed the activity of contributors over the year through
two indicators: (a) the total number of active contributors per
day (i.e., the number of contributors with contributions greater
than 0), and (b) the total number of contributions from all
contributors per day.
We can examine the trends of the two indicators over time in
three stages, as is shown in Figure 7(a). First, before COVID19 was discovered, they (green and red lines) both exhibit a
largely stable trend, with only a slight decline in late-2019
and early-2020, probably due to the Christmas and New Year
holidays. Then the latter two stages are prior to and after the
WHO’s declaration. We can observe a clearly upward trend
in both lines when the COVID-19 was beginning to explode
globally and the number of confirmed cases rose sharply in
March. More specifically, we take two countries, i.e., US and
UK, as case studies to analyze whether contributor activity
is significantly associated with the corresponding epidemic at
the national level. The results are displayed in Figure 7(b)
and Figure 7(c). We can see in both countries, as the blue
line rises sharply, the green line has almost the same upward
trend, which is consistent with the overall situation. These
findings suggest that COVID-19 did not significantly disturb
contributors’ work in GitHub, and may have even given them
more time and motivation to contribute. Beyond that, it is
interesting to see that the trends in both indicators are cyclical
and the periodicity is one week upon our inspection.

-01

-01

-08

20

20

-01

-07

20

20

-01

-06

20

20

-01

-01

-05
20

20
C1
C2
C3
C4
C5

0.4
0.2

0.2

A. Contributor Activeness

0.6

Normalized code line

Normalized Commit

(c) UK

0.8

In this section, we direct attention to the development and
maintenance behaviors of these repositories.

-04

20

(b) US
Fig. 7. The activity of contributors over the time

VI. D EVELOPMENT AND MAINTENANCE B EHAVIORS

20

-01

-03

20
20

20
20

20

-02

-01

0

-01

-01

-01

-08
20

-01
20

20

-07

-01

-06

20

20

-01
20

20

-05

-01

-02
20

20

20

-01

-01

0

4000

20

0

8000
6000

20

2500

# Contributors
# Contributions
# New cases

Daily new cases

5000

20

(a) Overall

Daily new cases
Contributor Activity

4000

-04

0

0

40000

20

20000

7500

10000

20

100000

6000

-01

200000

40000

60000

-03

60000

# Contributors
# Contributions
# New cases

12500

20

300000

Worldwide new cases

20

# Contributions

Contributor Activity

# Contributors

Daily new cases

Contributor Activity

80000

0

10

20

30

40

50

Dates after creation

60

0.0

0

10

20

30

40

50

Dates after creation

60

(a) Commit
(b) Code line
Fig. 8. The general patterns of commit and line of code.

after a repository is created, so we performed clustering on the
postures of commit over a period of time of each repository.
For each repository, we retrieved the number of commits per
day over two months (60 days) since it was created, took them
as feature vectors and performed L2 regularization. Then we
applied the K-Means clustering. We used the Elbow Method
to find the optimal value of k, which is 3. Thus we grouped the
repositories into three clusters. Figure 8(a) presents the trends
of commit in each cluster. We can see that the majority of the
commits are done in the first few days after creation.
1) Cluster 1 (in red) implies a relatively stable trend that
with not so many but continuous commits, reflecting the fact
that some repositories have ongoing maintenance after early
development. For example, a repository named “covid-19data” provides data on the COVID-19 confirmed cases around
the world. We checked its commit history and found that the
commit happened almost every day and the number of commits
range from 1 to 20 within a day.
2) Cluster 2 (in green) indicates that the commits are
intensive in the first few days after creation, but later the
number decreases to nearly 0, which reflects the fact that
some repositories are infrequently modified after the initial
development is completed. For example, there is a repository
called “covid19” designed to visualize and track the COVID19 pandemic by country. It committed frequently in the first
five days (average of 27), and then fewer and fewer until 0.
3) Cluster 3 (in blue) has the similar trend with cluster
2, except that its commits flourish earlier, like the first day
when created. For example, there is a repository called “infectiontracker”, which implements an app for tracing chains
of infection and for sharing timely information in the event of
COVID-19 infection, with a trend that a lot of commits (93)
in the first day, then drops to 0 sharply.
We next investigate the category level distribution (see
Table V). Most of the repositories in “Data” category are
clustered into cluster 1, which conforms to Figure 6(b). Half

B. Commit Trends
We clone the top 100 repositories with the most stars for
each category and use git log command to get their commit
history. We are interested in examining how commit evolves

8

in cluster 5, indicating that this trend may be very uncommon.
We then analyzed the logs of their commits history and found
that they added/uploaded files or implemented a new feature on
the day the lines of code soared, which are normal occurrences
of code development. Note that, we further investigate the
distribution of different LOC patterns across categories. We
observe that they follow the similar distribution with the
overall trend, i.e., cluster 1 and 2 are dominant.

TABLE V
D ISTRIBUTION OF COMMIT CLUSTERS IN EACH CATEGORY

Category
Data
Contact tracing
Toolkit
Forecast&simulation
Detection&diagnosis
Helpful in some ways
Total

Cluster 1
73
34
44
56
39
53
299

Cluster 2
16
19
29
22
29
25
140

Cluster 3
11
47
27
22
32
22
161

Total
100
100
100
100
100
100
600

Answer to RQ3: The activity of contributors are not
significantly affected by the lockdown of cities. Instead,
the quarantine has somewhat boosted contributors’ engagement in GitHub. Most of the repository development
process is prompt and intense in the early stages after
creation. Some of the repositories undergo a longer
development period (more than two months) and most of
them are not well maintained over the long term.

of the repositories tend to be inactive after a short period of
vitality. Given that we choose repositories with a high number
of stars, it is reasonable to believe that there exist many more
repositories not well maintained for long periods of time.
C. Lines of Code (LOC)
We are also interested in exploring the code development
process, i.e., the variation of LOC over time. Similar to the
analysis of commit evolution, for each repository, we collected
the LOC per day over two months (60 days) since it was
created, and then applied K-Means clustering likewise. We
also used the Elbow Method to find the optimal value of
k, which is 5. We clustered the data into five clusters and
Figure 8(b) shows the pattern of each cluster.
In general, the number of code lines shows an increasing
trend, although the period of growth varies. Over 60% of the
repositories (363) are clustered into cluster 1, which shows
a tendency of code lines to increase to a certain extent very
early on (within five days after creation) and remain stable
afterwards, i.e., the code development is concentrated in the
very early days and with little or even no change thereafter.
For example, there is a repository5 that added 5,398 lines of
code on the first day of creation, then gradually increased to
10,182 lines by the 19th day, and has remained stable with
handful changes since then. It suggests that most repositories
are developed quickly but tend to remain stable after the initial
development. Cluster 2 (164) and cluster 3 (60) manifest a
general trend of steady rise, which fits our perception, although
the periods of rapid growth are somewhat different and cluster
3 seems to take longer to develop. Cluster 4 (8) shows that
the lines of code fluctuate considerably especially in the first
month. To understand this pattern, we manually checked the
commit messages of several repositories in this cluster. We
can observe the following major reasons: adjust code or data,
cleanup or refactoring, remove data and unused code, etc. For
example, there is a repository6 whose lines of code suddenly
reduced from 40,343 to 9,926 on the 25th day, and the message
of the commit is “Massive cleanup and refactoring..... Moved
all fonts and stylesheets to local. Removed some deprecated
code and unneeded data files”. Cluster 5 shows that the lines
of code remain almost stable over a long period after creation,
while increasing sharply at the end time period we focused on,
implying that the code development process takes a longer
time, like cluster 3. Note that there are only five repositories

VII. D ISCUSSION
A. Implications
Our results show that open source technologies can be
rapidly applied to tackle the worldwide public health emergency. A great many attempts from all over the world have
been done on GitHub, covering various aspects from COVID19 data, computer-aid diagnosis to daily life, and some of
them started shortly after the appearance of COVID-19, as
well as produced some valuable deliverable with high stars and
references. We notice that contributors’ activities in GitHub
are not significantly influenced by the lockdown of cities.
Coping with pandemic is an inherently collaborative process.
The collaboration platform, GitHub, plays an important role
to support the software development and information sharing.
It should be noticed that these technologies and resources can
be very helpful in other emergencies too.
Our findings also reveal some underlying challenges and
propose several potential directions for improvement as follows: 1) A large proportion of repositories are data related,
however, GitHub is built on Git and not very suitable to share
data. The platform can be extended or integrate with other data
sharing sites for such requirements. 2) Majority of repositories
are intra-national and people from different countries may
use the native language solely. Internationalization is essential
for information exchange in worldwide collaboration. Internationalization techniques can be applied. 3) Most repositories
are not well maintained over the long run, and soon become
inactive. It is challenging to convene a software project with
large number of participants in a short time. Some mechanisms
can be developed for project organization in emergencies.
B. Limitations
We recognize that our study carries several limitations.
First, our investigation is limited by repositories we identified.
Although we make efforts to cover all the repositories contains
any of the three most representative keywords we summarized,

5 https://github.com/rizmaulana/kotlin-mvvm-covid19
6 https://github.com/futurice/corona-simulations

9

it is quite possible that some COVID-19 related repositories
are overlooked by us. Nevertheless, we believe our collection
has covered most of the available COVID-19 themed repositories on GitHub. Second, this paper aims to analyze how open
source community helps combat COVID-19, however GitHub
is not the only platform where people can share their open
source projects, which might limit our observations. Third,
even though a large number of repositories were collected,
only a subset of all COVID-19 relevant repositories were
classified and analyzed. The major reason is that most of them
are inactive and we cannot understand these repositories based
on empty description or description with very few words.

[13] J. Zhu, M. Zhou, and A. Mockus, “Effectiveness of code contribution:
From patch-based to pull-request-based tools,” in Proceedings of the
2016 24th ACM SIGSOFT International Symposium on Foundations of
Software Engineering (FSE), 2016, p. 871–882.
[14] G. Gousios, M.-A. Storey, and A. Bacchelli, “Work practices and
challenges in pull-based development: The contributor’s perspective,”
in Proceedings of the 38th International Conference on Software Engineering, 2016, p. 285–296.
[15] W. Zou, J. Xuan, X. Xie, Z. Chen, and B. Xu, “How does code style
inconsistency affect pull request integration? an exploratory study on
117 github projects,” Empir. Softw. Eng., vol. 24, no. 6, pp. 3871–3903,
2019.
[16] O. Kononenko, T. Rose, O. Baysal, M. W. Godfrey, D. Theisen, and
B. de Water, “Studying pull request merges: a case study of shopify’s
active merchant,” in Proceedings of the 40th International Conference on
Software Engineering: Software Engineering in Practice, ICSE (SEIP)
2018, 2018, pp. 124–133.
[17] G. Vale, A. Schmid, A. R. Santos, E. S. de Almeida, and S. Apel, “On
the relation between github communication activity and merge conflicts,”
Empir. Softw. Eng., vol. 25, no. 1, pp. 402–433, 2020.
[18] D. M. Soares, M. L. de Lima Júnior, A. Plastino, and L. Murta, “What
factors influence the reviewer assignment to pull requests?” Inf. Softw.
Technol., vol. 98, pp. 32–43, 2018.
[19] Y. Yu, H. Wang, G. Yin, and C. X. Ling, “Reviewer recommender
of pull-requests in github,” in 30th IEEE International Conference on
Software Maintenance and Evolution, Victoria, BC, Canada, September
29 - October 3, 2014. IEEE Computer Society, 2014, pp. 609–612.
[20] M. E. Mezouar, F. Zhang, and Y. Zou, “An empirical study on the teams
structures in social coding using github projects,” Empir. Softw. Eng.,
vol. 24, no. 6, pp. 3790–3823, 2019.
[21] M. Gharehyazie, B. Ray, M. Keshani, M. S. Zavosht, A. Heydarnoori,
and V. Filkov, “Cross-project code clones in github,” Empir. Softw. Eng.,
vol. 24, no. 3, pp. 1538–1573, 2019.
[22] B. Ray, D. Posnett, P. T. Devanbu, and V. Filkov, “A large-scale study
of programming languages and code quality in github,” Commun. ACM,
vol. 60, no. 10, pp. 91–100, 2017.
[23] Q. Luo, K. Moran, L. Zhang, and D. Poshyvanyk, “How do static and
dynamic test case prioritization techniques perform on modern software
systems? an extensive study on github projects,” IEEE Trans. Software
Eng., vol. 45, no. 11, pp. 1054–1080, 2019.
[24] N. C. Borle, M. Feghhi, E. Stroulia, R. Greiner, and A. Hindle, “Analyzing the effects of test driven development in github,” in Proceedings
of the 40th International Conference on Software Engineering (ICSE),
2018, p. 1062.
[25] P. A. da Mota Silveira Neto, U. A. Mannan, E. S. de Almeida, N. Nagappan, D. Lo, P. S. Kochhar, C. Gao, and I. Ahmed, “A deep dive on the
impact of covid-19 in software development,” 2020, arXiv:2008.07048.
[26] D. Ford, M.-A. Storey, T. Zimmermann, C. Bird, S. Jaffe, C. Maddila,
J. L. Butler, B. Houck, and N. Nagappan, “A tale of two cities: Software
developers working from home during the covid-19 pandemic,” 2020,
arXiv:2008.11147.
[27] P. Ralph, S. Baltes, G. Adisaputri, R. Torkar, V. Kovalenko,
M. Kalinowski, N. Novielli, S. Yoo, X. Devroey, X. Tan, and et al.,
“Pandemic programming,” Empirical Software Engineering, Sep 2020.
[Online]. Available: http://dx.doi.org/10.1007/s10664-020-09875-y
[28] L. Bao, T. Li, X. Xia, K. Zhu, H. Li, and X. Yang, “How does working
from home affect developer productivity? – a case study of baidu during
covid-19 pandemic,” 2020, arXiv:2005.13167.
[29] H. Borges, M. T. Valente, A. Hora, and J. Coelho, “On the popularity
of github applications: A preliminary note,” 2015, arXiv:1507.00604.
[30] H. Borges, A. Hora, and M. T. Valente, “Understanding the factors that
impact the popularity of github repositories,” in 2016 IEEE International
Conference on Software Maintenance and Evolution (ICSME), 2016, pp.
334–344.
[31] “Geotext,” https://github.com/elyase/geotext.
[32] A. A. Hakim, A. Erwin, K. I. Eng, M. Galinium, and W. Muliady,
“Automated document classification for news article in bahasa indonesia
based on term frequency inverse document frequency (tf-idf) approach,”
in 2014 6th International Conference on Information Technology and
Electrical Engineering (ICITEE), 2014, pp. 1–4.
[33] M. Artama, I. N. Sukajaya, and G. Indrawan, “Classification of official
letters using TF-IDF method,” Journal of Physics: Conference Series,
vol. 1516, p. 012001, apr 2020.

VIII. C ONCLUSION
This paper presents the first large scale empirical study of
COVID-19 themed repositories on GitHub. We make efforts
to collect over 67K related repositories and characterize them
from trend, popularity, contributors, etc. To further understand
the development and maintenance behaviors of COVID-19
themed repositories, we propose a NLP-based method to
classify them and then perform a per category analysis. Our
observations show the promising direction of applying open
source technologies to tackle public health emergency, and
reveal some underlying challenges for improvement.
R EFERENCES
[1] F. Shan, Y. Gao, J. Wang, W. Shi, N. Shi, M. Han, Z. Xue, D. Shen,
and Y. Shi, “Lung infection quantification of covid-19 in ct images with
deep learning,” 2020, arXiv:2003.04655.
[2] M. Barstugan, U. Ozkaya, and S. Ozturk, “Coronavirus (covid-19)
classification using ct images by machine learning methods,” 2020,
arXiv:2003.09424.
[3] M. Nour, Z. Cömert, and K. Polat, “A novel medical diagnosis model
for covid-19 infection detection based on deep features and bayesian
optimization,” Applied Soft Computing, p. 106580, 2020.
[4] J. Shuja, E. Alanazi, W. Alasmary, and A. Alashaikh, “Covid-19 open
source data sets: A comprehensive survey,” biorxiv, 2020.
[5] E. Chen, K. Lerman, and E. Ferrara, “Tracking social media discourse
about the covid-19 pandemic: Development of a public coronavirus
twitter data set,” JMIR Public Health and Surveillance, vol. 6, no. 2, p.
e19273, May 2020. [Online]. Available: http://dx.doi.org/10.2196/19273
[6] B. Kollanyi, “Automation, algorithms, and politics| where do bots come
from? an analysis of bot codes shared on github,” International Journal
of Communication, vol. 10, no. 0, 2016.
[7] Z. Liao, H. Jin, Y. Li, B. Zhao, J. Wu, and S. Liu, “Devrank: Mining
influential developers in github,” in 2017 IEEE Global Communications
Conference (GLOBECOM), 2017, pp. 1–6.
[8] M. J. Lemay, “Understanding Java Usability by Mining GitHub Repositories,” in 9th Workshop on Evaluation and Usability of Programming
Languages and Tools, 2019, pp. 2:1–2:9.
[9] E. Kalliamvakou, G. Gousios, K. Blincoe, L. Singer, D. M. German, and
D. Damian, “The promises and perils of mining github,” in Proceedings
of the 11th Working Conference on Mining Software Repositories (MSR),
2014, p. 92–101.
[10] Y. Zhang, F. F. Xu, S. Li, Y. Meng, X. Wang, Q. Li, and J. Han, “Higitclass: Keyword-driven hierarchical classification of github repositories,”
in 2019 IEEE International Conference on Data Mining (ICDM), 2019,
pp. 876–885.
[11] C. Casalnuovo, Y. Suchak, B. Ray, and C. Rubio-González, “Gitcproc:
A tool for processing and classifying github commits,” in Proceedings
of the 26th ACM SIGSOFT International Symposium on Software
Testing and Analysis (ISSTA), 2017, p. 396–399. [Online]. Available:
https://doi.org/10.1145/3092703.3098230
[12] G. A. A. Prana, C. Treude, F. Thung, T. Atapattu, and D. Lo, “Categorizing the content of github README files,” Empir. Softw. Eng., vol. 24,
no. 3, pp. 1296–1327, 2019.

10

