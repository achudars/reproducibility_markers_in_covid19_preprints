Detection of Change Points in Piecewise Polynomial Signals
Using Trend Filtering
Reza Valiollahi Mehrizi1 and Shojaeddin Chenouri1

arXiv:2009.08573v1 [stat.ME] 18 Sep 2020

1

Department of Statistics and Actuarial Science, University of Waterloo

Abstract
While many approaches have been proposed for discovering abrupt changes in piecewise
constant signals, few methods are available to capture these changes in piecewise polynomial
signals. In this paper, we propose a change point detection method, PRUTF, based on
trend filtering. By providing a comprehensive dual solution path for trend filtering, PRUTF
allows us to discover change points of the underlying signal for either a given value of the
regularization parameter or a specific number of steps of the algorithm. We demonstrate
that the dual solution path constitutes a Gaussian bridge process that enables us to derive an
exact and efficient stopping rule for terminating the search algorithm. We also prove that the
estimates produced by this algorithm are asymptotically consistent in pattern recovery. This
result holds even in the case of staircases (consecutive change points of the same sign) in the
signal. Finally, we investigate the performance of our proposed method for various signals
and then compare its performance against some state-of-the-art methods in the context of
change point detection. We apply our method to three real-world datasets including the
UK House Price Index (HPI), the GISS surface Temperature Analysis (GISTEMP) and the
Coronavirus disease (COVID-19) pandemic.

KEYWORDS: Change point detection, Trend filtering, Gaussian bridge process, Pattern recovery, COVID-19.

1

Introduction

The problem of change point detection is more than sixty years old. It was first studied by
Page (1954, 1955), and since then, has been of interest to many scientists including statisticians.
Many of the earlier developments concerned the existence of at most one change point; however,
considerable attention in recent years has been given to multiple change point analysis, which
has found applications in many fields such as finance and econometrics, Bai and Perron (2003);
Hansen (2001), bioinformatics and genomics, Futschik et al. (2014); Lavielle (2005), climatology,
Liu et al. (2010); Pezzatti et al. (2013), and technology, Siris and Papagalou (2004); Oudre et al.
(2011); Lung-Yut-Fong et al. (2012); Ranganathan (2012); Galceran et al. (2017). Consequently,
there is a vast and rich literature on the subject. In the following, we only review a body of
literature on a retrospective change point framework closely related to our work and refer the

interested readers to Eckley et al. (2011); Lee (2010); Horváth and Rice (2014); Truong et al.
(2018) for more comprehensive reviews.
We consider the univariate signal plus noise model
yi = fi + εi ,

i = 1, . . . , n,

(1)

where fi = f (i/n) is a deterministic and unknown signal with equally spaced input points over
the interval [0, 1]. The error terms ε1 , . . . , εn are assumed to be independently and identically
distributed Gaussian random variables with mean zero and finite variance σ 2 . We assume that
f (·) undergoes J0 unknown and distinct changes at point fractions 0 = ω0 < ω1 < . . . < ωJ0 <
ωJ0 +1 = 1, where the number of change point fractions, J0 can grow with the sample size n.
Additionally, we assume that f (·) is a piecewise polynomial function of order r = 0, 1, 2, . . ..
These assumptions imply that, associated with ω0 , . . . , ωJ0 +1 , there are change points locations
0 = τ0 < τ1 < . . . < τJ0 < τJ0 +1 = n, which partition the entire signal f = (f1 , . . . , fn ) into
J0 + 1 segments. More specifically, any subsignal of f within segments created by the change
points follows an r-degree polynomial structure with or without a continuity constraint at the
change points. For more detail, see Figure 2. Change in the level of a piecewise constant signal,
known as the canonical multiple change point problem, and change in the slope of a piecewise
linear signal are examples of the problem under consideration in this paper. In change point
analysis, the objective is to estimate the number of change points, J0 , as well as their locations
τ = {τ1 , . . . , τJ } based on the observations y = (y1 , . . . , yn ).
0

The canonical multiple change point problem, where the signal f is modelled as a piecewise
constant function, has been extensively studied in the literature. In this framework, there are
many approaches and we only attempt to list a selection of them here. The majority of these
techniques seek to identify all change points at once by solving an optimization problem consisting of a loss function, often the negative log-likelihood, and a penalty criterion. Yao (1988);
Yao and Au (1989) used the square error loss along with the Schwarz Information Criterion
(SIC) as a penalty function to consistently estimate the bounded number of change points and
their locations for the data drawn from a Gaussian distribution. Within the same setting, incorporation of various penalty functions including Modified Information Criterion (MIC) Pan and
Chen (2006), modified Bayesian Information Criterion (mBIC) Zhang and Siegmund (2007),
Simultaneous Information Theoretic Criterion (SITC) Wu (2008) and modified SIC Ciuperca
(2011, 2014), have been studied. Specific algorithms such as Optimal Partitioning Auger and
Lawrence (1989), Segment Neighbourhood Jackson et al. (2005), and pruning approaches such
as PELT Killick et al. (2012) and PDPa Rigaill (2015) are developed to solve such optimization
problems.
Apart from penalty-based techniques, another frequently used class of change point detection approaches encompasses the greedy search procedures in which they search sequentially
for one single change point at a time. The most popular methods in this class are Binary
Segmentation Vostrikova (1981) and its variants such as Circular Binary Segmentation (CBS)
Olshen et al. (2004), and Wild Binary Segmentation (WBS) Fryzlewicz et al. (2014). In recent
years, researchers have attempted to improve Binary Segmentation’s performance from statisti2

cal and computational viewpoints. Fryzlewicz et al. (2018) suggested a backward (bottom-up)
mechanism, called Tail Greedy Unbalanced Haar (TGUH), which is computationally fast and
statistically consistent in estimating both the number and the locations of change points. Also,
Fryzlewicz (2018) introduced Wild Binary Segmentation 2 (WBS2) to deal with the shortcomings of WBS in datasets with frequent changes. It has been shown that the method is fast in
run time and accurate in detection.
Beyond the canonical change point problem, signals in which f is modelled as a piecewise polynomial of order r ≥ 1 have attracted less attention in the literature despite many
applications. For instance, piecewise linear signals are applied in monitoring patient health
(Aminikhanghahi and Cook (2017), Stasinopoulos and Rigby (1992)), climate change (Robbins
et al. (2011)), and finance (Bianchi et al. (1999)). In such a framework, Bai (1997) introduced
a method based on Wald-type sequential tests, and Maidstone et al. (2017) devised a dynamic
programming applied to an `0 -penalized least square procedure. In continuous piecewise linear models, Kim et al. (2009) developed a methodology called `1 -trend filtering. Furthermore,
Baranowski et al. (2019) put forward the method of Narrowest Over Threshold (NOT), and
Anastasiou and Fryzlewicz (2019) developed an approach called Isolate-Detect (ID) which both
provide asymptotically consistent estimators of the number and locations of change points.
Our goal in this paper is to introduce a unifying method covering the canonical change
point problem and beyond. More precisely, the method is cable of detecting change points in
piecewise polynomial signals of order r (r = 0, 1, 2, . . .) with and without continuity constraint
at the locations of change points.
The detection of change points in a sequence of data can be formulated as a penalized
regression fitting problem. According to our notation, the quantity fτ − fτ +1 is nonzero if the
signal f undergoes a change at point τ , and is zero otherwise. Moreover, if we assume that
change points are sparse, that is, the number of locations where f changes, J0 , is much smaller
than the number of observations n, change points can be estimated using the one-dimensional
fused lasso problem
n−1

X
1
|fi+1 − fi | ,
minn k y − f k22 + λ
f ∈R 2
i=1

where f = (f1 , . . . , fn ).
This formulation of the canonical change point problem was first considered in Huang et al.
(2005) and was applied to analyze a DNA copy number dataset. Harchaoui and Lévy-Leduc
(2010) considered the same formulation and proved the consistency of the respective change
point estimates when the number of change points is bounded. Employing sparse fused lasso
which is composed of both the `1 -norm and the total variation seminorm penalties, Rinaldo
et al. (2009) proposed a sparse piecewise constant fit and established the consistency of the
corresponding estimates when the variance of the noise terms vanishes, and the minimum magnitude of jumps is bounded from below. However, Rojas and Wahlberg (2014) argued that the
consistency results achieved by Rinaldo et al. (2009) are incorrect when a frequently viewed
pattern, called staircase, exists in the signal. The staircase phenomenon occurs in a piecewise
constant model when there are either two consecutive downward jumps or upward jumps in its
3

mean structure. The staircase pattern will be discussed in more detail in Section 6. Additionally, Qian and Jia (2016) showed that the lasso problem of Tibshirani (1996) when derived by
transforming fused lasso does not satisfy the Irrepresentable Condition (Zhao and Yu (2006))
that is necessary and sufficient for exact pattern recovery. In particular, Qian and Jia (2016)
proposed an approach called preconditioned fused lasso based on the puffer transformation of Jia
et al. (2015) and established that it can recover the exact pattern with probability approaching
one.
A similar approach to that of the piecewise constant signals can be considered for estimating
change points in piecewise polynomial signals. In particular, a positive integer τ is a change
location in an r-th degree piecewise polynomial signal f if τ -th element of the vector D(r+1) f
is non-zero, denoted by [ D(r+1) f ]τ 6= 0. Here D(r+1) is a penalty matrix that will be defined in
Section 2.2. Hence, change points can be estimated from nonzero elements of D(r+1) b
f , where b
f
is the solution of
1
minn k y − f k22 + λ kD(r+1) f k1 .
f ∈R 2

(2)

The aforementioned problem was first studied by Steidl et al. (2006) in the context of image
processing and was called higher order total variation regularization. It was later rediscovered
by Kim et al. (2009) and termed trend filtering in the nonparametric regression setting. Kim
et al. (2009) specifically explored linear trend filtering (r = 1) which fits piecewise linear models.
Tibshirani et al. (2014) extensively studied trend filtering and compared its performance with
smoothing splines Green and Silverman (1993) and locally adaptive regression splines Mammen
et al. (1997) in the context of nonparametric regression. Tibshirani et al. (2014) also established that trend filtering enjoys desirable and strong theoretical properties of locally adaptive
regression splines while being computationally less intensive due to its banded penalty matrix.
Moreover, trend filtering has an adaptive knot selection property, which makes it well suited for
change point analysis.
From a computational and algorithmic standpoint, Kim et al. (2009) described Primal-Dual
Interior Point (PDIP) method for deriving the estimates of the linear trend filtering problem at
a fixed value of λ. This can be easily carried over to the trend filtering problem of any order.
Wang et al. (2014) suggested an algorithm based on a falling factorial basis while Ramdas and
Tibshirani (2016) derived an algorithm based on the Alternating Direction Method of Multipliers
(ADMM) discussed in Boyd et al. (2011). The computational complexity of all these algorithms
is of order O(n).
In this paper, we develop a new methodology called Pattern Recovery Using Trend Filtering
(PRUTF) for identifying unknown change points in piecewise polynomial signals with no continuity restriction at change point locations. Therefore, a change point is defined as a sudden
jump in the signal and its all derivatives up to order r. Figure 2 displays such change points
for various r. In this paper, we make the following contributions.
• We propose a generic dual solution path algorithm along with the regularization parameter
for trend filtering. This solution path, whose basic idea is borrowed from Tibshirani

4

et al. (2011) enables us to determine change points at each level of the regularization
parameter. Our algorithm, PRUTF, is different from that of Tibshirani et al. (2011) as
we remove (r + 1) coordinates of dual variables after locating each change point. This
adjustment to the algorithm allows us to have independent dual variables between each
pair of neighbouring change points. Besides, the elimination of (r + 1) coordinates at each
step leads to faster implementation of the algorithm.
• We establish a stopping criterion that plays an essential rule in the PRUTF algorithm
used to find change points. Notably, we show that the dual variables of trend filtering
between consecutive change points constitute a Gaussian bridge process. This finding
allows us to introduce a threshold for terminating our proposed algorithm.
• If the signal contains a staircase pattern, we prove that the method is statistically inconsistent, which makes it unfavourable. Explaining the reason for this end, we modify our
algorithm to produce estimates consistent in terms of both the number and location of
change points.
This paper is organized as follows: we first describe how to characterize the dual optimization
problem of trend filtering. In Section 3, we develop our main algorithm, PRUTF, to use in
constructing the dual solution path of trend filtering and, in turn, identifying the locations of
change points. Section 4 discusses the properties of this dual solution path. We establish that
the dual variables derived from the solution path form a Gaussian bridge process that makes
them favourable for statistical inference. Applying these properties, we develop a stopping rule
for the change point search algorithm in Section 5. The quality of the PRUTF algorithm is
validated in terms of pattern recovery of the true signal in Section 6. It is established that the
proposed technique in its naive form fails to consistently identify the true signal when a special
pattern, called staircase, is present in the signal. Section 7 elaborates on how to modify the
algorithm in order to estimate the true pattern consistently. Simulation results, and real-world
applications are presented in Section 8. We conclude the paper with a discussion in Section 9.

2

Notations and Fundamental Concepts

2.1

Notations

We begin this section with setting up notations that will be used throughout this article.
For an m × n matrix A, we denote its rows by A1 , . . . , Am and express the matrix as A =
T

T

(A1 , . . . , Am )T . Now for the set of indices I = {i1 , . . . , ik } ⊆ {1, . . . , m}, the notation
T

T

AI = (Ai , . . . , Ai )T represents the submatrix of A whose row labels are in the set I. In a
1

k

T

similar manner, for a vector a of length m, we let aI = (ai , . . . , ai ) denote a subvector of a
1

k

whose coordinate labels are in I. We write A−I and a−I to denote A{1, ..., m}\I and a{1, ..., m}\I ,
respectively, where J \I is the set of indices in J but not in I. Furthermore, for selecting
i-th row of A, the notation [A]i and for its (i, j)-th element the notation [A]ij are used. Also,
[a]i extracts the i-th elements of the vector a. We write diag(A) to denote the vector of the
5

main diagonal entries of the matrix A. Moreover, for a real number x, bxc denotes the greatest
integer less than or equal x, and dxe denotes the least integer greater or equal x. For a set A,
the indicator function is denoted by 1(A).

2.2

The Dual Problem of Trend Filtering

Recall the trend filtering problem
min

f ∈Rn

1
ky − f k22 + λkD(r+1) f k1 ,
2

(3)

where λ ≥ 0 is the regularization parameter for controlling the effect of smoothing, and the
(n − r − 1) × n penalty matrix D(r+1) is the difference operator of order (r + 1). For r = 0, the
first order difference matrix D(1) is defined as


−1 1 0 . . . 0 0


 0 −1 1 . . . 0 0


D(1) =  .
,
.. 
 ..

.


0
0 0 . . . −1 1
and for r ≥ 1, the difference operator of order r + 1 can be recursively computed by D(r+1) =
D(1) ×D(r) . Notice that, in this matrix multiplication, we consider only the submatrix consisting
of the first n − r − 2 rows and n − r − 1 columns of the matrix D(1) . Figure 1 displays the trend
filtering fits for r = 0, 1, 2 for simulated data.

(a) Linear

(b) Quadratic

(c) Cubic

Figure 1: Trend filtering solutions for r = 1, 2, 3 producing (a) piecewise linear, (b) piecewise
quadratic and (c) piecewise cubic fits, respectively.
Although the objective function in the r-th order trend filtering (3) is strictly convex and
thus the minimization has a guaranteed unique solution, the penalty term is not differentiable
in f , so solving the optimization in its current form is difficult. To overcome this difficulty,
6

we follow the argument in Tibshirani et al. (2011) and convert this optimization problem into
its dual form. Since the objective function in the primal problem is strictly convex with no
constraint, the strong duality holds, meaning that the primal and the dual solutions coincide.
The trend filtering problem (3) can be rewritten as
1
minn ky − f k22 + λkzk1 ,
f ∈R 2

subject to z = Df ,

where, for ease in the notation, we use D = D(r+1) . For any given λ > 0, the Lagrangian is
1
L(f , z, u) = ky − f k22 + λkzk1 + uT (Df − z)
2
and, thus the dual function is given by
g(u) =

inf

f ∈Rn , z∈Rm

L(f , z, u),

m

which is a concave function defined on R , where m = n − r − 1 and takes values in the
extended real line R ∪ {−∞, ∞}. The vectors f and u are called the primal and dual variables,
respectively. Taking the derivative of the Lagrangian L(f , z, u) with respect to f and setting
it to be equal to zero, we obtain
f = y − DT u.

(4)

Now substituting this back into the Lagrangian L(f , z, u), and performing certain algebraic
manipulations, we obtain
L∗ (z, u) = infn L(f , z, u)
f ∈R

1
1
= − ky − DT uk22 + kyk2 + λkzk1 − uT z .
2
2
Minimizing L∗ (z, u), or equivalently maximizing uT z − λkzk1 , with respect to z ∈ R
to the dual function g(u). Notice that

sup{uT z − λkzk

1

z

m

leads us

} is the conjugate of the function λkzk1

in the context of conjugate convex functions. See Brezis (2010) and Boyd and Vandenberghe
(2004). This conjugate function is given by

0
sup{uT z − λkzk1 } =
∞
z

if kuk∞ ≤ λ
otherwise .

From all these, the dual function is given as
1
1
g(u) = − ky − DT uk22 + kyk2
2
2

for

kuk∞ ≤ λ ,

and, thus the dual problem is to find the maximum of the dual function g(u). This is equivalent
to
min

u∈Rm

1
ky − DT uk22
2

subject to

kuk∞ ≤ λ .

(5)

The constraint in (5) is an `∞ -ball or a hypercube centered at the origin with the boundaries
given by the set {−λ, +λ}m . Since the matrix D is full row rank, the problem (5) is strictly
7

convex and has a unique solution, see Ali et al. (2019). In addition, notice that the dimension
of the dual vector u is m, which is smaller than that of the primal vector f and may lead to
relatively faster computations. The connection between the primal and the dual solutions is
given by the equations
bλ = λ γ
b,
u
b
bλ ,
fλ = y − DT u
b∈R
where γ

m

(6)
(7)

is a subgradient of kxk1 computed at x = Db
fλ . This subgradient is given by


if [Db
fλ ]i > 0

 {+1}
γ
bi ∈
(8)
{−1}
if [Db
fλ ]i < 0


 [−1, +1] if [Db
f ]i = 0 .
λ

The statements in Equations (6)-(8) are equivalent to the KKT optimality conditions of the
b λ is the projection, PC (y),
primal problem (3). The dual problem (5) demonstrates that DT u
of y onto the convex polyhedron (or hypercube here) C = {x ∈ R

m

: kxk∞ ≤ λ} . From this,

the primal solution (7) can be rewritten in the form of (I − PC ) (y), representing the residual
projection map of y onto the polyhedron C.
Our idea of applying trend filtering to discover change points in piecewise polynomial signals
is inspired by Rinaldo et al. (2009) and (Rinaldo, 2014), in which change point detection is
studied using fused lasso. Besides extending to piecewise polynomial signals, the novelty of our
work is in providing an exact stopping criterion, which is based on the Gaussian bridge property
of the trend filtering dual variables. In addition, we propose an algorithm which, unlike that
proposed in Rinaldo et al. (2009), always produces consistent change points even in the presence
of staircase patterns.

3

The Solution Path Algorithm

b λ as the reguIn this section, we construct and study the solution path of dual variables u
larization parameter decreases from λ = ∞ to λ = 0. This dual solution path identifies the
corresponding primal solution using (7). Our PRUTF algorithm is given to compute the entire
b λ a boundary coordinate if
dual solution path. For any given λ, we call any coordinate of u
it is a vertex of the polyhedron C = {x ∈ R

m

: kxk∞ ≤ λ} , meaning that its absolute value

becomes λ. In the process of constructing the solution path, we trace several sets, introduced
below.
• The set B = B(λ), called the boundary set, contains the boundary coordinates identified
bλ .
by u
• For any λ, the vector sB = sB (λ), called the sign vector, represents collectively the signs
of the boundary points in B(λ).
• The set A = A(λ), called the augmented boundary set, contains the boundary coordinates
in B(λ) as well as the first ra = b(r + 1)/2c coordinates immediately after.
8

• For any λ, the vector sA = sA (λ) represents collectively the signs of the augmented
boundary points in A(λ).
In the following, we discuss the need for the augmented boundary set A.
We begin by studying the structure of the dual vector u = Df in a piecewise polynomial
signal of order r, where the signal is partitioned into a number of blocks defined by the position
of the change points. Because the signal f is a piecewise polynomial of order r, to compute
the i-th coordinate of the vector u, we need rb = d(r + 1)/2e − 1 points directly before the
i-th element of f as well as ra = b(r + 1)/2c points immediately after that. Consequently, the
first ra elements of Df within each block cannot be computed. Moreover, within each block,
the last rb + 1 elements of Df are all nonzero due to the existence of a change point. This
observation is depicted in Figure 2 for r = 0, 1, 2, 3. To explain this point clearly, consider the
case of r = 2 in Figure 2 in which the structure of Df is shown, where the true change points are
6 and 13. As it can be seen, the points on the boundary – the nonzero coordinates of Df – are
B(λ) = (5, 6, 12, 13) with their respective signs sB (λ) = (1, 1, −1, −1). Notice that Df does
not exist at points 7 and 14. The augmented boundary set contains these points as well as the
boundary points; that is A(λ) = (5, 6, 7, 12, 13, 14). The respective signs of the coordinates in
the augmented boundary set A(λ) are given by sA (λ) = (1, 1, 1, −1, −1, −1). At each value
of λ, we call the coordinates that belong to the augmented boundary set A(λ) the boundary
coordinates, and the rest, the interior coordinates.
At the j-th iteration with λ = λj , we assume that the boundary set and its corresponding
sign vector are B = B(λ) and sB = sB (λ), respectively. Furthermore, we assume the augmented
boundary set and its sign vector are A = A(λ) and sA = sA (λ), respectively. Dual coordinates
b λj , A and interior coordinates u
b λj , −A . Recall from
can be split into boundary coordinates u
b λj , A represents the subvector of u
b λ with the coordinate labels in the set A
Section 2.1 that u
b λj , −A represents the subvector of u
b λ with the coordinate labels in the set {1, 2, · · · , m}\A.
and u
It is apparent from the definition of the boundary coordinates that
b λj , A = λj sA .
u

(9)

Replacing the boundary coordinate with λj sA in (5) and solving the resulting quadratic problem
with respect to the interior coordinates, leads to their least square estimates, given by

−1

b λj ,−A = D−A DT−A
u
D−A y − λj DTA sA .

(10)

It should be noted that for the purpose of simplicity, we denote (DA )T and (D−A )T with

−1
DTA and DT−A , respectively. Notice that in expression (10), the first term D−A DT−A
D−A y
simply yields the least squareestimate of
regressing the response vector y on the design matrix
−1
T
D−A . The second term −λj D−A D−A
D−A DTA sA can be interpreted as a shrinkage term
due to the condition kuk∞ ≤ λ. The expression (10) is true for λ ≤ λj until either an interior
coordinate joins to the boundary or a coordinate in the boundary set leaves the boundary. The
following argument explains how to specify values of λ while the interior coordinates change.
We define the joining time associated with the interior coordinate i ∈ {1, 2, · · · , m}\A as
the time at which this interior coordinate joins the boundary. To determine the next join9

(a) Piecewise constant with r = 0.

(b) Piecewise linear with r = 1.

(c) Piecewise quadratic with r = 2.

(d) Piecewise cubic with r = 3.

Figure 2: Structure of Df for piecewise polynomial signals with various orders r = 0, 1, 2, 3.
The grey lines display the true signals with two change points at the locations 6 and 13. Empty
circles represent the indices that Df is not defined.

b λ,−A =
ing time, we reduce the value of λ in a linear direction starting from λj and solve u
(±λ, · · · , ±λ)T . Note that the right-hand side of (10) can be expressed as a − λj b, where

−1
a = D−A DT−A
D−A y ,

−1
b = D−A DT−A
D−A DTA sA .

10

(11)

The joining time for every i ∈ {1, 2, · · · , m}\A is hence the solution of the equation ai − λ bi =
±λ with respect to λ, which is given by
join

λi
join

Note that λi

=

ai
,
bi ± 1

i ∈ {1, 2, · · · , m}\A .

is uniquely defined because only one of the signs −1 or +1 yields λi ∈ [0, λj ].

Now we turn the attention to the characterization of a coordinate which leaves the boundary
set B. For i ∈ B, the leaving time is defined as the time that the coordinate i leaves the boundary
set B. Since sB is the sign vector of changes captured by [D b
f ]B , then diag(sB ) [D b
f ]B > 0,


b λ ) B > 0. Here, for
which in turn, along with Equation (7), implies diag(sB ) D(y − DT u
any vector η, diag(η) denotes the diagonal matrix with the diagonal elements given by η,
and η > 0 holds element-wise. Therefore, a coordinate i ∈ B leaves the boundary set B if


b λ ) B > 0 is violated. Using the relation
diag(sB ) D(y − DT u


bλ ) ,
b λ ) B = DB (y − DT u
D(y − DT u
b λ = DTA u
b λ, A + DT−A u
b λ,−A , we obtain
and the decomposition DT u


bλ ) B = c − λ d ,
diag(sB ) D(y − DT u

(12)



c = diag(sB ) DB y − DT−A a ,


d = diag(sB ) DB DTA sA − DT−A b .

(13)

where

Hence, a leaving time is obtained from the equation ci − λ di > 0 as
 c
 i,
if ci < 0 and di < 0 ,
leave
di
λi
=
 0,
otherwise .
The conditions in the equation above is due to the fact that at the j-th iteration with λ ≤ λj ,
the expression ci − λ di > 0 fails for i ∈ B, if both ci and di are negative. An alternative way to
determine the next leaving time is to use the KKT optimality conditions of (5). We refer the
reader to the supplementary materials of Tibshirani et al. (2011).
The following algorithm, PRUTF, describes the process of constructing the entire dual
solution path of trend filtering.
Algorithm 1 (PRUTF)
1. Initialize the set of change points locations as τ 0 = ∅, the empty set.
2. At step j = 1, initialize the boundary set B1 = {τ1 −rb , τ1 −rb +1, . . . , τ1 } and its associated
sign vector sB1 = {s1 , . . . , s1 }, both with cardinality of rb + 1, where τ1 is obtained by
τ1 = argmax | u
bi | ,
i=1, ..., m

11

(14)

b = DDT
bi is the i-th element of the vector u
and s1 = sign(b
uτ1 ), where u

−1

D y. The

updated set of change points locations is now τ 1 = {τ1 }. We also record the first joining
time λ1 =| u
bτ1 | and keep track of the augmented boundary set A1 = {τ1 − rb , . . . , τ1 + ra }
and its corresponding sign vector sA = {s1 , . . . , s1 } of length r + 1. The dual solution is
1
−1
b (λ) = DDT
regarded as u
D y, for λ ≥ λ1 .
3. For step j = 2, 3, . . . ,
join

(a) Obtain the pair (τj
join

(τj

join

, sj ) from

join

, sj ) =

i∈A
/ j−1 , s∈{−1, 1}
join

and set the next joining time λj
leave

(b) Obtain the pair (τj

leave

(τj

leave

, sj

leave

, sj

as the value of

)=

argmax
i∈Bj−1 , s∈{−1, 1}
leave

leave

(c) Let λj = max{λj , λj

ai
s+bi ,

join

for i = τj

(15)
join

and s = sj .

) from

and assign the next leaving time λj
join



ai
ai
·1 0≤
≤ λj−1 ,
s + bi
s + bi

argmax

ci
·
di

1 {ci < 0 , di < 0} ,

as the value of

(16)

ci
leave
leave
, for i = τj
and s = sj .
di

}, then the boundary set Bj and its sign vector sBj are

updated in the following fashion:
join

– Either append {τj
join

join

− rb , τj

join

− rb + 1, . . . , τj

} and the corresponding signs

join

join

{sj , . . . , sj } to Bj−1 and sBj−1 , respectively, provided that λj = λj . Also,
join

add τj

to τ j−1 .
leave

– Or remove {τj
leave

sj

leave

τj

leave

, τj

leave

+1, . . . , τj

leave

+rb } and the corresponding signs {sj
leave

} from Bj−1 and sBj−1 , respectively, provided that λj = λj

, . . .,

. Also, remove

from τ j−1 .

In the same manner, the augmented boundary set, Aj and its sign, sA are formed
j
n join
o
n join
o
join
join
by adding τj − rb , . . . , τj + ra and sj , . . . , sj
to Aj−1 and sAj−1 , respecn leave
o
leave
leave
tively, if λj = λj
or, otherwise, by removing the associated set τj , . . . , τj
+r
n leave
o
leave
and sj , . . . , sj
from Aj−1 and sA . Thus, the dual solution is computed as
j−1

b A (λ) = a − λ b for interior coordinates and u
b −A (λ) = λ sA for boundary coordiu
j

j

j

nates over λj ≤ λ ≤ λj−1 .
4. Repeat step 3 until λj > 0.
The critical points λ1 ≥ λ2 ≥ . . . ≥ 0 indicate values of the regularization parameter at
which the boundary set changes.
Remark 1 Notice that the vector τ derived by the PRUTF algorithm represents the locations of
change points for the dual problem of trend filtering. In order to obtain the locations of change
points in the primal problem of trend filtering, we must add rb to any element of τ , that is,
{τ1 + rb , τ2 + rb , . . .}. This relationship between the primal and dual change point sets is visible
from Figure 2.
12

Remark 2 For r = 0, the case of fused lasso, Lemma 1 of Tibshirani et al. (2011), known as
the boundary lemma, is satisfied since the matrix DDT is diagonally dominant, meaning that
P
[ DDT ]i,i ≥ j6=i |[ DDT ]i,j |, for i = 1, . . . , m. This lemma states that when a coordinate joins
the boundary, it will stay on the boundary for the rest of the path. Consequently, part (b) of step
3 in Algorithm 1 is unnecessary, and hence the next leaving time in part (c) is set to zero, i.e.,
leave

λj

= 0, for every step j. However, the boundary lemma is not satisfied for r = 1, 2, 3, . . ..

Remark 3 There is a subtle and important distinction between our proposed algorithm, PRUTF,
and the one presented in Tibshirani et al. (2011). The latter work studies the generalized lasso
problem for any arbitrary penalty matrix D (unlike D used in trend filtering, which must have
a certain structure). The proposed algorithm in Tibshirani et al. (2011) relies on adding or
removing only one coordinate to or from the boundary set at every step. The key attribute of
our algorithm is to add or remove r + 1 coordinates to or from the augmented boundary set, an
approach inspired by the argument presented at the beginning of this section. Essentially, this
attribute makes PRUTF, presented in Algorithm 1, well-suited for change point analysis. It is
important to mention that the trend filtering solution path requires at least r + 1 data points
between neighbouring change points.
bλ .
Remark 4 For a given λ, equations (9) and (10) give the values of the dual variables in u
They demonstrate that the dual solution path is a linear function of λ with change in the slopes
at joining or leaving times λ1 ≥ λ2 ≥ . . . ≥ 0.
Remark 5 The number of iterations required for PRUTF, presented in Algorithm 1, is at most
Pp

m
i=0 i(r+1)



m
e. However, this upper bound for the number of iterations is
2i−1 , where p = d r+1

usually very loose. It comes from the following realization discovered by Osborne et al. (2000)
and later improved by Mairal and Yu (2012). Any pair (A , sA ) appears at most once throughout
the solution path. In other words, if (A , sA ) is visited in one iteration of the algorithm, the pair
(A , −sA ) as well as (A , sA ) cannot reappear again for the rest of the algorithm. Interestingly,
this fact says that once a coordinate enters the boundary set, it cannot immediately leave the
boundary set at the next step.

4

Statistical Properties of the Solution Path

An important component of the methodology that we develop in this paper involves computing
algebraic expressions based on the matrix D = D(r+1) . In this section, we describe the properties
of such expressions. To begin with, let A = {A1 , . . . , AJ } and sA = {s1 , . . . , sJ } be the
augmented boundary set and its corresponding sign vector, respectively, after a number of
iterations of Algorithm 1, where Aj = {τj − rb , τj − rb + 1, . . . , τj + ra } and sj = {sj , . . . , sj }
for j = 1, . . . , J. This augmented boundary set corresponds to J change points {τ1 , . . . , τJ }
that partition all the dual variables into J + 1 blocks Bj = {τj + 1, . . . , τj+1 } for j = 0, 1, . . . , J,
with the conventions that τ0 = 0 and τJ+1 = m. In the following, we list some properties of
matrix multiplications involving D.

13

• It follows from the definition of the matrix D that it is a banded Toeplitz matrix with
bandwidth r + 1. It tuns out that the matrix DDT reveals the same property, meaning
that it is a square banded Toeplitz matrix. Moreover, its r + 1 nonzero row elements are
consecutive binomial coefficients of order 2(r + 1) + 1 with alternating signs. In other

2r+2
. An example is given in
words, (i, j)-th element of DDT for i ≥ j is (−1)r+1+i−j r+1+i−j
Figure 3a. This is a symmetric, nonsingular and positive definite matrix. See Demetriou
and Lipitakis (2001).
• The matrix D−A DT−A is a block diagonal matrix whose diagonal submatrices correspond
to J + 1 blocks. More precisely, the j-th submatrix on the diagonal of D−A DT−A is a
matrix with the first (τj+1 − τj − r) rows and columns of DDT , see Figure 3b. Notice

−1
that, due to its non-singularity, D−A DT−A is always invertible. In fact, both D−A DT−A

−1
and D−A DT−A
D−A are block diagonal matricies. Another interesting result is that

−1
every row of the matrix D−A DT−A
D−A is a contrast vector, meaning that for any
t = 1, . . . , m

n 
X

T

D−A D−A

−1


= 0.

D−A
(t, i)

i=1

• Another interesting term in analyzing the behaviour of the dual variables is DTA sA . It can
be shown that the vector DTA sA can be partitioned into J + 1 subvectors associated with
the change points τj , j = 1, . . . , J. The subvector associated with τj , j = 2, . . . , J − 1
is DTA sAj , whose elements are zero, except the first consecutive r + 1 as well as the last
j

consecutive r + 1 elements. The first r + 1 nonzero elements of DTA sAj are the binomial
j

coefficients in the expansion of sj (x − 1)r , and its last r + 1 elements are the binomial
coefficients in the expansion of −sj+1 (x − 1)r . Furthermore, the first r + 1 elements of
the first subvector and the last r + 1 elements of the last subvector are also equal to zero.
For example, for a piecewise cubic signal, r = 3, with two change points (τ1 , τ2 ) and signs
(−1, 1), the vector DTA sA becomes






. . . , 0, 1, −3, 3, −1 , −1, 3, −3, 1, 0, . . . , 0, −1, 3, −3, 1 , 1, −3, 3, −1, 0, . . . , 0 .
0,
{z
} |
{z
} |
{z
}
|
1 : (τ1 +ra )

(τ1 +ra +1) : (τ2 +ra )

Consequently, the structure of DTA sAj allows us to write DTA sA =
j

(τ2 +ra +1) : m

PJ

T
j=0 DAj

sj .

Equation (9) says that the absolute values of the boundary coordinates are λ, that is,
for t ∈ Aj .

u
b(t; λ) = λ sj

14

(17)



6


 −4

 1


 0

 0


 0

 0


 0
0

−4

1

0

0

0

0

0

6 −4

1

0

0

0

0

6 −4

1

0

0

6 −4

1

0

−4

1 −4
0
0

1 −4
0
1

6 −4
1
−4
6 −4

0

0

0

1

−4

6

0

0

0

0

1

−4

0

0

0

0

0

1



0


0 

0
0 


0
0 

0
0 


1
0 

−4
1 


6 −4 
−4
6

(a) Structure of DDT .



6

−4

1

0

0

0














−4

6

−4

0

0

0

1

−4

6

0

0

0

0

0

0

6

−4

1

0

0

0

−4

6

−4

0

0

0

1

−4

6

0

0

0

0

1

−4

0




0 

0 


0 

1 


−4 
6

(b) The structure of D−A DT−A .

Figure 3: Structure of quadratic forms of the matrix D.
On the other hand, the values of the interior coordinates are given by

 
−1

T

D−A D−A
D−A



t







 
−1
D−A DT−A
D−A
u
b(t; λ) =


t




 


−1



D−A
D−A DT−A





y − λ DTA1 s1 ,




y − λ DTA

sj+1 + DTA sj



j

j+1



1 ≤ t < τ1 − rb

,


y − λ DTA sJ ,

(18)

τJ + ra < t ≤ m .

J

t

τj + ra < t < τj+1 − rb

For a given λ, the dual variables u
b(t; λ) for t = 0, . . . , m + 1 can be collectively viewed as a
random bridge, that is, a conditioned random walk with drift whose end points are set to zero.
Moreover, u
b(t; λ) is bounded between −λ and λ. The quantity u
b(t; λ) can also be decomposed
into a sum of several smaller random bridges which are formed by blocks created from the
change points. Recall that the last consecutive r + 1 elements of the block Bj are λ sj , for any
j = 0, 1, · · · , J. Hence, for t = τj + ra , . . . , τj+1 − rb the random bridge associated with the
j-th block is given by

 
−1
h
T
y − λ DTA
D−A
u
bj (t; λ) = D−A D−A

j+1

t

with the conventions s0 = sJ+1 = 0 ∈ R

r+1

sj+1 + DTA sj
j

i

,

j = 0, . . . , J ,

(19)

. It is important to note that similar to u
b(t; λ), the

process u
bj (t; λ) satisfies the conditions u
bj (τj + ra ; λ) = λ sj and u
bj (τj+1 − rb ; λ) = λ sj+1 . From
(19), the process u
bj (t; λ) is composed of the stochastic term


−1
st
T
u
bj (t) = D−A D−A
D−A y,

(20)

t

and the drift term
dr

u
bj (t; λ) = −λ



T

D−A D−A

−1

D−A

 
t

DTA

j+1


sj+1 + DTA sj .
j

(21)

According to model (1) with Gaussian noises, it turns out that the discrete time stochastic
process term u
bjst (t) can be embedded in a continuous time Gaussian bridge process which is
bounded between −λ and λ. The following theorem describes the characteristics of this process.
15

Theorem 1 Suppose the observation vector y is drawn from the model (1), where the error
vector ε has a Gaussian distribution with mean zero and covariance matrix σ 2 I. For given D,
and A,
(a) The continuous time stochastic processes


(τj + ra )
τj+1 − rb
,
W0 j = W0j (t) :
≤t≤
m
m
where
bmtc

X  r + i − 1
yi ,
r

−(r+1)/2

W0 j (t) = (τj+1 − τj − r)

(22)

i=τj +ra

are Gaussian processes with stationary and independent increments.
(b) Let
Wj (t) = (τj+1 − τj − r)−(r+1)/2



D−A DT−A

−1


D−A

y,

(23)

bmtc

then the stochastic process Wj = {Wj (t) : (τj +ra )/m ≤ t ≤ (τj+1 −rb )/m} is a Gaussian
bridge process derived from W0 j by conditioning on both events W0 j ((τj + ra )/m) = 0
and W0 j ((τj+1 − rb )/m) = 0, where W0 j is given in part (a). The mean of Wj is zero
and its covariance function is given by
0

Cov(Wj (t), Wj (t )) = σ

2



T

D−A D−A

−1 

,

(24)

(bmtc,bmt0 c)

for any (τj + ra )/m ≤ t, t0 ≤ (τj+1 − rb )/m.
(c) The process Wj is independent of any other processes Wj 0 for any j 0 6= j.
This theorem could be extended to the case of non-Gaussian random variables and therefore
establishes a Donsker type Central Limit Theorem for W0j and Wj . A proof is given in
Appendix A.1. Theorem 1 guarantees that the dual variable process associated with the j-th
block, i.e.
uj = {b
u(bmtc; λ) : (τj + ra )/m ≤ t ≤ (τj+1 − rb )/m}
is a Gaussian bridge process with the drift term


−1
T
−λ D−A D−A
D−A



bmtc

DTA

j+1


sj+1 + DTA sj ,
j

(25)

and the covariance matrix stated in (24).
Recall that a standard Brownian bridge process defined on the interval [a, b] is a standard
Brownian motion B(t) conditioned on the event B(a) = B(b) = 0. It is often characterized
from a Brownian motion B(t) with B(a) = 0, by setting
B0 (t) = B(t) −
16

t−a
B(b) .
b−a

The mean and covariance functions of the Brownian bridge B0 (t) are given by E [B0 (t)] = 0 and
Cov(B0 (s), B0 (t)) = min{s − a, t − a} − (b − a)−1 (s − a)(t − a) for any s, t ∈ [a, b], respectively.
A Gaussian bridge process is an extension of the Brownian bridge process when the Brownian
motion B(t), in the definition of the Brownian bridge B0 (t), is replaced by a more general
Gaussian process G(t). See, for example, Gasbarra et al. (2007).
Remark 6 The celebrated Donsker theorem Donsker (1951) states that the partial sum process
of a sequence of i.i.d. random variables, with mean zero and variance 1, converges weakly
to a Brownian bridge process. See van der vaart and Wellner (1996) or Billingsley (2013).
A version of Theorem 1 involving non-Gaussian random variables would extend this result to
weighted partial sum processes and show that the limiting process is a Gaussian bridge with a
certain covariance structure. So the Gaussian assumption in Theorem 1 is not restrictive. It
is also interesting to show that for r = 0, 1, the process u
bjst (bmtc) boils down to its respective
CUSUM process. To show this, consider the interval [(τj + ra )/m , (τj+1 − rb )/m],


−1
T
• For the piecewise constant signals, i.e. r = 0, the quantity
D−A D−A
D−A
can be written as


y
bmtc







0, . . . , 0 , 1 − bmtc , . . . , 1 − bmtc , − bmtc , . . . , − bmtc , 0, . . . , 0 y.


|{z}
τj+1 − τj
τj+1 − τj
τj+1 − τj
τj+1 − τj


τj
|
| {z }
{z
}
τj+1

bmtc

Notice that the above statement is the CUSUM statistic for the j-th segment, that is
bmtc

X 
yk − y (τ

k=τj +1

where y (τ

j +1):τj+1

is the sample average of (yτ


,

(26)

, . . . , yτ

). It is well known that the

j +1):τj+1

j +1

j+1

CUSUM statistic (26) converges weakly to the Brownian bridge. In addition, for any
(τj + ra )/m ≤ t0 ≤ t ≤ (τj+1 − rb )/m, the covariance function becomes


T

D−A D−A

−1 

= (bmt0 c − τj ) −
(bmtc,bmt0 c)

(bmt0 c − τj )(bmtc − τj )
,
τj+1 − τj

which is identical to the covariance function of the Brownian bridge.


−1
T
• For the piecewise linear signals, i.e. r = 1, the quantity
D−A D−A
D−A

y
bmtc

reduces to
bmtc

h
i
k yk − fbk ,

X

(27)

k=τj +1

where fb is the ordinary least square fit of the simple linear regression of (yτ

j +1

, . . . , yτ

j+1

)

onto (τj + 1, . . . , τj+1 ). As proved in Theorem 1, the preceding statistic (27) is a Gaussian
bridge process. Furthermore, using the results in Hoskins and Ponzo (1972), for any
17

(τj + ra )/m ≤ t0 ≤ t ≤ (τj+1 − rb )/m, the covariance function of this Gaussian bridge
process is given by

−1 
T
D−A D−A

=

(bmtc,bmt0 c)

(∆j − bmtc + τj )(∆j − bmtc + τj + 1)
3 ∆j (∆j + 1)(∆j + 2)

× (bmt0 c − τj )(bmt0 c − τj + 1)
h
i
× (bmtc − τj + 1)(bmt0 c − τj − 1)(∆j + 2) − (bmtc − τj )(bmt0 c − τj + 2)∆j ,
where ∆j = τj+1 − τj .

5

Stopping Criterion

This section concerns with developing a stopping criterion for the PRUTF algorithm. We
provide tools for deriving a threshold value at which the PRUTF algorithm terminates the
search if no values of dual variables exceed
this threshold.
Consider the dual variables at the
h
−1 i
st
T
first step of the algorithm, i.e. u
b (t) = DD
D y for t = 0, . . . , m, which correspond to
t

A = ∅. It turns out that u
b st (t) is a stochastic process with local minima and maxima attained
at the change points. This structure is displayed with cyan-colored lines (

) in Figure 4 for

both piecewise constant r = 0 and piecewise linear r = 1 signals. As the PRUTF algorithm
detects more change points and forms the augmented boundary set A, the local minima or
maxima corresponding to these change points are removed from the stochastic process
st

u
bA (t) =



T

D−A D−A

−1


y=

D−A
t

J
X

u
bjst (t) 1{t ∈ Bj },

for t = 1, . . . , m − |A|. This fact is shown by olive-colored lines (
equality in (28) expresses that the

u
b st (t)
A

(28)

j=0

) in Figure 4. The last

is the stochastic term of the dual variables for all

the interior coordinates and is derived by stacking the stochastic terms of the dual variables
associated with j-th block, u
bjst (t), as defined in (20), for j = 0, . . . , J. This behaviour suggests
a way to introduce a stopping rule for the PRUTF algorithm. As can be viewed from the
orange-colored lines (

) of Figure 4, if all true change points are captured by the algorithm

and stored in the augmented set A0 , the resulting process


−1
st
T
u
bA (t) = DA0 DA
DA0 y for t = 0, . . . , m − |A0 | ,
0

0

t

contains no noticeable optimum points and tends to fluctuate close to the zero line (x-axis).
We terminate the search in Algorithm 1 at step j by checking whether the maximum of
u
b st

−Aj

(t) , for t = 0, . . . , m − |Aj |, is smaller than a certain threshold. To exactly specify

this threshold, as suggested by Theorem 1, we need to calculate the excursion probabilities
of a Gaussian bridge process. As stated in Adler and Taylor (2009), analytic formulas for the
excursion probabilities are known to be available only for a small number of Gaussian processes.
18

(a) Piecewise constant with r = 0

(b) Piecewise linear with r = 1

Figure 4: The cyan-colored lines show the dual variables for the full matrix D. Dual variables
computed after removing rows of the matrix D associated with τ1 , that is D−A , are displayed
1

by the olive-colored lines. The augmented boundary set A2 corresponding to τ1 and τ2 results to
the dual variables shown by orange-colored lines.
One of such Gaussian processes is the Brownian bridge process. It is well known that for the
Brownian bridge process B0 (t) defined on the interval [a, b]
!


∞
X
−2 i2 x2
i+1
Pr sup | B0 (t) | ≥ x = 2
(−1) exp
.
b−a
a≤t≤b

(29)

i=1

See, for example, Adler and Taylor (2009), and Shorack and Wellner (2009). So for the piecewise
constant signals, the required threshold for stopping Algorithm 1 can be obtained from (29),
for a suitably chosen interval [a, b]. That is for a given value α, we choose xα such that

Pr supa≤t≤b | B0 (t) | ≥ xα = 1 − α. Therefore, for r = 0 and a = 0, b = 1, we stop Algorithm
1 at the iteration j0 if
st
b −A
max u

0≤t≤1

j0

(b kt c) ≤ σxα

√
k,

for k = m − |Aj0 | .

For r > 0, the threshold is obtained in a similar fashion. Although the excursion probabilities
for the Gaussian bridge processes are not known, we notice that by adopting the steps for the
proof of (29) in Beghin and Orsingher (1999), we can establish a similar formula for the Gaussian
bridge process G0 (t) in Theorem 1 as

19

!
sup | G0 (t) | ≥ x

Pr

=2

a≤t≤b

∞
X

i+1

(−1)

i=1


exp

−2 i2 x2
Sr2 (k)


,

(30)

where k = m − |Aj |, and the quantity Sr2 (k) is the k-th diagonal element of the matrix
0



−1

T

D−Aj D−A
0

.

j0

So, we stop Algorithm 1 at the iteration j0 if
st
b −A
max u

0≤t≤1

j0

(b kt c) ≤ σxα (k − r)(r+1)/2 ,

for k = m − |Aj0 | ,

(31)

where xα is derived from the equation
∞
X

(−1)i+1 exp

i=1

6



−2 i2 x2α
Sr2 (k)


=

1−α
.
2

(32)

Pattern Recovery and Theories

The main purpose of this section is to investigate whether the method can recover features of
the true signal f . We also demonstrate conditions under which the structure of the estimated
signal b
f matches the true signal f . To verify the performance of trend filtering in the discovery
the true signal, we first define what we mean by pattern recovery.
Definition 1 (Pattern Recovery): A trend filtering estimate b
f recovers the pattern of the true
signal f if
sign([ Db
f ]i ) = sign([ Df ]i ),

for

i = 1, . . . , m,

(33)

pr
where m = n − r − 1 is the number of rows of matrix D. We use the notation b
f = f to briefly
denote the pattern recovery feature of b
f.

In the asymptotic framework, a trend filtering estimate is called pattern consistent if
pr
Pr(b
f = f ) −→ 1

as

n −→ ∞,

(34)

where b
f =b
f (n), to denote its dependency to the sample size n. Pattern recovery is very similar
to the concept of sign recovery in the lasso (Zhao and Yu (2006); Wainwright (2009)) as it deals
with the specification of both locations of non-zero coefficients and their signs.
The problem of pattern recovery is studied for the special case of the fused lasso in several
papers. Rinaldo et al. (2009) derived conditions under which fused lasso consistently identifies
the true pattern. This was contradicted by Rojas and Wahlberg (2014), who argued that fused
lasso does not always succeed in discovering the exact change points. Rojas and Wahlberg
(2014) showed that fused lasso can be reformulated as the usual lasso, for which the necessary
conditions for exact sign recovery have been established in the literature. Then, they proved
that one such necessary condition, known as the irrepresentable condition, is not satisfied for the
20

transformed lasso when there is a specific pattern called a staircase (Definition 2). Corrections to
Rinaldo et al. (2009) were appeared in Rinaldo (2014). Later on, Qian and Jia (2016) proposed
a method called puffer transformation, which is shown to be consistent in specifying the exact
change points, including in the presence of staircases.
In the remaining part of this section, we use the dual variables to demonstrate the situations
in which trend filtering recovers signal patterns correctly. Exact pattern recovery implies that
the dual variables are comprised of J0 + 1 consecutive bounded processes whose endpoints
correspond to the true change points. The following lemma describes the situations in which
exact pattern recovery can be attained. A particular case of this result in the context of piecewise
constant signals was established in Rinaldo (2014).
Theorem 2 Exact pattern recovery in trend filtering occurs when the discrete time processes
{b
ujst (t), t = τj + ra , . . . , τj+1 − rb } for j = 0, . . . , J0 satisfy the following conditions simultaneously with probability one:
(a) First block constraint: for t = 1, . . . , τ1 − rb ,








−1
−1
D−A DTA1 1 .
D−A DTA1 1 ≤ u
b0st (t) ≤ λ 1 + D−A DT−A
−λ 1 − D−A DT−A

(35)

t

t

(b) Last Block constraints: for t = τJ0 + ra , . . . , m,



−1
−λ 1 + D−A DT−A
D−A DTA
t

J0





−1
1 ≤u
bJst0 (t) ≤ λ 1 − D−A DT−A
D−A DTA
t


1 .

(36)

J0

(c) Interior Block constraints: for t = τj + ra , . . . , τj+1 − rb , if sj+1 6= sj




−1
bjst (t) ≤
D−A (DTA 1 − DTA 1) ≤ u
− λ 1 − D−A DT−A
j
j+1
t



−1
λ 1 + D−A DT−A
D−A (DTA
t

j+1

1 − DTA 1)
j


,

(37)

and if sj+1 = sj , which corresponds to a staircase block, u
bjst (t) ≤ 0 or u
bjst (t) ≥ 0.
In the foregoing equations, 1 = 1r+1 is a vector of size r + 1 whose elements are all 1. The proof
of this theorem is given in Appendix A.2
We analyze the performance of the PRUTF algorithm in pattern recovery in two different
scenarios;
• signals with staircase patterns,
• signals without staircase patterns.
To the author’s knowledge, Rojas and Wahlberg (2014) is the first paper to carefully investigate
the staircase pattern for the piecewise constant signals in the change points analysis setting. In
Rojas and Wahlberg (2014), a staircase pattern refers to the phenomenon of equal signs in two
consecutive changes. We extend this concept to the general case, which covers any piecewise
polynomial signals of order r, by applying the penalty matrix D = D(r+1) .

21

(a) Piecewise constant signal with staircase

(b) Piecewise linear signal with staircase block

block (50, 80].

(20, 55].

Figure 5: Piecewise constant and piecewise linear signals with staircase pattern at blocks (50,
80] and (20, 55] (shown by different colors) and their corresponding dual variables.
Definition 2 Suppose that the true signal f is a piecewise polynomial of order r with change
points at the locations τ = (τ1 , . . . , τJ ). Moreover, let B = {B0 , . . . , BJ } be blocks created by
0

0

the change points τ . A staircase occurs in block Bj , j = 1, . . . , J0 − 1 if




sign [ Df ]τj = sign [ Df ]τj+1 .

(38)

The drift term (21) plays a key role in assessing the performance of PRUTF in pattern
recovery. For a staircase block, say Bj , this drift becomes simply λ sj , which is constant in t for
the entire block. Consequently, the interior dual variables
u
bj (t; λ) for the block Bj contain only


−1
the stochastic term u
bjst (t) =
D−A DT−A
D−A y, which fluctuates around the line λ sj .
t

Recall that the KKT conditions for the dual problem of trend filtering require u
bj (t; λ) to stay
within the lines −λ and λ. Thus, the trend filtering estimate is sensitive to the variability of
st (t) touches the ±λ boundaries. Examples of
random noises and identifies change points once u
b−j

piecewise constant and piecewise linear signals, along with their corresponding dual variables,
are depicted in Figure 5, in which the above argument can be clearly seen.
The following theorem investigates the consistency of trend filtering in pattern recovery, in
both with and without staircases. Specifically, it shows that for a signal without a staircase, the
exact pattern recovery conditions stated in Theorem 2 are satisfied with probability one. On
the other hand, in the presence of staircases in the signal, the probability of these conditions
holding, which is equivalent to the probability of a Gaussian bridge process never crossing the
zero line, converges to zero.
22

Theorem 3 The followings hold for the trend filtering estimates:
(a) (Non-staircase Blocks): Suppose there is not a staircase block in the true signal f . If
for some  > 0, the conditions
λ>

Lmin δmin
,
2

hold, where Lmin =
δmin =

min

j=0, ..., J0

| fτ

j+1

and
min

j=0, ..., J0

p
λ
> (1 + ) Lmax 4 log(2(J0 + 1)Lmax ) ,
σ

(τj+1 − τj − r)r+1 , Lmax =

max

j=0, ..., J0

(39)

(τj+1 − τj − r)r+1 and

− fτ |, then the PRUTF algorithm guarantees exact pattern recovery
j

pr

with probability approaching one, that is, Pr( b
f = f ) −→ 1.
(b) (Staircase Blocks): If the true signal f contains at least one staircase block, then for
any λ > 0 and any sample size n, the probability of exact pattern recovery converges to
pr
zero, that is, Pr( b
f = f ) −→ 0.
A proof is given in Appendix A.3. According to Theorem 3, if there is no staircase pattern in the
underlying signal, trend filtering yields sign consistent estimates. Given the results in Theorem
3, the natural question is whether Algorithm 1 could be modified to enjoy the consistent pattern
recovery in any case. In the next section, we will present an effective remedy based on altering
the sign of a change associated with a staircase block.

7

Modified Trend Filtering Algorithm

In this section, we attempt to modify the PRUTF algorithm in such a way that it produces
consistent estimates of the number and locations of change points even in the presence of
staircase patterns. As previously mentioned, for a staircase block, the drift term (21) is constant
and leads to false discoveries in change points. This is shown in Figure 6 with a piecewise
constant signal of size n = 100 and the true change points at τ = (15, 40, 50, 80). The figure
reveals that the staircase block (50, 80] leads to three false discoveries at the locations 52, 54
and 76.
The inconsistency of PRUTF in the presence of a staircase as established in Theorem 3, stems
from the fact that the change signs of the two consecutive change points at bothends of the
staircase block are identical. That is, for instance, for the staircase block Bj , sign [ Df ]τj =


sign [ Df ]τj+1 . Therefore, a question arises: can we modify Algorithm 1 in such a way that the
change signs of two neighbouring change points never become equal but still yield the solution
path of trend filtering? We suggest a simple but very efficient solution to the above question.
Once a new change point is identified, we check whether its r-th order difference sign is the
same as that of the change points right before and after. If these change signs are not identical,
then the procedure continues to search for the next change point. Otherwise, the modified
PRUTF algorithm replaces the sign of the neighbouring change point with zero. This replacement of the sign prevents the drift term (21) from becoming zero. This idea is implemented for
the above signal, and the result is displayed in Figure 7. As shown in panel (b), the sign of the
first change point at location 50 is set to zero since its sign is identical to the sign of the second
23

(a) The first true change point at τ = 50.

(b) The second true change point at τ = 15.

(c) The third true change point at τ = 80.

(d) The fourth true change point at τ = 40.

Figure 6: The process of detecting change points using Algorithm 1 for a signal with a staircase
pattern. In panel (b), there are three falsely detected change points (52, 54, 76) which is due to
the staircase block (50, 80].

change point at 15. This sign replacement vanishes false discoveries appeared in panel (b) of
Figure 6.
Based on the above argument, the trend filtering solution path presented in Algorithm 1
can be modified as follows to avoid false discovery and to produce consistent pattern recovery.
Algorithm 2 (Modified PRUTF)

24

(a) The first true change point at τ = 50.

(b) The second true change point at τ = 15.

(c) The third true change point at τ = 80.

(d) The fourth true change point at τ = 40.

Figure 7: Steps of the modified trend filtering algorithm until all four true change points are
identified.

1. Execute step 1 of Algorithm 1.
2. Execute step 2 of Algorithm 1.
join

3. (a) Execute part (a) of step 3 in Algorithm 1 to obtain τj
join

point, the algorithm checks whether sj
join

just before and after τj
to zero in sA

j−1

and sB

join

and its sign sj . At this

is identical to the signs of the change points
join

. If so, set the sign of change point which is identical to sj

j−1

join

. Then, repeat part (a) of step 3 again to obtain new τj
25

join

and sj

and update the sets Aj and Bj .

(b) Execute part (b) of step 3 in Algorithm 1.
(c) Execute part (c) of step 3 in Algorithm 1.
4. Repeat step 3 until either λj > 0 or a stopping rule is met.
Remark 7 In part (a) of step 3 of the modified PRUTF, presented in Algorithm 2, it is imposjoin

sible for the sign sj

of the new change point to be identical to the sign of either of its immediate

neighbouring change points, because the algorithm checks the equality of signs at each previous
step. If they are equal, the sign of the immediate neighbouring change point will be set to zero.
Recall that the KKT optimality conditions for solutions of the trend filtering problem in (5)
b λ to be less than or equal to λ in absolute values, i.e., |b
requires the dual variables u
uλ | ≤ λ.
This condition still holds when we replace the sign values (+1 or −1) with 0. Consequently, we
have the following Theorem.
Theorem 4 The modified PRUTF algorithm presented in Algorithm 2 is a solution path of
trend filtering.
For brevity, we do not provide the proof of Theorem 4 here. We refer the reader to the similar
arguments for the LARS algorithm of lasso in Tibshirani et al. (2013).

(a) A piecewise constant signal with blocks 4

(b) A piecewise linear signal with blocks 3 and

and 8 as staircase blocks.

5 as staircase blocks.

Figure 8: The frequency plots of estimated change points using the PRUTF and mPRUTF
algorithms.

26

It is worth pointing out that the modified PRUTF (mPRUTF) algorithm requires slightly
more computation than the original PRUTF algorithm. The increase in computation time
directly depends on the number of staircase blocks in the underlying signal. To show how
mPRUTF resolves the problem of false discovery in signals with staircases, we ran both algorithms for 1000 generated datasets from a piecewise constant and piecewise linear signals. The
frequency plot of the estimated change points for both algorithms are represented in Figure 8.
The figure reveals that the original algorithm produces false discoveries within staircase blocks
for both signals, whereas mPRUTF resolves this issue.

8

Numerical Studies

In this section, we provide numerical studies to demonstrate the effectiveness and performance
of the proposed algorithm, PRUTF . We begin with a simulation study and then provide real
data analyses.

8.1

Simulation Study

In this section, we investigate the performance of our proposed method, PRUTF or mPRUTF,
by a simulation study. We consider two scenarios, namely piecewise constant and piecewise
linear signals with staircase patterns. We compare our method to some powerful state-of-theart approaches in change point analysis. These methods, a list of their available packages on
CRAN, and their applicability for different scenarios are listed in Table 1.
Method

Reference

R Package

Signal
PWC

PWL

PELT

Killick et al. (2012)

changepoint

X

5

WBS

Fryzlewicz et al. (2014)

wbs

X

5

SMUCE

Frick et al. (2014)

stepR

X

5

NOT

Baranowski et al. (2019)

not

X

X

ID

Anastasiou and Fryzlewicz (2019)

IDetect

X

X

Table 1: List of change point detection and estimation methods with their packages in R. The
last two columns indicate which methods can be applied to piecewise constant or/and piecewise
linear signals.
We adopted the simulation setting of Baranowski et al. (2019), and consider piecewise constant and piecewise linear signals as follows.
(i) A piecewise constant signal (PWC) of length n = 2024 with the number of change points
J0 = 8. The locations of the true change points are τ = (205, 308, 512, 820, 902, 1332,
1557, 1659) with jump sizes -1.464, 1.656, 1.098, 0.830, -1.537, 0.768, 1.574, -1.335, 1.537.
We set the starting intercept to 0.
(ii) A piecewise linear signal (PWL) of size n = 1408 and the number of change points J0 = 7.
The true change points are located at τ = (256, 512, 768, 1024, 1152, 1280, 1344). The
27

(a) PWC signal with staircases at blocks

(b) PWL signal with staircases at blocks

(512 , 820] and (1557 , 1659].

(512 , 768] and (1024 , 1152].

Figure 9: Two signals with the generated samples used in the simulation study.

corresponding intercepts and slopes for 8 created blocks by τ are 0.111, 0.553, -0.481,
3.002,-7.169, -0.030, 7.217, -0.958 and −8 × 2−6 , 6 × 2−6 , −3 × 2−6 , −11 × 2−6 , 12 ×
2−6 , 4 × 2−6 , −7 × 2−6 , 8 × 2−6 , respectively.
Figure 9 displays the true PWC and PWL signals, with their representative datasets generated
using model (1). We note that both PWC and PWL signals contain two staircase blocks. These
blocks for the PWC signal are (512 , 820], (1557 , 1659] and for PWL signal are (512 , 768] and
(1024 , 1152].
We apply the mPRUTF method presented in Algorithm 2 to estimate the number and the
locations of the change points for the PWC and PWL signals. In each iteration of the simulation
study, we simulate a dataset according to model (1) under the assumption that the error terms
are independently and identically distributed as N (0 , σ 2 ). Moreover, we set the significance
level to α = 0.05 for the stopping criterion of (32) provided in Section 5 to terminate the
algorithm.
In order to explore the impact of different noise levels on the change point methods, we
run each simulation for various values of σ in {0.5, 1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5}. We run the
simulation N = 2000 times and report the results for each change point technique in terms
of estimates of the number of change points, estimates of the mean square error given by
P
2
b
MSE = N −1 N
i=1 (fi − fi ) , estimates of the scaled Hausdorff distance given by
(
)
1
dH =
max
max
min | τbi − τj | , max
min | τbi − τj | ,
j=0, ..., J0 i=0, ..., Jb
N
i=0, ..., Jb0 j=0, ..., J0
0
28

(a) Average number of change points.

(b) MSE of signal estimation.

(c) Hausdorff distance of the estimations.

(d) Computation time in seconds.

Figure 10: The estimated average number of change points, MSE and Hausdorff distance, as
well as the computation time of various methods for PWC signal. The results are provided for
different values of the noise variability σ.

and the computation time in seconds. These quantities are frequently used to assess the performance of a change point detection techniques in the literature, for example, see Baranowski
et al. (2019), Anastasiou and Fryzlewicz (2019). The signal estimate, fb, is computed by the
least square fit of a polynomial of order r to the observations within segments created by each
method. We also remark that the tuning parameters and stopping criteria for the methods

29

(a) Average number of change points.

(b) MSE of signal estimation.

(c) Hausdorff distance of the estimations.

(d) Computation time in seconds.

Figure 11: The estimated average number of change points, MSE and Hausdorff distance, as
well as the computation time of various methods for PWL signal. The results are provided for
different values of the noise variability σ.

listed in Table 1 are set to the default values by the packages.
The results for the PWC and PWL signals are presented in Figure 10 and Figure 11, respectively. In the case of piecewise constant signal, as in Figure 10, mPRUTF performs comparable
to WBS, NOT and ID in terms of the average number of change points, MSE and Hausdorff
distance up to σ = 3, and outperforms them as σ increases. From a computational point of view,

30

mPRUTF takes a slightly longer time, mainly due to the matrix D multiplications, however,
this computation time decreases as noise level σ increases.
In the case of piecewise linear signal, mPRUTF is only compared to NOT and ID methods,
which are applicable to the piecewise polynomials of order r ≥ 1. Figure 11 reveals that
mPRUTF outperforms both NOT and ID in terms of the average number of change points,
MSE and the Hausdorff distance. As shown in Panel (d) of Figure 11, the computation time of
mPRUTF decreases faster as the value of σ increases.
Simulation results for most of the scenarios indicate that mPRUTF is among the most
competitive change point detection approaches in the literature. mPRUTF performs well in
terms of the estimation of the number of change points, their locations, as well as the true
signals.

8.2

Real Data Analysis

We have analyzed UK HPI and GISTEMP and COVID-19 datasets using our proposed algorithm. Because σ 2 is unknown for these real datasets, we applied median absolute deviation
(MAD) proposed by Hampel (1974), to robustly estimate σ 2 . More specifically, a MAD estimate
√
of σ in presence of piecewise constant signals is given by σ
b = Median(D(1) y)/[ 2Φ−1 (0.75)] and
√
in the piecewise linear signals by σ
b = Median(D(2) y)/[ 6Φ−1 (0.75)], where Φ−1 (·) represents
the inverse cumulative density function of the standard normal distribution.
Example 1 The UK House Price Index (HPI) is a National Statistic that shows changes in
the value of residential properties in England, Scotland, Wales and Northern Ireland. The HPI
measures the price changes of residential housing by calculating the price of completed houses sale
transactions as a percentage change from some specific start date. The UK HPI uses the hedonic
regression model as a statistical approach to produce estimates of the change in house prices for
each period. For more details, see https: // landregistry. data. gov. uk/ app/ ukhpi . Many
researchers, including Fryzlewicz (2018), Fryzlewicz et al. (2018) and Anastasiou and Fryzlewicz
(2019), have studied the UK HPI dataset in carrying out change point analysis. In the current
study, we consider monthly percentage changes in the UK HPI at Tower Hamlets (an east
borough of London) from January 1996 to November 2018.
The dataset and its piecewise constant fit derived by our proposed method are presented in
Figure 12a. Our method finds five change points located at the dates December 2002, April 2008
and August 2009 (can be attributed to the Credit Crunch and Financial Crises), May 2012 (can
be attributed to The London 2012 Summer Olympics) and August 2015 (can be attributed to
regulatory and tax changes, and also by lower net migration from the EU).

Example 2 The Goddard Institute for Space Studies (GISS) monitors broad global changes
around the world. The GISS Surface Temperature Analysis (GISTEMP) is an estimate of the
global surface temperature changes (see https: // www. giss. nasa. gov ). In the analysis of
GISTEMP data, the temperature anomalies are used rather than the actual temperatures. A
temperature anomaly is a difference from an average or baseline temperature. The baseline
31

(a) UK HPI dataset and its piecewise constant

(b) GISTEMP dataset and its piecewise linear

fit.

fit.

Figure 12: The time series and fitted signals for both Tower Hamlet HPI and GISTEMP
datasets presented in examples
temperature is typically computed by averaging thirty or more years of temperature data (1951
to 1980 in the current dataset). A positive anomaly indicates the observed temperature was
warmer than the baseline, while a negative anomaly indicates the observed temperature was
cooler than the baseline. For more details see Hansen et al. (2010) and Lenssen et al. (2019).
The GISTEMP dataset has been frequently explored in change point literature, for example
see Ruggieri (2013), James and Matteson (2015) and Baranowski et al. (2019). Figure 12b
displays the monthly land-ocean temperature anomalies recorded from January 1880 to August
2019 (see https: // data. giss. nasa. gov/ gistemp ). The plot reveals the presence of a linear
trend with several change points in the dataset. An estimate of the piecewise linear signal using
our method PRUTF is also presented in Figure 12b.
For the GISTEMP dataset, we identify seven change points located on October 1900, March
1911, April 1915, June 1935, April 1944, December 1946, June 1976, September 2015 and
December 2017. The piecewise linear fit to this dataset is also provided in Figure 12b.
Example 3 Since the initial outbreak of Novel Coronavirus Disease 2019 (COVID-19) in
Wuhan, China, in mid-November 2019, the virus has rapidly spread throughout the world. The
pandemic has infected 21.26 million people and killed more than 761,000 https: // covid19.
who. int/ , greatly stressing public health systems and adversely influencing global society and
economies. Therefore, every country has attempted to slow down the transmission rate by various regional and national policies such as the declaration of national emergencies, quarantines
and mass testing. Of vital interest to governments is understanding the pattern of the epidemic
32

Figure 13: The estimated linear trend and change point locations of the number of confirmed
cases of COVID-19 for the selected countries

33

growth and assessing the effectiveness of policies undertaken. A scientist can investigate these
matters by analyzing the sequence of infection data for COVID-19. Changepoint detection is
one possible framework for studying the behaviour of COVID-19 infection curves. By detecting
the locations of alterations in the curves, change point analysis gives us insights into changes
in the transmission rate or efficiency of interventions. It also enables us to raise warning signals if the disease pattern changes. We have applied our modified PRUTF algorithm to detect
change points that have occurred in the log-scale of the cumulative number of confirmed cases
for Australia, Brazil, Canada, Germany, Italy, Spain, United Kingdom and the United States.
We then fitted a piecewise linear model to the transformed data using the selected change points.
Figure 13 displays the locations of our detected change points as well as the estimated linear
trends for COVID-19 data from February 30 to August 18.
As can be viewed from Figure 13, the COVID-19 growth rate decreases after the second
change point in most countries. The growth rate curves were successfully flattened for most
countries in early May, except for Brazil. The second wave of the pandemic has already begun
in countries such as the United States, Australia and Spain in early July. These countries have
undergone two change points since the beginning of the second wave.

9

Discussion

This paper proposed an algorithm, PRUTF, to detect change points in piecewise polynomial
signals using trend filtering. We demonstrated that the dual solution path produced by the
PRUTF algorithm forms a Gaussian bridge process for any given value of the regularization
parameter λ. This conclusion allowed us to derive an efficient stopping rule for terminating
the search algorithm, which is vital in change point analysis. We then proved that when
there is no staircase block in the signal, the method guarantees consistent pattern recovery.
However, it fails in doing so when there is a staircase in the underlying signal. To address this
shortcoming in such a case, we suggested a modification in the procedure of constructing the
solution path, which effectively prevents false discovery of change points. Evidence from both
simulation studies and real data analysis reveals the accuracy and the high detection power of
the proposed method.

Appendix A
A.1

Proof of Theorem 1
i.i.d.

a) For ε1 , . . . , εn , . . . ∼ N (0, σ 2 ), and a sequence q1 , . . . , qn , . . . of real numbers, let
!
k
k
X
X
νk = Var
q i εi = σ 2
qi2
for k ≥ 1 .
i=1

i=1

Define the partial weighted sum process {Sn (t) : 0 ≤ t ≤ 1} by
bn tc
1 X
q i εi ,
Sn (t) = √
νn
i=1

34

for

0 ≤ t ≤ 1,

Obviously for any k ≥ 1, and any 0 < t1 < t2 < · · · < tk ≤ 1, the vector (Sn (t1 ), . . . , Sn (tk ))
has a multivariate normal distribution, and therefore {Sn (t) : 0 ≤ t ≤ 1} is a Gaussian
process for any given n.
Since the dual variables DT u = y−f in (4) can be rewritten as u(bn tc) =

P
as well as νn = ni=1
the weights for the process W0j (t) are qi = r+i−1
r

Pbn tc

r+i−1
εi ,
i=1
r

r+i−1 2
. Morer



over, from the definition of W0j (t) and independence of εi , it is clear that the increments of W0j are stationary and independent. Recall that the structure of the true


signal f remains unchanged within the j-th block, meaning that D−A t f = 0 for any


−1
t = τj + ra , . . . , τj+1 − rb , which in turn implies D−A DT−A
D−A f = 0. This proves
t

that the mean of W0j is zero.

b) Conditioning W0j on W0j ((τj + ra )/m) = 0 and W0j ((τj+1 − rb )/m) = 0 gives rise to the
Gaussian bridge process Wj .

−1
c) Recall that D−A DT−A
is a block diagonal matrix which states that the covariance
matrix between two distinct blocks is zero. This completes the proof of the theorem.

A.2

Proof of Theorem 2

a) For t = 1, . . . , τ1 − rb , and both signs ±1, according to the KKT conditions, the dual
variables u
b(t) must lie between −λ and λ, that is,


−1
st
T
−λ ≤ u
b0 (t) − λ D−A D−A
D−A DTA 1 ≤ λ
t

1

(A.1)

which yields the constraint for the first block in (35).
b) Similar to the first block, for t = τJ0 + ra , . . . , m, the constraint becomes
−λ ≤ u
bJst (t) + λ
0



D−A DT−A

−1


D−A
t

DTA 1 ≤ λ ,

(A.2)

J0

which leads to the result of (36).
c) For t = τj + ra , . . . , τj+1 − rb , and j = 1, . . . , J0 − 1 the constraint for the exact pattern
recovery becomes
st

λ sj ≤ u
bj (t) − λ



T

D−A D−A

−1

D−A

 
t

DTA

j+1


sj+1 + DTA sj ≤ λ sj+1 .
j

(A.3)

Since the stochastic process u
bjst (t) is symmetric around zero, when sj+1 and sj have the
opposite signs, this constraint reduces to (37). Otherwise, for sj+1 = sj , which accounts
for staircase in block j, the constraint becomes u
bjst (t) ≤ 0 or u
bjst (t) ≥ 0.

A.3

Proof of Theorem 3

(a) It suffices to establish that the probability of violating the KKT conditions for a signal
with no staircase block converges to zero. To this end, let Pj denote the probability of
35

violating the KKT conditions for block j, hence from symmetry of u
bjst (t)


 

−1

st
T
T
T
Pj ≤ 2 Pr u
bj (t) ≥ λ D−A D−A
D−A
DA 1 − DA 1 , for some t ∈ Bj
j+1
j
t



 
−1

[
= 2 Pr 
u
bjst (t) ≥ λ D−A DT−A
D−A
DTA 1 − DTA 1 
τj+1 −rb

X

≤2

j+1

t

t∈Bj



 
−1
st
T
Pr u
bj (t) ≥ λ D−A D−A
D−A
DTA
t

t=τj +ra +1
τj+1 −rb

X

≤2

t=τj +ra +1

j

(

λ2 ξ 2
exp − 2 t 2
2σ Lj


1 − DA 1
T

j+1

j

)
,

(A.4)

where


D−A

DT

−1

−A

D−A

 

DTA

t

ξt =

rh

(D−A

DT

−A

)−1

j+1

1 − DTA 1



j

(τj+1 − τj − r)(r+1)/2 ,

i

(A.5)

tt

and
Lj = (τj+1 − τj − r)r+1 .

(A.6)

The last inequality in (A.4) is obtained from the Gaussian tail bounds. It can be shown
that ξt ≥ 1 for any t = τj + ra + 1, . . . , τj+1 − rb , hence
τj+1 −rb

(

X

Pj ≤ 2

t=τj +ra +1

which converges to zero if

λ
σLj

λ2 ξ 2
exp − 2 t 2
2σ Lj

−→ ∞, and √
σ

)

(

λ2
≤ 2 Lj exp − 2 2
2σ Lj

λLj
4 log(2Lj )

)
.

(A.7)

> (1 + ) for some  > 0.

Overall, by symmetry of u
bjst (t) for all j = 0, . . . , J0 , the probability of violating the KKT
conditions is given by


 
−1
[
st
T
2 Pr 
u
bj (t) ≥ λ D−A D−A
D−A
DTA
t

t∈Bj

≤ 2 (J0 + 1) Lmax


exp −

λ2
2 σ 2 L2max



j+1




1 − DTA 1 , for some j = 0, . . . , J0 
j


λ2
= exp − 2 2 + log(2 (J0 + 1)Lmax ) . (A.8)
2σ Lmax


Equation (A.8) states that the KKT conditions violate with probability approaching to
zero as
λ>

Lmin δmin
2

and

p
λ
> (1 + ) Lmax 4 log(2(J0 + 1)Lmax ) , for any  > 0 .
σ

(b) As previously mentioned, in staircase blocks, the violation of the KKT conditions boils
down to crossing the zero line for a Gaussian bridge process. Suppose j-th block is a
staircase block, therefore PRUTF can attain the exact discovery if u
bjst (t) ≤ 0 or u
bjst (t) ≥ 0,
36

for all (τj + ra )/m <!t < (τj+1 − rb )/m. Hence the probability of this event is equal to
Pr

max u
bjst (t) ≤ 0 . According to Beghin and Orsingher (1999),

0≤t≤Lj

!
Pr

st

max u
bj (t) ≤ a

0≤t≤Lj



2 a2
,
= 1 − exp − 2
Sr (Lj )

(A.9)


−1
where Sr2 (Lj ) is the Lj -th diagonal element of the matrix σ 2 DAj DTA
. As a result,
j

the probability converges to zero as a vanishes. This implies that trend filtering fails to
consistently discover the true pattern in presence of staircase.

Bibliography
Adler, R. J. and Taylor, J. E. (2009). Random fields and geometry. Springer.
Ali, A., Tibshirani, R. J., et al. (2019). The generalized lasso problem and uniqueness. Electronic
Journal of Statistics, 13(2):2307–2347.
Aminikhanghahi, S. and Cook, D. J. (2017). A survey of methods for time series change point
detection. Knowledge and Information Systems, 51(2):339–367.
Anastasiou, A. and Fryzlewicz, P. (2019). Detecting multiple generalized change-points by
isolating single ones. ArXiv Preprint arXiv:1901.10852.
Auger, I. E. and Lawrence, C. E. (1989). Algorithms for the optimal identification of segment
neighborhoods. Bulletin of Mathematical Biology, 51(1):39–54.
Bai, J. (1997). Estimating multiple breaks one at a time. Econometric Theory, 13(3):315–352.
Bai, J. and Perron, P. (2003). Computation and analysis of multiple structural change models.
Journal of Applied Econometrics, 18(1):1–22.
Baranowski, R., Chen, Y., and Fryzlewicz, P. (2019). Narrowest-over-threshold detection of
multiple change points and change-point-like features. Journal of the Royal Statistical Society:
Series B (Statistical Methodology), 81(3):649–672.
Beghin, L. and Orsingher, E. (1999). On the maximum of the generalized brownian bridge.
Lithuanian Mathematical Journal, 39(2):157–167.
Bianchi, M., Boyle, M., and Hollingsworth, D. (1999). A comparison of methods for trend
estimation. Applied Economics Letters, 6(2):103–109.
Billingsley, P. (2013). Convergence of probability measures. John Wiley and Sons.
Boyd, S., Parikh, N., Chu, E., Peleato, B., Eckstein, J., et al. (2011). Distributed optimization
and statistical learning via the alternating direction method of multipliers. Foundations and
Trends R in Machine learning, 3(1):1–122.
37

Boyd, S. and Vandenberghe, L. (2004). Convex optimization. Cambridge university press.
Brezis, H. (2010). Functional analysis, Sobolev spaces and partial differential equations. Springer.
Ciuperca, G. (2011). A general criterion to determine the number of change-points. Statistics
& Probability Letters, 81(8):1267–1275.
Ciuperca, G. (2014). Model selection by lasso methods in a change-point model. Statistical
Papers, 55(2):349–374.
Demetriou, I. and Lipitakis, E. (2001). Certain positive definite submatrices that arise from
binomial coefficient matrices. Applied Numerical Mathematics, 36(2-3):219–229.
Donsker, M. D. (1951). An invariance principle for certain probability limit theorems.
Eckley, I. A., Fearnhead, P., and Killick, R. (2011). Analysis of changepoint models. Bayesian
Time Series Models, pages 205–224.
Frick, K., Munk, A., and Sieling, H. (2014). Multiscale change point inference. Journal of the
Royal Statistical Society: Series B (Statistical Methodology), 76(3):495–580.
Fryzlewicz, P. (2018). Detecting possibly frequent change-points: Wild binary segmentation 2
and steepest-drop model selection. ArXiv Preprint arXiv:1812.06880.
Fryzlewicz, P. et al. (2014). Wild binary segmentation for multiple change-point detection. The
Annals of Statistics, 42(6):2243–2281.
Fryzlewicz, P. et al. (2018). Tail-greedy bottom-up data decompositions and fast multiple
change-point detection. The Annals of Statistics, 46(6B):3390–3421.
Futschik, A., Hotz, T., Munk, A., and Sieling, H. (2014). Multiscale dna partitioning: statistical
evidence for segments. Bioinformatics, 30(16):2255–2262.
Galceran, E., Cunningham, A. G., Eustice, R. M., and Olson, E. (2017). Multipolicy decisionmaking for autonomous driving via changepoint-based behavior prediction: Theory and experiment. Autonomous Robots, 41(6):1367–1382.
Gasbarra, D., Sottinen, T., and Valkeila, E. (2007). Gaussian bridges. In Stochastic analysis
and applications, pages 361–382. Springer.
Green, P. J. and Silverman, B. W. (1993). Nonparametric regression and generalized linear
models: a roughness penalty approach. Chapman and Hall/CRC.
Hampel, F. R. (1974). The influence curve and its role in robust estimation. Journal of the
American Statistical Association, 69(346):383–393.
Hansen, B. E. (2001). The new econometrics of structural change: dating breaks in us labour
productivity. Journal of Economic Perspectives, 15(4):117–128.

38

Hansen, J., Ruedy, R., Sato, M., and Lo, K. (2010). Global surface temperature change. Reviews
of Geophysics, 48(4).
Harchaoui, Z. and Lévy-Leduc, C. (2010). Multiple change-point estimation with a total variation penalty. Journal of the American Statistical Association, 105(492):1480–1493.
Horváth, L. and Rice, G. (2014). Extensions of some classical methods in change point analysis.
Test, 23(2):219–255.
Hoskins, W. and Ponzo, P. (1972). Some properties of a class of band matrices. Mathematics
of Computation, 26(118):393–400.
Huang, T., Wu, B., Lizardi, P., and Zhao, H. (2005). Detection of dna copy number alterations
using penalized least squares regression. Bioinformatics, 21(20):3811–3817.
Jackson, B., Scargle, J. D., Barnes, D., Arabhi, S., Alt, A., Gioumousis, P., Gwin, E., Sangtrakulcharoen, P., Tan, L., and Tsai, T. T. (2005). An algorithm for optimal partitioning of
data on an interval. IEEE Signal Processing Letters, 12(2):105–108.
James, N. A. and Matteson, D. S. (2015). Change points via probabilistically pruned objectives.
ArXiv Preprint arXiv:1505.04302.
Jia, J., Rohe, K., et al. (2015). Preconditioning the lasso for sign consistency. Electronic Journal
of Statistics, 9(1):1150–1172.
Killick, R., Fearnhead, P., and Eckley, I. A. (2012). Optimal detection of changepoints with a
linear computational cost. Journal of the American Statistical Association, 107(500):1590–
1598.
Kim, S.-J., Koh, K., Boyd, S., and Gorinevsky, D. (2009). `1 trend filtering. SIAM Review,
51(2):339–360.
Lavielle, M. (2005). Using penalized contrasts for the change-point problem. Signal Processing,
85(8):1501–1510.
Lee, T.-S. (2010). Change-point problems: bibliography and review. Journal of Statistical
Theory and Practice, 4(4):643–662.
Lenssen, N. J., Schmidt, G. A., Hansen, J. E., Menne, M. J., Persin, A., Ruedy, R., and Zyss,
D. (2019). Improvements in the uncertainty model in the goddard institute for space studies
surface temperature (gistemp) analysis. Journal of Geophysical Research: Atmospheres.
Liu, D., Chen, X., Lian, Y., and Lou, Z. (2010). Impacts of climate change and human activities on surface runoff in the dongjiang river basin of china. Hydrological Processes: An
International Journal, 24(11):1487–1495.
Lung-Yut-Fong, A., Lévy-Leduc, C., and Cappé, O. (2012). Distributed detection/localization of
change-points in high-dimensional network traffic data. Statistics and Computing, 22(2):485–
496.
39

Maidstone, R., Hocking, T., Rigaill, G., and Fearnhead, P. (2017). On optimal multiple changepoint algorithms for large data. Statistics and Computing, 27(2):519–533.
Mairal, J. and Yu, B. (2012). Complexity analysis of the lasso regularization path. ArXiv
Preprint arXiv:1205.0079.
Mammen, E., van de Geer, S., et al. (1997). Locally adaptive regression splines. The Annals of
Statistics, 25(1):387–413.
Olshen, A. B., Venkatraman, E., Lucito, R., and Wigler, M. (2004). Circular binary segmentation for the analysis of array-based dna copy number data. Biostatistics, 5(4):557–572.
Osborne, M. R., Presnell, B., and Turlach, B. A. (2000). On the lasso and its dual. Journal of
Computational and Graphical statistics, 9(2):319–337.
Oudre, L., Lung-Yut-Fong, A., and Bianchi, P. (2011). Segmentation of accelerometer signals recorded during continuous treadmill walking. In 2011 19th European Signal Processing
Conference, pages 1564–1568. IEEE.
Page, E. (1955). A test for a change in a parameter occurring at an unknown point. Biometrika,
42(3/4):523–527.
Page, E. S. (1954). Continuous inspection schemes. Biometrika, 41(1/2):100–115.
Pan, J. and Chen, J. (2006). Application of modified information criterion to multiple change
point problems. Journal of Multivariate Analysis, 97(10):2221–2241.
Pezzatti, G. B., Zumbrunnen, T., Bürgi, M., Ambrosetti, P., and Conedera, M. (2013). Fire
regime shifts as a consequence of fire policy and socio-economic development: an analysis
based on the change point approach. Forest Policy and Economics, 29:7–18.
Qian, J. and Jia, J. (2016). On stepwise pattern recovery of the fused lasso. Computational
Statistics & Data Analysis, 94:221–237.
Ramdas, A. and Tibshirani, R. J. (2016). Fast and flexible admm algorithms for trend filtering.
Journal of Computational and Graphical Statistics, 25(3):839–858.
Ranganathan, A. (2012). Pliss: labeling places using online changepoint detection. Autonomous
Robots, 32(4):351–368.
Rigaill, G. (2015). A pruned dynamic programming algorithm to recover the best segmentations
with 1 to k max change-points. Journal de la Société Française de Statistique, 156(4):180–205.
Rinaldo, A. (2014). Corrections to properties and refinements of the fused lasso.
Rinaldo, A. et al. (2009). Properties and refinements of the fused lasso. The Annals of Statistics,
37(5B):2922–2952.

40

Robbins, M. W., Lund, R. B., Gallagher, C. M., and Lu, Q. (2011). Changepoints in the north
atlantic tropical cyclone record. Journal of the American Statistical Association, 106(493):89–
99.
Rojas, C. R. and Wahlberg, B. (2014). On change point detection using the fused lasso method.
ArXiv Preprint arXiv:1401.5408.
Ruggieri, E. (2013). A bayesian approach to detecting change points in climatic records. International Journal of Climatology, 33(2):520–528.
Shorack, G. R. and Wellner, J. A. (2009). Empirical processes with applications to statistics.
SIAM.
Siris, V. A. and Papagalou, F. (2004). Application of anomaly detection algorithms for detecting syn flooding attacks. In IEEE Global Telecommunications Conference, 2004. GLOBECOM’04., volume 4, pages 2050–2054. IEEE.
Stasinopoulos, D. and Rigby, R. (1992). Detecting break points in generalised linear models.
Computational Statistics & Data Analysis, 13(4):461–471.
Steidl, G., Didas, S., and Neumann, J. (2006). Splines in higher order tv regularization. International Journal of Computer Vision, 70(3):241–255.
Tibshirani, R. (1996). Regression shrinkage and selection via the lasso. Journal of the Royal
Statistical Society: Series B (Methodological), 58(1):267–288.
Tibshirani, R. J. et al. (2013). The lasso problem and uniqueness. Electronic Journal of
Statistics, 7:1456–1490.
Tibshirani, R. J. et al. (2014). Adaptive piecewise polynomial estimation via trend filtering.
The Annals of Statistics, 42(1):285–323.
Tibshirani, R. J., Taylor, J., et al. (2011). The solution path of the generalized lasso. The
Annals of Statistics, 39(3):1335–1371.
Truong, C., Oudre, L., and Vayatis, N. (2018). A review of change point detection methods.
ArXiv Preprint arXiv:1801.00718.
van der vaart, A. and Wellner, J. (1996). Weak convergence and empirical processes: With
applications to statistics. Springer, 58:59.
Vostrikova, L. Y. (1981). Detecting disorder in multidimensional random processes. In Doklady
Akademii Nauk, volume 259, pages 270–274. Russian Academy of Sciences.
Wainwright, M. J. (2009). Sharp thresholds for high-dimensional and noisy sparsity recovery using `1 -constrained quadratic programming (lasso). IEEE Transactions on Information
Theory, 55(5):2183–2202.

41

Wang, Y.-X., Smola, A., and Tibshirani, R. (2014). The falling factorial basis and its statistical
applications. In International Conference on Machine Learning, pages 730–738.
Wu, Y. (2008). Simultaneous change point analysis and variable selection in a regression problem. Journal of Multivariate Analysis, 99(9):2154–2171.
Yao, Y.-C. (1988). Estimating the number of change-points via schwarz’criterion. Statistics &
Probability Letters, 6(3):181–189.
Yao, Y.-C. and Au, S.-T. (1989). Least-squares estimation of a step function. Sankhyā: The
Indian Journal of Statistics, Series A, pages 370–381.
Zhang, N. R. and Siegmund, D. O. (2007). A modified bayes information criterion with applications to the analysis of comparative genomic hybridization data. Biometrics, 63(1):22–32.
Zhao, P. and Yu, B. (2006). On model selection consistency of lasso. Journal of Machine
Learning Rresearch, 7(Nov):2541–2563.

42

