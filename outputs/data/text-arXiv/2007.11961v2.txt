Dominant Resource Fairness with Meta-Types
Steven Yin,1 Shatian Wang, 1 Lingyi Zhang, 1 Christian Kroer 1
1

arXiv:2007.11961v2 [econ.TH] 23 Sep 2020

IEOR Department, Columbia University
sy2737@columbia.edu, sw3219@columbia.edu, lz2573@columbia.edu, christian.kroer@columbia.edu

Abstract
Inspired by the recent COVID-19 pandemic, we study a generalization of the multi-resource allocation problem with heterogeneous demands and Leontief utilities. Unlike existing
settings, we allow each agent to specify a constraint to only
accept allocations from a subset of the total supply for each
resource. Such constraints often arise from location constraints (e.g. among all of the volunteer nurses, only those
who live nearby can work at hospital A due to commute constraints. So hospital A can only receive allocations of volunteers from a subset of the total supply). This can also model
a type of substitute effect where some agents need 1 unit
of resource A or B, but some other agents specifically want
A, and some specifically want B. We propose a new mechanism called Group Dominant Resource Fairness which determines the allocations by solving a small number of linear
programs. The proposed method satisfies Pareto optimality,
envy-freeness, strategy-proofness, and a notion of sharing incentive for our setting. To the best of our knowledge this is the
first mechanism to achieve all four properties in our setting.
Furthermore, we show numerically that our method scales
better to large problems than alternative approaches. Finally,
although motivated by the problem of medical resource allocation in a pandemic, our mechanism can be applied more
broadly to resource allocation under Leontief utilities with
accessibility constraints.

medical worker largely affects where she can commute to
work; thus, she can only be assigned to agents within her
commutable radius. Third, agents have different capacities
(big medical centers versus small hospitals) and are in different stress levels (hospitals in an epicenter versus the ones in
rural areas with few cases), so they naturally have different
priorities over the resources.
Another setting that has the above characteristics is the
compute resource sharing problem with sub-types. For example, suppose a compute server has several compute nodes,
and there are different types of GPU/CPU on the various
nodes (e.g. NVIDIA vs. AMD GPU, size of RAM on the
GPU card, Intel vs AMD CPU, etc). Some users might be
looking for a specific hardware configuration while others
might be less selective.
In this paper, we propose a new market mechanism that
tackles the three challenges outlined above and achieves desirable fairness properties including Pareto optimality, envyfreeness, strategy-proofness, and sharing incentive. In our
numerical experiments, we demonstrate that compared to
the Maximum Nash Welfare (MNW) approach, our mechanism is cheaper to compute (sometimes significantly) and
enjoys theoretical properties that MNW does not have.

2
1

Introduction

The recent COVID-19 pandemic has brought forward a
number of questions that are particularly relevant to the
operations research community. While infectious disease
spread modeling and resource demand forecasting provide
guidance for the policy making process, an equally important and often overlooked problem is the effective and fair
allocation of resources, such as volunteer medical workers,
ventilators, emergency field hospital beds, personal protective equipment, etc.
There are several challenges unique to the medical resource allocation problem in the face of an infectious disease
outbreak. First, utilities from different types of resources are
not additive nor linear. For example, when there are enough
nurses but not enough doctors, the marginal utility of having one additional nurse on staff is very low. Second, not
all resources are accessible to all hospitals / organizations
(agents). For instance, the home location of each volunteer

Related work

There has been a flurry of recent papers coming out of the
operations research, statistics, and computer science communities addressing various aspects of the pandemic. We
focus on literature that deals with emergency resource allocations in the aftermath of a pandemic, as well as general
fair division techniques that are most relevant in our setting.

2.1

Emergency resource allocation

Much work has been done to address the various supply shortages caused by COVID-19. Many studied medical resource allocations from a qualitative perspective, addressing ethical and medical questions in a pandemic (Barr
et al. 2008; Emanuel et al. 2020; Truog, Mitchell, and Daley 2020). From a mechanism design view point, (Jalota,
Pavone, and Ye 2020) proposed a mechanism for allocation
of public goods that are capacity constrained due to social
distancing protocols, focusing on achieving a market clearing outcome. (Mehrotra et al. 2020) studied the allocation of

ventilators under a stochastic optimization framework, minimizing the expected number of shortages in ventilators while
also considering the cost of transporting ventilators. (Kanter
2015; Powell, Christ, and Birkhead 2008) provided guidelines for deciding whether a patient should be allocated
a ventilator. (Zenteno 2013) combined influenza modeling
techniques with robust optimization to handle workforce
shortfall in a pandemic. (Xiang and Zhuang 2016) modeled the deteriorating health of victims using a stochastic model and optimized for the expected number of survivals. (Arora, Raghu, and Vinze 2010) studied the tradeoffs between building redundant capacity and using mutual
aid. (Boreskie, Boreskie, and Melady 2020) proposed guidelines for physicians when deciding if a patient should be allocated an ICU unit. All of these papers focus on optimizing
some objective function but do not address fairness properties. Our work serves as a complement to the existing work.

2.2

General resource allocation

Under a fairly general class of utility functions including
the Leontief utility, computing market equilibrium under
the fisher market setting (divisible goods) can be done using an Eisenberg-Gale (EG) convex program (Eisenberg and
Gale 1959). Market equilibrium solutions satisfy Pareto optimality, proportionality, and envy-freeness. It is also known
that EG convex program implicitly maximizes Nash welfare,
which is the product of all agents’ utilities. However, MNW
is generally not strategyproof, and can be computationally
expensive for large problems.
For Leontief utilities, (Ghodsi et al. 2011a) introduced the
Dominant Resource Fairness allocation mechanism (DRF)
which in addition to the three properties satisfied by market
equilibrium solutions, is also strategyproof. Later (Parkes,
Procaccia, and Shah 2015) extended the setting to allow
agents to have priority weights as well as zero demand over
some resources while maintaining all four desiderata. However they do not handle the accessibility constraints in our
setting, and as we discuss later in the paper, a naive adaptation of this generalized DRF mechanism to our setting does
not yield Pareto optimal allocations in general.
For indivisible resources, (Caragiannis et al. 2019)
showed that maximizing Nash welfare under the indivisible
setting satisfies envy-freeness up to one resource unit and
has nice guarantees on the Max-Min Share ratio. Although
exact market equilibrium might not exist in indivisible settings, (Budish 2011) showed that a close approximation of
it exists in the unweighted, binary allocation case. This was
later put into practice for course allocation in (Budish et al.
2017). However the theory does not provide useful approximation bounds when assignments are not binary (e.g., each
student only needs one seat from each class, but each hospital may require hundreds of doctors). Furthermore, the existing computational approaches do not scale to the size of the
problems encountered in pandemic situations, where tens of
thousands of volunteers need to be allocated to hundreds of
hospitals.

3

Problem formulation

For the remainder of the paper we use local medical personnel allocation as a running example, even though other
resource allocation problems can be formulated in a similar
fashion. We group resources into meta-types: volunteer doctors, nurses, ventilators, emergency field hospital beds, etc.
Within each meta-type (e.g., doctors), we have types (e.g.,
doctors from the Bronx, doctors from Brooklyn, doctors
from Manhattan, etc.1 ). We assume that demands are given
over meta-types (e.g., a hospital is indifferent to where doctors assigned to it come from). However, each agent sometimes can only receive allocation from a subset of the resources in a meta-type because of constraints such as location (e.g., a hospital in the Bronx might only accept volunteer doctors from the Bronx and Manhattan because the
commute would be too long otherwise). We refer to such
subsets of resource types in each meta-type as the agents’
demand groups.
We use Ω1 , Ω2 , · · · , ΩL to denote the meta-types. Each
meta-type Ωl is a set that contains resource types which belong to it. We assume that Ωi ∩ Ωj = ∅ for any two different
meta-types i, j and use R to denote the set of all resource
types: R = ∪l∈[L] Ωl , and m = |R| to denote the total number of resource types. Note that each resource type belongs
to only one meta-type. We let N be the set of agents, and
n = |N | be the total number of agents.
We use Sr to denote the supply of resource type r. We
assume that the supplies are normalized within each metatype:
X
Sr = 1 ∀l ∈ [L].
r∈Ωl

Each agent i ∈ N submits a similarly normalized demand
vector [di1 , . . . , diL ] where dil denotes the fraction of available units among meta-type l that agent i needs in order to
get one unit of utility (one can think of this as each agent
trying to complete as many units of work as possible, where
each unit of work requires dil units of meta-type l). Additionally, each agent also submits a group structure constraint
in the form of a set of demand groups.
Let Gi = {gli ⊆ Ωl : l ∈ [L], dil > 0}, be the set of demand groups for agent i, where gli ⊆ Ωl is agent i’s demand
group for l, specifying the subset of resource types belonging to meta-type l that agent i accepts/can access. Note that
we only include in Gi demand groups for meta-types that
agent i has non-zero demand of. This is to simplify notation
in the later analysis. Intuitively, the introduction of metatypes models the substitution effects, and the introduction of
demand groups models the accessibility constraints. When i
is clear from the context, we sometimes use gl instead of gli
to simplify the notation.
We also allow each agent i to have a different priority weight wil for each meta-type l. Note that if we let
wi1 = . . . = wiL , then this reduces to having a single priority weight for each agent. We
Passume weights are normalized within each meta-type: i∈N wil = 1 for l ∈ [L].
1
Manhattan, the Bronx, and Brooklyn are three boroughs of
New York City.

for every unit of work. The third hospital demands 1 doctor and 1 nurse for every unit of work. Since the total units
1
4
, 1000
],
of supply for each meta-type is 1000, d1 = [ 1000
1
4
1
1
2
3
d = [ 1000 , 1000 ], d = [ 1000 , 1000 ].

3.1

Fairness properties

We now formally define the fairness properties we discuss
in this paper.

Figure 1: All three hospitals can accept both types of doctors. However, hospitals I and II can only accept Nurse type
C, while hospital III accepts only Nurse type D.
Using these notations, we further define
wil
li∗ := arg min
di∗ := dili∗ wi∗ := wili∗
l∈[L] dil
Namely, li∗ is the meta-type from which agent i demands the
biggest proportional share, adjusted by the priority weights.
We refer to li∗ as the dominant resource meta-type for agent
i. di∗ is the proportional share demanded by agent i from its
dominant resource meta-type
P to finish one unit of work.
For each meta-type l, r∈gi xir is the fraction of the total
l
supply of meta-type l that is assigned to agent i, where xir
is the assignment of each individual resource type. We use
xi to denote the allocations vector of agent i and x to denote
the assignment matrix that encodes the allocations vectors
of all agents. We define the utility as such:
(
)
1 X
ui (xi ) := min
xir .
(1)
gl ∈Gi
dil r∈g
l

Since agent i needs dil proportion of the supply units from
each meta-type l to finish a unit of work, ui (xi ) is the total
units of work that agent i can finish given allocation vector
xi . This form of utility measure is called a Leontief utility.
We now give a concrete example, which is also illustrated
in Figure 1. To keep the example simple we assume that
each agent has the same weight over all meta-types: only
one weight wi is defined for each agent i.
Example 1. Consider a case of three agents (hospitals)
{1, 2, 3} and two resource meta-types. The first meta-type
consists of two types of doctors (resource A, B), and the
second consists of two types of nurses(resource C, D): Ω1 =
{A, B}, Ω2 = {C, D}. The normalized weights for the three
hospitals are: w1 = w2 = 41 , w3 = 21 . The supply for
each type of doctor and nurse is 500. Thus, the total available units of each meta-type is 500 + 500 = 1000, and
500
= 12 ∀r ∈ {A, B, C, D}. All three hospitals
Sr = 1000
can accept both types of doctors but hospitals 1, 2 can only
accept nurse type C while the third hospital only accepts
nurse type D: G1 = {g11 = {A, B}, g21 = {C}}, G2 =
{g12 = {A, B}, g22 = {C}}, G3 = {g13 = {A, B}, g23 =
{D}}. Hospital 1 demands 4 doctors and 1 nurse for every unit of work. Hospital 2 demands 1 doctor and 4 nurses

Pareto optimality An allocation mechanism is Pareto optimal if compared to the output allocation x, there does not
exist another allocation x0 where some agent is strictly better off without some other agent being strictly worse off:
∃i s.t. ui (x0i ) > ui (xi ) =⇒ ∃j s.t. u(x0j ) < u(xj ).


wil
i
Weighted envy-freeness ui xjr w
∀r
∈
g
,
l
∈
[L]
−
l
jl
ui (xi ) is how much i envies j. An allocation is weighted
envy free if this quantity is non-positive for any i, j ∈ N :


wil
i
ui xjr
∀r ∈ gl , l ∈ [L] ≤ ui (xi )
wjl
Intuitively, this means an agent prefers her allocation over
the allocation of any other agent scaled by the weight ratios
of the two agents. Note that since there is a separate weight
for every meta-type l, the allocations for each resource type
r is scaled according the corresponding weight for the metatype that it belongs.
Strategy-proofness In the existing literature, agents can
only be strategic by misreporting their demand vector. In our
setting however, the agents have the additional possibility of
misreporting their accessibility constraints/demand groups
for the meta-types (e.g. One can report that she accepts both
Intel and AMD CPUs but in fact my program only runs
on Intel CPU). Our definition of strategy-proofness guards
against both types of misreporting.
Let x be the allocation returned by the mechanism under
truthful reporting from all agents. Let x0 be an allocation
returned by the mechanism when all agents report truthfully
except agent i reports an alternative demand vector and/or
alternative demand groups. The mechanism is strategy-proof
if ui (xi ) ≥ ui (x0i ).
Sharing Incentive In settings where the supplies for each
resource comes from the participants’ contribution, sharing
incentive is satisfied when the resulting allocation gives each
participant at least as much utility as she could have gotten
without participating in the pool. More specifically, for each
i ∈ N and l ∈ [L], let sil be the proportion of meta-type
l contributed by agent i that she can also access. We can
also think of sil as the amount of “useful” resource agent
i originally possessed of meta-type l (she might contribute
more than sil to the pool, but we only count the part that
she can access herself). Without being part of the resource
sharing, agent i’s utility would be
 
sil
o
.
ui := min
gl ∈Gi
dil

Sharing incentives says that ui (xi ) ≥ uoi ∀i ∈ N , i.e.,
all agents have incentives to share (pool) their individual resources for reallocation. We also define a related concept
called proportionality:
Proportionality An allocation x satisfies proportionality
if ui (xi ) ≥ ui (x0i ) for all i, where x0ir = wil Sr for each
r ∈ gli and l ∈ [L]. ui (x0 ) can be explicitly written out as
(
)
wil X
0
ui (x ) := min
Sr .
gl ∈Gi
dil r∈g
l

Remark 1. In the existing resource allocation literature,
sharing incentive and proportionality are often used interchangeably. Indeed, when the priority weights are set according to the agents’ proportional accessible contributions
to the resource pool (wil = sil ), the two notions are equivalent in settings where there are no accessibility constraints.
With accessibility constraints, however, they are not equivalent. Under our definition of proportionality, the amount
of accessible
resourceP
meta-type l that agent i receives is
P
sil · r∈gi Sr . Since r∈gi Sr < 1 if agent i cannot acl
l
cess the entire supply of meta-type l, ui (x0 ) can be smaller
than uoi . Therefore when priority weights are set according
to agents’ contributions, proportionality is a weaker notion
than sharing incentive. However, since proportionality can
be defined for arbitrary weights, regardless of whether or not
we are in a setting where agents bring their own supplies, it
is a more flexible concept. We focus on Sharing Incentive in
the main paper and provide a detailed discussion of proportionality in the Appendix.

4

Group Dominant Resource Fairness

We now present our fair allocation mechanism, which
we call Group Dominant Resource Fairness (GDRF). The
mechanism proceeds in rounds and agents are gradually
“eliminated”. In each round t, we use the linear program
described in Equation 2 to maximize a fractional value yt so
that each remaining agent i can receive at least yt ×wi∗ fraction of the total supply from its’ dominant resource metatype li∗ , and more generally yt × wi∗ × dil /di∗ fraction
of each demanded meta-type l.2 Based on this solution, we
2

An alternative is to make each remaining agent receive a yt ×
wi∗ × dil /di∗ fraction of the total supply from each of its resource
group gl∗i , as agent i can only derive utilities from resources in
gl∗i ⊆ Ωl∗i . To do so, we can multiply the left hand side of the
P
allocation constraints in Equation 2 by r∈gi Sr . This alternative
l
setup, however, does not lead to a mechanism with envy-freeness
and strategy-proofness.
As a simple example, assume that there are five agents 1, 2, 3, 4, 5
of equal weights, one meta-type, and two resource types A, B that
fall under this meta-type, with equal supply. Agent 1, 2 accept only
type A; agent 3, 4, 5 accept only type B. With simple calculation,
we have that the largest y1 we can get is 1/3: everyone receives 1/3
of their accepted supply. The only possible allocation to achieve
that is by assigning 1/3 of A each to agents 1,2, and 1/3 of B each to
agents 3, 4, 5. However, if agent 2 strategically stated that he could
take both A and B, the resulting allocation would be assigning 1/3

eliminate at least one resource and one agent using Definition 1 and 2 (although the algorithm only needs to explicitly
maintain a list of active/eliminated agents, not resources).
For each agent i eliminated in round t, we set γi = yt . We
fix the fraction of dominant meta-type li∗ assigned to agent
i to γi × wi∗ , without fixing the specific allocations of the
resources. It is not too hard to show the following (proof is
in the Appendix):
Fact 1. For any round t, the allocation constraints in Equation 2 for i ∈
/ Nt have to be tight for optimal solutions.
This fact effectively says that when an agent is eliminated,
her utility in the final allocation is decided, even though the
exact allocation is not. Not fixing the allocation is a deliberate choice because agents who are flexible with their demand
groups should accommodate agents who are more restrictive
(ex: if agent 1 accepts both type A and B, and agent 2 only
accepts type A, then we should allocate agent 1 mostly type
B resource, and leave type A resource for agent 2). However
when the number of agents and resource types is large, it is
difficult to characterize such dynamics explicitly. So it’s crucial to not fix the allocation to the agents until the very last
iteration.
We will show that there is at least one new resource and
one agent being eliminated in each round. Thus our algorithm requires at most min(m, n) rounds (in practice it often terminates in 2-3 rounds even with a large number of
resources types and agents). Since each round requires solving a polynomial-sized linear program, the overall procedure
can be run in polynomial time.
Let Nt , Rt be the set of active agents and resources at
the beginning of round t. The LP for round t is defined as
follows.
max yt
s.t. (active agents allocation constraints)
X
dil
yt × wi∗ ×
≤
xir ∀i ∈ Nt , gl ∈ Gi
di∗
r∈g
l

(eliminated agents allocation constraints)
X
dil
≤
xir ∀i 6∈ Nt , gl ∈ Gi
γi × wi∗ ×
di∗
r∈g

(2)

l

(supply constraints)
X
xir ≤ Sr ∀r ∈ R
i∈N

(non-negativity constraints)
xir ≥ 0 ∀i ∈ N, r ∈ R
The allocation constraints are saying that remaining agents
need to receive at least yt × wi∗ fraction of the total supply
of their dominant resource meta-type. The eliminated agents
only need γi × wi∗ where γi was determined in a previous
il
round. Note that the ratio ddi∗
is simply making sure that
of A to agent 1, 2/3 of A to agent 2, and 1/3 of B each to agents
3, 4, 5. In this new allocation, the largest y1 is still 1/3, but since
the total accepted supply for agent 2 is larger, he receives more.
Furthermore, agent 1 would now envy agent 2.

there is no waste in the allocation. For an agent who has
been eliminated, γidwi∗i∗ is her final utility. If agent i is not yet
eliminated after round t, then ytdwi∗i∗ represents how much
utility she is currently guaranteed to receive (it will never
decrease in later rounds, see Fact 2).
Fact 2. The optimal value for Equation 2 increases over the
number of rounds: y1∗ ≤ y2∗ ≤ ..., where yt∗ is the optimal
objective function value of the LP in round t.
This follows because the constraints on eliminated agents
are less restrictive than the constraints on active agents, and
the set of active agents is decreasing over time.
P
Definition 1. Resource r is eliminated when i∈N xir =
Sr for every optimal x.
By Fact 2 it is also easy to see that the set of remaining
resources Rt decreases over time.
Definition 2. We give two equivalent definitions for eliminating agents:
• Agent i is eliminated in round t when there exists gl ∈ Gi
such that gl ∩ Rt+1 = ∅.
• Agent i is eliminated in round
P t when there exists gl ∈ Gi
il
such that yt ×wi∗ × ddi∗
=
xir for every optimal x, yt .
r∈gl

It is not hard to see that they are equivalent: both definitions are saying that the agent can not improve her utility
further in (2). We provide a proof in the Appendix. We now
present the full algorithm:
Algorithm 1: Group Dominant Resource Fairness
(GDRF)
1 Input: Agents N , resources R, supplies Sr ∀r ∈ R,
demand groups Gi ∀i ∈ N , normalized demands
dil ∀i ∈ N, gl ∈ Gi , priority weights
wil ∀i ∈ N, l ∈ [L]
2 Initialize N0 = N
3 for t ← 0, 1, 2, ... do
4
yt∗ ← Solve Equation 2
5
Update the remaining active agents Nt+1 (using
Claim 2)
6
for agent i eliminated in this round do
7
γi ← yt∗
8
end
9
if Nt+1 = ∅ then
10
Solve Equation 2 and assign resources
according to xir with rounding
11
break
12
end
13 end
First we address the question of whether the GDRF can
be efficiently implemented. We defer most of the proofs to
the Appendix, but include the proof of Claim 1 here because
it is a good representation of the flavor of arguments that we
use to prove many of the other results
Claim 1. In each round t, at least one remaining resource
r ∈ Rt and one remaining agent i ∈ Nt is eliminated.

Proof. Suppose no resource is eliminated, thenP
for each r ∈
Rt , there exists an optimal solution such that i∈N xir <
Sr . Then the convex combination of these
P solutions gives us
an optimal solution x∗ that satisfies i∈N x∗i,r < Sr ∀r ∈
Rt . However, by Definition 2, for every agent i ∈ Nt and
every gl ∈ Gi , gl ∩ Rt 6= ∅. So if we assign a little more of
every active resource to every active agent, then the overall
objective value would be higher. This contradicts the optimality of the LP.
Now suppose some resource r ∈ Rt is eliminated in
round t but no agent is eliminated. Suppose this resource
type is part of meta-type l. By the first definition in Definition 2, this means that for every i such that xir > 0, there
exists r0 ∈ gli such that r0 is not eliminated. By the same
convex combination argumentP
above, we know that there is
an optimal solution such that i xir0 < Sr0 for every such
r0 . Then for every such agent we can remove  allocation
of r from her and replace it with  allocation of the corresponding r0 . This gives us an allocation that has the same
objective as before without using up the entire supply of r,
contradicting r being eliminated.
This result shows that our algorithm can be implemented efficiently by solving at most min(m, n) number of
polynomial-size linear programs. However, it does not tell
us how to find the eliminated agents. The following theorem
says that we can do so by looking at the dual variables of the
LP. Note that the algorithm does not need to explicitly maintain a list of active resources (Equation 2 does not depend on
Rt ).
Claim 2. This claim has two parts:
• If the shadow price of an active allocation constraint in
the LP for round t is positive, then its corresponding agent
needs to be eliminated in round t.
• In each round t, at least one allocation constraint corresponding to an agent in Nt has a positive shadow price.
Now we state our main results.
Lemma 1. GDRF is Pareto optimal.
Lemma 2. GDRF is weighted envy-free.
Lemma 3. GDRF is strategy-proof.
The proofs for these three lemmas all involve a case analysis of different scenarios and showing that the undesirable
outcomes violate either the optimality of the LP or the definition of eliminated resources/agents, similar to the arguments presented in the proof Claim 1.
Lemma 4. Assume that demands, weights and supplies are
all rational numbers. If priority weights of the algorithm
are set according to the each agent’s contribution to the resource pool (for each meta-type), then GDRF satisfies Sharing Incentive.
The proof constructs a bipartite graph of supplies and
demands of the resources, then uses Hall’s Theorem (Hall
1935) to show that there exists a feasible solution to the first
round’s LP that already gives every agent at least as much
utility as they could get without participating in the pool.

Since agents’ utilities only increase in later rounds, the final
allocation must also satisfy sharing incentive.

4.1

Connection to Previous Dominant Resource
Fairness Algorithms

The core difference between our problem setup and the existing DRF settings (Ghodsi et al. 2011b; Parkes, Procaccia, and Shah 2015) is the added accessibility constraints.
Namely, there are resource meta-types Ω1 , Ω2 , · · · , ΩL , and
each agent i can only accept a subset gli ⊂ Ωl of each metatype l. When no such allocation constraint is present, as in
(Ghodsi et al. 2011b; Parkes, Procaccia, and Shah 2015), it
is equivalent to set |Ωl | = 1 for each l ∈ [L] in our setting.
Then the meta-types notion collapses to the normal resource
types notion used in the DRF settings, and our GDRF mechanism is equivalent to the DRF mechanisms introduced in
(Ghodsi et al. 2011b; Parkes, Procaccia, and Shah 2015).
Note that in these simplified settings one can write out the
closed form solution to the Linear Programs, so no actual
optimization needs to be performed.

4.2

Alternative Fair Allocation Mechanisms

As discussed in Section 2, the other most suitable approach in our setting is the Maximum Nash Welfare approach. When the weights are equal, it is also commonly
referred to as the Competitive Equilibrium with Equal Income (CEEI) approach. It can be shown that MNW indeed
is still a market equilibrium, even with our new accessibility
constraints, which means that it satisfies Pareto Optimality,
envy-freeness, and sharing incentive. However it is known
that MNW is not strategyproof (see Section 6 of (Ghodsi
et al. 2011b) for an example). We show in Section 5 that our
GDRF mechanism also works better in practice in terms of
computational cost.

4.3

Extension to Arbitrary Group Structure

We currently assume that resources and demands follow a
meta-type/group/type structure. One might be interested in
a general group structure where a demand group can contain
any subset of all possible resources (not necessarily from
a single meta-type). The problem with this kind of flexible
group structure is that it opens up possibilities for people to
cheat the system by misreporting their true demand structure
(e.g.: instead of reporting that I am indifferent to resource A
and B, and that I only need one unit of either one to finish
a unit of work, I claim that I need one unit each from both
A and B to finish one unit of work). In particular, Dominant
Resource Fairness based approaches will likely not work,
since it is unclear how one would even define the dominant
resource under such a general setting. We leave this as an
open question for future work.

4.4

Integral Allocation from Rounding

So far we have implicitly assumed that the resources are divisible, and all fairness results are stated with respect to the
fractional assignment output of Algorithm 1. In practice we
round down the output to obtain the final assignment, since
resources such as ventilators are indivisible,

Each agent loses at most 1 unit of assignment of each type
of resource through rounding. Because we focus on problems where each agent receives hundreds of units of each resource, the performance loss due to rounding is often small.
For example, starting with an envy-free fractional allocation,
one agent can envy another by at most 2m items after rounding. In Example 1 m = 4, while the total allocations each
agent receives are in the hundreds. So an envy of 2m items
is not significant. Note that such divisibility assumption is
also standard in existing DRF literature, which often focus
on the compute resource sharing problem: even though CPU
cores are discrete, it’s common to treat the problem as a continuous problem since there is a large quantity of cores in a
compute cluster.
There are many existing works that focus on fair allocation of indivisible goods (Caragiannis et al. 2019). Indivisible resource allocation is particularly important when the
quantities of the resources are small (for instance, fairly assigning a car, a house, and a ring to two people). However, as
is the case with most discrete optimization problems, these
algorithms don’t scale well to the sizes that we deal with in a
pandemic with hundreds of hospitals and tens of thousands
of volunteers / ventilators, or in the cloud compute setting
where each data center contains millions of CPU cores. In
settings where each agent receives hundreds of units of each
resource, the performance loss due to rounding is often small
compared to the dramatic increase in computational cost for
solving Mixed Integer Programs.

5

Numerical Experiments

In this section we compare GDRF with the MNW approach
using three metrics: social welfare, max envy, and computation time. Social welfare is defined to be the sum of the
agents’ utilities. Max envy is the maximum amount of envy
between any pair of agents (see Subsection 3.1). Note that
these metrics are computed on the rounded allocations, since
both approaches output fractional allocations. Additionally,
both approaches are envy-free so the non-zero envy presented in this section is the result of rounding (which as we
will show later, is very small).
Solving for MNW is an exponential cone program, which
until recently did not have a reliable commercial solver. This
changed with the introduction of MOSEK version 9, which
added support for such cones (ApS 2020). We implemented
the MNW using the MOSEK solver and our GDRF approach
using GUROBI. We made little effort to optimize either approach beyond the off-the-shelf implementations.
The first experiment compares the social welfare achieved
by GDRF and MNW. We use the following meta-type structure: Ω1 = {0}, Ω2 = {1, 2}, Ω3 = {3, 4, 5}, Ω4 =
{6, 7, 8, 9}. The group structure/accessibility constraints are
generated randomly for each agent in each trial. The demands and weights (before normalization) are sampled uniformly from [1, 10], and the number of agents is n = 5.
The supply for each resource is uniformly sampled from
[n × 100, n × 1000]. We ran for 300 trials. As shown in
Figure 2, the bar graph shows that the mean social welfare
achieved by the two algorithms over all trials are very close.

Figure 2b shows the normalized difference in social welfare between MNW and GDRF, where the normalized difference is defined by the difference between the social welfare achieved by the two algorithms, divided by the social
welfare achieved by the MNW approach. 95% of the trials
have a normalized difference of less than 13%, which means
that in 95% of the times, our algorithm obtained at least 87%
of the social welfare achieved by the MNW approach.

its’ run time. This is because the number of LP’s we are solving in each instance may vary, while the MNW approach
always solve only one optimization problem. The overhead
of formulating a new optimization problem in each iteration
of GDRF using GUROBI already significantly increases the
overall compute time. Despite the extra overhead, our approach is still significantly faster.
We then fix the number of agents to n = 5, the number of
types of resources in each meta-type to 5, and then scale up
the number of meta-types. The supply for each resource is
still sampled from [n × 100, n × 1000] as before. As shown
in Figure 4b, our algorithm is orders of magnitude faster in
this setting. The error region is again computed from 16 iterations.

(a)

(a)

(b)

Figure 2: Mean social welfare over all trials (a) and normalized difference between social welfare achieved by the two
algorithms (b).
Figure 3 shows that rounding introduces very little envy
in terms of utility. The error bar shows the 25th and 75th
percentile.

(b)

Figure 4: Run time comparison of GDRF and MNW.

6

Figure 3: Average Max Envy over all trials.
For the next experiment we keep the same meta-type
structure but scale up the number of agents. We plot the run
time for the two algorithms in Figure 4a. The error region
represents one standard deviation from the mean, calculated
from 16 iterations. GDRF has noticeably larger variance in

Conclusion

We proposed a novel resource allocation mechanism for a
generalized demand structure under Leontief utilities. Our
meta-type/type/group demand structure models the substitution and accessibility constraints that are common in applications.
Our linear programming-based mechanism is Pareto optimal, envy free, strategy-proof, and satisfies sharing incentive. We drew an interesting connection to Hall’s theorem in
our proof of sharing incentive. To the best of our knowledge,
we are the first to propose a fair resource allocation mechanism with these properties for this general demand structure.
Finally, we leave as future work to design a mechanism that
works with more flexible group demand structures.

References
ApS, M. 2020. MOSEK modeling cookbook.
Arora, H.; Raghu, T.; and Vinze, A. 2010. Resource allocation for demand surge mitigation during disaster response.
Decision Support Systems 50(1): 304–315.
Barr, H.; Macfarlane, J.; Macgregor, O.; Foxwell, R.;
Buswell, V.; and Lim, W. 2008. Ethical planning for an influenza pandemic. Clinical medicine 8(1): 49.
Boreskie, K. F.; Boreskie, P. E.; and Melady, D. 2020. Age is
just a number–and so is frailty: Strategies to inform resource
allocation during the COVID-19 pandemic. Canadian Journal of Emergency Medicine 1–3.

Mehrotra, S.; Rahimian, H.; Barah, M.; Luo, F.; and Schantz,
K. 2020. A Model for Supply-Chain Decisions for Resource Sharing with an Application to Ventilator Allocation
to Combat COVID-19. medRxiv .
Parkes, D. C.; Procaccia, A. D.; and Shah, N. 2015. Beyond Dominant Resource Fairness: Extensions, Limitations,
and Indivisibilities. ACM Trans. Econ. Comput. 3(1). ISSN
2167-8375. doi:10.1145/2739040. URL https://doi.org/10.
1145/2739040.
Powell, T.; Christ, K. C.; and Birkhead, G. S. 2008. Allocation of ventilators in a public health disaster. Disaster
Medicine and Public Health Preparedness 2(1): 20–26.

Budish, E. 2011. The combinatorial assignment problem:
Approximate competitive equilibrium from equal incomes.
Journal of Political Economy 119(6): 1061–1103.

Truog, R. D.; Mitchell, C.; and Daley, G. Q. 2020. The
Toughest Triage Allocating Ventilators in a Pandemic.
New England Journal of Medicine 382(21): 1973–1975.
doi:10.1056/NEJMp2005689. URL https://doi.org/10.1056/
NEJMp2005689.

Budish, E.; Cachon, G. P.; Kessler, J. B.; and Othman, A.
2017. Course match: A large-scale implementation of approximate competitive equilibrium from equal incomes for
combinatorial allocation. Operations Research 65(2): 314–
336.

Xiang, Y.; and Zhuang, J. 2016. A medical resource allocation model for serving emergency victims with deteriorating
health conditions. Annals of Operations Research 236(1):
177–196.

Caragiannis, I.; Kurokawa, D.; Moulin, H.; Procaccia, A. D.;
Shah, N.; and Wang, J. 2019. The unreasonable fairness of
maximum Nash welfare. ACM Transactions on Economics
and Computation (TEAC) 7(3): 1–32.
Eisenberg, E.; and Gale, D. 1959. Consensus of subjective
probabilities: The pari-mutuel method. The Annals of Mathematical Statistics 30(1): 165–168.
Emanuel, E. J.; Persad, G.; Upshur, R.; Thome, B.; Parker,
M.; Glickman, A.; Zhang, C.; Boyle, C.; Smith, M.; and
Phillips, J. P. 2020. Fair Allocation of Scarce Medical Resources in the Time of Covid-19.
New England Journal of Medicine 382(21): 2049–2055.
doi:
10.1056/NEJMsb2005114. URL https://doi.org/10.1056/
NEJMsb2005114.
Ghodsi, A.; Zaharia, M.; Hindman, B.; Konwinski, A.;
Shenker, S.; and Stoica, I. 2011a. Dominant Resource Fairness: Fair Allocation of Multiple Resource Types. In Nsdi,
volume 11, 24–24.
Ghodsi, A.; Zaharia, M.; Konwinski, A.; Shenker, S.; and
Stoica, I. 2011b. Dominant Resource Fairness: Fair Allocation of Multiple Resource Types. NSDI’11: Proceedings of
the 8th USENIX conference on Networked Systems Design
and Implementation 323–336.
Hall, P. 1935. On Representatives of Subsets. Journal of the London Mathematical Society s1-10(1): 26–30.
doi:10.1112/jlms/s1-10.37.26. URL https://londmathsoc.
onlinelibrary.wiley.com/doi/abs/10.1112/jlms/s1-10.37.26.
Jalota, D.; Pavone, M.; and Ye, Y. 2020. Markets for Efficient Public Good Allocation. ArXiv abs/2005.10765.
Kanter, R. K. 2015. Would triage predictors perform better
than first-come, first-served in pandemic ventilator allocation? Chest 147(1): 102–108.

Zenteno, A. 2013. Models for managing surge capacity in
the face of an influenza epidemic. Ph.D. thesis, Columbia
University.

A
A.1

Missing Proofs of Results

A.3

Proof of Equivalence in Definition 2

Proof. Suppose the second definition holds but the first one
does not. Then by the definition of eliminated resource, there
exists an optimal solution
P such that for every gl ∈ Gi , there
exists r ∈ gl such that i∈N xir < Sr . Then for every gl ∈
Gi we can assign i a little more
P of the resource type above,
il
and have yt × wi∗ × ddi∗
< r∈gl xir . This contradicts the
second definition.
Now suppose the first definition holds but the second definition does not. This means thatP
there exists an optimal soluil
tion such that yt ×wi∗ × ddi∗
< r∈gl xir for every gl ∈ Gi .
Consider the gl such that gl ∩ Rt+1 = ∅ by the first definition (every r ∈ gl is eliminated by the end of round t). We
can reduce the allocation of resources in that demand group
to i by a little bit without sacrificing optimality because the
allocation constraints were satisfied strictly. But this means
we have an optimal solution that does not use up the supply
of r ∈ gl : this contradicts the elimination of these resources
in the first definition.

A.2

Proof of Claim 2

Proof. The first part is straightforward. If qig > 0 is the
dual variable for the allocation constraint for some agent i ∈
Nt , g ∈ Gi , then by complementary slacknessP
every optimal
il
=
solution needs to satisfy yt × wi∗ × ddi∗
xir , which
r∈gl

means agent i needs to be eliminated by Definition 2.
Let’s now rewrite the linear program solved at time t:
max yt
X
s.t.−
xir +
r∈gl

−

xir

r∈gl

dil
wi yt ≤0
di∗

∀i ∈ Nt , gl ∈ Gi

dil
γi w i
≤−
di∗

∀i 6∈ Nt , gl ∈ Gi
(5)

X

xir

Proof. Suppose x is the output of Algorithm 1 and there exists allocation x0 such that agent i is strictly better off while
other agents have just as much utility. Let y 0 × wi∗ be the
fraction of the dominant resource meta-type that i receives
with allocation x0 .
Let t be the round in which i was eliminated in Algorithm
1. Since i is strictly better off with allocation x0 , y 0 > yt∗ .
Now we construct a new allocation by scaling down agent
y∗
i’s allocation from x0i to x0i yt0 . Since we know other agents
have at least as much utility as with allocation x, this new
solution has an LP objective value at least as high as before,
satisfies all the allocation/supply constraints, and does not
use up all the resources that i cares about. This contradicts i
being eliminated in round t.

Note that by the same argument as above we know that the
allocation constraint in Equation 2 for the eliminated agents
has to be satisfied with equality (otherwise we can scale this
allocation down to make the constraint tight, and that agent
would not have been eliminated in an earlier round). Thus
we have also shown Fact 1

A.4

Proof of Lemma 2

Proof. For any pair of agents i, j ∈ N , we will show that i
does not envy j. Let x be the allocation returned by Algorithm 1. Starting from the LHS of the definition of weighted
envy-freeness:

(3)

(4)
X

Proof of Lemma 1

≤Sr

∀r ∈ R

≥0

∀i ∈ N, r ∈ R

(6)



wil
i
ui xjr
∀r ∈ gl , l ∈ [L]
wjl
P
wil
xjr w
jl
= min

gl ∈Gi

= min

d
P il
r∈glj ∩gli

gl ∈Gi

P

i∈N

xir

r∈gli

≤ min

r∈glj

gl ∈Gi

This LP is in canonical form, where the objective coefficient vector is cT = [0, ..., 0, 1]. Let qig be the dual variables
that correspond to the allocation constraints (constraint (4)
and (5)), and qr the dual variables corresponding to the supply constraints (constraint (6)). Let yt∗ be the value of yt in
an optimal solution to the linear program and let q̄ be the optimal solution to the corresponding dual program. By complementary slackness we know that q̄ > Ay = cy = 1, where
Ay is the last column of the primal constraint matrix. Note
that the entries in Ay are either positive or zero. Therefore,
q̄ig must be positive for some i ∈ Nt , g ∈ Gi . This finishes
the proof of the second part.

wil
wjl

= min

gl ∈Gi

wil
xjr w
jl

dil
wil
xjr w
jl
dil
P

r∈glj

dil

xjr
.

The first equality is the definition of Leontief utility in
(1). The second equality holds because xjr = 0 for r ∈ Ωl
but r ∈
/ glj (If the output allocation does contain inaccessible resources then we can simply remove them without affecting the utilities of agents). The inequality follows from
non-negativity of xjr .
Now let ti , tj be the rounds in which agent i and j are
eliminated respectively. Note that from the LP in Equation

2, we know

P
r∈glj
wil
wjl

min

gl ∈Gi

xjr = yt∗j wj∗ djl /dj∗ . So
P

xjr

r∈glj

= min

dil

This allows us to remove xir from the supply constraints.
Now the allocation constraint can be written as
X
dil
yt × wi∗ ×
xir ∀gl ∈ Gi
≤
di∗

wil ∗
wjl ytj wj∗ djl /dj∗

r∈gl ∩Rt+1

dil

gl ∈Gi

Since the remaining resources are not constrained by supply, this inequality can always hold without posing limits
on other variables. So we can remove this constraint completely.

wj∗ djl ∗ wil
yt
gl ∈Gi dj∗ wjl j dil
wil
wi∗
≤ min yt∗j
= yt∗j
gl ∈Gi
dil
di∗
= min

where the inequality follows from the definition of domiw
w
nant resource meta-type ( dj∗
= min djljl ).
j
∗

l

If yt∗j ≤ yt∗i (which means tj ≤ ti , by Fact 2 and Fact 1),
we have
wi∗
wi∗
yt∗j
≤ yt∗i
= ui (xi ).
di∗
di∗
Now suppose yt∗j > yt∗i (which means tj > ti ), and that i
envies j. Note that this implies that for every group gli ∈ Gi ,
there exists at least one r ∈ gli such that xjr > 0.
Consider an alternative
allocation x0 that scales the alyt∗
location to agent j to y∗i xj while keeping the allocations
tj

to other agents the same as in x, namely, x0j =
x0k

y∗
xj y∗ti
t

and

j

= xk ∀k 6= j. This alternative allocation gives every
agent as much utility as they had before in round ti while
maintaining slack in at least one resource from each demand
group of Gi . This contradicts the definition of ti because
agent i was eliminated in round ti (see Definition 2).

A.5

Proof of Lemma 3

Our proof approach is adapted from (Parkes, Procaccia, and
Shah 2015) with important modifications. We first introduce
some new notations and prove two helpful results. Let i be
the only agent who reports her demands untruthfully. Let d
be the true demand vector for all agents and d0 be an alternative demand where only the elements belonging to agent
i might be different. Let t∗ be the first round in which agent
i is eliminated in Algorithm 1, either with truthful or untruthful reporting (minimum of the two). Let Nt , Nt0 , and
yt∗ , yt∗0 represent the remaining active agents at the beginning of round t, and the optimal LP objective in round t,
under d and d0 respectively,
Claim 3. If agent i is not eliminated in round t, then if we
remove the allocation constraint for agent i and omit the
variables related to agent i from the supply constraints in
Equation 2, the optimal value as well as agents eliminated
in that round do not change.
Proof. First we show that xir = 0 if r is one of the eliminated resources in that round. Suppose xir > 0. Since i is
not eliminated, there must exist another resource r0 in the
same demand group of r for agent i that is not eliminated.
This means that we could replace some of the allocation of
r with a little more allocation of r0 . But this would then contradict r being an eliminated resource. Note that by the same
logic xir = 0 holds in all future rounds too.

Claim 4. For all t ≤ t∗ , Nt = Nt0 . For all t < t∗ , yt∗ = yt∗0 .
Proof. We use proof by induction. t = 0 holds trivially.
We assume the claim holds for t. Suppose t + 1 < t∗ .
Then by Claim 3, we can remove the constraints related to
agent i from the optimization problem. But the only differences between these two optimization problems are those
related to agent i, so they have the same solutions and we
are eliminating the same agents.
Now we prove Lemma 3.
Proof. Let x and x0 be the allocations returned by Algorithm
1 given demand d (truthful reporting) and d0 (agent i misreports) respectively. We consider the following four cases
separately.
• yt∗∗ ≤ yt∗0∗ and agent i is eliminated in t∗ reporting d.
By Claim 4, we know Nt∗ = Nt0∗ . Although we do not
know the exact round in which agents in Nt0∗ are eventually eliminated under d0 , we know that their dominant
resource shares are all at least yt∗0∗ ≥ yt∗∗ , because the
optimal objective value of the optimization problem can
only increase over time by Fact 2.
Suppose ui (x0i ) > ui (xi ). Now consider x0 as a candidate solution for the optimization problem in round t∗
of truthful reporting. Every agent j in Nt∗ receives at
least yt∗0∗ wj∗ ≥ yt∗∗ wj∗ fraction of their dominant resource
meta-type, while agent i receives strictly more. This contradicts either the optimality of yt∗ or the fact that agent i
was eliminated in round t∗ reporting d (see Definition 2).
• yt∗∗ ≥ yt∗0∗ and the agent is eliminated in t∗ reporting d0 .
Suppose the dominant resource meta-type is the same under d0 . Since yt∗0∗ × wi∗ is the fraction of the total supply
of dominant resource that i receives, agent i must be receiving less of that under d0 .
Now suppose the reported dominant resource meta-type
is different under d0 . Let • denote the new dominant resource meta-type. Let w•i , di0
• be the new dominant resource weight and demand. Let di0
∗ be the new demand for
the original dominant resource meta-type. The amount of
original dominant resource meta-type i receives is
yt∗0∗

w•i i0
d∗ ≤ yt∗0∗ wi∗ ≤ yt∗∗ wi∗
di0
•

The first inequality follows from the definition dominant
wi
resource meta-type: di0• := min wdi0il . The final expression
•

l∈[L]

l

is the amount of original dominant resource that agent i
receives under truthful reporting.
• yt∗0∗ > yt∗∗ and the agent is not eliminated reporting d but
is eliminated reporting d0 . We argue that this case cannot
happen. By Claim 4, we can remove the allocation constraints related to i in round t∗ under truthful reporting.
But then we are left with two optimization problems with
the same constraints, except that with untruthful reporting
the optimization problem has extra allocation constraint
(for agent i), and an extra non-negative term in the supply
constraints. Extra constraints and extra terms in the supply constraints can only make the optimization problem
harder.
• yt∗0∗ < yt∗∗ and the agent is eliminated reporting d but not
eliminated reporting d0 . This is the symmetric case as the
previous one and so cannot happen either.
Finally, a closer inspection of the above shows we did not
need the group structure of agent i to stay the same, so the
result holds for misreporting group structures as well.

A.6

Proof of Lemma 4

Proof. Recall that we use sil denote the proportion that is
both accessible to and contributed by agent i. Each agent
might have access to other people’s contributions as well.
We set wil = sil . Since an agentP
might not have access to all
of the supplies that she brings,
wil might be strictly less
i∈N

than one. In that case we can
P pretend that there is a phantom agent with weight 1 −
wil for each meta-type l, and
i∈N

that his demand vector is zero. Note that we do not need to
implement this phantom agent when running the algorithm,
because GDRF is invariant to the scale of weights. We are
only adding this weight to make our definition
of sharing
P
incentive consistent with the assumption wil = 1
i
P
P
Now note that
Sr ≥
sil because each agent
r∈∪i∈N 0 gli

i∈N 0

has access to her own accessible supply. By the definition of
i∗
dil ≤ wil . So for any N 0 ⊂ N, l ∈
dominant resource wdi∗
[L]
P


!
sil
X
X
d
i∈N 0
il

wi∗
Sr  /
≥ P
= 1.
di∗
wil
0
i
i∈N

r∈∪i∈N 0 gl

ui (xi ) = min wi∗
gl ∈Gi

i∈N

(7)

il
For every agent i and every meta-type l, consider wi∗ ddi∗
as the “total demand” for resource meta-type l from agent i.
Then, we construct a bipartite graph as follows: for the
left-hand nodes, we create a node for every  unit of total demand from each agent for each resource meta-type.
Thus, each node is associated with some specific agent i

dil 1
wi∗
sil
=
= min
l:d
=
6
0
di∗ dil
di∗
dil
il

The final expression is exactly the utility agent i gets from
her own supplies.

B

Beyond Sharing Incentive: Proportionality

As discussed in Subsection 3.1, proportionality is a weaker
notion than sharing incentive, when weights are set according to contribution. However, when priority weights and accessibility constraints are set independently, proportionality is a more flexible concept. Unfortunately proportionality
does not hold generally. We prove proportionality under the
following assumption:
Assumption 1.

min

N 0 ⊆N,l∈{1...L}

i∈N 0

After rearranging the terms, we have
!
X
X
dil
Sr ≥
wi∗
∀N 0 ⊆ N, l ∈ {1 . . . L}.
d
i∗
0
i

r∈∪i∈N 0 gl

and resource meta-type l. For the right-hand nodes, we create a node for every  unit of supply of each resource type
(r ∈ R). Note that since there is a finite number of agents
and resource types, there exists an  small enough that it can
perfectly divide up all the demands and supplies, assuming
that all the weights are rational.
Next, we create an edge between each pair of left and
right-hand side nodes if and only if the supply side node belongs to the demand group of that agent for that meta-type:
r ∈ gli .
Eq.(7) now tells us that for every subset of the demand
side nodes, the number of neighbors of that subset is greater
than or equal to the size of the subset. This is precisely the
condition in Hall’s Theorem, which states that if this condition holds, then there exists a matching in the bipartite graph
such that the demand side nodes are covered.
Consider such a matching obtained via Hall’s Theorem.
We construct a solution x by setting xir equal to  times the
number of matched edges corresponding to ir. This yields
il
an assignment that gives each agent wi∗ ddi∗
of each metatype. By the construction of the matching this is a legal allocation. Then, we can set yt = 1 to obtain a feasible solution
to the optimization problem in (2).
This means that after the first round of GDRF, agent i’s
utility is at least

≥ max
i∈N






X

Sr  /


r∈∪i∈N 0 gli

wil

P
r∈gli

!
X

wi∗ dil /di∗

i∈N 0


Sr 


min

l:dil 6=0 wi∗ dil /di∗ 


Lemma 5. Assume that demands, weights and supplies are
all rational numbers. Then under Assumption 1, GDRF satisfies proportionality.
The proof is very similar to that of Lemma 4, but we first
give someP
intuition for Assumption 1.
i∗
Since
Sr ≤ 1 for every i, l, and min wdilil = wdi∗
r∈gli

l

for every i, the right hand side of Assumption 1 is up-

GDRF
Allocations
Doctor A
Doctor B
Nurse C
Nurse D
Utilities
GDRF
Proportional

Hospital 1
(w1 = 1/4)
400
100

Hospital 2
(w2 = 1/4)
100

Hospital 3
(w3 = 1/2)
400
100

r∈∪i∈N 0 gli

400
500

100
62.5

100
31.25

500
250

Table 1: Allocations from GDRF in Example 1 and the comparison of the resulting utilities with utilities of proportional
allocation.

per bounded by 1.

P

Sr is the union of the accept-

r∈∪i∈N 0 gli

0
able
P supply of resource meta-type l from every agent in N .
wi dil /di∗ is the total weighted demand from agents in
i∈N 0

ranging we have for all N 0 ⊆ N and l ∈ {1 . . . L}:
!
X
X
i
Sr ≥ ŷ
w∗ dil /di∗

0

set N . Note that dil ≤ di∗ .
So, what the condition says intuitively is that whenever
there is a group of agents who have a large combined
weighted demand on meta-type l, they need to also collectively have access to/accept a large fraction of the total supply of l.
To provide more intuition for this assumption, we look at
two examples. First we check that Example 1 satisfies Assumption 1. The RHS of the assumption evaluates to 1 (with
hospital 1 and resource meta-type 1). One can check that the
minimum on the LHS is achieved by picking N 0 = N and
16
l = 1 which gives us 15
> 1. Thus Assumption 1 is satisfied. The resulting allocation and utilities using GDRF is
given in Table 1. Clearly our allocation is better for everyone
than the proportional allocation.
However, by adjusting the weights of the hospitals we can
also construct an example that does not satisfy Assumption
1. Take the same parameters of Example 1 with the following modification on weights: w1 = 0.49, w2 = 0.49,
w3 = 0.02. The RHS value of Assumption 1 does not
change. However, because the weights of hospitals 1, 2 now
dominate the market, the minimum of LHS is achieved with
1/2
<
N 0 = {1, 2} and l = 2, which gives us 0.49×1+0.49×1/4
1. So the assumption is violated. Intuitively, the problem
with this setup is that even though hospitals 1 and 2 account
for vast majority of the weighted demand for the nurse metatype, they are both severely constrained to the same half of
the total supply of nurses.
Under this setup, the GDRF assignments/utilities do not
change. With proportional allocation however, the utilities
for the three agents are [122.5, 61.25, 10.0]. So Agent 1 received more utility under proportional allocation than the allocation given by GDRF, at the expense of significantly hurting the social welfare: the sum of the utilities is less than
200, compared to 700 generated by the GDRF allocation.
Now we prove Lemma 5
Proof. Let ŷ denote the RHS of Assumption 1. After rear-

i∈N 0

For every agent i and every meta-type l, consider
ŷwi∗ dil /di∗ as the “total demand” for resource meta-type
l from agent i.
Then we construct a bipartite graph and apply Hall’s theorem the same way as in the proof of Lemma 4. This yields
an assignment that gives each agent at least ŷwi∗ dil /di∗ of
each meta-type. By the definition of ŷ, it follows that the
utility of each agent after the first round is at least:
wil

P

Sr
r∈gli
dil
1
wi∗
wi∗
ŷwi∗
=
ŷ ≥
min
di∗
dil
di∗
di∗ l:dil 6=0 wi∗ dil /di∗
P
wil
Sr
= min

l:dil 6=0

r∈gli

dil

Note that the right-most quantity is the utility of the proportional allocation. This means that after the first round, every
agent already achieves at least as much utility as the proportional allocation. Fact 2 finishes the proof.

