1

Monitoring COVID-19 social distancing with
person detection and tracking via fine-tuned YOLO
v3 and Deepsort techniques

arXiv:2005.01385v2 [cs.CV] 6 May 2020

Narinder Singh Punn, Sanjay Kumar Sonbhadra and Sonali Agarwal

Abstract‚ÄîThe rampant coronavirus disease 2019 (COVID-19)
has brought global crisis with its deadly spread to more than
180 countries, and about 3,519,901 confirmed cases along with
247,630 deaths globally as on May 4, 2020. The absence of any active therapeutic agents and the lack of immunity against COVID19 increases the vulnerability of the population. Since there are no
vaccines available, social distancing is the only feasible approach
to fight against this pandemic. Motivated by this notion, this
article proposes a deep learning based framework for automating
the task of monitoring social distancing using surveillance video.
The proposed framework utilizes the YOLO v3 object detection
model to segregate humans from the background and Deepsort
approach to track the identified people with the help of bounding
boxes and assigned IDs. The results of the YOLO v3 model
are further compared with other popular state-of-the-art models,
e.g. faster region-based CNN (convolution neural network) and
single shot detector (SSD) in terms of mean average precision
(mAP), frames per second (FPS) and loss values defined by object
classification and localization. Later, the pairwise vectorized L2
norm is computed based on the three-dimensional feature space
obtained by using the centroid coordinates and dimensions of
the bounding box. The violation index term is proposed to
quantize the non adoption of social distancing protocol. From
the experimental analysis, it is observed that the YOLO v3 with
Deepsort tracking scheme displayed best results with balanced
mAP and FPS score to monitor the social distancing in real-time.
Index Terms‚ÄîCOVID-19, Video surveillance, Social distancing, Object detection, Object tracking.

I. I NTRODUCTION
OVID-19 belongs to the family of coronavirus caused
diseases, initially reported at Wuhan, China, during late
December 2020. On March 11, it spread over 114 countries
with 118,000 active cases and 4000 deaths, WHO declared this
a pandemic [1], [2]. On May 4, 2020, over 3,519,901 cases
and 247,630 deaths had been reported worldwide. Several
healthcare organizations, medical experts and scientists are
trying to develop proper medicines and vaccines for this deadly
virus, but till date, no success is reported. This situation forces
the global community to look for alternate ways to stop the
spread of this infectious virus. Social distancing is claimed as
the best spread stopper in the present scenario, and all affected
countries are locked-down to implement social distancing.
This research is aimed to support and mitigate the coronavirus
pandemic along with minimum loss of economic endeavours,

C

N. S. Punn, S. K. Sonbhadra, S. Agarwal, Indian Institute of Information Technology Allahabad, Jhalwa, Prayagraj, Uttar Pradesh, India; emails:
{pse2017002, rsi2017502, sonali}@iiita.ac.in.

Fig. 1: An outcome of social distancing as the reduced peak of
the epidemic and matching with available healthcare capacity.

and propose a solution to detect the social distancing among
people gathered at any public place.
The word social distancing is best practice in the direction
of efforts through a variety of means, aiming to minimize or
interrupt the transmission of COVID-19. It aims at reducing
the physical contact between possibly infected individuals and
healthy persons. As per the WHO norms [3] it is prescribed
that people should maintain at least 6 feet of distance among
each other in order to follow social distancing.
A recent study indicates that social distancing is an important containment measure and essential to prevent SARSCoV-2, because people with mild or no symptoms may fortuitously carry corona infection and can infect others [4].
Fig. 1 indicates that proper social distancing is the best way to
reduce infectious physical contact, hence reduces the infection
rate [5], [6]. This reduced peak may surely match with the
available healthcare infrastructure and help to offer better facilities to the patients battling against the coronavirus pandemic.
Epidemiology is the study of factors and reasons for the spread
of infectious diseases. To study epidemiological phenomena,
mathematical models are always the most preferred choice.
Almost all models descend from the classical SIR model of
Kermack and McKendrick established in 1927 [7]. Various
research works have been done on the SIR model and its
extensions by the deterministic system [8], and consequently,
many researchers studied stochastic biological systems and
epidemic models [9].
Respiratory diseases are infectious where the rate and mode
of transmission of the causing virus are the most critical
factors to be considered for the treatment or ways to stop
the spread of the virus in the community. Several medicine
organizations and pandemic researchers are trying to develop
vaccines for COVID-19, but still, there is no well-known
medicine available for treatment. Hence, precautionary steps

2

are taken by the whole world to restrict the spread of infection.
Recently, Eksin et al. [8] proposed a modified SIR model with
the inclusion of a social distancing parameter, a(I, R) which
can be determined with the help of the number of infected and
recovered persons represented as I and R, respectively.
dS
I
= ‚àíŒ≤S a(I, N )
dt
N
dI
I
(1)
= ‚àíŒ¥I + Œ≤I a(I, N )
dt
N
dR
= Œ¥I
dt
where Œ≤ represents the infection rate and Œ¥ represents recovery
rate. The population size is computed as N = S + I + R.
Here the social distancing term (a(I, R) : R2  [0, 1]) maps
the transition rate from a susceptible state (S) to an infected
state (I), which is calculated by aŒ≤SI
N .
The social distancing models are of two types, where the
first model is known as ‚Äúlong-term awareness‚Äù in which the
occurrence of interaction of an individual with other is reduced
proportionally with the cumulative percentage of affected
(infectious and recovered) individuals (Eq. 2),
k

I +R
(2)
a= 1‚àí
N
Meanwhile, the second model is known as ‚Äúshort-term awareness‚Äù, where the reduction in interaction is directly proportional to the proportion of infectious individuals at a given
instance (Eq. 3),
k

I
(3)
a= 1‚àí
N
where k is behavior parameter defined as, k ‚â• 0. Higher value
of k implies that individuals are becoming sensitive to the
disease prevalence.
In the similar background, on April 16, 2020, a company
Landing AI [10] under the leadership of most recognizable
names in AI, Dr. Andrew Ng [11] announced the creation
of an AI tool to monitor social distancing at the workplace.
In a brief article, the company claimed that the upcoming
tool could detect if people are maintaining the safe physical
distance from each other by analyzing real-time video streams
from the camera. It is also claimed that this tool can easily get
integrated with existing security cameras available at different
workplaces to maintain a safe distance among all workers. A
brief demo was released that shows three steps: calibration,
detection and measurement to monitor the social distancing.
On April 21, 2020, Gartner, Inc. identified Landing AI as Cool
Vendors in AI Core Technologies to appreciate their timely
initiative in this revolutionary area to support the fight against
the COVID -19 [12].
Motivated by this, in this present work authors are attempting to check and compare the performance of popular
object detection and tracking schemes in monitoring the social
distancing. Rest of the paper structure is organized as follows:
Section II presents the recent work proposed in this field
of study, followed by the state-of-the-art object detection
and tracking models in Section III. Later, in Section IV the
deep learning based framework is proposed to monitor social

distancing. In Section V experimentation and the corresponding results are discussed, accompanied by the outcome in
Section VI. In Section VII the future scope and challenges
are discussed and lastly Section VIII presents the conclusion
of the present research work.
II. BACKGROUND STUDY AND RELATED WORK
Social distancing is surely the most trustworthy technique
to stop the spreading of infectious disease, with this belief, in
the background of December 2019, when COVID-19 emerged
in Wuhan, China, it was opted as an unprecedented measure
on January 23, 2020 [13]. Within one month, the outbreak
in China gained a peak in the first week of February with
2,000 to 4,000 new confirmed cases per day. Later, for the
first time after this outbreak, there have been a sign of relief
with no new confirmed cases for five consecutive days up to
23 March 2020 [14]. This is evident that social distancing
measures enacted in China initially, adopted worldwide later
to control COVID-19.
Prem et al. [15] aimed to study the effects of social
distancing measures on the spread of the COVID-19 epidemic. Authors used synthetic location-specific contact patterns to simulate the ongoing trajectory of the outbreak using
susceptible-exposed-infected-removed (SEIR) models. It was
also suggested that premature and sudden lifting of social
distancing could lead to an earlier secondary peak, which
could be flattened by relaxing the interventions gradually [15].
As we all understand, social distancing though essential but
economically painful measures to flatten the infection curve.
Adolph et al. [16] highlighted the situation of the United States
of America, where due to lack of common consent among all
policymakers it could not be adopted at an early stage, which is
resulting into on-going harm to public health. Although social
distancing impacted economic productivity, many researchers
are trying hard to overcome the loss. Following from this
context, Kylie et al. [17] studied the correlation between
the strictness of social distancing and the economic status
of the region. The study indicated that intermediate levels
of activities could be permitted while avoiding a massive
outbreak.
Since the novel coronavirus pandemic began, many countries have been taking the help of technology based solutions
in different capacities to contain the outbreak [18], [19], [20].
Many developed countries, including India and South Korea,
for instance, utilising GPS to track the movements of the
suspected or infected persons to monitor any possibility of
their exposure among healthy people. In India, the government
is using the Arogya Setu App, which worked with the help
of GPS and bluetooth to locate the presence of COVID-19
patients in the vicinity area. It also helps others to keep a
safe distance from the infected person [21]. On the other
hand, some law enforcement departments have been using
drones and other surveillance cameras to detect mass gatherings of people, and taking regulatory actions to disperse the
crowd [22], [23]. Such manual intervention in these critical
situations might help flatten the curve, but it also brings a
unique set of threats to the public and is challenging to the
workforce.

3

Human detection using visual surveillance system is an
established area of research which is relying upon manual
methods of identifying unusual activities, however, it has
limited capabilities [24]. In this direction, recent advancements
advocate the need for intelligent systems to detect and capture
human activities. Although human detection is an ambitious
goal, due to a variety of constraints such as low-resolution
video, varying articulated pose, clothing, lighting and background complexities and limited machine vision capabilities,
wherein prior knowledge on these challenges can improve the
detection performance [25].
Detecting an object which is in motion, incorporates two
stages: object detection [26] and object classification [27]. The
primary stage of object detection could be achieved by using
background subtraction [28], optical flow [29] and spatiotemporal filtering techniques [30]. In the background subtraction method [31], the difference between the current frame
and a background frame (first frame), at pixel or block level is
computed. Adaptive Gaussian mixture, temporal differencing,
hierarchical background models, warping background and
non-parametric background are the most popular approaches
of background subtraction [32]. In optical flow-based object
detection technique [29], flow vectors associated with the
objects motion are characterised over a time span in order to
identify regions in motion for a given sequence of images [33].
Researchers reported that optical flow based techniques consist
of computational overheads and are sensitive to various motion
related outliers such as noise, colour and lighting, etc. [34].
In another method of motion detection Aslani et al. [30]
proposed spatio-temporal filter based approach in which the
motion parameters are identified by using three-dimensional
(3D) spatio-temporal features of the person in motion in the
image sequence. These methods are advantageous due to its
simplicity and less computational complexity, however shows
limited performance because of noise and uncertainties on
moving patterns [35].
Object detection problems have been efficiently addressed
by recently developed advanced techniques. In the last decade,
convolutional neural networks (CNN), region-based CNN [36]
and faster region-based CNN [37] used region proposal techniques to generate the objectness score prior to its classification and later generates the bounding boxes around the object
of interest for visualization and other statistical analysis [38].
Although these methods are efficient but suffer in terms
of larger training time requirements [39]. Since all these
CNN based approaches utilize classification, another approach
YOLO considers a regression based method to dimensionally separate the bounding boxes and interpret their class
probabilities [40]. In this method, the designed framework
efficiently divides the image into several portions representing
bounding boxes along with the class probability scores for
each portion to consider as an object. This approach offers
excellent improvements in terms of speed while trading the
gained speed with the efficiency. The detector module exhibits
powerful generalization capabilities of representing an entire
image [41].
Based on the above concepts, many research findings have
been reported in the last few years. Crowd counting emerged as

a promising area of research, with many societal applications.
Eshel et al. [42], focused on crowd detection and person
count by proposing multiple height homographies for head
top detection and solved the occlusions problem associated
with video surveillance related applications. Chen et al. [43]
developed an electronic advertising application based on the
concept of crowd counting. In similar application, Chih-Wen
et al. [44] proposed a vision-based people counting model.
Following this, Yao et al. [45] generated inputs from stationary
cameras to perform background subtraction to train the model
for the appearance and the foreground shape of the crowd in
videos.
Once an object is detected, classification techniques can
be applied to identify a human on the basis of shape, texture or motion-based features. In shape-based methods, the
shape related information of moving regions such as points,
boxes and blobs are determined to identify the human. This
method performs poorly due to certain limitations in standard template-matching schemes [46], [47], which is further
enhanced by applying part-based template matching [48] approach. In another research, Dalal et al. [49] proposed texturebased schemes such as histograms of oriented gradient (HOG),
which utilises high dimensional features based on edges along
with the support vector machine (SVM) to detect humans.
According to recent research, further identification of a
person through video surveillance can be done by using
face [50], [51] and gait recognition [52] techniques. However,
detection and tracking of people under crowd are difficult
sometimes due to partial or full occlusion problems. Leibe
et al. [53] proposed trajectory estimation based solution while
Andriluka et al. [54] proposed a solution to detect partially
occluded people using tracklet-based detectors. Many other
tracking techniques, including a variety of object and motion
representations, are reviewed by Yilmaz et al. [55].
A large number of studies are available in the area of video
surveillance. Among many publically available datasets, KTH
human motion dataset [56] shows six categories of activities,
whereas INRIA XMAS multi-view dataset [57] and Weizmann
human action dataset [58] contain 11 and 10 categories of
actions, respectively. Another dataset named as performance
evaluation of tracking and surveillance (PETS) is proposed
by a group of researchers at university of Oxford [59]. This
dataset is available for vision based research comprising a
large number of datasets for varying tasks in the field of
computer vision. In the present research, in order to fine-tune
the object detection and tracking models for identifying the
person, open images datasets [60] are considered. It is a collection of 19,957 classes out of which the models are trained
for the identification of a person. The images are annotated
with image-level labels and corresponding coordinates of the
bounding boxes representing the person. Furthermore, the fine
tuned proposed framework is simulated on the Oxford town
center surveillance footage [23] to monitor social distancing.
We believe that having a single dataset with unified annotations for image classification, object detection, visual
relationship detection, instance segmentation, and multimodal
image descriptions will enable us to study and perform object detection tasks efficiently and stimulate progress towards

4

TABLE II: Hyperparameters for generating the anchor boxes.
Detection
model
Faster
RCNN
SSD
YOLO v3

Size vector
(p)

Aspect ratio
(r)

Anchor
boxes

IoU th.
for NMS

[0.25, 0.5, 1.0]

[0.5, 1.0, 2.0]

9

0.7

[0.2, 0.57, 0.95]
[0.25, 0.5, 1.0]

[0.3, 0.5, 1.0]
[0.5, 1.0, 2.0]

9
9

0.6
0.7

A. Anchor boxes
Fig. 2: Performance overview of the most popular object
detection models on PASCAL-VOC and MS-COCO datasets.
genuine understanding of the scene. All explored literature
and related research work clearly establishes a picture that
the application of human detection can easily get extended to
many applications to cater the situation that arises presently
such as to check prescribed standards for hygiene, social
distancing, work practices, etc.
III. O BJECT DETECTION AND TRACKING MODELS
As observed from Fig. 2, the successful object detection
models like RCNN [61], fast RCNN [62], faster RCNN [38],
SSD [63], YOLO v1 [40], YOLO v2 [64] and YOLO v3 [65]
tested on PASCAL-VOC [66] and MS-COCO [67] datasets,
undergo trade-off between speed and accuracy of the detection which is dependent on various factors like backbone
architecture (feature extraction network e.g. VGG-16 [68],
ResNet-101 [69], Inception v2 [70], etc.), input sizes, model
depth, varying software and hardware environment. A feature
extractor tends to encode the models input into certain feature
representation which aids in learning and discovering the
patterns associated with the desired objects. In order to identify
multiple objects of varying scale or size, it also uses predefined
boxes covering an entire image termed as anchor boxes. Table I
describes the performance in terms of accuracy for each of
these popular and powerful feature extraction networks on
ILSVRC ImageNet challenge [71], along with the number
of trainable parameters, which have a direct impact on the
training speed and time. As highlighted in Table I, the ratio of
accuracy to the number of parameters is highest for Inception
v2 model indicating that Inception v2 achieved adequate
classification accuracy with minimal trainable parameters in
contrast to other models, and hence is utilized as a backbone
architecture for faster and efficient computations in the faster
RCNN and SSD object detection models, whereas YOLO v3
uses different architecture Darknet-53 as proposed by Redmon
et al. [65].
TABLE I: Performance of the feature extraction network on
ImageNet challenge.
Backbone model
VGG-16 [68]
ResNet-101 [69]
Inception v2 [70]
Inception v3 [72]
Resnet v2 [72]

Accuracy (a)
0.71
0.76
0.74
0.78
0.80

Parameters (p)
15 M
42.5 M
10 M
22 M
54 M

Ratio (a*100/p)
4.73
1.78
7.40
3.58
1.48

With the exhaustive literature survey, it is observed that
every popular object detection model utilizes the concept of
anchor boxes to detect multiple objects in the scene [36]. These
boxes are overlaid on the input image over various spatial
locations (per filter) with varying sizes and aspect ratio. In
this article for an image of dimension breadth (b) √ó height
(h) the anchor boxes are generated in the following manner.
Consider the parameters, size as p  (0, 1] and aspect ratio
as r > 0, then the anchor boxes for a certain location
in‚àöan
‚àö
image can be constructed with dimensions as bp r √ó hp r.
Table II shows the values of p and r configured for each model.
Later the object detection model is trained to predict for each
generated anchor box to belong to a certain class, and an offset
to adjust the dimensions of the anchor box to better fit the
ground-truth of the object while using the classification and
regression loss. Since there are many anchor boxes for a spatial
location, the object can get associated with more than one
anchor box. This problem is dealt with non-max suppression
(NMS) by computing intersection over union (IoU) parameter
that limits the anchor boxes association with the object of
interest by calculating the score as the ratio of overlapping
regions between the assigned anchor box and the ground-truth
to the union of regions of the anchor box and the groundtruth. The score value is then compared with the set threshold
hyperparameter to return the best bounding box for an object.
1) Loss Function: With each step of model training, predicted anchor box ‚Äòa‚Äô is assigned a label as positive (1) or
negative (0), based on its associativity with the object of
interest having ground-truth box ‚Äòg‚Äô. The positive anchor box
is then assigned a class label yo  {c1 , c2 , ...., cn }, here cn
indicates the category of the nth object, while also generating
the encoding vector for box ‚Äòg‚Äô with respect to ‚Äòa‚Äô as f (ga |a),
where yo = 0 for negative anchor boxes. Consider an image
I, for some anchor ‚Äòa‚Äô, model with trained parameters œâ,
predicted the object class as Ycls (I|a; œâ) and the corresponding box offset as Yreg (I|a; œâ), then the loss for a single
anchor prediction can be computed (Lcls ) and bounding box
regression loss (Lreg ), as given by the Eq 4.
L(a|I; œâ) = Œ±.1obj
a Lreg (f (ga |a) ‚àí Yreg (I|a; œâ))+
Œ≤.Lcls (ya , Ycls (I|a; œâ))

(4)

where 1obj
is 1 if ‚Äòa‚Äô is a positive anchor, Œ± and Œ≤ are
a
the weights associated with the regression and classification
loss. Later, the overall loss of the model can be computed as
the average of the L(a|I; w) over the predictions for all the
anchors.

5

Fig. 3: Schematic representation of faster RCNN architecture

B. Faster RCNN
Proposed by Ren et al. [38], the faster RCNN is derived
from its predecessors RCNN [61] and fast RCNN [62], which
rely on external region proposal approach based on selective
search (SS) [73]. Many researchers [74], [75], [76], observed
that instead of using the SS, it is recommended to utilize
the advantages of convolution layers for better and faster
localization of the objects. Hence, Ren et al. proposed the
Region Proposal Network (RPN) which uses CNN models,
e.g. VGGNet, ResNet, etc. to generate the region proposals
that made faster RCNN 10 times faster than fast RCNN.
Fig. 3 shows the schematic representation of faster RCNN
architecture, where RPN module performs binary classification
of an object or not an object (background) while classification
module assigns categories for each detected object (multiclass classification) by using the region of interest (RoI)
pooling [38] on the extracted feature maps with projected
regions.
1) Loss function: The faster RCNN is the combination
of two modules RPN and fast RCNN detector. The overall
multi-task loss function is composed of classification loss and
bounding box regression loss as defined in Eq. 4 with Lcls
and Lreg functions defined in Eq. 5

Fig. 4: Schematic representation of SSD architecture
based on the presence of object class instances in those boxes,
followed by NMS step to produce the final detections. Thus,
it consists of two steps: extracting feature maps and applying
convolution filters to detect objects by using an architecture
having three main parts. First part is a base pretrained network
to extract feature maps, whereas, in the second part, multiscale feature layers are used in which series of convolution
filters are cascaded after the base network. The last part is
a non-maximum suppression unit for eliminating overlapping
boxes and one object only per box. The architecture of SSD
is shown in Fig. 4.
1) Loss function: Similar to the above discussed faster
RCNN model, the overall loss function of the SSD model
is equal to the sum of multi-class classification loss (Lcls )
and bounding box regression loss (localization loss, Lreg ), as
shown in Eq. 4, where Lreg and Lcls is defined by Eq. 6 and 7:

Lreg (x, l, g) =
gÃÇjcx =
gÃÇjw =

Lcls (pi , p‚àói ) = ‚àíp‚àói log(pi ) ‚àí (1 ‚àí p‚àói ) log(1 ‚àí pi )
X
Lreg (tu , v) =
Lsmooth
(tui ‚àí v)
1
xx,y,w,h

Lsmooth
(q)
1

N
X

(5)

(
0.5q 2 ,
if | q |< 1.
=
| q | ‚àí0.5, otherwise.

where tu is the predicted corrections of the bounding box tu =
{tux , tuy , tuw , tuh }. Here u is a true class label, (x, y) corresponds
to the top-left coordinates of the bounding box with height h
and width w, v is a ground-truth bounding box, p‚àói is the
predicted class and pi is the actual class,
C. Single Shot Detector (SSD)
In this research, single shot detector (SSD) [63] is also used
as another object identification method to detect people in realtime video surveillance system. As discussed earlier, faster
R-CNN works on region proposals to create boundary boxes
to indicate objects, shows better accuracy, but has slow processing of frames per second (FPS). For real-time processing,
SSD further improves the accuracy and FPS by using multiscale features and default boxes in a single process. It follows
the principle of the feed-forward convolution network which
generates bounding boxes of fixed sizes along with a score

=

xkij smoothL1 (lim ‚àí gÃÇjm ),

ipos mcx ,cy ,w,h
c
c
(gj y ‚àí ai y )
(gjcx ‚àí aci x ) cy
, gÃÇj =
,
aw
ahi
i
!
 w
gjh
gj
h
,
gÃÇ
=
log
,
log
j
aw
ahi
i

(
xpij

X

1, if IoU > 0.5
0, otherwise.

(6)
where l is the predicted box, g is the ground truth box, xpij is
an indicator that matches the ith anchor box to the j th ground
truth box, cx and cy are offsets to the anchor box a.
Lcls (x, c) = ‚àí

N
X
iP os

where cÃÇpi =
boxes.

exp cp
i
P
p
p exp ci

xpij log(cÃÇpi ) ‚àí

X

log(cÃÇoi )

(7)

iN eg

and N is the number of default matched

D. YOLO
For object detection, another competitor of SSD is
YOLO [40]. This method can predict the type and location of
an object by looking only once at the image. YOLO considers
the object detection problem as a regression task instead
of classification to assign class probabilities to the anchor
boxes. A single convolutional network simultaneously predicts
multiple bounding boxes and class probabilities. Majorly, there
are three versions of YOLO: v1, v2 and v3. YOLO v1 is

6

E. Deepsort

Fig. 5: Schematic representation of YOLO v3 architecture

inspired by GoogleNet (Inception network) which is designed
for object classification in an image. This network consists
of 24 convolutional layers and 2 fully connected layers.
Instead of the Inception modules used by GoogLeNet, YOLO
v1 simply uses a reduction layer followed by convolutional
layers. Later, YOLO v2 [64] is proposed with the objective
of improving the accuracy significantly while making it faster.
YOLO v2 uses Darknet-19 as a backbone network consisting
of 19 convolution layers along with 5 max pooling layers
and an output softmax layer for object classification. YOLO
v2 outperformed its predecessor (YOLO v1) with significant
improvements in mAP, FPS and object classification score.
In contrast, YOLO v3 performs multi-label classification with
the help of logistic classifiers instead of using softmax as
in case of YOLO v1 and v2. In YOLO v3 Redmon et al.
proposed Darknet-53 as a backbone architecture that extracts
features maps for classification. In contrast to Darknet-19,
Darknet-53 consists of residual blocks (short connections)
along with the upsampling layers for concatenation and added
depth to the network. YOLO v3 generates three predictions
for each spatial location at different scales in an image, which
eliminates the problem of not being able to detect small objects
efficiently [77]. Each prediction is monitored by computing
objectness, boundary box regressor and classification scores.
In Fig. 5 a schematic description of the YOLOv3 architecture
is presented.
1) Loss function: The overall loss function of YOLO v3
consists of localization loss (bounding box regressor), cross
entropy and confidence loss for classification score, defined
as follows:
2

Œªcoord

S X
B
X

2

2

2

1obj
i,j ((tx ‚àí tÃÇx ) + (ty ‚àí tÃÇy ) + (tw ‚àí tÃÇw ) +

i=0 j=0
2

(th ‚àí tÃÇh ) )
2

+

S X
B
X

1obj
i,j (‚àí log(œÉ(to )) +

i=0 j=0

C
X

BCE(yÃÇk , œÉ(sk )))

k=1

+Œªnoobj

T

x = [u, v, Œª, h, x, , y , , Œª, , h, ]

1noobj
(‚àí log(1
i,j

‚àí œÉ(to ))

i=0 j=0

(8)
where Œªcoord indicates the weight of the coordinate error,
S 2 indicates the number of grids in the image, and B is
the number of generated bounding boxes per grid. 1obj
i,j = 1
describes that object confines in the j th bounding box in grid
i, otherwise it is 0.

(9)

where (u, v) is the centroid of the bounding box, a is the aspect
ratio and h is the height of the image. The other variables are
the respective velocities of the variables. Later, the standard
Kalman filter is used with constant velocity motion and linear
observation model, where the bounding coordinates (u, v, Œª, h)
are taken as direct observations of the object state.
For each track k, starting from the last successful measurement association ak , the total number of frames are calculated.
With positive prediction from the Kalman filter, the counter
is incremented and later when the track gets associated with
a measurement it resets its value to 0. Furthermore, if the
identified tracks exceed a predefined maximum age, then
those objects are considered to have left the scene and the
corresponding track gets removed from the track set. And
if there are no tracks available for some detected objects
then new track hypotheses are initiated for each unidentified
track of novel detected objects that cannot be mapped to the
existing tracks. For the first three frames the new tracks are
classified as indefinite until a successful measurement mapping is computed. If the tracks are not successfully mapped
with measurement then it gets deleted from the track set.
Hungarian algorithm is then utilized in order to solve the
mapping problem between the newly arrived measurements
and the predicted Kalman states by considering the motion and
appearance information with the help of Mahalanobis distance
computed between them as defined in Eq. 10.
T

2

S X
B
X

Deepsort is a deep learning based approach to track custom
objects in a video [78]. In the present research, Deepsort is
utilized to track individuals present in the surveillance footage.
It makes use of patterns learned via detected objects in the
images which is later combined with the temporal information
for predicting associated trajectories of the objects of interest.
It keeps track of each object under consideration by mapping
unique identifiers for further statistical analysis. Deepsort is
also useful to handle associated challenges such as occlusion,
multiple viewpoints, non-stationary cameras and annotating
training data. For effective tracking, the Kalman filter and
the Hungarian algorithm are used. Kalman filter is recursively
used for better association, and it can predict future positions
based on the current position. Hungarian algorithm is used for
association and id attribution that identifies if an object in the
current frame is the same as the one in the previous frame.
Initially, a Faster RCNN is trained for person identification and
for tracking, a linear constant velocity model [79] is utilized to
describe each target with eight dimensional space as follows:

d(1) (i, j) = (dj ‚àí yi ) Si‚àí1 (dj ‚àí yi )

(10)

where the projection of the ith track distribution into measurement space is represented by (yi , Si ) and the j th bounding
box detection by dj . The Mahalanobis distance considers this
uncertainty by estimating the count of standard deviations,
the detection is away from the mean track location. Further,
using this metric, it is possible to exclude unlikely associations
by thresholding the Mahalanobis distance. This decision is

7

denoted with an indicator that evaluates to 1 if the association
between the ith track and j th detection is admissible (Eq. 11).
(1)

bi,j = 1[d(1) (i, j) < t(1) ]

(11)

Though Mahalanobis distance performs efficiently but fails
in the environment where camera motion is possible, thereby
another metric is introduced for the assignment problem. This
second metric measures the smallest cosine distance between
the ith track and j th detection in appearance space as follows:
d(2) (i, j) = min{1 ‚àí rj T rk (i) | rk (i)  R2 }

(12)

Again, a binary variable is introduced to indicate if an association is admissible according to the following metric:
(1)

bi,j = 1[d(2) (i, j) < t(2) ]

(13)

and a suitable threshold is measured for this indicator on a
separate training dataset. To build the association problem,
both metrics are combined using a weighted sum:
ci,j = Œªd(1) (i, j) + (1 ‚àí Œª)d(2) (i, j)

(14)

where an association is admissible if it is within the gating
region of both metrics:
Y (m)
bi,j =
2bi,j .
(15)
m=1

The influence of each metric on the combined association cost
can be controlled through hyperparameter Œª.
IV. P ROPOSED APPROACH
The emergence of deep learning has brought the best performing techniques for a wide variety of tasks and challenges
including medical diagnosis [74], machine translation [75],
speech recognition [76], and a lot more [80]. Most of these
tasks are centred around object classification, detection, segmentation, tracking, and recognition [81], [82]. In recent years,
the convolution neural network (CNN) based architectures
have shown significant performance improvements that are
leading towards the high quality of object detection, as shown
in Fig. 2, which presents the performance of such models
in terms of mAP and FPS on standard benchmark datasets,
PASCAL-VOC [66] and MS-COCO [67], and similar hardware resources.
In the present article, a deep learning based framework is
proposed that utilizes object detection and tracking models
to aid in the social distancing remedy for dealing with the
escalation of COVID-19 cases. In order to maintain the
balance of speed and accuracy, YOLO v3 [65] alongside the
Deepsort [78] are utilized as object detection and tracking
approaches while surrounding each detected object with the
bounding boxes. Later, these bounding boxes are utilized to
compute the pairwise L2 norm with computationally efficient
vectorized representation for identifying the clusters of people
not obeying the order of social distancing. Furthermore, to
visualize the clusters in the live stream, each bounding box
is color-coded based on its association with the group where
people belonging to the same group are represented with

the same color. Each surveillance frame is also accompanied
with the streamline plot depicting the statistical count of the
number of social groups and an index term (violation index)
representing the ratio of the number of people to the number
of groups. Furthermore, estimated violations can be computed
by multiplying the violation index with the total number of
social groups.
A. Workflow
This section includes the necessary steps undertaken to
compose a framework for monitoring social distancing.
1. Fine-tune the trained object detection model to identify
and track the person in a footage.
2. The trained model is feeded with the surveillance footage.
The model generates a set of bounding boxes and an ID
for each identified person.
3. Each individual is associated with three-dimensional feature space (x, y, d), where (x, y) corresponds to the
centroid coordinates of the bounding box and d defines
the depth of the individual as observed from the camera.
d = ((2 ‚àó 3.14 ‚àó 180)/(w + h ‚àó 360) ‚àó 1000 + 3) (16)
where w is the width of the bounding box and h is the
height of the bounding box [83].
4. For the set of bounding boxes, pairwise L2 norm is
computed as given by the following equation.
v
u n
uX
2
(qi ‚àí pi )
(17)
||D||2 = t
i=1

where in this work n = 3.
5. The dense matrix of L2 norm is then utilized to assign the
neighbors for each individual that satisfies the closeness
sensitivity. With extensive trials the closeness threshold
is updated dynamically based on the spatial location of
the person in a given frame ranging between (90, 170)
pixels.
6. Any individual that meets the closeness property is
assigned a neighbour or neighbours forming a group
represented in a different color coding in contrast to other
people.
7. The formation of groups indicates the violation of the
practice of social distancing which is quantified with help
of the following:
‚Äì Consider ng as number of groups or clusters identified, and np as total number of people found in close
proximity.
‚Äì vi = np /ng , where vi is the violation index.
V. E XPERIMENTS AND RESULTS
The above discussed object detection models are fine tuned
for binary classification (person or not a person) with Inception
v2 as a backbone network on the Nvidia GTX 1060 GPU,
using the dataset acquired from the open image dataset (OID)
repository [73] maintained by the Google open source community. The diverse images with a class label as Person are

8

TABLE III: Performance comparison of the object detection
models.
Model
Faster RCNN
SSD
YOLO v3

TT (in sec.)
9651
2124
5659

NoI
12135
1200
7560

mAP
0.969
0.691
0.846

TL
0.02
0.22
0.87

FPS
3
10
23

Fig. 6: Data samples showing (a) true samples and (b) false
samples of a ‚ÄúPerson‚Äù class from the open image dataset.

Fig. 7: Losses per iteration of the object detection models
during the training phase on the OID validation set for
detecting the person in an image.

downloaded via OIDv4 toolkit [84] along with the annotations.
Fig. 6 shows the sample images of the obtained dataset consisting of 800 images which is obtained by manually filtering
to only contain the true samples. The dataset is then divided
into training and testing sets, in 8:2 ratio. In order to make the
testing robust, the testing set is also accompanied by the frames
of surveillance footage of the Oxford town center [23]. Later
this footage is also utilized to simulate the overall approach for
monitoring the social distancing. In case of faster RCNN, the
images are resized to P pixels on the shorter edge with 600
and 1024 for low and high resolution, while in SSD and YOLO
the images are scaled to the fixed dimension P √ó P with P
value as 416. During the training phase, the performance of the
models is continuously monitored using the mAP along with
the localization, classification and overall loss in the detection
of the person as indicated in Fig. 7. Table III summarizes the
results of each model obtained at the end of the training phase
with the training time (TT), number of iterations (NoI), mAP,
and total loss (TL) value. It is observed that the faster RCNN
model achieved minimal loss with maximum mAP, however,
has the lowest FPS, which makes it not suitable for real-time
applications. Furthermore, as compared to SSD, YOLO v3
achieved better results with balanced mAP, training time, and
FPS score. The trained YOLO v3 model is then utilized for
monitoring the social distancing on the surveillance video.
VI. O UTPUT
The proposed framework outputs (as shown in Fig. 8) the
processed frame with the identified people confined in the

Fig. 8: Sample output of the proposed framework for monitoring social distancing on surveillance footage of Oxford Town
Center.
bounding boxes while also simulating the statistical analysis
showing the total number of social groups displayed by same
color encoding and a violation index term computed as the
ratio of the number of people to the number of groups. The
frames shown in Fig. 8 displays violation index as 3, 2, 2, and
2.33. The frames with detected violations are recorded with
the timestamp for future analysis.
VII. F UTURE SCOPE AND CHALLENGES
Since this application is intended to be used in any working
environment; accuracy and precision are highly desired to
serve the purpose. Higher number of false positive may raise
discomfort and panic situation among people being observed.
There may also be genuinely raised concerns about privacy and
individual rights which can be addressed with some additional
measures such as prior consents for such working environments, hiding a persons identity in general, and maintaining
transparency about its fair uses within limited stakeholders.
VIII. C ONCLUSION
The article proposes an efficient real-time deep learning
based framework to automate the process of monitoring the
social distancing via object detection and tracking approaches,
where each individual is identified in the real-time with the
help of bounding boxes. The generated bounding boxes aid
in identifying the clusters or groups of people satisfying
the closeness property computed with the help of pairwise
vectorized approach. The number of violations are confirmed

9

by computing the number of groups formed and violation
index term computed as the ratio of the number of people
to the number of groups. The extensive trials were conducted
with popular state-of-the-art object detection models: Faster
RCNN, SSD, and YOLO v3, where YOLO v3 illustrated
the efficient performance with balanced FPS and mAP score.
Since this approach is highly sensitive to the spatial location
of the camera, the same approach can be fine tuned to better
adjust with the corresponding field of view.
ACKNOWLEDGMENT
The authors gratefully acknowledge the helpful comments
and suggestions of colleagues. Authors are also indebted to
Interdisciplinary Cyber Physical Systems (ICPS) Programme,
Department of Science and Technology (DST), Government
of India (GoI) vide Reference No.244 for their financial
support to carry out the background research which helped
significantly for the implementation of present research work.
R EFERENCES
[1] W. H. Organization, ‚ÄúWHO corona-viruses (COVID-19),‚Äù https://www.
who.int/emergencies/diseases/novel-corona-virus-2019, 2020, [Online;
accessed May 02, 2020].
[2] WHO, ‚ÄúWho director-generals opening remarks at the media briefing
on covid-19-11 march 2020.‚Äù https://www.who.int/dg/speeches/detail/,
2020, [Online; accessed March 12, 2020].
[3] L. Hensley, ‚ÄúSocial distancing is out, physical distancing is inheres how
to do it,‚Äù Global News‚ÄìCanada (27 March 2020), 2020.
[4] ECDPC, ‚ÄúConsiderations relating to social distancing measures in
response to COVID-19 second update,‚Äù https://www.ecdc.europa.eu/
en/publications-data/considerations, 2020, [Online; accessed March 23,
2020].
[5] M. W. Fong, H. Gao, J. Y. Wong, J. Xiao, E. Y. Shiu, S. Ryu, and
B. J. Cowling, ‚ÄúNonpharmaceutical measures for pandemic influenza in
nonhealthcare settingssocial distancing measures,‚Äù 2020.
[6] F. Ahmed, N. Zviedrite, and A. Uzicanin, ‚ÄúEffectiveness of workplace
social distancing measures in reducing influenza transmission: a systematic review,‚Äù BMC public health, vol. 18, no. 1, p. 518, 2018.
[7] W. O. Kermack and A. G. McKendrick, ‚ÄúContributions to the mathematical theory of epidemics‚Äìi. 1927.‚Äù 1991.
[8] C. Eksin, K. Paarporn, and J. S. Weitz, ‚ÄúSystematic biases in disease
forecasting‚Äìthe role of behavior change,‚Äù Epidemics, vol. 27, pp. 96‚Äì
105, 2019.
[9] M. Zhao and H. Zhao, ‚ÄúAsymptotic behavior of global positive solution
to a stochastic sir model incorporating media coverage,‚Äù Advances in
Difference Equations, vol. 2016, no. 1, pp. 1‚Äì17, 2016.
[10] P. Alto, ‚ÄúLanding AI Named an April 2020 Cool Vendor in the Gartner Cool Vendors in AI Core Technologies,‚Äù https://www.yahoo.com/
lifestyle/landing-ai-named-april-2020-152100532.html, 2020, [Online;
accessed April 21, 2020].
[11] A. Y. Ng, ‚ÄúCurriculum Vitae,‚Äù https://ai.stanford.edu/‚àºang/
curriculum-vitae.pdf.
[12] L. AI, ‚ÄúLanding AI Named an April 2020 Cool Vendor in the Gartner
Cool Vendors in AI Core Technologies,‚Äù https://www.prnewswire.com/
news-releases/, 2020, [Online; accessed April 22, 2020].
[13] B. News, ‚ÄúChina coronavirus: Lockdown measures rise across Hubei
province,‚Äù
https://www.bbc.co.uk/news/world-asia-china51217455,
2020, [Online; accessed January 23, 2020].
[14] N. H. C. of the Peoples Republic of China, ‚ÄúDaily briefing on novel
coronavirus cases in China,‚Äù http://en.nhc.gov.cn/2020-03/20/c 78006.
htm, 2020, [Online; accessed March 20, 2020].
[15] K. Prem, Y. Liu, T. W. Russell, A. J. Kucharski, R. M. Eggo, N. Davies,
S. Flasche, S. Clifford, C. A. Pearson, J. D. Munday et al., ‚ÄúThe effect
of control strategies to reduce social mixing on outcomes of the covid19 epidemic in wuhan, china: a modelling study,‚Äù The Lancet Public
Health, 2020.
[16] C. Adolph, K. Amano, B. Bang-Jensen, N. Fullman, and J. Wilkerson,
‚ÄúPandemic politics: Timing state-level social distancing responses to
covid-19,‚Äù medRxiv, 2020.

[17] K. E. Ainslie, C. E. Walters, H. Fu, S. Bhatia, H. Wang, X. Xi,
M. Baguelin, S. Bhatt, A. Boonyasiri, O. Boyd et al., ‚ÄúEvidence of
initial success for china exiting covid-19 social distancing policy after
achieving containment,‚Äù Wellcome Open Research, vol. 5, no. 81, p. 81,
2020.
[18] S. K. Sonbhadra, S. Agarwal, and P. Nagabhushan, ‚ÄúTarget specific
mining of covid-19 scholarly articles using one-class approach,‚Äù 2020.
[19] N. S. Punn and S. Agarwal, ‚ÄúAutomated diagnosis of covid-19 with
limited posteroanterior chest x-ray images using fine-tuned deep neural
networks,‚Äù 2020.
[20] N. S. Punn, S. K. Sonbhadra, and S. Agarwal, ‚ÄúCovid-19 epidemic
analysis using machine learning and deep learning algorithms,‚Äù
medRxiv, 2020. [Online]. Available: https://www.medrxiv.org/content/
early/2020/04/11/2020.04.08.20057679
[21] O. website of Indian Government, ‚ÄúDistribution of the novel
coronavirus-infected pneumoni Aarogya Setu Mobile App,‚Äù https://
www.mygov.in/aarogya-setu-app/, 2020.
[22] M. Robakowska, A. Tyranska-Fobke, J. Nowak, D. Slezak, P. Zuratynski,
P. Robakowski, K. Nadolny, and J. R. ≈Åadny, ‚ÄúThe use of drones during
mass events,‚Äù Disaster and Emergency Medicine Journal, vol. 2, no. 3,
pp. 129‚Äì134, 2017.
[23] J. Harvey, Adam. LaPlace. (2019) Megapixels.cc: Origins, ethics,
and privacy implications of publicly available face recognition image
datasets. [Online]. Available: https://megapixels.cc/
[24] N. Sulman, T. Sanocki, D. Goldgof, and R. Kasturi, ‚ÄúHow effective
is human video surveillance performance?‚Äù in 2008 19th International
Conference on Pattern Recognition. IEEE, 2008, pp. 1‚Äì3.
[25] X. Wang, ‚ÄúIntelligent multi-camera video surveillance: A review,‚Äù Pattern recognition letters, vol. 34, no. 1, pp. 3‚Äì19, 2013.
[26] K. A. Joshi and D. G. Thakore, ‚ÄúA survey on moving object detection
and tracking in video surveillance system,‚Äù International Journal of Soft
Computing and Engineering, vol. 2, no. 3, pp. 44‚Äì48, 2012.
[27] O. Javed and M. Shah, ‚ÄúTracking and object classification for automated
surveillance,‚Äù in European Conference on Computer Vision. Springer,
2002, pp. 343‚Äì357.
[28] S. Brutzer, B. HoÃàferlin, and G. Heidemann, ‚ÄúEvaluation of background
subtraction techniques for video surveillance,‚Äù in CVPR 2011. IEEE,
2011, pp. 1937‚Äì1944.
[29] S. Aslani and H. Mahdavi-Nasab, ‚ÄúOptical flow based moving object
detection and tracking for traffic surveillance,‚Äù International Journal of
Electrical, Computer, Energetic, Electronic and Communication Engineering, vol. 7, no. 9, pp. 1252‚Äì1256, 2013.
[30] P. DollaÃÅr, V. Rabaud, G. Cottrell, and S. Belongie, ‚ÄúBehavior recognition
via sparse spatio-temporal features,‚Äù in 2005 IEEE International Workshop on Visual Surveillance and Performance Evaluation of Tracking
and Surveillance. IEEE, 2005, pp. 65‚Äì72.
[31] M. Piccardi, ‚ÄúBackground subtraction techniques: a review,‚Äù in 2004
IEEE International Conference on Systems, Man and Cybernetics (IEEE
Cat. No. 04CH37583), vol. 4. IEEE, 2004, pp. 3099‚Äì3104.
[32] Y. Xu, J. Dong, B. Zhang, and D. Xu, ‚ÄúBackground modeling methods
in video analysis: A review and comparative evaluation,‚Äù CAAI Transactions on Intelligence Technology, vol. 1, no. 1, pp. 43‚Äì60, 2016.
[33] H. Tsutsui, J. Miura, and Y. Shirai, ‚ÄúOptical flow-based person tracking
by multiple cameras,‚Äù in Conference Documentation International Conference on Multisensor Fusion and Integration for Intelligent Systems.
MFI 2001 (Cat. No. 01TH8590). IEEE, 2001, pp. 91‚Äì96.
[34] A. Agarwal, S. Gupta, and D. K. Singh, ‚ÄúReview of optical flow
technique for moving object detection,‚Äù in 2016 2nd International
Conference on Contemporary Computing and Informatics (IC3I). IEEE,
2016, pp. 409‚Äì413.
[35] S. A. Niyogi and E. H. Adelson, ‚ÄúAnalyzing gait with spatiotemporal
surfaces,‚Äù in Proceedings of 1994 IEEE Workshop on Motion of Nonrigid and Articulated Objects. IEEE, 1994, pp. 64‚Äì69.
[36] Z.-Q. Zhao, P. Zheng, S.-t. Xu, and X. Wu, ‚ÄúObject detection with deep
learning: A review,‚Äù IEEE transactions on neural networks and learning
systems, vol. 30, no. 11, pp. 3212‚Äì3232, 2019.
[37] A. Krizhevsky, I. Sutskever, and G. E. Hinton, ‚ÄúImagenet classification
with deep convolutional neural networks,‚Äù in Advances in neural information processing systems, 2012, pp. 1097‚Äì1105.
[38] S. Ren, K. He, R. Girshick, and J. Sun, ‚ÄúFaster r-cnn: Towards real-time
object detection with region proposal networks,‚Äù in Advances in neural
information processing systems, 2015, pp. 91‚Äì99.
[39] X. Chen and A. Gupta, ‚ÄúAn implementation of faster rcnn with study
for region sampling,‚Äù arXiv preprint arXiv:1702.02138, 2017.
[40] J. Redmon, S. Divvala, R. Girshick, and A. Farhadi, ‚ÄúYou only look
once: Unified, real-time object detection,‚Äù in Proceedings of the IEEE

10

[41]

[42]

[43]

[44]

[45]

[46]

[47]

[48]

[49]

[50]

[51]

[52]

[53]

[54]

[55]
[56]

[57]

[58]

[59]
[60]

[61]

[62]

conference on computer vision and pattern recognition, 2016, pp. 779‚Äì
788.
M. Putra, Z. Yussof, K. Lim, and S. Salim, ‚ÄúConvolutional neural
network for person and car detection using yolo framework,‚Äù Journal
of Telecommunication, Electronic and Computer Engineering (JTEC),
vol. 10, no. 1-7, pp. 67‚Äì71, 2018.
R. Eshel and Y. Moses, ‚ÄúHomography based multiple camera detection
and tracking of people in a dense crowd,‚Äù in 2008 IEEE Conference on
Computer Vision and Pattern Recognition. IEEE, 2008, pp. 1‚Äì8.
D.-Y. Chen, C.-W. Su, Y.-C. Zeng, S.-W. Sun, W.-R. Lai, and H.Y. M. Liao, ‚ÄúAn online people counting system for electronic advertising
machines,‚Äù in 2009 IEEE International Conference on Multimedia and
Expo. IEEE, 2009, pp. 1262‚Äì1265.
C.-W. Su, H.-Y. M. Liao, and H.-R. Tyan, ‚ÄúA vision-based people
counting approach based on the symmetry measure,‚Äù in 2009 IEEE
International Symposium on Circuits and Systems. IEEE, 2009, pp.
2617‚Äì2620.
J. Yao and J.-M. Odobez, ‚ÄúFast human detection from joint appearance
and foreground feature subset covariances,‚Äù Computer Vision and Image
Understanding, vol. 115, no. 10, pp. 1414‚Äì1426, 2011.
B. Wu and R. Nevatia, ‚ÄúDetection and tracking of multiple, partially
occluded humans by bayesian combination of edgelet based part detectors,‚Äù International Journal of Computer Vision, vol. 75, no. 2, pp.
247‚Äì266, 2007.
F. Z. Eishita, A. Rahman, S. A. Azad, and A. Rahman, ‚ÄúOcclusion
handling in object detection,‚Äù in Multidisciplinary Computational Intelligence Techniques: Applications in Business, Engineering, and Medicine.
IGI Global, 2012, pp. 61‚Äì74.
M. Singh, A. Basu, and M. K. Mandal, ‚ÄúHuman activity recognition
based on silhouette directionality,‚Äù IEEE transactions on circuits and
systems for video technology, vol. 18, no. 9, pp. 1280‚Äì1292, 2008.
N. Dalal and B. Triggs, ‚ÄúHistograms of oriented gradients for human
detection,‚Äù in 2005 IEEE computer society conference on computer
vision and pattern recognition (CVPR‚Äô05), vol. 1. IEEE, 2005, pp.
886‚Äì893.
P. Huang, A. Hilton, and J. Starck, ‚ÄúShape similarity for 3d video
sequences of people,‚Äù International Journal of Computer Vision, vol. 89,
no. 2-3, pp. 362‚Äì381, 2010.
A. Samal and P. A. Iyengar, ‚ÄúAutomatic recognition and analysis of
human faces and facial expressions: A survey,‚Äù Pattern recognition,
vol. 25, no. 1, pp. 65‚Äì77, 1992.
D. Cunado, M. S. Nixon, and J. N. Carter, ‚ÄúUsing gait as a biometric,
via phase-weighted magnitude spectra,‚Äù in International Conference on
Audio-and Video-Based Biometric Person Authentication.
Springer,
1997, pp. 93‚Äì102.
B. Leibe, E. Seemann, and B. Schiele, ‚ÄúPedestrian detection in crowded
scenes,‚Äù in 2005 IEEE Computer Society Conference on Computer Vision
and Pattern Recognition (CVPR‚Äô05), vol. 1. IEEE, 2005, pp. 878‚Äì885.
M. Andriluka, S. Roth, and B. Schiele, ‚ÄúPeople-tracking-by-detection
and people-detection-by-tracking,‚Äù in 2008 IEEE Conference on computer vision and pattern recognition. IEEE, 2008, pp. 1‚Äì8.
A. Yilmaz, O. Javed, and M. Shah, ‚ÄúObject tracking: A survey,‚Äù Acm
computing surveys (CSUR), vol. 38, no. 4, pp. 13‚Äìes, 2006.
C. Schuldt, I. Laptev, and B. Caputo, ‚ÄúRecognizing human actions: a
local svm approach,‚Äù in Proceedings of the 17th International Conference on Pattern Recognition, 2004. ICPR 2004., vol. 3. IEEE, 2004,
pp. 32‚Äì36.
D. Weinland, R. Ronfard, and E. Boyer, ‚ÄúFree viewpoint action recognition using motion history volumes,‚Äù Computer vision and image
understanding, vol. 104, no. 2-3, pp. 249‚Äì257, 2006.
M. Blank, L. Gorelick, E. Shechtman, M. Irani, and R. Basri, ‚ÄúActions
as space-time shapes,‚Äù in Tenth IEEE International Conference on
Computer Vision (ICCV‚Äô05) Volume 1, vol. 2. IEEE, 2005, pp. 1395‚Äì
1402.
O. Parkhi, A. Vedaldi, A. Zisserman, and C. Jawahar, ‚ÄúThe oxford-iiit
pet dataset,‚Äù 2012.
A. Kuznetsova, H. Rom, N. Alldrin, J. Uijlings, I. Krasin, J. Pont-Tuset,
S. Kamali, S. Popov, M. Malloci, A. Kolesnikov et al., ‚ÄúThe open images
dataset v4,‚Äù International Journal of Computer Vision, pp. 1‚Äì26, 2020.
R. Girshick, J. Donahue, T. Darrell, and J. Malik, ‚ÄúRich feature
hierarchies for accurate object detection and semantic segmentation,‚Äù
in Proceedings of the IEEE conference on computer vision and pattern
recognition, 2014, pp. 580‚Äì587.
R. Girshick, ‚ÄúFast r-cnn,‚Äù in Proceedings of the IEEE international
conference on computer vision, 2015, pp. 1440‚Äì1448.

[63] W. Liu, D. Anguelov, D. Erhan, C. Szegedy, S. Reed, C.-Y. Fu, and A. C.
Berg, ‚ÄúSsd: Single shot multibox detector,‚Äù in European conference on
computer vision. Springer, 2016, pp. 21‚Äì37.
[64] J. Redmon and A. Farhadi, ‚ÄúYolo9000: better, faster, stronger,‚Äù in
Proceedings of the IEEE conference on computer vision and pattern
recognition, 2017, pp. 7263‚Äì7271.
[65] J. R. A. Farhadi and J. Redmon, ‚ÄúYolov3: An incremental improvement,‚Äù
Retrieved September, vol. 17, p. 2018, 2018.
[66] M. Everingham, L. Van Gool, C. K. Williams, J. Winn, and A. Zisserman, ‚ÄúThe pascal visual object classes (voc) challenge,‚Äù International
journal of computer vision, vol. 88, no. 2, pp. 303‚Äì338, 2010.
[67] T.-Y. Lin, M. Maire, S. Belongie, J. Hays, P. Perona, D. Ramanan,
P. DollaÃÅr, and C. L. Zitnick, ‚ÄúMicrosoft coco: Common objects in
context,‚Äù in European conference on computer vision. Springer, 2014,
pp. 740‚Äì755.
[68] K. Simonyan and A. Zisserman, ‚ÄúVery deep convolutional networks for
large-scale image recognition,‚Äù arXiv preprint arXiv:1409.1556, 2014.
[69] K. He, X. Zhang, S. Ren, and J. Sun, ‚ÄúDeep residual learning for image
recognition,‚Äù in Proceedings of the IEEE conference on computer vision
and pattern recognition, 2016, pp. 770‚Äì778.
[70] C. Szegedy, V. Vanhoucke, S. Ioffe, J. Shlens, and Z. Wojna, ‚ÄúRethinking
the inception architecture for computer vision,‚Äù in Proceedings of the
IEEE conference on computer vision and pattern recognition, 2016, pp.
2818‚Äì2826.
[71] O. Russakovsky, J. Deng, H. Su, J. Krause, S. Satheesh, S. Ma,
Z. Huang, A. Karpathy, A. Khosla, M. Bernstein et al., ‚ÄúImagenet large
scale visual recognition challenge,‚Äù International journal of computer
vision, vol. 115, no. 3, pp. 211‚Äì252, 2015.
[72] C. Szegedy, S. Ioffe, V. Vanhoucke, and A. A. Alemi, ‚ÄúInception-v4,
inception-resnet and the impact of residual connections on learning,‚Äù in
Thirty-first AAAI conference on artificial intelligence, 2017.
[73] Google, ‚ÄúOpen image dataset v6,‚Äù https://storage.googleapis.com/
openimages/web/index.html, 2020, [Online; accessed 25-February2020].
[74] N. S. Punn and S. Agarwal, ‚ÄúInception u-net architecture for semantic
segmentation to identify nuclei in microscopy cell images,‚Äù ACM Transactions on Multimedia Computing, Communications, and Applications
(TOMM), vol. 16, no. 1, pp. 1‚Äì15, 2020.
[75] A. Vaswani, S. Bengio, E. Brevdo, F. Chollet, A. N. Gomez, S. Gouws,
L. Jones, ≈Å. Kaiser, N. Kalchbrenner, N. Parmar et al., ‚ÄúTensor2tensor
for neural machine translation,‚Äù arXiv preprint arXiv:1803.07416, 2018.
[76] D. Amodei, S. Ananthanarayanan, R. Anubhai, J. Bai, E. Battenberg,
C. Case, J. Casper, B. Catanzaro, Q. Cheng, G. Chen et al., ‚ÄúDeep
speech 2: End-to-end speech recognition in english and mandarin,‚Äù in
International conference on machine learning, 2016, pp. 173‚Äì182.
[77] A. Sonawane, ‚ÄúMedium : YOLOv3: A Huge Improvement,‚Äù https:
//medium.com/@anand sonawane/yolo3, 2020, [Online; accessed Dec
6, 2019].
[78] N. Wojke, A. Bewley, and D. Paulus, ‚ÄúSimple online and realtime
tracking with a deep association metric,‚Äù in 2017 IEEE international
conference on image processing (ICIP). IEEE, 2017, pp. 3645‚Äì3649.
[79] N. Wojke and A. Bewley, ‚ÄúDeep cosine metric learning for person
re-identification,‚Äù in 2018 IEEE winter conference on applications of
computer vision (WACV). IEEE, 2018, pp. 748‚Äì756.
[80] S. Pouyanfar, S. Sadiq, Y. Yan, H. Tian, Y. Tao, M. P. Reyes, M.-L. Shyu,
S.-C. Chen, and S. Iyengar, ‚ÄúA survey on deep learning: Algorithms,
techniques, and applications,‚Äù ACM Computing Surveys (CSUR), vol. 51,
no. 5, pp. 1‚Äì36, 2018.
[81] A. Brunetti, D. Buongiorno, G. F. Trotta, and V. Bevilacqua, ‚ÄúComputer vision and deep learning techniques for pedestrian detection and
tracking: A survey,‚Äù Neurocomputing, vol. 300, pp. 17‚Äì33, 2018.
[82] N. S. Punn and S. Agarwal, ‚ÄúCrowd analysis for congestion control
early warning system on foot over bridge,‚Äù in 2019 Twelfth International
Conference on Contemporary Computing (IC3). IEEE, 2019, pp. 1‚Äì6.
[83] Pias, ‚ÄúObject detection and distance measurement,‚Äù https://github.com/
paul-pias/Object-Detection-and-Distance-Measurement, 2020, [Online;
accessed 01-March-2020].
[84] J. Harvey, Adam. LaPlace. (2019) Megapixels: Origins, ethics, and
privacy implications of publicly available face recognition image
datasets. [Online]. Available: https://megapixels.cc/

