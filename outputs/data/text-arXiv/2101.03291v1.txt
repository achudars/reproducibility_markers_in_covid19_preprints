Combating Hostility: Covid-19 Fake News and
Hostile Post Detection in Social Media
Omar Sharif∗

ID

, Eftekhar Hossain

ID

, and Mohammed Moshiul Hoque∗

ID

*

Department of Computer Science and Engineering
Department of Electronics and Telecommunication Engineering
Chittagong University of Engineering and Technology, Bangladesh
{omar.sharif, eftekhar.hossain, moshiul 240}@cuet.ac.bd

arXiv:2101.03291v1 [cs.CL] 9 Jan 2021

†

Abstract. This paper illustrates a detail description of the system and
its results that developed as a part of the participation at CONSTRAINT
shared task in AAAI-2021. The shared task comprises two tasks: a)
COVID19 fake news detection in English b) Hostile post detection in
Hindi. Task-A is a binary classification problem with fake and real class,
while task-B is a multi-label multi-class classification task with five hostile
classes (i.e. defame, fake, hate, offence, non-hostile). Various techniques
are used to perform the classification task, including SVM, CNN, BiLSTM,
and CNN+BiLSTM with tf-idf and Word2Vec embedding techniques.
Results indicate that SVM with tf-idf features achieved the highest 94.39%
weighted f1 score on the test set in task-A. Label powerset SVM with
n-gram features obtained the maximum coarse-grained and fine-grained
f1 score of 86.03% and 50.98% on the task-B test set respectively.

Keywords: Natural language processing· Fake news detection· Hostile post
classification· Machine learning· Deep learning

1

Introduction

In recent years there has been a phenomenal surge in the number of users
in social media platforms (i.e. Facebook, Twitter) to communicate, publish
content, and express their opinions. The swelling number of users has resulted
in the generation of the countless amount of posts on social media platforms
[1]. Although communication proliferated via the social media platforms, they
also create space for anti-social and unlawful activities such as disseminating
preposterous information, rumour, bullying, harassing, stalking, trolling, and
hate speech [2][3]. During emergency and crises, these anti-social behaviours are
stirring up immensely and thus deliberately or unintentionally create a hazardous
effect towards a community. COVID-19 pandemic is one such situation that has
changed people’s lifestyles by confining them to homes and engaging in spending
more time on social media. As a result, many online social media users post
hostile (such as fake, offensive, defame) contents by crossing the line defined
by constitutional rights. Moreover, hostile posts on COVID-19 is a matter of

2

Sharif et al.

concern as it can impel people to take extreme actions by believing the post
is real. In order to combat the hostile contents, development of an automated
system is utmost important. To address the issue, the critical contributions of
this work illustrates in the following:
• Develop various machine learning and deep learning-based models to detect
hostile texts in social media.
• Present performance analysis and qualitative error analysis of the system.
The rest of the paper organized as follows: the related work discussed in
Section 2. Problem definition and brief analysis of the dataset presented in
Section 3. Section 4 described the methods used to develop the system. Findings
and the results of the errors analysis presented in Section 5. Finally, conclusion
and future direction are given in Section 6.

2

Related Work

Identification and classification of hostile contents have become a prominent
research issue in recent years. Various machine and deep learning approaches
have achieved reasonable accuracy in solving various NLP tasks such as fake
news, hate speech and abusive language detection. Saroj et al. [4] used SVM
classifier along with tf-idf feature to identify the hate speech and offensive
languages. They obtained the macro f1 score of 78% and 72% respectively
for Arabic and Greek dataset. Ibrohim et al. [5] exploited a combination of
n-gram tf-idf features with SVM and Naive Bayes (NB) classifier to detect the
abusive language. Their approach achieved the highest f1 score of 86.43% for
the NB classifier with unigram feature. A machine learning-based approach used
by Gaydhani et al. [6] to classify the hate speech and offensive language on
Twitter. This work used tf-idf for varying n-gram ranges and experimented with
multiple classifiers such as logistic regression (LR) and SVM. Ibrohim et al.
[7] used a machine learning approach with problem transformation methods
for classifying the multi-label hate speech and abusive content written in the
Indonesian language. Authors exploited various transformation techniques such
as binary relevance (BR), label powerset (LP), and classifier chain (CC). They
obtained the highest accuracy 76.16% by using word unigram feature and an
ensemble approach with LP data transformation method. To detect offensive
language, an LSTM and word embedding based technique is proposed by Goel
et al. [8]. Sadiq et al. [9] employed combination of CNN and BiLSTM method
to identify aggression on Twitter. In order to detect the fake news, a hybrid
convolutional neural network (CNN) is developed by Wang et al. [10]. This work
also exploited BiLSTM, LR and SVM techniques for the classification.

3

Task Description

The CONSTRAINT shared task comprises of two tasks: task-A and task-B.
The task definition with various class labels and brief analysis of the dataset is
described in the following subsections.

Covid-19 Fake News and Hostile Post Detection in Social Media

3.1

3

Task Definition

The goal of task-A is to identify whether a tweet contains real or fake information.
The tweets are related to the Covid-19 pandemic and written in English. In
task-B, we have to perform multi-label multi-class classification on five hostile
dimensions such as fake news, hate speech, offensive, defamation and non-hostile.
The organizers1 culled hostile posts in Hindi Devanagari script from Facebook
and Twitter. To better understand the task, it is monumental to have a clear
idea of the class labels. The organizers [11] [12] have defined various hostile and
fake classes as illustrates in the following:
• Fake: Articles, posts and tweets provide information or make claims which
are verified not to be true.
• Real: The articles, posts and tweets which provided verified information and
make authentic claims.
• Hate speech: Post having the malicious intention of spreading hate and
violence against specific group or person based on some specific characteristics
such as religious beliefs, ethnicity, and race.
• Offensive: A post contains vulgar, rude, impolite and obscene languages to
insult a targeted individual or a group.
• Defamation: Posts spread misinformation against a group or individuals
which aim to damage their social identity publicly.
• Non-hostile: Posts without any hostility.
3.2

Dataset Analysis

Classifier models have been trained and tested with the dataset conferred by the
organizers. A validation set is utilized to tune the model parameters and settle
the optimal hyperparameter combination. There are two classes in task-A, and
we have to deal with five overlapping classes in task-B. The number of instances
used to train, validate and test the models summarized in table 1.
To get the useful insights, we investigated the train set. Statistics of the train
set exhibited in table 2. From the distribution, it observed that the training set
is highly imbalanced for both tasks. In task-A, the real class has total 100k
words, while the fake class has only 64k words. Although there is a considerable
difference in the number of total words, the number of unique words in both
classes is approximately identical. That means words in real class are more
frequent than words of fake class. In task-B, the total words of the non-hostile
class are about four times as much as the defame class. In average, the fake class
has a maximum, and non-hostile class has the minimum number of words per
texts.
Figure 1 depicts the number of texts fall in various length range. It is observed
that the fake tweets length is relatively shorter than the length of real tweets.
Approximately 2000 fake tweets have a length of less than 20. In contrast,
more than 2800 tweets of the real class have higher than 20 words. Only a
1

https://constraint-shared-task-2021.github.io/

4

Sharif et al.
Task-A

Train
Validation
Test

Task-B

Real

Fake

Defame

Fake

Hate

Offense

3360
1120
1120

3060
1020
1020

564
77
169

1144
160
334

792
103
237

742
110
219

NonHostile
3050
435
873

Table 1: Number of instances in train, validation and test set for each task

Task-A

Task-B

Class

Total
words

Unique
words

Real
Fake
Defame
Fake
Hate
Offense
Non-Hostile

102100
64929
17287
40265
25982
21520
69481

10029
9980
4051
7129
5101
4624
9485

Max text
length
(words)
58
1409
69
403
116
123
60

Avg. no. of
words per
texts
30.39
21.22
30.65
35.22
32.80
29.00
22.78

Table 2: Training set statistics

(a) Task-A

(b) Task-B

Fig. 1: Number of tweets/posts in varying length distribution scenario for
different classes in training set

fraction of tweets has more than 60 words. Meanwhile in task-B, non-hostile
class dominates in every length distribution. This difference occurs because the
number of instances in non-hostile class is higher compare to other classes.
Length of most of the posts is between range 20 to 40. Analysis of the training
set performed after removing the punctuation, numbers and other unwanted
characters.

Covid-19 Fake News and Hostile Post Detection in Social Media

4

5

System Overview

Figure 2 presents the schematic diagram of our system, which has three major
phases: preprocessing, feature extraction and classification.

Fig. 2: Schematic view of the hostile text detection

4.1

Preprocessing and Feature Extraction

Raw input texts are processed in the preprocessing phase. All the flawed characters,
numbers, emojis and punctuation’s are discarded from the texts. For both tasks,
identical preprocessing techniques are used. For deep learning methods, texts
converted into fixed-length numeric sequences using ‘tokenizer’ and ‘pad sequence’
methods of Keras2 . After preprocessing, features are extracted to train ML and
DL models. N-gram features of the texts extracted with tf-idf technique [13].
Although tf-idf is a useful feature extraction technique, it could not capture
the word’s semantic meaning in a text. To tackle this, we used the Word2Vec
word embedding technique [14] that map words into a dense feature vector.
Furthermore, pre-trained word vectors [15] are also explored to investigate the
models’ effectiveness. These features are employed on different methods to perform
the tasks.
4.2

Methodology

We have employed different machine learning (ML) and deep learning (DL)
approaches to crack the tasks. In this section, we describe the methods used to
develop classifier models for each task.
task A: is a binary classification problem where we have to detect whether a
tweet is fake or real.
2

https://keras.io/api/preprocessing/text/

6

Sharif et al.

• ML approach: SVM is implemented by both ‘linear’ and ‘rbf’ kernel along
with tf-idf feature extraction technique. Combination of unigram and bigram
feature is utilized. Value of ‘C’ and other parameters is fixed by trial and
error approach. Furthermore, SVM is applied on top of word embedding
features as well. Embedding vectors are generated by varying window size,
embedding dimension and other influential parameters. Other ML methods
(logistic regression, decision tree, random forest) are also exploited. However,
the performance of SVM is superior compare to other techniques.
• DL approach: We have implemented convolution neural network (CNN),
bidirectional long short term memory (BiLSTM) and combined (CNN+
BiLSTM) network. For experimentation, network architectures are changed
by varying number layers, number of neurons, dropout rate, learning rate,
and other hyperparameters. In CNN, we used 64 convolution filters with
kernel size 5 × 5 and pooling window size 1 × 5. BiLSTM network comprises
of 32 bidirectional cells with dropout rate 0.2. In the combined model, these
two networks are sequentially added one after another.
Task B: is a multi-label multi-class problem where our aim is to identify
different hostile dimensions .
• ML approach: We used label powerset (LP) [16] along with support vector
machine (LPSVM) classifier to develop our model. LP generates a new label
for each label combination in the training corpus and thus transforming a
multi-label problem into a multi-class problem [17]. At first, we use tf-idf
feature values of n-gram (1, 3) with linear SVM where C = 1.7. To reduce
computation complexity, features that appear in less than five documents
are discarded. In other approaches, unigram and n-gram (1,2) features are
applied along with LPSVM, where the value of ‘C’ is taken as 3.8 and 0.7,
respectively. In both cases, the linear kernel is used.
• DL approach: BiLSTM network is employed with Word2Vec embedding
technique to capture the sequential and semantic features of the texts. To
get the embedding vectors, we use entire training corpus with embedding
dimension 64. These features propagated to the LSTM layer consisting of 32
bidirectional cells. The BiLSTM layer’s output transferred to the dense layer
having nodes equal to the number of classes (5) where sigmoid activation
function is used. A dropout layer with the rate of 0.1 is introduced between
the LSTM and dense layer to mitigate the over-fitting. We use ‘binary
crossentropy’ as loss function and ‘adam’ as optimizer with learning rate
0.01.

5

Experiments

Experiments were conducted on Google co-laboratory platform along with Python
= 3.6.9. Machine learning models are developed by using scikit-learn = 0.22.2
packages. Besides, Keras = 2.4.0 with TensorFlow = 2.3.0 framework is chosen

Covid-19 Fake News and Hostile Post Detection in Social Media

7

to implement the deep learning models. Models are developed over train data,
whereas the validation set is used for tweaking the model parameters. Several
measures such as accuracy (A), precision (P), recall (R) and f1 -score (F) are
chosen to evaluate the models. Moreover, coarse-grained and fine-grained scores
used to compare the performance of the models.
5.1

Results

In task-A, the superiority of the model is determined based on the weighted f1
score. On the other hand, coarse-grained (CG) and fine-grained (FG) f1 -score is
used to find the best task-B model. Table 3 presents the evaluation results of taskA on the test set. We have reported the outcomes for four models. The results
revealed that the combination of CNN and BiLSTM approach achieved f1 score
of 92.01%. In contrast, two models with the combination of SVM and Word2Vec
obtained slightly higher f1 score of 92.66% and 92.94% respectively. However,
SVM with a tf-idf approach shows about 2% rise and exceeds all the approaches
by achieving the highest f1 score (94.39%). Our best model performance lags
almost 4% compared to the best result (f1 score = 98.69%) obtained in task-A.

Method
CNN + BiLSTM
SVM + TF-idf
SVM + Word2Vec (ED=200)
SVM + Word2Vec (ED=150)
Best

A
92.01
94.35
92.66
92.94
98.69

P
92.01
94.42
92.67
92.94
98.69

R
F
92.01 92.01
94.39 94.39
92.66 92.66
92.94 92.94
98.69 98.69

Table 3: Evaluation results of task-A on test set. Here A, P, R, F denotes
accuracy, precision, recall, weighted f1 score respectively and ED indicates
embedding dimension
Evaluation results of task-B on the test set are presented in table 4. With
BiLSTM and word embedding features, we obtained CG and FG f1 score of
83.37% and 52.80% respectively. After employing LPSVM with unigram tf-idf
features, it shows a slight rise in CG f1 score (84.10%). However, FG f1 score
drop approximately 3% amounting to 49.12%. For n-gram (1, 2) with LPSVM,
We observed a further rise in CG f1 score (85.31%), while FG score also increased
slightly to 50.98%. Surprisingly, we achieve the highest CG f1 score of 86.03% by
varying n-gram range to (1, 3) with LPSVM. Nevertheless, FG f1 score further
decrease from the previous score to 50.66%. Meanwhile, for defamation, and fake
class BiLSTM + Word2Vec technique provides the highest f1 score of 28.65% and
52.06% respectively. On the other hand, LPSVM + Ngram (1, 2) and LPSVM
+ Ngram (1, 3) methods give the highest f1 score of 64.97% (for fake class)
and 57.91% (for offensive class). Compared to the best CG (f1 score = 97.15%)
and FG (f1 score = 64.40%) obtained in task-B, our best performing model lags
approximately more than 10% and 14% respectively in both scores.

8

Sharif et al.
Method
BiLSTM + Word2Vec
LPSVM + Unigram
LPSVM + Ngram (1,2)
LPSVM + Ngram (1,3)
Best

CG Defame
83.37
28.65
84.10
25.81
85.31
27.59
86.03 21.74
97.15
45.52

Fake
63.63
61.30
64.97
63.33
82.44

Hate
52.06
44.39
47.21
46.67
59.78

Offense
55.72
53.59
51.72
57.91
62.44

FG
52.80
49.12
50.98
50.66
64.40

Table 4: Evaluation results of Task-B on the test set. All values presented in f1
score and CG, FG denotes coarse-grained, and fine-grained f1 scores

5.2

Error Analysis

The results revealed that SVM+tf-idf and LPSVM+Ngram (1, 3) are the best
performing models for task-A and task-B. To get more insights, quantitative
error analysis of classification models carried out by using the confusion matrix.
Tables 5a-5f represent the confusion matrices of the classes for task-A and B.

Class
Real
Fake

Real
1047
47

Fake
73
973

(a) Task-A
Class
Fake
Other

Fake
190
116

NH
814
170

Defame
25
42

Other
144
1442

(b) Task-B:Defame
Other
144
1203

(c) Task-B:Fake
Class
NH
Other

Class
Defame
Other

Class
Hate
Other

Hate
91
75

Other
143
13442

(d) Task-B:Hate
Other
59
610

(e) Task-B:Non-Hostile

Class
Offense
Other

Offense
108
49

Other
111
1385

(f) Task-B:Offensive

Table 5: Confusion matrix for SVM + tf-idf (task-A) and LPSVM + Ngram(1,3)
(task-B)
Quantitative analysis: Table 5a indicates that a total of 73 real tweets wrongly
identified as fake and the system marked 47 fake tweets as real. The false-negative
rate in defame, hate, and offensive classes are very high. Only 25, 91 and 108
posts are correctly classified among 169, 134 and 219 posts respectively for these
classes. Majority of these tweets are wrongly classified as either fake or nonhostile. In contrast, the false positive rate is high for fake and non-hostile classes.
A total of 116 posts are incorrectly classified as fake while the model could not
identify 144 actual fake posts. The model also even suffered to differentiate the

Covid-19 Fake News and Hostile Post Detection in Social Media

9

hostile and non-hostile posts and thus misclassified 170 hostile posts. Dataset
imbalance might be the reason behind this poor performance. The model trained
with many fakes, and non-hostile class instances compare to other hostile classes.
Increasing the number of training examples will undoubtedly help the model to
perform better.

Qualitative analysis: Some misclassified examples with there actual (A) and
predicted label (P) presented in table 6. After giving a closer look at the examples,
we discover some interesting facts. The error occurs due to some standard
frequent terms such as ‘covid19’, ‘coronavirus’, ‘modi’, and ‘vaccine’ that exist
in real and fake tweets. These influential words make it difficult to differentiate
between fake and real. We also notice that fake news claims unverified facts
using responsible agencies, i.e. FDA, and WHO. It is challenging to verify such
claims and make a proper prediction. In the case of hostility detection, some
posts inherently express hostility which is very arduous to identify from the
surface level analysis without understanding the context. Moreover, due to the
overlapping characteristics of hostile dimensions, confusion mostly occurred when
separating the defame, hate and offensive posts. Analyzing the context of the
posts might help to develop more successful models.
5.3

Discussion

Surprisingly, machine learning models have performed better than deep learning
models in the CONSTRAINT shared tasks. As deep learning techniques are
the data-driven method, lack of training examples in a few classes might be a
reason for this peculiar behaviour. In order to handle this issue, pretrained word
embedding can be utilized. However, noticeable change in the performance was
not observed for example, combined (CNN+BiLSTM) model obtained 92.43%
weighted f1 score with pretrained word vectors which is lower than the SVM

10

Sharif et al.

(94.39%). After analysis, we realized that large pretrained language models might
help the system make predictions more accurately. Thus, after getting the actual
text labels at the end of the shared task, we applied the BERT model [18] and
notice an astonishing rise in accuracy for both tasks. In task-A weighted f1 score
increased from 0.94 to 0.98 and coarse-grained f1 score incremented from 0.86
to 0.97. Table 6 shows the outcomes of the BERT model.
Task-A

BERT

Coarse
Defame
f1 score
grained
0.98
0.97
0.38

Task-B
Fake

Hate

Offense

0.79

0.46

0.54

Table 6: Results obtained by the BERT model on task-A and task-B

6

Conclusion

This paper presents the system description with detailed results and error analysis
developed in the CONSTRAINT 2021 shared task. Various learning techniques
have explored with tf-idf feature extraction, and Word2Vec embedding technique
to accomplish the tasks A and B. Results shows that SVM with tf-idf achieved
the highest of 94.39% f1 scores for the task-A and LPSVM with n-gram (1, 3)
obtained the highest of 86.03% f1 scores for the task-B. However, the BERT
pre-trained model provided the 98% accuracy in task-A and 97% accuracy in
task-B. Since CNN and BiLSTM did not achieve satisfactory accuracy, it will
be interesting to see how they perform after applying ensemble technique or
adding attention layer. Increasing the number of posts in hostile classes can help
to improve the performance of the models. These issues will address in future
work.

References
1. Zeitel-Bank, N., Tat, U., et al.: Social media and its effects on individuals and
social systems. Journal Management, Knowledge, And Learning (2014)
2. Wiegand, M., Siegel, M., Ruppenhofer, J.: Overview of the germeval 2018 shared
task on the identification of offensive language (2018)
3. Zhang, Z., Robinson, D., Tepper, J.: Detecting hate speech on twitter using a
convolution-gru based deep neural network. In: European semantic web conference.
pp. 745–760. Springer (2018)
4. Saroj, A., Chanda, S., Pal, S.: Irlab@ iitv at semeval-2020 task 12: Multilingual
offensive language identification in social media using svm. In: Proceedings of the
Fourteenth Workshop on Semantic Evaluation. pp. 2012–2016 (2020)
5. Ibrohim, M.O., Budi, I.: A dataset and preliminaries study for abusive language
detection in indonesian social media. Procedia Computer Science 135, 222–229
(2018)

Covid-19 Fake News and Hostile Post Detection in Social Media

11

6. Gaydhani, A., Doma, V., Kendre, S., Bhagwat, L.: Detecting hate speech and
offensive language on twitter using machine learning: An n-gram and tfidf based
approach. arXiv preprint arXiv:1809.08651 (2018)
7. Ibrohim, M.O., Budi, I.: Multi-label hate speech and abusive language detection in
indonesian twitter. In: Proceedings of the Third Workshop on Abusive Language
Online. pp. 46–57 (2019)
8. Goel, B., Sharma, R.: Usf at semeval-2019 task 6: Offensive language detection
using lstm with word embeddings. In: Proceedings of the 13th International
Workshop on Semantic Evaluation. pp. 796–800 (2019)
9. Sadiq, S., Mehmood, A., Ullah, S., Ahmad, M., Choi, G.S., On, B.W.: Aggression
detection through deep neural model on twitter. Future Generation Computer
Systems 114, 120–129 (2020)
10. Wang, W.Y.: ” liar, liar pants on fire”: A new benchmark dataset for fake news
detection. arXiv preprint arXiv:1705.00648 (2017)
11. Patwa, P., Sharma, S., PYKL, S., Guptha, V., Kumari, G., Akhtar, M.S., Ekbal,
A., Das, A., Chakraborty, T.: Fighting an infodemic: Covid-19 fake news dataset.
arXiv preprint arXiv:2011.03327 (2020)
12. Bhardwaj, M., Akhtar, M.S., Ekbal, A., Das, A., Chakraborty, T.: Hostility
detection dataset in hindi. arXiv preprint arXiv:2011.03588 (2020)
13. Tokunaga, T., Makoto, I.: Text categorization based on weighted inverse document
frequency. In: Special Interest Groups and Information Process Society of Japan
(SIG-IPSJ. Citeseer (1994)
14. Mikolov, T., Sutskever, I., Chen, K., Corrado, G.S., Dean, J.: Distributed
representations of words and phrases and their compositionality. In: Advances in
neural information processing systems. pp. 3111–3119 (2013)
15. Grave, É., Bojanowski, P., Gupta, P., Joulin, A., Mikolov, T.: Learning word
vectors for 157 languages. In: Proceedings of the Eleventh International Conference
on Language Resources and Evaluation (LREC 2018) (2018)
16. Zhang, M.L., Zhou, Z.H.: A review on multi-label learning algorithms. IEEE
transactions on knowledge and data engineering 26(8), 1819–1837 (2013)
17. Tsoumakas, G., Vlahavas, I.: Random k-labelsets: An ensemble method for
multilabel classification. In: European conference on machine learning. pp. 406–
417. Springer (2007)
18. Devlin, J., Chang, M.W., Lee, K., Toutanova, K.: Bert: Pre-training of
deep bidirectional transformers for language understanding. arXiv preprint
arXiv:1810.04805 (2018)

