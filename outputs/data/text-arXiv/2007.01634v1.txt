S OCIAL DISTANCING WITH THE O PTIMAL S TEPS M ODEL

arXiv:2007.01634v1 [cs.MA] 3 Jul 2020

A P REPRINT
Christina Maria Mayr ∗
Munich University of Applied Sciences
Department of Computer Science and Mathematics
Lothstrasse 64
80335 Munich
christina_maria.mayr@hm.edu

Gerta Koester
Munich University of Applied Sciences
Department of Computer Science and Mathematics
Lothstrasse 64
80335 Munich
gerta.koester@hm.edu

July 6, 2020

A BSTRACT
With the Covid-19 pandemic an urgent need to simulate social distancing arises. The Optimal Steps
Model (OSM) is a pedestrian locomotion model that operationalizes an individual’s need for personal
space. We present new parameter values for personal space in the Optimal Steps Model to simulate
social distancing in the pedestrian dynamics simulator Vadere. Our approach is pragmatic. We
consider two use cases: in the first we demand that a set social distance must never be violated. In the
second the social distance must be kept only on average. For each use case we conduct simulation
studies in a typical bottleneck scenario and measure contact times, that is, violations of the social
distance rule. We derive rules of thumb for suitable parameter choices in dependency of the desired
social distance. We test the rules of thumb for the social distances 1.5m and 2.0m and observe that
the new parameter values indeed lead to the desired social distancing. Thus, the rules of thumb will
quickly enable Vadere users to conduct their own studies without understanding the intricacies of the
OSM implementation and without extensive parameter adjustment.
Keywords Optimal Steps Model · Social distancing · Bottleneck · Parameter adaption · Locomotion modeling, Vadere
simulation framework

1

Introduction

In 2020, distance rules were imposed in many countries to slow down the spread of the corona virus. Obeying such
rules leads to a change in crowd behavior: pedestrians keep more distance and, to achieve this, might slow down their
walking speed. In summer 2020, at the time of writing of this manuscript, we are noticing an increased use of the
Vadere simulation framework for pedestrian dynamics. In particular, we are getting requests from users who want to
simulate social distancing with the Optimal Steps Model (OSM), one of several locomotion models implemented in
Vadere. The Optimal Steps Model explicitly models psychological personal space needs as introduced by Hall [3].
Default parameters in Vadere’s OSM are calibrated to empirical data that was collected without social distancing [4]. In
these, agents come into close contact when passing a bottleneck. See Figure 1.
In this study, we try to find parameter values for the Optimal Steps Model which allow us to simulate social distancing.
Our goal is to enable researchers to conduct case studies with default parameters, and without having to understand the
mathematical intricacies of the model.
For this, we look at a classic bottleneck scenario. We argue, that this scenario is particularly suitable, because many
geometries in the built environment can be interpreted as a sequence of bottlenecks. We also consider different desired
social distances, which we define trough the Euclidean distance between the centers of agents. Agents in Vadere are
represented by circles. We call contact any violation of the desired social distance, even for the shortest time.
∗

See also www.vadere.org

A PREPRINT - J ULY 6, 2020

Figure 1: Normal crowd behavior in front of a bottleneck. The agents (circles) try to reach the target on the left hand
side. In this example, we consider agents being in contact if they violate a social distance of 1.5m. Red circles represent
agents currently in contact. The contact between two agents is represented by a red connection line. Blue circles
represent agents out of contact. Vadere’s default parameters for the Optimal Steps Model are chosen to reflect such
normal behavior. For a simulation with social distancing new parameters must be found.
We investigate two use cases:
• Use case 1: Social distance as lower bound. In this use case, the social distance value must never be violated.
As a consequence, if we find such a parameter combination, there are no contacts at all. In other words, we
interpret the social distance as a lower bound of the actual distances kept by the agents.
• Use case 2: Social distance as target distance. In this use case, we accept temporal violation of the distance
requirement, that is, contacts. In other words, we interpret the desired social distance as an average distance.
For both use cases, agents need to keep larger distances than before. In the Optimal Steps Model, personal distance is
modeled by introducing ‘repulsion’ between agents, or less physically interpreted, the utility of a position decreases
when an agent approaches another agent. The repulsion (or utility drop) is captured by a so-called potential function.
Hence, we need to find appropriate parameters of the potential function to strengthen the repulsion between agents.
In short, the research question of this study is:
• How can one adjust parameters in the Optimal Steps Model to achieve physical distancing that reflect specific
desired ‘social’ distances?

2

A brief introduction to the Optimal Steps Model

The basic idea of the Optimal Steps Model is that virtual pedestrians (agents) are attracted by targets and repulsed by
obstacles and other virtual pedestrians. Less physically spoken, agents, when moving, maximize the utility of their
position. This utility depends (negatively) on the geodesic distance to the target and (negatively) on the close proximity
to other agents. Agents move by ‘stepping’ on the position within a circle around their current spot that optimizes this
utility. The circle radius represents each agent’s personal maximum stride length, which in turn is linearly correlated
to the agent’s free-flow speed [5], that is, an assumed desired speed when the path is free. Thus, agents step towards
targets while skirting obstacles and avoiding collisions. In the reminder of the text, we use the physical interpretation,
because it is used in the names of parameters in Vadere’s implementation of the OSM.
The repulsion between two agents is achieved by a distance-dependent potential function. See Figure 2. The potential
function is based on Hall’s theory of interpersonal distances which describes four distance zones around a person
[2, 3]. Accordingly, the potential function is defined piece-wise on rings around each agent: a circular core for collision
avoidance, a first ring that represents the intimate space, and a second ring that represents personal space. Agents
outside the personal zone have no influence on other agents’ path choice. This is mathematically modeled by setting the
the potential function to zero.
The value of the potential function in the personal space ring is very low. Thus, this area will be kept free only if agents
have ample space to avoid each other [2]. As soon as the space becomes more constricted agents will get closer. This
2

300

0.8

4. Area out
of interest

100

3. Personal space

200

Agent potential p

1

2. Intimate space

400

1. Collision area

Agent potential p

A PREPRINT - J ULY 6, 2020

0.6
0.4

1.

3.

4.

0.2
2.
0

0
0

0.5

1

1.5
2
Distance x

2.5

0
0.5
1
1.5
2
2.5
3
Distance x between centroids of agents

3

Figure 2: Default agent potential function. The default parameter values in Vadere for normal crowd behavior are
potential height h = 50 and personal space width w = 1.2. Note: The personal space is around the torso of an agent. If
the distance between two agents is smaller than the sum of the torso radii, the agents collide (1. Collision area). To
prevent this, the potential is set to a high value in the torso area. The personal space (2. Personal space) begins at
x = 0.84m and ends at x = 1.59m. The upper bound x = 1.59m is the sum of the personal space width w = 1.2 and
the torso radii of the agents.

is typical for normal human behavior. In the intimate space ring the potential function value increases significantly.
Again see Figure 2. In crowds, this area is only kept free if the density is low [2]. Finally, to prevent agents from
overlapping, the potential is set to a very high value (when compared to the values in the personal and intimate spaces)
in the collision area. The exact definition of the potential function, and default parameters, implemented in Vadere can
be found in [1].
The shape of the potential function is controlled through several parameters that could be adapted to achieve social
distancing in the Optimal Steps Model. We try to keep the adaption of the OSM as simple as possible by only changing
two parameters: the potential height h (in Vadere: pedPotentialHeight) and the personal space width w (in Vadere:
pedPotentialPersonalSpaceWidth). Why do we choose these two parameters? The parameter potential height h controls
the strength of repulsion. If h is increased, we expect agents to increase their distance to others. The parameter personal
space width w controls how far the repulsion reaches: the larger w the bigger the influence area of an agent.
Note that the personal space width w is related to but not equal to the desired social distance d the user wants to model.
When there is ample space it might suffice to set w = d to keep agents at least the desired social distance apart. The
true distance among agents is an emergent value and will then be bigger! In a bottleneck scenario, like Figure 1 on the
other hand, the true distance will be much smaller than w.
In crowd simulations, we are especially interested in dense crowds which typically occur in front of bottlenecks, such
as doors or narrow passages. As a consequence, if we want to observe a virtual crowd that obeys social distancing, we
need to choose a value for the personal space width w that is bigger than the desired social distance. In this study, we
want to find suitable values for the parameters personal space width and potential height that do just that.

Figure 3: Funnel with balls. The ball size represents the repulsion between agents. If the ball size is small (small
repulsion), the balls just fall through the narrowing. If the ball size is too large, balls get stuck. This is why we must not
increase the repulsion to an infinite value to achieve social distancing.

3

A PREPRINT - J ULY 6, 2020

3

New parameters for social distancing

There is currently no empirical data available to calibrate the Optimal Steps Model parameters for social distancing.
Nonetheless, we need to find a suitable scenario and define plausible criteria which help us to evaluate how well social
distancing is captured by the model.
3.1

Choice of scenario

To pick a scenario, we have a closer look at use case 1, where the social distance is a lower bound for permissible
distances. In particular, all distances larger than the social distances are accepted.
One might be tempted to achieve such a behavior by increasing the repulsion between agents up to ‘infinity’, that is, to
set the potential height h and the personal space width w to extremely high values.
But there is a problem with this approach: If the potential is too high, agents get stuck, as illustrated in Figure 3
with a funnel analogy. The funnel represents a bottleneck which agents need to pass to reach their target. The ball
size represents the repulsion between agents. If the ball size is small (small repulsion), the balls just fall through the
narrowing. If the ball size is too large, balls get stuck. This effect can be easily observed in test simulations. This is
why we cannot increase the repulsion at will.
We use the bottleneck scenario depicted in Figure 1 with this consideration in mind. The bottleneck scenario covers
both aspects, density and repulsion. We can directly observe what happens if the repulsion is too high.
The scenario is set up as follows. The topography of the scenario is 12m wide and 65m long. The width of the corridor
is 1.2m and its length is 5.0m. 100 agents are generated in the source on the right hand side (green box) and try to
reach the target (orange box) on the left hand side. With these settings, the agents are close to each other in front of the
bottleneck. The source is placed sufficiently far away from the corridor to exclude any effects of the spawning process
on the observation area. We start to count contacts at simulation time t = 20s to exclude any contacts produced by the
spawning process. The distance measure between two agents is the Euclidean distance between their center points.
3.2

Choice of criteria for acceptable parameters

We do not have any empirical data to calibrate our parameters for social distancing. Hence, we need to define other
criteria to decide which parameter values fit our two use cases best. For the choice of the criteria, we consider how
the use cases were originally motivated: The goal of social distancing is to decrease the number of contacts which
decreases the probability of infection.
The question is: How to count contacts? We decide to use a time measure tm for counting contacts.
The time measure tm is defined as
tm =

1 XX
ti,j
n i=0 j=0

(1)

In our investigation, the number of agents is n = 100. ti,j is the time agent i has contact to another agent j. The time
ti,j is zero if the distance xi,j between two agents i and j is above the desired social distance:

0,
if xi,j > d.
ti,j =
(2)
ts,e − ts,s , otherwise.
where ts,s is the point of time when the social distance is violated for the first time and ts,e is the point of time when
the contact ends.
For use case 1, the contact time has to be zero. This means that all agents always keep a distance larger than the desired
social distance d. Thus, the acceptable parameter combinations for use case 1 have to fulfill the condition:
tm = 0 Condition for use case 1

(3)

We expect that this condition is always fulfilled when the personal space width and the potential height are set to high
values which lead to high repulsion. Since a high repulsion can lead to clogging, we only want to increase the repulsion
as much as necessary. We expect that there are multiple parameter combinations which fulfill condition 1. Hence, the
solution to our problem is not unique but forms an indifference curve.
For use case 2, the parameter values are acceptable when the mean value xm of the distribution of the true distance x is
equal to the desired social distance d: xm = d. We decide to approach this problem pragmatically.
4

A PREPRINT - J ULY 6, 2020

We accept parameter combinations which fulfill:
xm ≈ d Condition for use case 2

(4)

We make use of the fact that some distances xi,j are below the social distance if tm > 0. Then we try to answer the
question: how much contact time tm is necessary that Equation 4 holds? For this purpose, we increase the average
contact time tm iteratively. For each average contact time tm,i we visually check if Equation 4 holds.
Note: The detour with tm saves us from measuring distances between agents, and from deciding when agents are too
far apart to count for the measure.

4
4.1

Results
Method for finding acceptable parameters values

We consider the social distances d: 1.25, 1.5, 1.75, 2.0, 2.25. For each, we determine the indifference curves which
fulfill the conditions as defined in Equations 3, 4. Second, we try to derive a rule of thumb which provides acceptable
parameter values in dependency of the social distance.
For that purpose, we use a simple grid sampling. Each parameter is discretized with 100 values which are equally
spaced between lower and upper bound. See Table 1. In total we get 10000 parameter combinations. For each of these
parameter combinations we run a simulation. Then we analyze the resulting average contact time tm for each of the five
social distances d: 1.25, 1.5, 1.75, 2.0, 2.25.
We start with use case 1. For each social distance di , we mark all parameter combinations which fulfill tm = 0. Then
we build the convex hull around these points which serves as an approximation for the indifference curve. Visually this
seems a good fit. Then we plot the 5 approximated indifference curves and analyze them visually. Finally, we derive a
rule of thumb which relates social distance and parameter values for use case 1.
For use case 2, we need to find a value for the average contact time for which the average distance is approximately the
desired social distance. For that purpose, we iteratively increase tm . Then we visually analyze whether the condition is
fulfilled for the social distances d: 1.5, 2.0. After finding a suitable value for tm we follow the procedure of use case 1.
Parameter

Default

Lower bound

Upper bound

Number of discrete values

Personal space width w
1.2
1.2
5.0
100
Potential height h
50.0
50.0
1000
100
Table 1: Analyzed parameter values. Each parameter is discretized by 100 values which are equally spaced between
lower and upper bound. In summary this leads to 10000 parameter combinations.

4.2

Use case 1

Figure 4 depicts the resulting surfaces for the social distances d: 1.5, 2.0. We can observe that the maximum average
contact time is located in the lower left corner. This corresponds to the default OSM behavior. The minimum values are
located in the upper right corner. This is what we expected: the repulsion increases when increasing the personal space
width w and the potential height h. The effect of the increased parameter values on the potential function is depicted in
Figure 5.
Desired social distance d

Default average contact time tm,0 ins

1.25
83
1.50
110
1.75
144
2.00
183
2.25
222
Table 2: Default average contact time tm,0 . tm,0 is the average contact time tm for the default parameter values h = 50
and w = 1.2.
Figure 6 depicts the five indifference curve approximations for use case 1. Each indifference curve corresponds to a
certain social distance. The Vadere user might not be interested in all acceptable parameter combinations, but only in
5

A PREPRINT - J ULY 6, 2020

5

4

1
0.8

4

B

0.6
A

3

3

2

0.4

2
200

400

600

800

1,000

0.2
200

400

Potential height h

600

800

1,000

Normalized average
m
contact time ttm,0

Personal space width w

5

0

Potential height h

Figure 4: Normalized average contact time (third dimension, see colorbar) over potential height h and personal space
width w for a social distance d = 1.5 (left) and d = 2.0 (right). The normalized average contact time is the ratio
of average contact time and average contact time tm,0 for Vadere’s default parameters, see Table 2. Each parameter
combination, e.g. (A) or (B), on the indifference curve (solid line) fulfills the condition of use case 1: tm = 0. The
parameter combinations on the second indifference curve (dashed line) fulfill the condition of use case 2: xm ≈ d
which holds for an average contact time tm = 10s.

Agent potential p

100

3. Personal space

200

2. Intimate space

300
1. Collision area

Agent potential p

400
10

0

5

1.

2.

3.

0
0

0.5

1

1.5
2
Distance x

2.5

3

0

0.5

1

1.5
2
Distance x

2.5

3

Figure 5: Agent potential function for a desired social distance d = 1.5 and zero contacts. The parameters potential
height h and personal space width w are set to h = 550 and w = 2.625.
one. We could now pick randomly a parameter combination on each indifference curve and list them in a table. The
problem is that these values are true for the five discrete values of the social distance, but not for values in between.
In order to provide parameter values for the complete social distance interval [1.25, 2.25], we need to find a relation
between parameters and social distance. We anlayze the plot visually and suggest to use
w = 1.75d
h = 500d − 200
d ∈ [1.25, 2.25]

(5)
(6)

as a rule of thumb. The relation w = 1.75d can be directly seen when analyzing the plot. With Eq. 6 the intersection
points of line and indifference curves are almost equally spaced. See Figure 6. Thus we assume that the behavior is
linear in between. Under this assumption the rules of thumb can be used for any social distance between 1.25 and
2.25. One might be tempted to use regression techniques to find more precise equations. We argue that this would not
6

A PREPRINT - J ULY 6, 2020

5
Line, see
Eqs. 5, 6

4

2.2
5
2.00
1.75

3

1.50

2

Personal space width w

Personal space width w

5

Line, see
Eqs. 7, 8

4

2.2
5

2.0
0

3

1.7
5

1.50

2

d = 1.25

200

400

600

800

d = 1.2

5

1,000

200

Potential height h

400

600

800

1,000

Potential height h

Figure 6: Indifference curves for use case 1 (left) and use case 2 (right). In use case 1, contacts are not allowed. Each
indifference curve (left) fulfills the condition tm = 0. The indifference curves (right) correspond to an average contact
time tm = 10s. With tm = 10s, the average distance is approximately the social distance: xm ≈ d. This corresponds
to use case 2.

Figure 7: Crowd behavior for use case 1 at simulation time tS = 40s. Agents never violate the social distance d = 1.5
(left) or d = 2.0 (right). The parameter values were derived using the rules of thumb of Equations 5, 6. The increased
repulsion increases the probability of clogging. With social distance d = 2.0 agents get stuck (right).

improve the accuracy of the equations, because the points themselves are not accurate due to the discretization error of
the grid and the approximation error caused by the convex hull.
Finally, we verify our rule of thumb visually for the social distances d: 1.5, 2.0 , see Figure 7. We can not observe
any contacts. Thus use case 1 is covered by our rule of thumb for at least the social distances d: 1.5, 2.0. We can not
guarantee that the rule of thumb holds for any social distance and any topography. Nevertheless, accu:rate [6] has
already succesfully tested our rule of thumb for some real-life applications.
In these two examples, social distancing was achieved successfully with the new parameter combinations. On the other
hand, we also observe that the increased repulsion produces clogging. See Figure 7 (right). Clogging occurs earlier
when the desired social distance d is increased. The screen shots in Figure 7 were all taken at simulation time ts = 40s.
For a desired social distance d = 1.5, the agents still move at simulation time ts = 40s. Clogging occurs at a later point.
For a social distance d = 2.0, clogging has already occured at ts = 40s. The probability for clogging can be reduced
when using a dynamic floor field instead of a static one. But this does not completely resolve the problem of clogging.
We will discuss this problem in 4.4.
7

A PREPRINT - J ULY 6, 2020

Figure 8: Crowd behavior for use case 2 at simulation time ts = 40s. Agents in contact are marked red whereas agents
not in contact are blue. For an average contact time tm = 10s, distances among agents in contact and out of contact are
similar when visually compared. Thus Equation 4 holds and agents have a distance distribution which is on average the
desired social distance d = 1.5 (left) or d = 2.0 (right). The parameter values were derived using the rules of thumb of
Equations 7, 8.
4.3

Use case 2

For use case 2, we look for an average contact time tm for which Eq. 4 holds. We iteratively increase tm and analyze
the crowd behavior visually. For an average contact time tm = 10s, Eq. 4 seems to hold when checked visually. Figure
6 depicts the five indifference curve approximations for use case 2. We repeat the procedure of use case 1 to find a
second rule of thumb:

w = 1.66d − 0.75,

d ∈ [1.25, 2.25]
h = 750

(7)
(8)

The rules of thumb for the two use cases are summarized in Table 3.
Again, we verify our results for use case 2 visually. See Figure 8. In the video analysis, we again observe the problem
of clogging which can be improved but not eliminated by using a dynamic floor field.
4.4

Clogging

We are of the opinion, that real pedestrians resolve deadlocks by temporarily adapting their behavior. For example, they
might briefly violate social distances to ‘squeeze by’. This must be addressed by suitable behavioral models.
Another strategy would be to model a time-dependent agent potential function, where the repulsion decreases when
agents experience a certain time of clogging. This would entail social distance violations and, in our eyes, model
pedestrians’ impatience with deadlocks. Such a behavior is already implemented in the accu:rate’s simulator crowd:it [6].
After a certain period of time, agents switch to their default behavior, that is, without keeping any distance rules. This
usually resolves the clogging. We plan to implement similar behaviors in the Vadere simulation framework.
For the time being, we recommend to keep this problem in mind when using our parameter values in Vadere. We
strongly recommend to use a dynamic floor field and allow agents to switch places in counterflows. Both measures
decrease the probability for clogging. See Table 4 for the necessary Vadere settings.
Use case

Vadere parameter

Default

Value for social distancing

pedPotentialPersonalSpaceWidth w 1.2
see Equation (5)
pedPotentialHeight h
50.0
see Equation (6)
Use case 2 pedPotentialPersonalSpaceWidth w 1.2
see Equation (7)
pedPotentialHeight h
50.0
see Equation (8)
Table 3: Overview of parameters to achieve social distancing with the Optimal Steps Model.
Use case 1

8

A PREPRINT - J ULY 6, 2020

Reduce probability of clogging

Vadere parameter

in unidirectional flows
in counterflows

Floor field
Psychology

Default

Value for social distancing

timeCostAttributes/type UNIT
NAVIGATION
usePsychologyLayer
false
true
searchRadius
1.0
1.5 desired social distance
Table 4: Overview of additional settings in Vadere to reduce the probability of clogging.

5

Conclusions

We have found parameter values for the Optimal Steps Model to simulate social distancing. We considered two different
use cases for social distancing. In the first use case contacts have to be completely avoided. The distance between
agents must never fall below the required social distance value. In the second use case, the social distance is interpreted
as desired distance. The average distance is approximately the social distance, but single distances might be smaller
which leads to contact. For both use cases we derived rules of thumb to determine the Optimal Steps Models parameters
for any desired social distance d ∈ [1.25m, 2.25m].
In visual analysis the rule of thumb seems to work for use case 2. Despite this, the precision of the equation could
be increased by reformulating the problem as an optimization problem where each deviation from the desired social
distance is punished within a utility function. For this purpose, several questions need to be answered: In which area
around an agent should a distance deviation be punished? How to choose the utility function? The solution to this
problem is part of future research.
The rules of thumbs are based on a bottleneck scenario where high densities occur. We expect that our parameter
suggestions work for scenarios with bottlenecks. We can not guarantee that the they work for any topography.
When testing the new parameter values, we observed that the probability of clogging increases when increasing the
social distance. This is caused by the higher repulsion. The clogging problem can be mitigated but not completely
eliminated by using a dynamic floor field and allowing position switches in counterflow. We list the Vadere parameter
settings to achieve this. However, we believe that the problem is better addressed by implementing suitable agent
behaviors. We plan to do this in the Vadere simulation framework.

Acknowledgments
We thank Dr. Angelika Kneidl and Alex Platt (B. Sc.) from accu:rate who provided insight and expertise that greatly
assisted the research. In particular, we thank for the stimulating discussions and the testing of the parameters in real-life
applications.

References
[1] Kleinmeier, Benedikt and Zönnchen, Benedikt and Gödel, Marion and Köster, Gerta. Vadere: An Open-Source Simulation Framework to Promote Interdisciplinary Understanding. In Collective Dynamics. 4. 10.17815/CD.2019.21.
2019.
[2] Isabella Katharina Maximiliana von Sivers. Modellierung sozialpsychologischer Faktoren in Personenstromsimulationen - Interpersonale Distanz und soziale Identitäten. Dissertation thesis, Technische Universität München. 2016.
https://mediatum.ub.tum.de/doc/1303742/1303742.pdf
[3] Edward Twitchell Hall. The Hidden Dimension Doubleday, New York. 1990. www.worldcat.org/isbn/
0385084765
[4] Isabella von Sivers and Gerta Köster Dynamic Stride Length Adaptation According to Utility And Personal Space
In Transportation Research Part B: Methodological 74 (104-117). 2015. doi: 10.1016/j.trb.2015.01.009
[5] Michael J. Seitz and Gerta Köster Natural discretization of pedestrian movement in continuous space In Phys.
Rev. E 86-4 (046108). 2012. American Physical Society. doi: 10.1103/PhysRevE.86.046108. https://link.aps.
org/doi/10.1103/PhysRevE.86.046108
[6] accu:rate, Inc. Pedestrian Simulation Software crowd:it. https://www.accu-rate.de/wp-content/uploads/
crowdit_Brochure_2019.pdf. 2. July, 2020.

9

