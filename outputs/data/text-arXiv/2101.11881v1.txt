Deep learning via LSTM models for COVID-19 infection forecasting in India
Rohitash Chandraa , Ayush Jainb , Divyanshu Singh Chauhanc
a School

of Mathematics and Statistics, UNSW Sydney, NSW 2006, Australia
of Electronics and Electrical, Indian Institute of Technology Guwahati, Assam, India
c Department of Mechanical, Indian Institute of Technology Guwahati, Assam, India

b Department

arXiv:2101.11881v1 [cs.LG] 28 Jan 2021

Abstract
We have entered an era of a pandemic that has shaken the world with major impact to medical systems, economics and agriculture. Prominent computational and mathematical models have been unreliable due to the complexity of the spread of infections.
Moreover, lack of data collection and reporting makes any such modelling attempts unreliable. Hence we need to re-look at the
situation with the latest data sources and most comprehensive forecasting models. Deep learning models such as recurrent neural
networks are well suited for modelling spatio-temporal sequences. In this paper, prominent recurrent neural networks, in particular
long short term memory (LSTMs) networks, bidirectional LSTM, and encoder-decoder LSTM models for multi-step (short-term)
forecasting the spread of COVID-infections among selected states in India. We select states with COVID-19 hotpots in terms of
the rate of infections and compare with states where infections have been contained or reached their peak and provide two months
ahead forecast that shows that cases will slowly decline. Our results show that long-term forecasts are promising which motivates
the application of the method in other countries or areas. We note that although we made some progress in forecasting, the challenges in modelling remain due to data and difficulty in capturing factors such as population density, logistics, and social aspects
such culture and lifestyle.
Keywords: Recurrent neural networks, LSTM, COVID-19, India, forecasting

1. Introduction
The coronavirus disease 2019 (COVID-19) is an infectious
disease caused by severe acute respiratory syndrome coronavirus 2 (SARS-CoV-2) [1, 2, 3] which became a global pandemic [4]. COVID-19 was first identified in December 2019
in Wuhan, Hubei, China with the first confirmed or index case
was traced back to 17th November 2019 [5]. Currently (1st
December, 2020) 1 , more than 18 million cases have been reported across the world which resulted in more than 1.6 million
deaths [6, 7]. The COVID-19 pandemic forced many countries
to close their borders and enforce a partial or full lock down
which had a devastating impact on the world economy which
will continue in years to follow [8, 9, 10]. Other major impact
has been on agriculture [11, 12] which is a major source of income for population in rural areas, especially in the developing
world. The sudden lock-down in some countries created huge
wave of problems in terms of transportation, especially for low
income migrant communities [13, 14], even within a country
such as state-wise migrant workers such as those in India [15].
The case of India has been unique when it comes to management of COVID-19 pandemic [15]. The first COVID-19
case in India was reported on 30 January 2020. India entered
a lock-down quite earlier and has managed well in terms of
number of deaths and infections per million population. India
currently (1st December, 2020) has 9,462,809 confirmed cases
Email address: rohitash.chandra@unsw.edu.au (Rohitash Chandra)
1 https://www.worldometers.info/coronavirus/

Preprint

with 137,621 (1.45 %) deaths which makes the largest in Asia
the second highest in the world after the United States. The
fatality rate of COVID-19 in India is among the lowest in the
world % and steadily declining. India also has one of the fastest
recovery rates in the world with 429,753 (4.54 %) active cases,
and ranks 8th in the world although 2nd in total cases 2 .
In terms of COVID-19 forecasting, prominent computational
and statistical models have been unreliable due to the complexity of the spread of infections [16, 17, 18], since they did not
take into account active or novel cases without that depend on
population density, logistics and travel, and qualitative social
aspects such culture and lifestyle [19]. While some of these
aspects can be broken down to get quantitative measurement
that can help models for forecasting, other have qualitative nature and lack of data collection and reporting makes any such
modelling attempts unreliable. Hence we need to re-look at the
situation with latest data sources and most comprehensive forecasting models [20, 21, 22]. Moreover, a number of other limitations exists, such as noisy or unreliable data of active cases
[23], mortality rate, and asymptotic carriers [24, 25]. There
have been reports that the models lack a number of limitations
and failed in several situations [26]. Despite these challenges, it
has been shown that country based mitigation factors in terms
of different levels of lock downs and monitoring has a major
impact on the rate of infection [27]. We note that none of the

2 https://www.worldometers.info/coronavirus/country/
india/

January 29, 2021

forecasting models have considered COVID-19 forecasting in
India. There is a need to evaluate latest deep learning models
for forecasting COVID-19 in India.
Deep learning models such as recurrent neural networks
(RNNs) are well suited for modelling spatio-temporal sequences [28, 29, 30, 31, 32]. RNNs are also suitable for modeling dynamical systems when compared to feedforward networks [33, 34, 35]. The limitations in learning by RNNs for
long-term dependencies in sequences that span hundreds or
thousands of time-steps [36] were addressed by long short-term
memory networks (LSTMs) [30]. LSTMs have been used for
COVID-19 forecasting in China [37] with good performance
results when compared to epidemic models. LSTMs have also
been used for COVID-19 forecasting in Canada [38]. Other
deep learning models such as convolutional neural networks
(CNNs) have recently shown promising performance for time
series forecasting [39, 40]. They would also be suited in capturing spatio-temporal relationship of COVID-19 transmission
with neighbouring states in India.
In this paper, we employ three LSTM models for short-term
forecasting the spread of COVID-infections among selected
states in India. We select Indian states with COVID-19 hotpots
in terms of the rate of infections and compare with states where
infections have been contained or reached their peak. We provide both univariate and multivariate time series prediction approaches and compare their performance for short-term (4 days
ahead) forecasting, with a two months ahead forecast using selected LSTM models. We present visualisation and analysis
of the COVID-19 infections and provide open source software
that can be used as more data gets available and also applied to
different countries and regions.
The rest of the paper is organised as follows. Section 2
presents a background and literature review of related work.
Section 3 presents the proposed methodology with data analysis and Section 4 presents experiments and results. Section 5
provides a discussion and Section 6 concludes the paper with
discussion of future work.

the spread of COVID-19. Huang et. al [53] presented an evaluation of identification and isolation policies that effectively suppressed the spread of COVID-19 which further contributed to
reduce casualties during the phase of a dramatic increase in diagnosed cases in Wuhan, China. The authors recommended that
governments should swiftly execute the forceful public health
interventions in the initial stage of the pandemic. However,
such policies have not been that effective for other countries
with similar population, such as India, but still have been better
than spread of COVID-19 in USA and Brazil [20].
2.1. Modelling and forecasting COVID-19
A number of machine learning and statistical models have
been used for modelling and forecasting COVID-19 in different parts of the world. Saba and Elsheikh presented simple
autoregressive neural networks for forecasting the prevalence
of COVID-19 outbreak in Egypt which showed relatively good
performance when compared to officially reported cases [18].
Yousaf et. al used auto-regressive integrated moving average
(ARIMA) model for forecasting COVID-19 for Pakistan [17].
The model predicted that the number of confirmed cases would
increase by factor of 2.7 giving 95 % prediction interval by
the end of May 2020, to 5681 - 33079 cases. However, Pakistan reported around 70,000 cases3 end of May and hence the
model was poor in prediction. VelaÃÅsquez and Lara used Gaussian process regression model for forecasting COVID-19 infection in the United States [16]. The authors show that COVID-19
would peak in United States around July 14th 2020, with a peak
number of 132,074 death with infected individuals of about
1,157,796. However, the actual cases by July 14th reached
more than 3.5 million with more than 139 thousand deaths4
which shows that the model was close in forecasting deaths but
forecast of total cases was poor.
Chimmula and Zhand used LSTM neural networks for time
series forecasting of COVID-19 transmission in Canada [38].
The authors predicted the possible ending point of the outbreak
around June 2020 and compared transmission rates of Canada
with Italy and the United States. Canada reached the daily new
cases peak by 2nd May5 and since then new cases has been
drastically reducing. Therefore we can say that the approach
by the authors was somewhat close in reporting the peak for
COVID-19 in Canada. Chakraborty and Ghosh [21] used hybrid ARIMA and wavelet-based forecasting model for shortterm (ten days ahead) forecasts of daily confirmed cases for
Canada, France, India, South Korea, and the United Kingdom.
The authors also applied an optimal regression tree algorithm to
find essential causal variables that significantly affect the case
fatality rates for different countries. Maleki et. al [22] used autoregressive time series models based on two-piece scale mixture normal distributions time series data of confirmed and recovered COVID-19 cases worldwide.

2. Related Work
COVID-19 lock down, infection and management has also
raised concerns about prejudices against minorities and people of colour in developed countries such as the United States
[41]. Furthermore there has been a significant impact on mental health across the globe [42, 43]. COVID-19 forced lock
downs and restrictions of movement has given rise to e-learning
[44, 45, 46] and telemedicine [47], and created opportunities
in applications for geographical information systems [48]. The
lock-down showed positive impact on the environment [49, 50],
especially for highly populated and industrial nationals with
high air pollution rate [51]; however the way medical pollutants and domestic waste are discarded during lock downs also
of concern [52]. Moreover, Zambrano-Monserrate et. al highlighted the positive indirect effects revolve around the reduction
air pollutants in China, France, Germany, Spain, and Italy [52].
It has been shown that in some countries, comprehensive
identification and isolation policies have effectively suppressed

3 https://www.worldometers.info/coronavirus/country/
pakistan/
4 https://www.worldometers.info/coronavirus/country/us/
5 https://www.worldometers.info/coronavirus/country/
canada/

2

Ren et al [19] analysed spatiotemporal variations of the epidemics before utilizing the ecological niche models with nine
socioeconomic variables for identifying the potential risk zones
for megacities such as Beijing, Guangzhou and Shenzhen. The
results demonstrate that the method was capable of being employed as an early forecasting tool for identifying the potential COVID-19 infection risk zones. Alzahrani et al [54] used
auto-regressive and ARIMA models for COVID-19 in Saudi
Arabia with data till 20th April 2020 and predicted 7668 daily
new cases by 21st May 2020 given stringent precautionary control measures not implemented. However, actual data of 21st
May 2020 shows 2532 cases6 , hence, the model has shown
poor performance. Singh et al [55] presented a hybrid of discrete wavelet decomposition and ARIMA models in application to one month forecast the casualties cases of COVID-19
in most affected countries back then which included France,
Italy, Spain, United Kingdom and and United Sates. The authors found that the hybrid model is better than standalone ones.
Dasilva et. al [20] employed machine learning methods such
as Bayesian regression neural network, cubist regression, knearest neighbors, quantile random forest, and support vector
regression with pre-processing based on variational mode decomposition for forecasting one, three, and six-days-ahead the
cumulative COVID-19 cases in five Brazilian and American
states up to April 28th, 2020. Yang et al [37] epidemiological model that incorporated the domestic migration data and
most recent COVID-19 epidemiological data to predict the epidemic progression. The authors also used LSTM neural network model where they reported peak by late February, showing gradual decline by end of April. This was one of the few
successful attempts in useful prediction of COVID-19 given the
trend in China 7 ; however, the actual peak was in early February
and the spread of infections ended by middle of March.
In terms of COVID-19 forecasting in India with deep learning methods, some of the key investigations are highlighted as
follows. Anand et al. [56] focused on forecasting of COVID19 cases in India using recurrent neural networks such as LSTM
and gated-recurrent units (GRU) with the dataset from 30th January 2020 to 21st July 2020. Bhimala et al. [57] incorporated
the weather conditions of different states to make more accurate
forecasting of the COVID-19 cases in different states of India.
The authors made assumption that different humidity levels in
different states will lead to varying transmission of infection
within the population. They demonstrated that LSTM model
performed better in the medium and long range forecasting
scale when integrated with the weather data. Shetty [58] presented a real time forecasting based model using a feed forward
neural network model for the COVID-19 cases in Karnataka in
India where parameter selection for the model was based on
Cuckoo search algorithm. The mean-absolute percentage error
(MAPE) was reduced from 20.73 % to 7.03 %. The proposed
model was further tested on the Hungary COVID-19 dataset

and produced promising results. Tomar and Gupta [59] developed LSTM model for 30-day ahead prediction of COVID-19
positive cases in India where they also studied the effect of preventive measures on the spread of COVID-19. They showed
that with preventive measures and lower transmission rate, the
spread can be reduced significantly.
Moving to other parts of the world, we see a number of machine learning methods used in conjunction with deep learning for COVID-19 forecasting. Battineni et al. [60] forecasted
COVID-19 cases using a machine learning method known as
prophet logistic growth model which estimated that by late
September 2020, the outbreak can reach 7.56, 4.65, 3.01 and
1.22 million cases in the USA, Brazil, India and Russia, respectively. Nadler et al. [61] used a model embedded in a Bayesian
framework coupled with a LSTM network to forecast cases of
COVID-19 in developed and developing countries.
Silva et al. [62] analyzed and forecasted the cumulative COVID-19 cases in four selected cities of Brazil using
stacked ensemble forecasting model. Gupta et al. [63] forecasted COVID-19 cases of India using support vector machines, prophet, and linear regression models. Similarly, Bodapati et al. [64] forecasted the COVID-19 daily cases, deaths
caused and recovered cases with the help of LSTM networks
for whole world. Chaurasia and Pal [65] used several forecasting models such as simple average, single exponential smoothing, Holt winter method, auto-regressive integrated moving average (ARIMA) models for time series analysis of COVID-19
pandemic. Istaiteh et al. [66] compared the performance of
ARIMA, LSTM, multi-layer perceptron and convolutional neural network (CNN) models for prediction of COVID-19 cases
all over the world. They reported that deep learning models outperformed ARIMA model, and furthermore CNN outperformed
LSTM networks and multi-layer perceptron. Pinter et al. [67]
used hybrid machine learning methods of adaptive networkbased fuzzy inference systems (ANFIS) and mutlilayer perceptron for COVID-19 infections and mortality rate in Hungary.

3. Methodology: Forecasting with deep learning models
We need to reconstruct the original time series for multi-stepahead prediction using deep learning methods. Taken‚Äôs theorem expresses that the reconstruction can reproduce important
features of the original time series [68]. Hence, an embedded
phase space Y(t) = [(x(t), x(t ‚àí T ), ..., x(t ‚àí (D ‚àí 1)T )] can
be generated given an observed time series x(t); where T is
the time delay, D is the embedding dimension (window span)
t = 0, 1, 2, ..., N ‚àíDT ‚àí1, and N is the length of the original time
series. The values for D and T are user defined and typically
experimentally determined in order to efficiently apply Taken‚Äôs
theorem [69]. Taken‚Äôs proved that if the original attractor is of
dimension d, then D = 2d + 1 would be sufficient [68].
3.1. LSTM network models

6 https://www.worldometers.info/coronavirus/country/
saudi-arabia/
7 https://www.worldometers.info/coronavirus/country/
china/

Simple recurrent neural networks (RNN) feature a context
layer to act as memory in order to incorporate current state and
3

inputs for propagating information into future states, and eventually output. Although number of different simple RNN architectures exist, the Elman RNN [28, 70] is one of the earliest
which has been prominent for modelling temporal sequences
and dynamical systems [71, 34, 72].

The LSTM network model calculates a hidden state ht as

it = œÉ xt U i + ht‚àí1 W i

ft = œÉ xt U f + ht‚àí1 W f

ot = œÉ xt U o + ht‚àí1 W o
(1)

CÃÉt = tanh xt U g + ht‚àí1 W g

Ct = œÉ ft ‚àó Ct‚àí1 + it ‚àó CÃÉt

We note that backpropagation through time (BPTT) is an extension of the backpropagation algorithm has been a prominent
method for training simple RNNs [29]. BPTT features gradient
descent where the error is backpropagated for a deeper network
architecture that features states defined by time as opposed to
multilayer perceptron that feature one or few hidden layers only.
Initially, training RNNs with BPTT was very challenging due
to problem of learning long-term dependencies given vanishing
and exploding gradients [73]. LSTM networks were developed
[30] to address vanishing gradient problem of simple RNNs.
LSTMs provided better capabilities in remembering the longterm dependencies using memory cells and gates.

ht = tanh(Ct ) ‚àó ot
where, it , ft and ot refer to the input, forget and output gates,
at time t, respectively. xt and ht refer to the number of input
features and number of hidden units, respectively. W and U
is the weight matrices adjusted during learning along with b
which is the bias. The initial values are c0 = 0 and h0 = 0.
Note that all the gates have the same dimensions dh , the size of
your hidden state. CÃÉt is a ‚Äúcandidate‚Äù hidden state, and Ct is the
internal memory of the unit as shown in Figure 1. Note that we
denote (*) as element-wise multiplication.
3.2. Bi-directional LSTM networks

LSTMs employ using memory cells and gates for much better capabilities in remembering the long-term dependencies in
temporal sequences as shown in Figure 1

Conventional RNNs (including LSTMs) only make use of
previous context state for determining future states. Bidirectional RNNs (BD-RNNs) [74] on the other hand, process information in both directions with two separate hidden layers which
are then propagated forward to the same output layer. Hence,
two independent RNNs are placed together to allow both backward and forward information about the sequence at every time
step. The forward hidden sequence h f , the backward hidden sequence hb , and the output sequence y are computed in BD-RNN
by iterating the backward layer from t = T to t = 1, the forward
layer from t = 1 to t = T .
Bi-directional LSTM networks (BD-LSTM) [75] can access longer-range context or state in both directions similar to
BD-RNNs. BD-LSTM networks were originally proposed for
world-embedding in natural language processing[75] and have
been used in several real-world sequence processing problems
such as phoneme classification [75], continuous speech recognition [76] and speech synthesis [77].
BD-LSTM networks intake inputs in two ways; one from
past to future, and another from future to past by running information backwards so that state information from the future
is preserved. Given two hidden states combined in any point in
time, the network can preserve information from both past and
future as shown in Figure 2.
3.3. Encoder-Decoder LSTM networks
The encoder-decoder LSTM network (ED-LSTM) [78] was
introduced as a sequence to sequence model for mapping a
fixed-length input to a fixed-length output. The length of the
input and output may differ which makes them applicable in
automatic language translation tasks (English to French for example) which can be extended to multi-step series prediction
where both the input and outputs are of variable lengths. A latent vector representation is used to handle variable-length input
and outputs by first encoding the input sequences, one at a time

Figure 1: Long Short-Term Memory (LSTM) neural networks

4

population of 238 million seems to have managed better (no.
6 in August and no. 5 in September). Delhi has relatively a
smaller population (estimated 19 million [79]), but high population density and has been one of the leading states with COVID19 (in top 6 throughout the year).
Figure 4 presents the total number of new weekly cases for
different groups of Indian states and union territories. We notice
that the number of cases significantly increased after May 2020
and certain number of states had most number of new weekly
cases as shown in Figure 4. Moreover, Figure 4 (Panel a) show
that Delhi reached a major peak in weekly new cases in 3rd
week of June and Tamil Nadu began slowing down in increase
of new weekly cases around then, however Maharashtra continued increasing in terms of new cases. Maharashtra began slowing down towards end of July. In Panel (b), we find that new
cases in West Bengal drastically increasing from 30th June an
somewhat reaching a plateau post 25th August. Similar to West
Bengal, the new cases in Bihar increased drastically from 30th
June and slowly reached peak by 22nd September and declined
afterwards.
Figure 5 presents daily active cases and cumulative (total)
deaths for key Indian states which remains in top 10 states with
most number of cases, as shown in Table 1 and Table 2. We
notice that the active cases began declining in most states post
1st October, except for Delhi and Karnataka. Delhi has 3 major peaks of active cases and the third peak began declining
post mid-November while Karnataka reached a plateau and began declining mid-October in terms of active cases. In terms
of deaths, we do not see a sharp increase post October in most
of states, except for Delhi which can be explained by multiple
peaks and high number of active cases post October when compared to rest of the states. Note that we chose not to show daily
deaths in the same graphs since the scales between active cases
and deaths are quite different.
Figure 6 shows a comparison of India with other countries
(USA, France, Brazil, Russian, and Spain) which are considered to have major active cases for COVID-19. We notice that
India has a steady decline in active cases from October without
a major rise in cumulative deaths whereas Spain, Russia, US,
and France have steady increase in active cases. Brazil seems
to have reached a plateau in active cases from July to September
with major spike in active cases from mid-October with gradual
increase in cumulative deaths.

Figure 2: Bi-directional LSTM

and then decoding from that representation. We consider the
input sequence (x1 , ..., xn ) with corresponding output sequence
(y1 , ..., ym ), and estimate the conditional probability of the output sequence given an input sequence, i.e. p(y1 , ..., ym |x1 , ..., xn ).
In the encoding phase, given an input sequence, the ED-LSTM
network computes a sequence of hidden states In decoding
phase, it defines a distribution over the output sequence given
the input sequence as shown in Figure 3.

Figure 3: Encoder-Decoder LSTM

5. Results
In this section, we present results of prediction of COVID19 daily cases in India using prominent LSTM neural network
models that includes, BD-LSTM and ED-LSTM with architectural details given in methodology (Section 3).

4. India: Situation Report: 1st December, 2020
We provide a visual representation of the total number of
COVID-19 infections for different states and union territories
in India.
Tables 1 and 2 provide a rank of top ten Indian states with
total cases 1st of every month. We see that largely populated
states such as Maharashtra (estimate population of 123 million
[79]) has been leading India in number of total cases throughout the year. We note that state of Uttar Pradesh has estimate

5.1. Experimental Design
Our experiments consider the prediction task independently
by taking both univariate and multivariate approach. We provide a general overview of our investigations by taking the following steps.
5

(a) Major affected states

(b) Eastern states

(c) Northern states

(d) Small states

Figure 4: Weekly average of new cases for groups of Indian states and union territories.

Rank

April

May

June

July

August

1
2
3
4
5
6
7
8
9
10

Maharashtra (302)
Kerala (241)
Tamil Nadu (234)
Delhi (152)
Uttar Pradesh (103)
Karnataka (101)
Telengana (96)
Rajasthan (93)
Andhra Pradesh (83)
Gujarat (82)

Maharashtra (10498)
Gujarat (4395)
Delhi (3515)
Madhya Pradesh (2719)
Rajasthan (2584)
Tamil Nadu (2323)
Uttar Pradesh (2281)
Andhra Pradesh (1463)
Telengana (1039)
West Bengal (795)

Maharashtra (67655)
Tamil Nadu (22333)
Delhi (19844)
Gujarat (16779)
Rajasthan (8831)
Madhya Pradesh (8089)
Uttar Pradesh (7823)
West Bengal (5501)
Bihar (3815)
Andhra Pradesh (3679)

Maharashtra (174761)
Tamil Nadu (90167)
Delhi (87360)
Gujarat (32557)
Uttar Pradesh (23492)
West Bengal (18559)
Rajasthan (18014)
Telengana (16339)
Karnataka (15242)
Andhra Pradesh (14595)

Maharashtra (422118)
Tamil Nadu (245859)
Andhra Pradesh (140933)
Delhi (135598)
Karnataka (124115)
Uttar Pradesh (85461)
West Bengal (70188)
Telengana (62703)
Gujarat (61438)
Bihar (51233)

Table 1: Rank of states by number of total cases in brackets (April to August 2020)

6

Rank

September

October

November

December

1
2
3
4
5
6
7
8
9
10

Maharashtra (792541)
Andhra Pradesh (434771)
Tamil Nadu (428041)
Karnataka (342423)
Uttar Pradesh (230414)
Delhi (174748)
West Bengal (162778)
Bihar (136457)
Telengana (127697)
Assam (109040)

Maharashtra (1384446)
Andhra Pradesh (693484)
Karnataka (601767)
Tamil Nadu (597602)
Uttar Pradesh (399082)
Delhi (279715)
West Bengal (257049)
Odisha (219119)
Kerala (196106)
Telengana (193600)

Maharashtra (1678406)
Karnataka (823412)
Andhra Pradesh (823348)
Tamil Nadu (724522)
Uttar Pradesh (481863)
Kerala (43310)
Delhi (386706)
West Bengal (373664)
Odisha (290116)
Telengana (240048)

Maharashtra (1823896)
Karnataka (884897)
Andhra Pradesh (868064)
Tamil Nadu (781915)
Kerala (602982)
Delhi (570374)
Uttar Pradesh (543888)
West Bengal (483484)
Odisha (318725)
Telengana (270318)

Table 2: Rank of states by number of total cases in brackets (September to December 2020)

Figure 5: Daily active cases and cumulative death in key states of India.

7

Figure 6: Daily active cases and cumulative death in hot-spot countries.

‚Ä¢ Evaluate what is best way to split training and testing
datasets using two methods as follows. We use static split
of training samples from beginning of COVID-19 until
30th September 2020, and then use the remaining for test
dataset. In random split, we use data where the train and
test set are created by randomly shuffling the dataset.

has been averaged with a rolling mean of 3 days. To remove
outliers, we started our analysis from 15th April. The entire
dataset is based on new cases per day which is normalised taking the maximum number of daily cases into account.
Adam optimizer was used for training the respective LSTM
models with mean squared error (MSE) loss function. Table
3 and Table 4 describe the topology for the respective LSTM
models for univariate and multivariate cases, respectively. In
case of univariate model, the input contains one feature window size of six time steps backwars that is used to predict four
steps ahead. In case of multivariate model, the input contain
four features which represents the adjacent states in relation to
the state taken into account; i.e. in the case of Maharashtra (Maharashtra, Gujarat, Madhya Pradesh, Uttar Pradesh) and in the
case of Delhi (Delhi, Rajasthan, Uttar Pradesh, Haryana). In
multivariate model of India, all the states are taken as features.
We note that similar to univariate model, the multivariate model
considers data from steps backwards (window) for four stepahead prediction. We note that we use two hidden layers in the
LSTM univariate models (hidden layer 1 and 2) and one hidden
layer for LSTM multivariate models based on trial experiment
runs. In multivariate case, we do not have additional hidden
layers. In case of random shuffling, the training dataset had 165
instances, wheres test dataset had 55 instances. In case of static
split, the training dataset had 158 samples whereas test dataset
had 53 instances. The processes datasets and open source code
for the respective models have been provided online 8 .

‚Ä¢ Evaluate if univariate or multivariate approach of prediction provides better results.
‚Ä¢ Show results for entire case of India, and then two leading states for COVID-19 infections, i.e. Maharashtra and
Delhi.
‚Ä¢ Evaluate the accuracy of the three models, (LSTM, BDLSTM, ED-LSTM)
‚Ä¢ Using best LSTM models, provide a two month outlook
for new daily cases by feeding back predictions into the
trained models.
The data used in the entire analysis is taken from Indian Institute of Statistical Science, Bangalore [80]. They have compiled
the data from Ministry of Health and Family Welfare Government of India website [81].
The univariate and multivariate time series were preprocessed into a state-space vector using Taken‚Äôs theorem [68]
with embedding dimension window (D = 5) and time-lag
(T = 2) for multi-step ahead prediction. Note that each problem
(given by dataset) featured MS A = 4 and MS A = 10. The data

8 https://github.com/sydney-machine-learning/

8

Method

Input

Hidden layer 1

Hidden layer 2

Output

LSTM
BD-LSTM
ED-LSTM

(6,1)
(6,1)
(6,1)

32
32
32

32
16
-

(1,4)
(1,4)
(1,4)

Table 5 and Table 6 provide a summary from Figures7, 8, 9
and 10 of test performance by the respective models for random
and static split. We notice that LSTM model has generally performed much better than ED-LSTM and BD-LSTM for most of
the cases. There are some outliers, where ED-LSTM showed
better results for univariate case of India in Table 5. In multivariate cases, we find that BD-LSTM does best for case of
Maharashtra and Delhi in Table 6 whereas, LSTM has given
the best results in most of the cases. One of the issues of EDLSTM and BD-LSTM is over-training. Moreover, when we
compare random split to shuffle split, for univariate and multivariate models, we see that in case of India and Maharashtra,
static split gives better performance than random split. In case
of Delhi, we see that random split gives better results than static
split. We note that as shown in previous analysis (Figures 5 and
6), the trend of India and Maharashtra is similar with a major
peak of cases while Delhi has a different trend where there are
three peaks. This is the major reason why India and Maharashtra has static split with better performance. It is difficult to rule
out which type of model (univariate vs multivariate) is better
for the different datasets. Looking at static and random split,
in some cases the multivariate model improves while in some
cases, it deteriorates the performance.
Next, we select two univariate LSTM models for the three
datasets to provide a two months outlook for COVID-19 in India using random split. We note that the predictions are for December 2020, and January 2021 using LSTM models trained on
75% data from 15 April up to 1st December, which was splitted
randomly. Figure 11 presents results for univariate LSTM and
BD-LSTM models predicting next 60 days where the 4 stepsahead predictions are used as feedback to the respective LSTM
models. The uncertainty of prediction is shown for 30 experiment runs with different weight initialisation in the LSTM models which is shown as the shaded green region representing the
95th and 5th percentile and mean prediction is shown as solid
line. We notice that in all cases, there is a trend of general decline in cases and we also find that the LSTM models well capture the spike and fall in cases every few days. We notice that
there is less uncertainty (highlighted in green) in case of Delhi
when compared to Maharashtra and rest of India. We note that
in case of Delhi, there were three major peaks as shown in Figure 5. The trend of Maharashtra in Figure 5 is similar to trend
of India in Figure 6 in terms of daily new cases. Therefore, we
see similar trend for them when when looking at the uncertainty
in Figure 11.

Table 3: Respective LSTM model topologies for univariate case.
Method

Input

Hidden-layer

Output

LSTM
BD-LSTM
ED-LSTM

(6,4)
(6,4)
(6,4)

32
32
32

(1,4)
(1,4)
(1,4)

Table 4: Respective LSTM model topologies for Multivariate case.

We review the performance of the respective methods in
terms of scalability and robustness which refers to the ability
to maintain consistent prediction performance as the prediction
horizon increases. The RMSE in Equation 2 is used as the main
performance measure for prediction accuracy
v
u
t
N
1 X
(yi ‚àí yÃÇi )2
(2)
RMS E =
N i=1
where yi , yÃÇi are the observed data, predicted data, respectively.
N is the length of the observed data. We use RMSE for each
prediction horizon and for each problem, we report the mean
error for the respective prediction horizons (time-steps ahead).
In all experiments, we present the mean and 95 % confidence
interval for 30 experiment runs where the respective LSTM
models are initialised with different set of initial weights, but
from uniform distribution in same range [-0.5, 0.5]. We are using dropout rate of 0.2 for all LSTM models in the respective
experiments.
5.2. Prediction performance
Figure 7 shows univariate LSTM, BD-LSTM and ED-LSTM
models with a static split of train/test dataset. Figure 8 shows
univariate random splitting of train/test datasets using the same
models. We observe that the prediction for India cases has a
unique trend where the model was improving with increase in
the prediction horizon (steps) when compared to Maharashtra
and Delhi cases (Panels d and f). The corresponding cases in
random-split case shows a different trend and better accuracy
with lower RMSE (Panels b and f) for India and Delhi cases,
with exception of Maharashtra (Panel d) of Figure 8.
Figure 9 shows results for the multivariate approach, where
the same methods used in univarite case was used (LSTM, EDLSTM, BD-LSTM). We find that ED-LSTM model gives best
performance for India and Maharastra cases in test dataset, but
deteriorates in the Delhi case. Figure 10 shows results for the
case of random shuffling of train/test dataset using the respective methods.

6. Discussion
Our research incorporated some of the latest and most prominent forecasting tools via deep learning, and highlighted the
challenges given limited data and the spread of infections. Generally, our results show that LSTM model gives the best performance for most cases when compared to ED-LSTM and BDLSTM. Moroever, we found that India and Maharastra datasets
have similar trend in new cases and model performance give
statics split of train/test data gives better results. However, it

LSTM-COVID-19-India

9

Model
LSTM
BD-LSTM
ED-LSTM

India
Random Split
Static Split
RMSE Std. Dev. RMSE Std. Dev.
22723
811 10636
268
22610
873 10665
395
7732
272
12125
1663

Delhi
Random Split
Static Split
RMSE Std. Dev. RMSE Std. Dev.
1403
67
3441
506
1455
65
3516
875
1690
79
3488
234

Maharashtra
Random Split
Static Split
RMSE Std. Dev. RMSE Std. Dev.
5017
243
2698
210
5205
296
2845
287
5361
276
2503
266

Table 5: Univariate Model Results on Test dataset.

Model
LSTM
BD-LSTM
ED-LSTM

India
Random Split
Static Split
RMSE Std. Dev. RMSE Std. Dev.
15144
1404
13102
2279
16490
769
24398
6172
21918
3233
15245
4657

Delhi
Random Split
Static Split
RMSE Std. Dev. RMSE Std. Dev.
1322
28
4395
292
1186
36
5065
236
1406
225
5238
530

Maharashtra
Random Split
Static Split
RMSE Std. Dev. RMSE Std. Dev.
4572
274
4954
516
4930
260
4444
786
6456
529
5731
583

Table 6: Multivariate Model Results on Test dataset.

(a) India (train and test)

(b) India (test horizon)

(a) India (train and test)

(b) India (test horizon)

(c) Maharashtra (train and test)

(d) Maharashtra (test horizon)

(c) Maharashtra (train and test)

(d) Maharashtra (test horizon)

(e) Delhi (train and test)

(f) Delhi (test horizon)

(e) Delhi (train and test)

(f) Delhi (test horizon)

Figure 7: Univariate LSTM, BD-LSTM and ED-LSTM models with a static
split of train/test dataset. The mean and 95 % confidence interval for 30 experiment runs are shown as error bars are shown with bar plots for train and test
dataset and test horizon showing respective step-ahead predictions.

Figure 8: Univariate LSTM, BD-LSTM and ED-LSTM models with a random
split of train/test dataset. The mean and 95 % confidence interval for 30 experiment runs are shown as error bars are shown with bar plots for train and test
dataset and test horizon showing respective step-ahead predictions.

10

(a) India (train and test)

(b) India (test horizon)

(c) Maharashtra (train and test)

(d) Maharashtra (test horizon)

(e) Delhi (train and test)

(f) Delhi (test horizon)

(a) India (train and test)

(b) India (test horizon)

(c) Maharashtra (train and test)

(d) Maharashtra (test horizon)

(e) Delhi (train and test)

(f) Delhi (test horizon)

Figure 10: Multivariate model using LSTM, BD-LSTM and ED-LSTM with
a random shuffle split of train/test datasets. The mean and 95 % confidence
interval for 30 experiment runs are shown as error bars are shown with bar
plots for train and test dataset and test horizon showing respective step-ahead
predictions.

Figure 9: Multivariate model using LSTM, BD-LSTM and ED-LSTM with a
static split of train/test datasets. The mean and 95 % confidence interval for 30
experiment runs are shown as error bars are shown with bar plots for train and
test dataset and test horizon showing respective step-ahead predictions.

11

(a) India LSTM

(b) India BD-LSTM

(c) Maharashtra LSTM

(d) Maharashtra BD-LSTM

(e) Delhi LSTM

(f) Delhi BD-LSTM

Figure 11: Univariate LSTM and BD-LSTM models predicting next 60 days where the uncertainty of prediction is shaded in green and mean prediction is shown in
solid blue line

12

is not clear to establish the winner when it comes to univariate vs multivariate performance since it depends on the dataset
and models. Hence, it is difficult to determine the effect of the
adjacent states in the multivariate model.
In order to improve forecasting results, our models should
have more data for training. In general, the random splitting of
data set improves model predictions, thus the maximum number of peaks our model can learn from, the better it should predict. The univariate models will work well under above conditions. We presented analysis of COVID-19 infections in India
and provided a general comparison with some of the other hotspot countries (such as US and Russia as shown in Figure 6) and
found a tend of decline of new cases for the case of India. Surprisingly, the Indian peak in new cases was reached around the
time when the government began lifting nationwide lockdown
and focused more on state-level and hot-spot based lock downs
[82, 83]; however, there has been strict regulations in terms of
maintaining social distance and use of face-masks [84].
There are number of challenges in COVID-19 forecasting
due to the nature of the infections, reporting of cases, and effect
of lock downs. Nevertheless, despite the challenges and given
limited dataset, we have been successful in developing LSTM
models for forecasting trend of daily new cases. Our long-term
forecasts for two months (December 2020, and January 2021)
shows that there will be steady decline in new cases in India
and the respective states. We find that Delhi‚Äôs two monthly
forecasts provided (Figure 11) less uncertainty when compared
to Maharashtra and India cases. We also noticed that there is
similar level of uncertainty by LSTM and BD-LSTM models.
Our model uncertainty increases due to the limitations in the
dataset and models. Our framework has been limited in capturing social-cultural aspects, population density, and level of
lock-downs due to missing information and data. Moreover,
inter-state travels and the chaotic nature of spread of COVID19 infections makes it increasingly harder to provide reliable
long-term forecasts.
We take into account the population density as five Indian
cities make the top 50 mostly densely populated cities in the
world [85], where Mumbai ranks 5th and Delhi the 40th. India so far (1st December, 2020) has conducted 140 million tests
with around 100 thousand tests per million population [7]. The
impact of COVID-19 on Indian gross domestic product (GDP)
is significant, but not as bad when compared to developed western nations [86, 87]. One of the most crucial aspect of management of spread of COVID-19 infections is the role the government played in timely closing their international borders and
enforcing lock-downs to various degrees. We need to note that
different countries have different geographical and population
dynamics, such as population density and social aspects. It is
not a good idea to compare cities that are highly densely populated with lowly density populated cities although the overall population may be similar. Overall, it is also important to
look at cultural factors such as rituals [88], and role of nuclear
and extended families [89]. In countries such as India, there
is large portion of inter-state migrant workers [90] and also a
large portion of the population is in rural areas [91] that also
have extended families. These factors made further challenges

in containing the spread of COVID-19 infections and are hard
to be captured by computational and mathematical models.
In future work, it is important to incorporate robust uncertainty quantification in collection and sampling data model
training and model parameters; hence, Bayesian inference
framework for deep learning for COVID-19 forecasts would be
needed [92, 93, 94, 95]. We could also develop similar models
for death rate and other trends related to COVID-19. Moreover, deep learning and LSTM models could be used to model
the rise and fall of cases and the effect it has on economy of a
country.
7. Conclusions
We presented the use of LSTM models for COVID-19 forecasting for India. Our results show the challenges of forecasting
given limited data which is highly biased given that we have
a single major peak when considering entire India cases. We
experimented with different ways of creating training and test
data and models which all showed strengths and limitations that
made it difficult to choose a single model. Our two months
ahead forecast shows general decline in new cases; however,
this has a number of limitations and assumptions and does not
feature robust uncertainty quantification.
In future work, it is important to further enhance the respective models and also provide robust uncertainty quantification,
both in data and model parameters and hence Bayesian inference would be very useful. Moreover, it is important to incorporate more features in the model for reducing uncertainty in
model predictions.
Software and Data
Data and open source code in Python is available for further
analysis 9 .
References
[1] A. E. Gorbalenya, S. C. Baker, R. S. Baric, R. J. de Groot, C. Drosten,
A. A. Gulyaeva, B. L. Haagmans, C. Lauber, A. M. Leontovich, B. W.
Neuman, D. Penzar, L. L. M. P. Stanley Perlman10, D. V. Samborskiy,
I. A. Sidorov, I. Sola, and J. Ziebuhr, ‚ÄúThe species severe acute respiratory
syndrome-related coronavirus: classifying 2019-ncov and naming it sarscov-2,‚Äù Nature Microbiology, vol. 5, no. 4, p. 536, 2020.
[2] V. Monteil, H. Kwon, P. Prado, A. HagelkruÃàys, R. A. Wimmer, M. Stahl,
A. Leopoldi, E. Garreta, C. H. Del Pozo, F. Prosper et al., ‚ÄúInhibition
of sars-cov-2 infections in engineered human tissues using clinical-grade
soluble human ace2,‚Äù Cell, 2020.
[3] W. H. Organization et al., ‚ÄúCoronavirus disease 2019 (COVID-19): situation report, 72,‚Äù 2020.
[4] D. Cucinotta and M. Vanelli, ‚ÄúWHO declares COVID-19 a pandemic.‚Äù
Acta bio-medica: Atenei Parmensis, vol. 91, no. 1, pp. 157‚Äì160, 2020.
[5] K. G. Andersen, A. Rambaut, W. I. Lipkin, E. C. Holmes, and R. F. Garry,
‚ÄúThe proximal origin of sars-cov-2,‚Äù Nature medicine, vol. 26, no. 4, pp.
450‚Äì452, 2020.

9 https://github.com/sydney-machine-learning/
LSTM-COVID-19-India

13

[6] E. Dong, H. Du, and L. Gardner, ‚ÄúAn interactive web-based dashboard
to track COVID-19 in real time,‚Äù The Lancet infectious diseases, vol. 20,
no. 5, pp. 533‚Äì534, 2020.
[7] ‚ÄúCOVID-19
Dashboard,
Center
for
Systems
Science
and
Engineering
(CSSE),
Johns
Hopkins
University,
url=https://coronavirus.jhu.edu/map.html.‚Äù
[8] A. Atkeson, ‚ÄúWhat will be the economic impact of COVID-19 in the
us? rough estimates of disease scenarios,‚Äù National Bureau of Economic
Research, Tech. Rep., 2020.
[9] N. Fernandes, ‚ÄúEconomic effects of coronavirus outbreak (COVID-19) on
the world economy,‚Äù Available at SSRN 3557504, 2020.
[10] M. Maliszewska, A. Mattoo, and D. Van Der Mensbrugghe, ‚ÄúThe potential impact of COVID-19 on gdp and trade: A preliminary assessment,‚Äù
2020.
[11] C. E. Hart, D. J. Hayes, K. L. Jacobs, L. L. Schulz, and J. M. Crespi,
‚ÄúThe impact of COVID-19 on iowa‚Äôs corn, soybean, ethanol, pork, and
beef sectors,‚Äù Center for Agricultural and Rural Development, Iowa State
University. CARD Policy Brief, 2020.
[12] R. Siche, ‚ÄúWhat is the impact of COVID-19 disease on agriculture?‚Äù Scientia Agropecuaria, vol. 11, no. 1, pp. 3‚Äì6, 2020.
[13] A. Liem, C. Wang, Y. Wariyanti, C. A. Latkin, and B. J. Hall, ‚ÄúThe
neglected health of international migrant workers in the COVID-19 epidemic,‚Äù The Lancet Psychiatry, vol. 7, no. 4, p. e20, 2020.
[14] H. H. P. Kluge, Z. Jakab, J. Bartovic, V. D‚ÄôAnna, and S. Severoni,
‚ÄúRefugee and migrant health in the COVID-19 response,‚Äù The Lancet,
vol. 395, no. 10232, pp. 1237‚Äì1239, 2020.
[15] T. Lancet, ‚ÄúIndia under COVID-19 lockdown,‚Äù Lancet (London, England), vol. 395, no. 10233, p. 1315, 2020.
[16] R. M. Arias VelaÃÅsquez and J. V. Mejƒ±ÃÅa Lara, ‚ÄúForecast and evaluation
of COVID-19 spreading in USA with reduced-space gaussian process regression,‚Äù Chaos, Solitons & Fractals, vol. 136, p. 109924, 2020.
[17] M. Yousaf, S. Zahir, M. Riaz, S. M. Hussain, and K. Shah, ‚ÄúStatistical analysis of forecasting COVID-19 for upcoming month in pakistan,‚Äù
Chaos, Solitons & Fractals, vol. 138, p. 109926, 2020.
[18] A. I. Saba and A. H. Elsheikh, ‚ÄúForecasting the prevalence of COVID19 outbreak in egypt using nonlinear autoregressive artificial neural networks,‚Äù Process Safety and Environmental Protection, vol. 141, pp. 1 ‚Äì 8,
2020.
[19] H. Ren, L. Zhao, A. Zhang, L. Song, Y. Liao, W. Lu, and C. Cui, ‚ÄúEarly
forecasting of the potential risk zones of COVID-19 in china‚Äôs megacities,‚Äù Science of The Total Environment, vol. 729, p. 138995, 2020.
[20] R. G. [da Silva], M. H. D. M. Ribeiro, V. C. Mariani, and L. dos Santos Coelho, ‚ÄúForecasting brazilian and american covid-19 cases based on
artificial intelligence coupled with climatic exogenous variables,‚Äù Chaos,
Solitons & Fractals, vol. 139, p. 110027, 2020.
[21] T. Chakraborty and I. Ghosh, ‚ÄúReal-time forecasts and risk assessment
of novel coronavirus COVID-19 cases: A data-driven analysis,‚Äù Chaos,
Solitons & Fractals, vol. 135, p. 109850, 2020.
[22] M. Maleki, M. R. Mahmoudi, D. Wraith, and K.-H. Pho, ‚ÄúTime series
modelling to forecast the confirmed and recovered cases of COVID-19,‚Äù
Travel Medicine and Infectious Disease, p. 101742, 2020.
[23] A. S. Fauci, H. C. Lane, and R. R. Redfield, ‚ÄúCOVID-19 - navigating the
uncharted,‚Äù 2020.
[24] F. Ye, S. Xu, Z. Rong, R. Xu, X. Liu, P. Deng, H. Liu, and X. Xu, ‚ÄúDelivery of infection from asymptomatic carriers of COVID-19 in a familial
cluster,‚Äù International Journal of Infectious Diseases, 2020.
[25] Y. Bai, L. Yao, T. Wei, F. Tian, D.-Y. Jin, L. Chen, and M. Wang, ‚ÄúPresumed asymptomatic carrier transmission of COVID-19,‚Äù Jama, vol. 323,
no. 14, pp. 1406‚Äì1407, 2020.
[26] V. Chin, N. I. Samia, R. Marchant, O. Rosen, J. Ioannidis, M. A. Tanner,
and S. Cripps, ‚ÄúA case study in model failure? COVID-19 daily deaths
and icu bed utilisation predictions in new york state,‚Äù arXiv preprint
arXiv:2006.15997, 2020.
[27] R. M. Anderson, H. Heesterbeek, D. Klinkenberg, and T. D.
Hollingsworth, ‚ÄúHow will country-based mitigation measures influence
the course of the COVID-19 epidemic?‚Äù The Lancet, vol. 395, no. 10228,
pp. 931‚Äì934, 2020.
[28] J. L. Elman and D. Zipser, ‚ÄúLearning the hidden structure of speech,‚Äù The
Journal of the Acoustical Society of America, vol. 83, no. 4, pp. 1615‚Äì
1626, 1988. [Online]. Available: http://link.aip.org/link/?JAS/83/1615/1
[29] P. J. Werbos, ‚ÄúBackpropagation through time: what it does and how to do

it,‚Äù Proceedings of the IEEE, vol. 78, no. 10, pp. 1550‚Äì1560, 1990.
[30] S. Hochreiter and J. Schmidhuber, ‚ÄúLong short-term memory,‚Äù Neural
computation, vol. 9, no. 8, pp. 1735‚Äì1780, 1997.
[31] J. Schmidhuber, ‚ÄúDeep learning in neural networks: An overview,‚Äù Neural networks, vol. 61, pp. 85‚Äì117, 2015.
[32] J. T. Connor, R. D. Martin, and L. E. Atlas, ‚ÄúRecurrent neural networks
and robust time series prediction,‚Äù IEEE transactions on neural networks,
vol. 5, no. 2, pp. 240‚Äì254, 1994.
[33] C. W. Omlin, K. K. Thornber, and C. L. Giles, ‚ÄúFuzzy finite state automata can be deterministically encoded into recurrent neural networks,‚Äù
IEEE Trans. Fuzzy Syst., vol. 6, pp. 76‚Äì89, 1998.
[34] C. W. Omlin and C. L. Giles, ‚ÄúTraining second-order recurrent neural networks using hints,‚Äù in Proceedings of the Ninth International Conference
on Machine Learning. Morgan Kaufmann, 1992, pp. 363‚Äì368.
[35] C. L. Giles, C. Omlin, and K. K. Thornber, ‚ÄúEquivalence in knowledge representation: Automata, recurrent neural networks, and dynamical
fuzzy systems,‚Äù Proceedings of the IEEE, vol. 87, no. 9, pp. 1623‚Äì1640,
1999.
[36] Y. Bengio, P. Simard, and P. Frasconi, ‚ÄúLearning long-term dependencies
with gradient descent is difficult,‚Äù Neural Networks, IEEE Transactions
on, vol. 5, no. 2, pp. 157‚Äì166, 1994.
[37] Z. Yang, Z. Zeng, K. Wang, S.-S. Wong, W. Liang, M. Zanin, P. Liu,
X. Cao, Z. Gao, Z. Mai et al., ‚ÄúModified seir and ai prediction of the
epidemics trend of COVID-19 in china under public health interventions,‚Äù
Journal of Thoracic Disease, vol. 12, no. 3, p. 165, 2020.
[38] V. K. R. Chimmula and L. Zhang, ‚ÄúTime series forecasting of COVID-19
transmission in canada using lstm networks,‚Äù Chaos, Solitons & Fractals,
vol. 135, p. 109864, 2020.
[39] S. Xingjian, Z. Chen, H. Wang, D.-Y. Yeung, W.-K. Wong, and W.-c.
Woo, ‚ÄúConvolutional lstm network: A machine learning approach for
precipitation nowcasting,‚Äù in Advances in neural information processing
systems, 2015, pp. 802‚Äì810.
[40] H.-z. Wang, G.-q. Li, G.-b. Wang, J.-c. Peng, H. Jiang, and Y.-t. Liu,
‚ÄúDeep learning based ensemble approach for probabilistic wind power
forecasting,‚Äù Applied energy, vol. 188, pp. 56‚Äì70, 2017.
[41] G. A. Millett, A. T. Jones, D. Benkeser, S. Baral, L. Mercer, C. Beyrer,
B. Honermann, E. Lankiewicz, L. Mena, J. S. Crowley et al., ‚ÄúAssessing differential impacts of COVID-19 on black communities,‚Äù Annals of
Epidemiology, 2020.
[42] R. P. Rajkumar, ‚ÄúCOVID-19 and mental health: A review of the existing
literature,‚Äù Asian journal of psychiatry, p. 102066, 2020.
[43] J. Gao, P. Zheng, Y. Jia, H. Chen, Y. Mao, S. Chen, Y. Wang, H. Fu,
and J. Dai, ‚ÄúMental health problems and social media exposure during
COVID-19 outbreak,‚Äù Plos one, vol. 15, no. 4, p. e0231924, 2020.
[44] C. Owusu-Fordjour, C. Koomson, and D. Hanson, ‚ÄúThe impact of
COVID-19 on learning-the perspective of the ghanaian student,‚Äù European Journal of Education Studies, 2020.
[45] D. S. W. Ting, L. Carin, V. Dzau, and T. Y. Wong, ‚ÄúDigital technology
and COVID-19,‚Äù Nature medicine, vol. 26, no. 4, pp. 459‚Äì461, 2020.
[46] N. G. Biavardi, ‚ÄúBeing an italian medical student during the COVID-19
outbreak,‚Äù International Journal of Medical Students, vol. 8, no. 1, pp.
49‚Äì50, 2020.
[47] H. Leite, I. R. Hodgkinson, and T. Gruber, ‚ÄúNew development:‚Äòhealing
at a distance‚Äô‚Äîtelemedicine and COVID-19,‚Äù Public Money & Management, pp. 1‚Äì3, 2020.
[48] C. Zhou, F. Su, T. Pei, A. Zhang, Y. Du, B. Luo, Z. Cao, J. Wang, W. Yuan,
Y. Zhu et al., ‚ÄúCOVID-19: Challenges to gis with big data,‚Äù Geography
and Sustainability, 2020.
[49] M. A. Zambrano-Monserrate, M. A. Ruano, and L. Sanchez-Alcalde, ‚ÄúIndirect effects of COVID-19 on the environment,‚Äù Science of the Total Environment, p. 138813, 2020.
[50] S. Muhammad, X. Long, and M. Salman, ‚ÄúCOVID-19 pandemic and environmental pollution: a blessing in disguise?‚Äù Science of The Total Environment, p. 138820, 2020.
[51] A. Kerimray, N. Baimatova, O. P. Ibragimova, B. Bukenov, B. Kenessov,
P. Plotitsyn, and F. Karaca, ‚ÄúAssessing air quality changes in
large cities during COVID-19 lockdowns: The impacts of trafficfree urban conditions in almaty, kazakhstan,‚Äù Science of The Total
Environment, vol. 730, p. 139179, 2020. [Online]. Available: http:
//www.sciencedirect.com/science/article/pii/S0048969720326966
[52] M. A. Zambrano-Monserrate, M. A. Ruano, and L. Sanchez-Alcalde,

14

[53]

[54]

[55]

[56]
[57]

[58]
[59]

[60]

[61]
[62]

[63]

[64]

[65]

[66]

[67]
[68]

[69]

[70]
[71]

[72]

[73]

‚ÄúIndirect effects of COVID-19 on the environment,‚Äù Science of The
Total Environment, vol. 728, p. 138813, 2020. [Online]. Available:
http://www.sciencedirect.com/science/article/pii/S0048969720323305
Y. Huang, Y. Wu, and W. Zhang, ‚ÄúComprehensive identification
and isolation policies have effectively suppressed the spread of
COVID-19,‚Äù Chaos, Solitons and Fractals, vol. 139, p. 110041, 2020.
[Online]. Available: http://www.sciencedirect.com/science/article/pii/
S0960077920304392
S. I. Alzahrani, I. A. Aljamaan, and E. A. Al-Fakih, ‚ÄúForecasting the
spread of the COVID-19 pandemic in saudi arabia using arima prediction
model under current public health interventions,‚Äù Journal of Infection and
Public Health, vol. 13, no. 7, pp. 914 ‚Äì 919, 2020.
S. Singh, K. S. Parmar, J. Kumar, and S. J. S. Makkhan, ‚ÄúDevelopment of
new hybrid model of discrete wavelet decomposition and autoregressive
integrated moving average (ARIMA) models in application to one month
forecast the casualties cases of COVID-19,‚Äù Chaos, Solitons & Fractals,
vol. 135, p. 109866, 2020.
A. Anand, Y. Lamba, and A. Roy, ‚ÄúForecasting covid-19 transmission in
india using deep learning models.‚Äù
K. R. Bhimala, G. K. PATRA, R. Mopuri, and S. R. Mutheneni, ‚ÄúA deep
learning approach for prediction of sars-cov-2 cases using the weather
factors in india,‚Äù Authorea Preprints, 2020.
R. P. Shetty et al., ‚ÄúRealtime forecasting of covid 19 cases in karnataka
state using artificial neural network (ann),‚Äù 2020.
A. Tomar and N. Gupta, ‚ÄúPrediction for the spread of covid-19
in india and effectiveness of preventive measures,‚Äù Science of The
Total Environment, vol. 728, p. 138762, 2020. [Online]. Available:
http://www.sciencedirect.com/science/article/pii/S0048969720322798
G. Battineni, N. Chintalapudi, and F. Amenta, ‚ÄúForecasting of covid-19
epidemic size in four high hitting nations (usa, brazil, india and russia) by
fb-prophet machine learning model,‚Äù Applied Computing and Informatics, 2020.
P. Nadler, R. Arcucci, and Y. Guo, ‚ÄúA neural sir model for global forecasting,‚Äù in Machine Learning for Health. PMLR, 2020, pp. 254‚Äì266.
R. G. da Silva, M. H. D. M. Ribeiro, J. H. KleinuÃàbing, V. C. M. Larcher,
and L. dos Santos Coelho, ‚ÄúForecasting the cumulative cases of covid-19
in brazil using machine learning approaches.‚Äù
A. K. Gupta, V. Singh, P. Mathur, and C. M. Travieso-Gonzalez, ‚ÄúPrediction of covid-19 pandemic measuring criteria using support vector machine, prophet and linear regression models in indian scenario,‚Äù Journal
of Interdisciplinary Mathematics, pp. 1‚Äì20, 2020.
S. Bodapati, H. Bandarupally, and M. Trupthi, ‚ÄúCovid-19 time series forecasting of daily cases, deaths caused and recovered cases using long short
term memory networks,‚Äù in 2020 IEEE 5th International Conference on
Computing Communication and Automation (ICCCA). IEEE, 2020, pp.
525‚Äì530.
V. Chaurasia and S. Pal, ‚ÄúApplication of machine learning time series
analysis for prediction covid-19 pandemic,‚Äù Research on Biomedical Engineering, pp. 1‚Äì13, 2020.
O. Istaiteh, T. Owais, N. Al-Madi, and S. Abu-Soud, ‚ÄúMachine learning approaches for covid-19 forecasting,‚Äù in 2020 International Conference on Intelligent Data Science Technologies and Applications (IDSTA).
IEEE, 2020, pp. 50‚Äì57.
A. Mosavi, ‚ÄúCovid-19 pandemic prediction for hungary; a hybrid machine learning approach,‚Äù 2020.
F. Takens, ‚ÄúDetecting strange attractors in turbulence,‚Äù in Dynamical Systems and Turbulence, Warwick 1980, ser. Lecture Notes in Mathematics,
1981, pp. 366‚Äì381.
C. Frazier and K. Kockelman, ‚ÄúChaos theory and transportation systems:
Instructive example,‚Äù Transportation Research Record: Journal of the
Transportation Research Board, vol. 20, pp. 9‚Äì17, 2004.
J. L. Elman, ‚ÄúFinding structure in time,‚Äù Cognitive Science, vol. 14, pp.
179‚Äì211, 1990.
C. W. Omlin and C. L. Giles, ‚ÄúConstructing deterministic finite-state automata in recurrent neural networks,‚Äù J. ACM, vol. 43, no. 6, pp. 937‚Äì972,
1996.
R. Chandra, ‚ÄúCompetition and collaboration in cooperative coevolution
of elman recurrent neural networks for time-series prediction,‚Äù IEEE
Trans. Neural Netw. Learning Syst., vol. 26, no. 12, pp. 3123‚Äì3136, 2015.
[Online]. Available: http://dx.doi.org/10.1109/TNNLS.2015.2404823
S. Hochreiter, ‚ÄúThe vanishing gradient problem during learning recurrent

[74]

[75]

[76]
[77]

[78]

[79]

[80]

[81]
[82]

[83]

[84]

[85]

[86]

[87]

[88]

[89]

[90]

[91]

[92]

[93]

[94]

15

neural nets and problem solutions,‚Äù Int. J. Uncertain. Fuzziness Knowl.Based Syst., vol. 6, no. 2, pp. 107‚Äì116, 1998.
M. Schuster and K. Paliwal, ‚ÄúBidirectional recurrent neural networks,‚Äù
Signal Processing, IEEE Transactions on, vol. 45, pp. 2673 ‚Äì 2681, 12
1997.
A. Graves and J. Schmidhuber, ‚ÄúFramewise phoneme classification with
bidirectional lstm and other neural network architectures,‚Äù Neural networks : the official journal of the International Neural Network Society,
vol. 18, pp. 602‚Äì10, 07 2005.
Y. Fan, Y. Qian, F.-L. Xie, and F. K. Soong, ‚ÄúTts synthesis with bidirectional lstm based recurrent neural networks,‚Äù in INTERSPEECH, 2014.
A. Graves, N. Jaitly, and A.-r. Mohamed, ‚ÄúHybrid speech recognition with
deep bidirectional lstm,‚Äù in 2013 IEEE workshop on automatic speech
recognition and understanding. IEEE, 2013, pp. 273‚Äì278.
I. Sutskever, O. Vinyals, and Q. V. Le, ‚ÄúSequence to sequence
learning with neural networks,‚Äù in Advances in Neural Information
Processing Systems 27, Z. Ghahramani, M. Welling, C. Cortes, N. D.
Lawrence, and K. Q. Weinberger, Eds. Curran Associates, Inc.,
2014, pp. 3104‚Äì3112. [Online]. Available: http://papers.nips.cc/paper/
5346-sequence-to-sequence-learning-with-neural-networks.pdf
‚ÄúUnique identification authority of India,‚Äù May 2020, [Online;
accessed 16-July-2020]. [Online]. Available: https://uidai.gov.in/images/
state-wise-aadhaar-saturation.pdf
N. G. Siva Athreya and A. Mishra, ‚ÄúCovid-19 india-timeline an understanding across states and union territories.‚Äù 2020, ongoing Study at
http://www.isibang.ac.in/‚àºathreya/incovid19.
‚ÄúCovid-19 India data,‚Äù 2020, government Website at https://www.mohfw.
gov.in/.
R. Debnath and R. Bardhan, ‚ÄúIndia nudges to contain covid-19 pandemic:
A reactive public policy analysis using machine-learning based topic
modelling,‚Äù PLOS ONE, vol. 15, no. 9, pp. 1‚Äì25, 09 2020. [Online].
Available: https://doi.org/10.1371/journal.pone.0238972
B. Rai, A. Shukla, and L. K. Dwivedi, ‚ÄúDynamics of covid-19 in india:
A review of different phases of lockdown,‚Äù Population Medicine, vol. 2,
no. July, 2020. [Online]. Available: http://dx.doi.org/10.18332/popmed/
125064
S. Rab, M. Javaid, A. Haleem, and R. Vaishya, ‚ÄúFace masks are new normal after covid-19 pandemic,‚Äù Diabetes & Metabolic Syndrome: Clinical
Research & Reviews, vol. 14, no. 6, pp. 1617‚Äì1619, 2020.
Wikipedia contributors, ‚ÄúList of cities proper by population density,
Wikipedia,‚Äù 2020, [Online; accessed 16-July-2020]. [Online]. Available: https://en.wikipedia.org/wiki/List of cities proper by population
density
S. M. Dev, R. Sengupta et al., ‚ÄúCOVID-19: impact on the
indian economy,‚Äù Indira Gandhi Institute of Development Research,
Mumbai Working Papers, April, 2020. [Online]. Available: https:
//ideas.repec.org/p/ind/igiwpp/2020-013.html
‚ÄúThe World Economic Outlook April 2020: The Great Lockdown,
International Monetary Fund,‚Äù April 2020, [Online; accessed 16-July2020]. [Online]. Available: https://www.imf.org/en/Publications/WEO/
Issues/2020/04/14/weo-april-2020
E. Imber-Black, ‚ÄúRituals in the time of covid-19: Imagination, responsiveness, and the human spirit,‚Äù Family process, vol. 59, no. 3, pp. 912‚Äì
921, 2020.
J. L. Lebow, ‚ÄúFamily in the age of covid-19,‚Äù Family process,
vol. 59, no. 2, p. 309‚Äî312, June 2020. [Online]. Available:
https://europepmc.org/articles/PMC7273068
A. Dandekar and R. Ghai, ‚ÄúMigration and reverse migration in the age
of covid-19,‚Äù Economic and Political Weekly, vol. 55, no. 19, pp. 28‚Äì31,
2020.
A. Kumar, K. R. Nayar, and S. F. Koya, ‚ÄúCovid-19: Challenges and its
consequences for rural health care in india,‚Äù Public Health in Practice, p.
100009, 2020.
R. M. Neal, ‚ÄúBayesian learning via stochastic dynamics,‚Äù in Advances in
Neural Information Processing Systems 5. Morgan-Kaufmann, 1993,
pp. 475‚Äì482.
J. Pall, R. Chandra, D. Azam, T. Salles, J. M. Webster, R. Scalzo, and
S. Cripps, ‚ÄúBayesreef: A bayesian inference framework for modelling
reef growth in response to environmental change and biological dynamics,‚Äù Environmental Modelling & Software, p. 104610, 2020.
R. Chandra, K. Jain, R. V. Deo, and S. Cripps, ‚ÄúLangevin-gradient parallel

tempering for bayesian neural learning,‚Äù Neurocomputing, 2019.
[95] R. Chandra and A. Kapoor, ‚ÄúBayesian neural multi-source transfer learning,‚Äù Neurocomputing, vol. 378, pp. 54 ‚Äì 64, 2020. [Online]. Available:
http://www.sciencedirect.com/science/article/pii/S0925231219314213

16

