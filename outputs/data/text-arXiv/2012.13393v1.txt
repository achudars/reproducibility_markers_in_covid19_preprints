Timely Tracking of Infection Status of
Individuals in a Population
Melih Bastopcu

Sennur Ulukus

arXiv:2012.13393v1 [cs.CY] 24 Dec 2020

Department of Electrical and Computer Engineering
University of Maryland, College Park, MD 20742
bastopcu@umd.edu
ulukus@umd.edu

Abstract—We consider real-time timely tracking of infection
status (e.g., covid-19) of individuals in a population. In this work,
a health care provider wants to detect infected people as well as
people who recovered from the disease as quickly as possible.
In order to measure the timeliness of the tracking process, we
use the long-term average difference between the actual infection
status of the people and their real-time estimate by the health
care provider based on the most recent test results. We first
find an analytical expression for this average difference for given
test rates, and given infection and recovery rates of people.
Next, we propose an alternating minimization based algorithm to
minimize this average difference. We observe that if the total test
rate is limited, instead of testing all members of the population
equally, only a portion of the population is tested based on their
infection and recovery rates. We also observe that increasing the
total test rate helps track the infection status better. In addition,
an increased population size increases diversity of people with
different infection and recovery rates, which may be exploited
to spend testing capacity more efficiently, thereby improving
the system performance. Finally, depending on the health care
provider’s preferences, test rate allocation can be altered to detect
either the infected people or the recovered people more quickly.

I. I NTRODUCTION
We consider the problem of timely tracking of an infectious
disease, e.g., covid-19, in a population of n people. In this
problem, a health care provider wants to detect infected people
as quickly as possible in order to take precautions such as
isolating them from the rest of the population. The health care
provider also wants to detect people who recovered from the
disease as soon as possible since these people need to return
to work which is especially critical in sectors such as health
care, food retail, and public transportation. Ideally, the health
care provider should test all people all the time. However, as
the total test rate is limited, the question is how frequently
the health care provider should apply tests on these people
when their infection and recovery rates are known. In a broader
sense, this problem is related to timely tracking of multiple
processes in a resource-constrained setting where each process
takes binary values of 0 and 1 with different change rates.
Recent studies have shown that people who recovered from
infectious diseases such as covid-19 can be reinfected. Furthermore, the recovery times of individuals from the disease may
vary significantly. For these reasons, in this problem, the ith
This work was supported by NSF Grants CCF 17-13977 and ECCS 1807348.

x1 (t)

x̂1 (t)

t
x2 (t)

x3 (t)

t
x̂2 (t)

t

x̂3 (t)

t
xn (t)

t

t
x̂n (t)

t

t

Fig. 1. System model. There are n people whose infection status are given
by xi (t). The health care provider applies tests on these people. Based on the
test results, estimations for the infection status x̂i (t) are generated. Infected
people are shown in red color and healthy people are shown in green color.

person gets infected with rate λi which is independent of the
others. Similarly, the ith person recovers from the disease with
rate µi .1 We denote the infection status of the ith person as
xi (t) (shown with the black curves on the left in Fig. 1) which
takes the value 1 when the person is infected and the value 0
when the person is healthy. The health care provider applies
tests to people marked as healthy with rate si and to people
marked as infected with rate ci . Based on the test results, the
health care provider forms an estimate for the infection status
of the ith person denoted by x̂i (t) (shown with the blue curves
on the right in Fig. 1) which takes the value 1 when the most
recent test result is positive and the value 0, otherwise.
We measure the timeliness of the tracking process by the
difference between the actual infection status of people and the
real-time estimate of the health care provider which is based
on the most recent test results. We note that the difference
can occur in two different cases: i) when the person is sick
(xi (t) = 1) and the health care provider maps this person
as healthy (x̂i (t) = 0), and ii) when the person recovers
from the disease (xi (t) = 0) but the health care provider still
considers this person as infected (x̂i (t) = 1). The former case
represents the error due to late detection of infected people,
while the latter case represents the error due to late detection
of healed people. Depending on the health care provider’s
1 We note that the index i may represent a specific individual or a group of
individuals that have common features such as age, gender, profession. For
example, i = 1 may denote men between ages 70-75 who live in nursing
homes, and i = 2 may denote women between ages of 20-25 who work
in the medical field, and so on. Therefore, depending on the demographics,
coefficients λi and µi may be statistically known by the health care provider.

preferences, detecting infected people may be more important
than detecting recovered people, or vice versa.
Age of information has been proposed to measure timeliness
of information in communication systems, and studied in the
context of queueing networks, caching systems, energy harvesting systems, scheduling in networks, multi-hop multicast
networks, remote estimation, lossless and lossy source coding,
computation-intensive systems, vehicular, IoT, UAV systems,
and so on [1]–[36]. Most relevant to our work, the real-time
timely estimation of a single and multiple counting processes
[22], [23], a Wiener process [24], a random walk process [25],
a binary Markov source [26] have been studied. The work
that is closest to our work is reference [26] where the remote
estimation of a symmetric binary Markov source is studied in
a time-slotted system by finding the optimal sampling policies
via formulating a Markov Decision Process (MDP) for realtime error, AoI and AoII metrics. Different from [26], in our
work, we consider real-time timely estimation of multiple nonsymmetric binary sources for a continuous time system. We
note that in our work, the sampler (the health care provider)
does not know the states of the sources (infection status of
people), and thus takes the samples (applies medical tests)
randomly with fixed rates. Thus, in our work, we optimize the
test rates of people to minimize the real-time estimation error.
In this paper, we consider the real-time timely tracking
of infection status of n people. We first find an analytical
expression for the long-term average difference between the
actual infection status of people and the estimate of the health
care provider based on test results. Then, we propose an
alternating minimization based algorithm to find the test rates
si and ci for all people. We observe that if the total test
rate is limited, we may not apply tests on all people equally.
Increasing the total test rate helps track the infection status
of people better, and increasing the size of the population
increases diversity which may be exploited to improve the
performance. Finally, depending on the health care provider’s
priorities, we can allocate more tests to people marked as
healthy to detect the infections more quickly or to people
marked as infected to detect the recoveries more quickly.
II. S YSTEM M ODEL
We consider a population of n people. We denote the
infection status of the ith person at time t as xi (t) (black curve
in Fig. 2(a)) which takes binary values 0 or 1 as follows,
(
1, if the ith person is infected at time t,
xi (t) =
(1)
0, otherwise.
In this paper, we consider a model where each person can
be infected multiple times after recovering from the disease.
We denote the time interval that the ith person stays healthy
for the jth time as Wi (j) which is exponentially distributed
with rate λi . We denote the recovery time for the ith person
after infected with the virus for the jth time as Ri (j) which
is exponentially distributed with rate µi .
A health care provider wants to track the infection status of
each person. Based on the test results at times ti,ℓ , the health

xi (t), x̂i (t)
xi (t)

x̂i (t)
1
1−θ

ti,1

ti,2

ti,3 ti,4

ti,5

ti,6

ti,3 ti,4

ti,5

ti,6

t

(a)

∆i (t)

θ
1−θ
ti,1

ti,2

t

(b)
Fig. 2. (a) A sample evolution of xi (t) and x̂i (t), and (b) the corresponding
∆i (t) in (5). Green areas correspond to the error caused by ∆i1 (t) in (3).
Orange areas correspond to the error caused by ∆i2 (t) in (4).

care provider generates an estimate for the status of the ith
person denoted as x̂i (t) (blue curve in Fig. 2(a)) by
x̂i (t) = xi (ti,ℓ ),

ti,ℓ ≤ t < ti,ℓ+1 .

(2)

When x̂i (t) is 1, the health care provider applies the next test
to the ith person after an exponentially distributed time with
rate ci . When x̂i (t) is 0, the next test is applied to the ith
person after an exponentially distributed time with rate si .
An estimation error happens when the actual infection status
of the ith person, xi (t), is different than the estimate of the
health care provider, x̂i (t), at time t. This could happen in
two ways: when xi (t) = 1 and x̂i (t) = 0, i.e., when the ith
person is sick, but it has not been detected by the health care
provider, and when xi (t) = 0 and x̂i (t) = 1, i.e., when the
ith person has recovered, but the health care provider does not
know that the ith person has recovered.
We denote the error caused by the former case, i.e., when
xi (t) = 1 and x̂i (t) = 0, by ∆i1 (t) (green areas in Fig. 2(b)),
∆i1 (t) = max{xi (t) − x̂i (t), 0},

(3)

and we denote the error caused by the latter case, i.e., when
xi (t) = 0 and x̂i (t) = 1, by ∆i2 (t) (orange areas in Fig. 2(b)),
∆i2 (t) = max{x̂i (t) − xi (t), 0}.

(4)

Then, the total estimation error for the ith person ∆i (t) is
∆i (t) = θ∆i1 (t) + (1 − θ)∆i2 (t),

(5)

where θ is the importance factor in [0, 1]. A large θ gives more
importance to the detection of infected people, and a small θ
gives more importance to the detection of recovered people.
We define the long-term weighted average difference between xi (t) and x̂i (t) as
Z
1 T
∆i (t)dt.
(6)
∆i = lim
T →∞ T 0

∆i1 (t)

1

t
Wi (1)Tm (i, 1)

Wi (2)

Tm (i, 2)

Ri (1)

Tu (i, 1)

Ii1 (1)

Ri (2)

Tu (i, 2)

Ii2 (1)
Ii (1)

(a)

∆i2 (t)

i
i
have P(Tm (i) = Ri ) = µiµ+s
and P(Tm (i) = Di ) = µis+s
.
i
i
If the ith person recovers from the disease before testing, we
return to the initial case where both xi (t) and x̂i (t) are equal
to 0 again. In this case, this cycle repeats itself, i.e., the ith
person becomes sick again after Wi and ∆i1 (t) remains as
1 until either the person recovers or the health care provider
performs a test which takes another Tm (i) duration. If the
health care provider performs a test before the person recovers,
then x̂i (t) becomes 1. We denote the time interval for which
x̂i (t) stays at 0 as Ii1 which is given by

Ii1 =

K1
X

Tm (i, ℓ) + Wi (ℓ),

(9)

ℓ=1

1

t
Wi (1)Tm (i, 1)

Wi (2)

Tm (i, 2)

Ri (1)

Tu (i, 1)

Ii1 (1)

Ri (2)

Tu (i, 2)

Ii2 (1)

i
where K1 is geometric with rate P(Tm (i) = Di ) = µis+s
.
i
PK1
P K1
Due to [37, Prob. 9.4.1], ℓ=1 Tm (i, ℓ) and ℓ=1 Wi (ℓ) are
si
exponentially distributed with rates si and µλi i+s
, respectively.
i
P K1
P K1
As E[Ii1 ] = E[ ℓ=1 Tm (i, ℓ)] + E[ ℓ=1 Wi (ℓ)], we have

E[Ii1 ] =

Ii (1)

(b)
Fig. 3. A sample evolution of (a) ∆i1 (t), and (b) ∆i2 (t) in a typical cycle.

Then, the overall average difference of all people ∆ is
n

∆=

1X
∆i .
n i=1

(7)

Our aim is to track the infection status of all people.
PnDue to
limited
resources,
there
is
a
total
test
rate
constraint
i=1 si +
Pn
i=1 ci ≤ C. Thus, our aim is to find the optimal test rates
si and ci to minimize ∆ in (7) while satisfying this total test
rate constraint. We formulate the following problem,
min

{si ,ci }

s.t.

∆
n
X

si +

i=1

si ≥ 0,

n
X

ci ≤ C

i=1

ci ≥ 0,

i = 1, . . . , n.

(8)

In the next section, we find the total average difference ∆.
III. AVERAGE D IFFERENCE A NALYSIS
We first find analytical expressions for ∆i1 (t) in (3) and
∆i2 (t) in (4). We note that ∆i1 (t) can be equal to 1 when
x̂i (t) = 0 and is always equal to 0 when x̂i (t) = 1. Assume
that at time 0, both xi (0) and x̂i (0) are 0. After an exponentially distributed time with rate λi , which is denoted by Wi ,
the ith person is infected, and thus xi (t) becomes 1. At that
time, since x̂i (t) = 0, ∆i1 (t) becomes 1. ∆i1 (t) will be equal
to 0 again either when the ith person recovers from the disease
which happens after Ri which is exponentially distributed with
rate µi or when the health care provider performs a test on the
ith person after Di which is exponentially distributed with rate
si . We define Tm (i) as the earliest time at which one of these
two cases happens, i.e., Tm (i) = min{Ri , Di }. We note that
Tm (i) is also exponentially distributed with rate µi +si , and we

1
s i + µi
+
.
si
si λi

(10)

When x̂i (t) = 1, the health care provider marks the ith
person as infected. The ith person recovers from the virus
after Ri . After the ith person recovers, either the health
care provider performs a test after Zi which is exponentially distributed with rate ci or the ith person is reinfected
with the virus which takes Wi time. We define Tu (i) as
the earliest time at which one of these two cases happens,
i.e., Tu (i) = min{Wi , Zi }. Similarly, we note that Tu (i)
is exponentially distributed with rate λi + ci , and we have
i
i
and P(Tm (i) = Zi ) = λic+c
. If the
P(Tu (i) = Wi ) = λiλ+c
i
i
person is reinfected with the virus before a test is applied, this
cycle repeats itself, i.e., the ith person recovers after another
Ri , and then either a test is applied to the ith person, or
the person is infected again which takes another Tu (i). If the
health care provider performs a test to the ith person before
the person is reinfected, the health care provider marks the ith
person as healthy again, i.e., x̂i (t) becomes 0. We denote the
time interval that x̂i (t) is equal to 1 as Ii2 which is given by
Ii2 =

K2
X

Tu (i, ℓ) + Ri (ℓ),

(11)

ℓ=1

i
.
where K2 is geometric with rate P(Tu (i) = Zi ) = λic+c
i
P K2
PK2
Similarly,
ℓ=1 Tu (i, ℓ) and
ℓ=1 Ri (ℓ) are exponentially
µi
distributed with rates ci and λcii+c
, respectively. As E[Ii2 ] =
i
P K2
P K2
E[ ℓ=1 Tu (i, ℓ)] + E[ ℓ=1 Ri (ℓ)], we have

E[Ii2 ] =

ci + λi
1
+
.
ci
c i µi

(12)

We denote the time interval between the jth and (j + 1)th
times that x̂i (t) changes from 1 to 0 as the jth cycle Ii (j)
where Ii (j) = Ii1 (j) + Ii2 (j). We note that ∆i1 (t) is always
equal to 0 during Ii2 (j), i.e., x̂i (t) = 1, and ∆i1 (t) is equal to
1 when xi (t) = 1 in Ii1 (j). We denote the total time duration
when ∆i1 (t) is equal to 1 as Te,1 (i, j) during the jth cycle

PK1
where Te,1 (i, j) = ℓ=1
Tm (i, ℓ). Thus, we have E[Te,1 (i)] =
1
.
Then,
using
ergodicity,
similar to [4], ∆i1 is equal to
si
E[Te,1 (i)]
E[Te,1 (i)]
=
.
E[Ii ]
E[Ii1 ] + E[Ii2 ]

∆i1 =

(13)

Thus, we have
∆i1

µi λi
ci
=
.
µi + λi µi ci + λi si + ci si

(14)

Next, we find ∆i2 . We note that ∆i2 (t) is equal to 1 when
xi (t) = 0 in Ii2 (j) and is always equal to 0 during Ii1 (j).
Similarly, we denote the total time duration where ∆i2 (t) is
equal to 1 in the jth cycle Ii (j) as Te,2 (i, j) which is equal
P K2
Tu (i, ℓ). Thus, we have E[Te,2 (i)] = c1i .
to Te,2 (i, j) = ℓ=1
Then, similar to ∆i1 in (13), ∆i2 is equal to
∆i2 =

µi λi
si
.
µi + λi µi ci + λi si + ci si

(15)

By using (5), (14), and (15), we obtain ∆i as
∆i =

µi λi θci + (1 − θ)si
.
µi + λi µi ci + λi si + ci si

(16)

Then, by inserting (16) in (7), we obtain ∆. In the next section,
we solve the optimization problem in (8).
IV. O PTIMIZATION OF AVERAGE D IFFERENCE
In this section, we solve the optimization problem in (8).
Using ∆i in (16) in (7), we rewrite (8) as
min

{si ,ci }

s.t.

n
X
µi λi θci + (1 − θ)si
µ + λi µi ci + λi si + ci si
i=1 i
n
X

si +

n
X

ci ≤ C

i=1

i=1

si ≥ 0,

ci ≥ 0,

i = 1, . . . , n,

(17)

We define the Lagrangian function [38] for (17) as
n
X
µi λi θci + (1 − θ)si
L=
+β
µ
+ λi µi ci + λi si + ci si
i=1 i

−

n
X
i=1

νi s i −

n
X

n
X

si + ci − C

i=1

ηi ci ,

!

(18)

i=1

where β ≥ 0, νi ≥ 0, and ηi ≥ 0. The KKT conditions are
∂L
µi λi ci (1 − θ)µi − θ(ci + λi )
=
+ β − νi = 0, (19)
∂si µi + λi (µi ci + λi si + si ci )2
µi λi si θλi − (1 − θ)(µi + si )
∂L
=
+ β − ηi = 0, (20)
∂ci µi + λi (µi ci + λi si + si ci )2
for all i. The complementary slackness conditions are
!
n
X
si + ci − C = 0, νi si = 0, ηi ci = 0.
β

(21)

i=1

First, we find si . From (19), we have
(µi ci + λi si + si ci )2 =

µi λi ci θ(ci + λi ) − (1 − θ)µi
.
µi + λi
β − νi
(22)

When θ(ci + λi ) ≥ (1 − θ)µi , we solve (22) for si as
s
!+
λi θ(ci + λi ) − (1 − θ)µi
1
µi c i
−1 ,
si =
λi + ci
µi ci µi + λi
β
(23)
where we used the fact that we either have si > 0 and νi = 0,
or si = 0 and νi ≥ 0, due to (21). Here, (·)+ = max(·, 0).
i
Finally, when θ(ci +λi ) < (1−θ)µi , we have ∂∆
∂si > 0, and
thus it is optimal to choose si = 0 as our aim is to minimize ∆
i
in (7). In this case, when si = 0, we have ∆i = µiθλ
+λi which
is independent of the value of ci . As we obtain the same ∆i
for all values of ci , and the total update rate is limited, i.e.,
P
n
i=1 si + ci ≤ C, in this case, it is optimal to choose ci = 0
as well (i.e., when si = 0).
Next, we find ci . From (20), we have
(µi ci + λi si + si ci )2 =

µi λi si (1 − θ)(µi + si ) − θλi
.
µi + λi
β − ηi
(24)

When (1 − θ)(µi + si ) ≥ θλi , we solve (24) for ci as
s
!+
1
λi si
µi (1 − θ)(si + µi ) − θλi
ci =
−1 ,
µi + s i
λi si µi + λi
β
(25)
where we used the fact that we either have ci > 0 and ηi = 0,
or ci = 0 and ηi ≥ 0, due to (21).
i
Similarly, when (1 − θ)(si + µi ) < θλi , we have ∂∆
∂ci > 0.
Thus, in this case, it is optimal to choose ci = 0. When ci = 0,
i
we have ∆i = (1−θ)µ
µi +λi which is independent of the value of
si . Thus, it is optimal to choose si = 0 when ci = 0.
i
(θ(ci + λi ) − (1 − θ)µi ) ≤ β, we
From (23), if µi1ci µiλ+λ
i
must have si = 0. Thus, for a given ci , the optimal test rate
allocation policy for si is a threshold policy where si ’s with
i
(θ(ci + λi ) − (1 − θ)µi ) are equal to zero.
small µi1ci µiλ+λ
i
i
Similarly, from (25), if λi1si µiµ+λ
((1 − θ)(si + µi ) − θλi ) ≤
i
β, we must have ci = 0. Thus, for a given si , the optimal
policy to determine ci is a threshold policy where ci ’s with
i
small λi1si µiµ+λ
((1 − θ)(si + µi ) − θλi ) are equal to zero.
i
Next, we show that in the optimal policy, if si > 0 and
ci > 0 for some i, then theP
total test rate constraint must be
n
satisfied with equality, i.e., i=1 si + ci = C.
Lemma 1 In the optimal
P policy, if si > 0 and ci > 0 for
some i, then we have ni=1 si + ci = C.

Proof: The derivatives of ∆i with respect to si and ci are
∂∆i
µi λi ci (1 − θ)µi − θ(ci + λi )
,
=
∂si
µi + λi (ci µi + si ci + λi si )2
∂∆i
µi λi si θλi − (1 − θ)(si + µi )
.
=
∂ci
µi + λi (ci µi + si ci + λi si )2

(26)
(27)

We note that si > 0 in (23) implies that θ(ci +λi ) > (1−θ)µi .
i
In this case, we have ∂∆
∂si < 0. Similarly, ci > 0 in (25)
i
implies that (1 − θ)(si + µi ) > θλi . Thus, we have ∂∆
∂ci < 0.

Therefore, in the optimal policy,P
if we have si > 0 and ci > 0
n
for some i, then we must have i=1 si + ci = C. Otherwise,
we can further decrease ∆ in (7) by increasing ci or si . 
Next, we propose an alternating minimization based algorithm for finding si and ci . For this purpose, for given initial
(si , ci ) pairs, we define φi as
(
λi
1
(θ(ci + λi ) − (1 − θ)µi ), i = 1, . . . , n,
i
φi = µi1ci µiµ+λ
i
λi si µi +λi ((1 − θ)(si + µi ) − θλi ), i = n + 1, . . . , 2n.
(28)
Then, we define ui as

q
+

φi
 µi ci
−
1
, i = 1, . . . , n,
λi +ci
β
ui =
q
+

φi
 λi si
, i = n + 1, . . . , 2n.
µi +si
β −1

0.5

0
1

2

3

4

5

6

7

8

9

10

6

7

8

9

10

(a)

V. N UMERICAL R ESULTS
In this section, we provide four numerical results. For these
examples, we take λi as
i = 1, . . . , n,

1

(29)

From (23) and (25), si = ui and ci = un+i , for i = 1, . . . , n.
Next, we find si and ci by determining β in (29). First,
assume that, in the optimal policy, there is an i such
Pn that si > 0
and ci > 0. Thus, by Lemma 1, we must have i=1Psi + ci =
C. We initially take random (si , ci ) pairs such that ni=1 si +
ci = C. Then, given the initial (si , ci ) pairs, we immediately
choose ui = 0 for φi < 0. For the remaining ui with φi ≥ 0,
we apply a solution method similar to that in [4]. ByPassuming
2n
φi ≥ β, i.e., by disregarding (·)+ in (29), we solve i=1 ui =
C for β. Then, we compare the smallest φi which is larger
than zero in (28) with β. If we have φi ≥ β, then it implies
that ui ≥ 0 for all remaining i. Thus, we have obtained ui
values for given initial (si , ci ) pairs. If the smallest φi which
is larger than zero is smaller than β, then the corresponding ui
is negative and we should choose ui = 0 for the smallest nonnegative φi . Then, we repeat this procedure until the smallest
non-negative φi is larger than β. After determining all ui , we
obtain si = ui and ci = un+i for i = 1, . . . , n. Then, with the
updated values of (si , ci ) pairs, we keep finding ui ’s until the
KKT conditions in (19) and (20) are satisfied.
We note that for indices (persons) i for which (si , ci ) are
zero, the health care provider does not perform any tests, and
maps these people as either always infected, i.e., x̂i (t) = 1 for
all t, or always healthy, i.e., x̂i (t) = 0. If x̂i (t) = 0 for all t,
(1−θ)µi
i
∆i = µiθλ
+λi , and if x̂i (t) = 1 for all t, ∆i = µi +λi . Thus,
for such i, the health care provider should choose x̂i (t) = 0
(1−θ)µi
i
for all t, if µiθλ
+λi < µi +λi , and should choose x̂i (t) = 1 for
all t, otherwise, without performing any tests.
Finally, we note that the problem in (17) is not a convex
optimization problem as the objective function is not jointly
convex in si and ci . Therefore, the solutions obtained via
the proposed method may not be globally optimal. For that
reason, we choose different initial starting points and apply the
proposed alternating minimization based algorithm and choose
the solution that achieves the smallest ∆ in (7).

λi = ari ,

1.5

(30)

0.25

0.2

0.15

0.1

0.05

0
1

2

3

4

5

(b)
Fig. 4. (a) Test rates si and ci , (b) corresponding average difference ∆i .

where r = 0.9 and a is such that
µi as
µi = bq i ,

Pn

i=1

λi = 6. Also, we take

i = 1, . . . , n,
(31)
Pn
where q = 1.1 and b is such that i=1 µi = 4. Since λi in
(30) decreases with i, people with lower indices get infected
more quickly compared to people with higher indices. Since
µi in (31) increases with i, people with higher indices recover
more quickly compared to people with lower indices. Thus,
low index people get infected quickly and get well slowly.
In the first example, we take the total number of people as
n = 10, the total test rate as C = 16, andPθ = 0.5. We start
with randomly chosen si and ci such that ni=1 si + ci = 16,
and apply the alternating minimization based method proposed
in Section IV. We repeat this process for 30 different initial
(si , ci ) pairs and choose the solution that gives the smallest
∆. In Fig. 4(a), we observe that the first three people are never
tested by the health care provider. We note that si , which is
the test rate when x̂i (t) = 0, initially increases with i but then
decreases with i. This means that people who get infected
rarely are tested less frequently when they are marked as
healthy. Similarly, we observe in Fig. 4(a) that ci , which is
the test rate when x̂i (t) = 1, monotonically increases with i.
In other words, people who recover from the virus quickly are

0.16

0.3

0.15

0.25

0.14

0.2

0.13

0.15

0.12

0.1

0.11

0.05

0.1
5

10

15

0
0.2

20

0.3

0.4

Fig. 5. The average difference ∆ with respect to total test rate C.

0.5

0.6

0.7

0.5

0.6

0.7

(a)

0.14

11

0.13
10
0.12
0.11

9

0.1
8
0.09
0.08

7

0.07
6
0.06
0.05
0

5

10

15

20

25

5
0.2

30

Fig. 6. The average difference ∆ with respect to number of people n. We
6
4
use uniform infection and healing rates, P
i.e., λi = n
and µP
i = n for all i,
n
and also λi in (30) and µi in (31) with n
λ
=
6
and
i
i=1
i=1 µi = 4.

tested more frequently when they are marked infected.
In Fig. 4(b), we plot ∆i resulting from the solution found
from the proposed algorithm, ∆i when the health care provider
applies tests to everyone in the population uniformly, i.e.,
C
for all i, and ∆i when the health care provider
si = ci = 2n
applies no tests, i.e., si = ci = 0 for all i. In the case of
(1−θ)µi
i
no tests, we have ∆i = min{ µiθλ
+λi , µi +λi }. We observe in
Fig. 4(b) that the health care provider applies tests on people
whose ∆i can be reduced the most as opposed to uniform
testing where everyone is tested equally. Thus, the first three
people who have the smallest ∆i are not tested by the health
care provider. With the proposed solution, by not testing the
first three people, ∆i are further reduced for the remaining
people compared to uniform testing. For the people who are
not tested, the health care provider chooses x̂i (t) = 1 all the
(1−θ)µi
i
time, i.e., marks these people always sick as µiθλ
+λi > µi +λi .
This is expected as these people have high λi and low µi , i.e.,
they are infected easily and they stay sick for a long time.
In the second example, we use the same set of variables
except for the total test rate C. We vary the total test rate C
in between 5 and 20. We plot ∆ with respect to C in Fig. 5.
We observe that ∆ decreases with C. Thus, with higher total
test rates, the health care provider can tract the infection status
of the population better as expected.

0.3

0.4

(b)
¯ 1 which is 1 Pn ∆i1 , and ∆
¯ which is
(a) ∆ in (7), ∆
i=1
n
Pn
P2n
i=1 ∆i2 , (b) corresponding total test rates
i=1 si and
i=1 ci .

Fig. 7.
1 Pn
n

In the third example, we use the same set of variables except
for the total number of people n. In addition, we also use
uniform infection and healing rates, i.e., λi = n6 and µi = n4
for all i, for comparison with λi in (30) and µi in (31), while
keeping
the total infection
and healing rates the same, i.e.,
Pn
Pn
i=1 µi = 4, for both cases. We vary
i=1 λi = 6 and
the number of people n from 2 to 30. We observe in Fig. 6
that when the infection and healing rates are uniform in the
population, the health care provider can track the infection
status with the same efficiency, even though the population
size increases (while keeping the total infection and healing
rates fixed). For the case of λi in (30) and µi in (31), when
we increase the population size, we increase the number of
people who rarely get sick, i.e., people with high i indices,
and also people who rarely heal from the disease, i.e., people
with small i indices. Thus, it gets easier for the health care
provider to track the infection status of the people. That is why
when we use λi in (30) and µi in (31), we observe in Fig. 6
that the health care provider can track the infection status of
the people better, even though the population size increases.
In the fourth example, we use the same set of variables as
the first example except for the importance factor θ. Here, we
¯ 1 which is
vary θ in between 0.2 to 0.7. We plot ∆ in (7), ∆

¯ 1 = 1 Pn ∆i1 , and ∆
¯ 2 which is ∆
¯ 2 = 1 Pn ∆i2 in
∆
i=1
i=1
n
n
¯ 1 represents the average difference when
Fig. 7(a). Note that ∆
people are infected, but they have not been detected by the
¯ 2 represents the average difference
health care provider, and ∆
when people have recovered, but the health care provider still
marks them as infected. Note that when θ is high, we give
¯ 1 , i.e., the early detection of
importance to minimization of ∆
people with infection, and when θ is low, we give importance
¯ 2 , i.e., the early detection of people who
to minimization of ∆
recovered from the disease. That is why we observe in Fig. 7(a)
¯ 1 decreases with θ while ∆
¯
that ∆
Pn 2 increases
Pn with θ.
We plot the total test rates i=1 si and i=1 ci in Fig. 7(b).
We observe in Fig. 7(b) that if it is more important to detect the
infected people, i.e., if θ is high, then the health care provider
should apply higher test P
rates to people who are marked as
n
healthy. In other words, i=1 si increases with θ. Similarly,
if it is more important to detect people who recovered from the
disease, then the health care provider should apply high
P test
rates to people who are marked as infected. That is, ni=1 ci
is high when θ is low. Therefore, depending on the priorities
of the health care provider, a suitable θ needs to be chosen.
VI. C ONCLUSION
We considered timely tracking of infection status of individuals in a population. For exponential infection and healing
processes with given rates, we determined the rates of exponential testing processes. We observed in numerical results
that the test rates depend on individuals’ infection and healing
rates, the individuals’ last known state of healthy or infected,
as well as the health care provider’s priorities of detecting
infected people or recovered people more quickly.
R EFERENCES
[1] E. Najm, R. D. Yates, and E. Soljanin. Status updates through M/G/1/1
queues with HARQ. In IEEE ISIT, June 2017.
[2] A. Soysal and S. Ulukus. Age of information in G/G/1/1 systems. In
Asilomar Conference, November 2019.
[3] R. D. Yates, P. Ciblat, A. Yener, and M. Wigger. Age-optimal constrained
cache updating. In IEEE ISIT, June 2017.
[4] M. Bastopcu and S. Ulukus. Information freshness in cache updating
systems. IEEE Transactions on Wireless Communications. Early access.
[5] S. Farazi, A. G. Klein, and D. R. Brown III. Average age of information
for status update systems with an energy harvesting server. In IEEE
Infocom, April 2018.
[6] X. Wu, J. Yang, and J. Wu. Optimal status update for age of information
minimization with an energy harvesting source. IEEE Transactions on
Green Communications and Networking, 2(1):193–204, March 2018.
[7] O. Ayan, M. Vilgelm, M. Klügel, S. Hirche, and W. Kellerer. Age-ofinformation vs. value-of-information scheduling for cellular networked
control systems. In ACM ICCPS, April 2019.
[8] A. Baknina, O. Ozel, J. Yang, S. Ulukus, and A. Yener. Sending
information through status updates. In IEEE ISIT, June 2018.
[9] S. Leng and A. Yener. Age of information minimization for an
energy harvesting cognitive radio. IEEE Transactions on Cognitive
Communications and Networking, 5(2):427–439, June 2019.
[10] A. Arafa and S. Ulukus. Timely updates in energy harvesting two-hop
networks: Offline and online policies. IEEE Transactions on Wireless
Communications, 18(8):4017–4030, August 2019.
[11] Y. Gu, Q. Wang, H. Chen, Y. Li, and B. Vucetic. Optimizing information
freshness in two-hop status update systems under a resource constraint.
July 2020. Available on arXiv: 2007.02531.
[12] A. Arafa, J. Yang, S. Ulukus, and H. V. Poor. Age-minimal transmission
for energy harvesting sensors with finite batteries: Online policies. IEEE
Transactions on Information Theory, 66(1):534–556, January 2020.

[13] M. A. Abd-Elmagid, H. S. Dhillon, and N. Pappas. A reinforcement
learning framework for optimizing age of information in RF-powered
communication systems.
IEEE Transactions on Communications,
68(8):4747–4760, May 2020.
[14] M. Bastopcu and S. Ulukus. Minimizing age of information with soft
updates. Journal of Communications and Networks, 21(3):233–243, June
2019.
[15] M. Bastopcu and S. Ulukus. Timely group updating. November 2020.
Available on arXiv:2011.15114.
[16] E. T. Ceran, D. Gunduz, and A. Gyorgy. A reinforcement learning
approach to age of information in multi-user networks. In IEEE PIMRC,
September 2018.
[17] R. D. Yates and S. K. Kaul. The age of information: Real-time status
updating by multiple sources. IEEE Transactions on Information Theory,
65(3):1807–1827, March 2019.
[18] I. Kadota, A. Sinha, E. Uysal-Biyikoglu, R. Singh, and E. Modiano.
Scheduling policies for minimizing age of information in broadcast
wireless networks. IEEE/ACM Transactions on Networking, 26(6):2637–
2650, December 2018.
[19] Y. Hsu. Age of information: Whittle index for scheduling stochastic
arrivals. In IEEE ISIT, June 2018.
[20] B. Buyukates, A. Soysal, and S. Ulukus. Age of information scaling
in large networks with hierarchical cooperation. In IEEE Globecom,
December 2019.
[21] B. Buyukates, A. Soysal, and S. Ulukus. Age of information in
multihop multicast networks. Journal of Communications and Networks,
21(3):256–267, July 2019.
[22] M. Wang, W. Chen, and A. Ephremides. Reconstruction of counting
process in real-time: The freshness of information through queues. In
IEEE ICC, July 2019.
[23] M. Bastopcu and S. Ulukus. Who should Google Scholar update more
often? In IEEE Infocom, July 2020.
[24] Y. Sun, Y. Polyanskiy, and E. Uysal-Biyikoglu. Remote estimation of
the Wiener process over a channel with random delay. In IEEE ISIT,
June 2017.
[25] J. Yun, C. Joo, and A. Eryilmaz. Optimal real-time monitoring of
an information source under communication costs. In IEEE CDC,
December 2018.
[26] C. Kam, S. Kompella, and A. Ephremides. Age of incorrect information
for remote estimation of a binary Markov source. In IEEE Infocom, July
2020.
[27] J. Chakravorty and A. Mahajan. Remote estimation over a packet-drop
channel with Markovian state. IEEE Transactions on Automatic Control,
65(5):2016–2031, July 2020.
[28] P. Mayekar, P. Parag, and H. Tyagi. Optimal source codes for timely
updates. IEEE Transactions on Information Theory, 66(6):3714–3731,
March 2020.
[29] M. Bastopcu, B. Buyukates, and S. Ulukus. Selective encoding policies
for maximizing information freshness. April 2020. Available on
arXiv:2004.06091.
[30] D. Ramirez, E. Erkip, and H. V. Poor. Age of information with finite
horizon and partial updates. In IEEE ICASSP, May 2020.
[31] B. Buyukates and S. Ulukus. Timely distributed computation with
stragglers. IEEE Transactions on Communications, 68(9):5273–5282,
September 2020.
[32] P. Zou, O. Ozel, and S. Subramaniam. Optimizing information freshness
through computation-transmission tradeoff and queue management in
edge computing. December 2019. Available on arXiv: 1912.02692.
[33] M. Bastopcu and S. Ulukus. Age of information for updates with
distortion. In IEEE ITW, August 2019.
[34] N. Rajaraman, R. Vaze, and R. Goonwanth. Not just age but age and
quality of information. December 2018. Available on arXiv:1812.08617.
[35] A. M. Bedewy, Y. Sun, S. Kompella, and N. B. Shroff. Age-optimal
sampling and transmission scheduling in multi-source systems. In ACM
MobiHoc, July 2019.
[36] S. Banerjee, R. Bhattacharjee, and A. Sinha. Fundamental limits of ageof-information in stationary and non-stationary environments. In IEEE
ISIT, June 2020.
[37] R. D. Yates and D. J. Goodman. Probability and Stochastic Processes.
Wiley, 2014.
[38] S. P. Boyd and L. Vandenberghe. Convex Optimization. Cambridge
University Press, 2004.

