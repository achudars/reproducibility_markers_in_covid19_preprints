Empirical Software Engineering manuscript No.
(will be inserted by the editor)

How does Working from Home Affect Developer
Productivity? – A Case Study of Baidu During the
COVID-19 Pandemic
Lingfeng Bao · Tao Li · Xin Xia ·
Kaiyu Zhu · Hui Li · Xiaohu Yang

arXiv:2005.13167v2 [cs.SE] 2 Oct 2020

the date of receipt and acceptance should be inserted later

Abstract Nowadays, working from home (WFH) has become a popular work
arrangement due to its many potential benefits for both companies and employees (e.g., increasing job satisfaction and retention of employees). Many
previous studies have investigated the impact of working from home on the
productivity of employees. However, most of these studies usually use a qualitative analysis method such as surveys and interviews, and the studied participants do not work from home for a long continuing time. Due to the outbreak
of coronavirus disease 2019 (COVID-19), a large number of companies asked
their employees to work from home, which provides us an opportunity to investigate whether working from home affects their productivity.
In this study, to investigate the difference of developer productivity between working from home and working onsite, we conduct a quantitative analysis based on a dataset of developers’ daily activities from Baidu Inc, one of
Lingfeng Bao
Zhejiang University, Hangzhou, China
E-mail: lingfengbao@zju.edu.cn
Tao Li
Baidu Inc., Beijing, China
E-mail: litao07@baidu.com
Xin Xia
Monash University, Melbourne, Australia
E-mail: Xin.Xia@monash.edu
Kaiyu Zhu
Baidu Inc., Beijing, China
E-mail: zhukaiyu@baidu.com
Hui Li
Baidu Inc., Beijing, China
E-mail: lihui24@baidu.com
Xiaohu Yang
Zhejiang University, Hangzhou, China
E-mail: yangxh@zju.edu.cn

2

Empir Software Eng

the largest IT companies in China. In total, we collected approximately four
thousand records of 139 developers’ activities of 138 working days. Out of
these records, 1,103 records are submitted when developers work from home
due to the COVID-19 pandemic. We find that WFH has both positive and
negative impacts on developer productivity in terms of different metrics, e.g.,
the number of builds/commits/code reviews. We also notice that working from
home has different impacts on projects with different characteristics including programming language, project type/age/size. For example, working from
home has a negative impact on developer productivity for large projects. Additionally, we find that productivity varies for different developers. Based on
these findings, we get some feedback from developers of Baidu and understand
some reasons why WFH has different impacts on developer productivity. We
also conclude several implications for both companies and developers.
Keywords Working from Home, Developer Productivity

1 Introduction
Working from home (WFH) is a work arrangement in which employees do not
need not work at a central place (e.g., office building, warehouse, or store).
Working from home has various names, such as remote work, teleworking,
or telecommuting. These terms are used differently and interchangeably from
study to study (Shin et al. 2000; Spark 2017; Hill et al. 2003). Nowadays,
since WFH is facilitated by many tools such as virtual private network, cloud
computing, and online meeting software, more and more companies allow their
employees to work from home. A survey in 2018 from OWL labs shows that
52% of employees work from home at least once a week and 56% of companies
allow remote work1 . WFH can offer some benefits to both companies and
employees, for instance, when employees can work from home, they feel more
trusted and are better able to balance work and life responsibilities, which can
increase employee retention and make them happier and more productive.
WFH is also adopted by many IT companies, for instance, a recent report mentioned that Twitter announced staff can continue working from home
permanently 2 . Developers can perform their daily tasks (e.g., writing code,
debugging, build projects, and code review) as usual by remotely accessing
resources of companies when working from home. WFH might have different
impacts on productivity, which is a big concern of software developer organizations (Meyer et al. 2017). Understanding the difference of developer productivity when working from home and the reasons behind it can help improve
the management of companies and projects, increase the job satisfaction of
developers, and make developers more productive.
The survey of OWL labs reported that employees who work remotely at
least once a month are 24% more likely to feel productive in their roles than
1
2

https://www.owllabs.com/state-of-remote-work/2018
https://www.bbc.com/news/technology-52628119

Empir Software Eng

3

those who do not or cannot work remotely. On the contrary, WFH might have
a negative impact on productivity. For example, it would decrease the efficiency of developer communication, which plays an important role in software
development (Wolf et al. 2009). Many studies have investigated the impacts
of WFH on productivity (Neufeld and Fang 2004, 2005; Baker et al. 2007;
Laihonen et al. 2012; Campbell 2015). However, most of these studies use a
qualitative approach (e.g., survey or interview) based on the feedback from
general workers (not only developers). Additionally, the studied participants
usually do not work from home for a long continuing time. In this study, we
aim to investigate the impacts of developer productivity when working from
home for a long time in a quantitative way.
Due to the outbreak of coronavirus disease 2019 (COVID-19)3 , which is an
infectious disease caused by a newly discovered coronavirus, a large number
of IT companies ask their employees to work from home, which provides us
an opportunity to investigate how their productivity is affected when working
from home for a long continuing time.
In this study, we collect the data from Baidu, Inc., China, which contains
the development activities from 139 developers in 138 working days. There is
a part of records in this dataset on which developers work from home due to
the COVID-19 pandemic. We compare developer productivity when working
from home with working onsite in terms of multiple aggregated values such
as mean, median of several metrics (e.g., the number of builds, commits, and
code review.). We summarize our findings and contributions as follows:
– To the best of our knowledge, we are the first to investigate the impacts of
working from home on developer productivity based on developers’ daily
activities. We find that WFH has both positive and negative impacts on
developer productivity in terms of different metrics, such as the number of
builds/commits/code reviews.
– We investigate the impacts of WFH on the projects with different characteristics including program language and project type/age/size and find
that WFH has different impacts on different kinds of projects. For example,
WFH has a negative impact on developer productivity for large projects.
We also find that productivity varies for different developers.
– We conclude the reasons why developers have different productivity when
working from home and provide implications based on our findings and the
feedback from Baidu.
Paper Structure: The remainder of the paper is structured as follows. Section 2 describes the dataset and research questions in this study. Section 3
presents the results of the analysis for the six research questions. Section 4
discusses implications and threats to validity. Section 5 briefly reviews related
work. Section 6 concludes the paper and discusses future directions.
3

https://www.who.int/health-topics/coronavirus

4

Empir Software Eng

Table 1: The overview of the dataset
Date Range
ONSITE 2019
ONSITE 2020
WFH

2019/01/02 - 2019/03/10
2019/12/23 - 2020/02/02
2020/02/03 - 2020/03/01

Total

#Working Days

#Records

68
42
28

1,565
1,325
1,103

138

3,993

2 Case Study Setup
In this section, we first present the dataset from Baidu. Then, we describe the
research questions and their corresponding motivations.
2.1 Dataset
We collected a dataset of developers’ daily activities from Baidu, Inc., which
is the world’s largest Chinese language Internet search provider4 , the largest
knowledge and information centered Internet platform company in China, and
a world-leading artificial intelligence (AI) company.
The dataset we get from Baidu contains 139 developers’ daily activities
from eight projects in 138 working days. Table 1 presents the overview of
the dataset. As shown in this table, the time of WFH is from 2020/02/03
to 2020/03/01 because Baidu asked all its employees to work from home after the outbreak of the COVID-19 pandemic in China5 . There are another
two date ranges during which developers work onsite in the dataset, i.e., from
2019/01/02 to 2019/03/10 (referred to as ONSITE 2019) and from 2019/12/23
to 2020/02/02 (referred to as ONSITE 2020). The development activities in the
two years we select are in a similar date range of a year, i.e., about three months
before and after the Spring Festival in China, in which there might be many
similar tasks for the projects in Baidu. We also combine ONSITE 2019 and
ONSITE 2020 into ONSITE All, which is referred to as all developers’ daily activities when working onsite. This dataset has a total of 3,993 records. Among
these records, there are 1,565, 1,325, and 1,103 records that are belong to
ONSITE 2019, ONSITE 2020, and WFH, respectively.
Each record in the dataset has several metrics that represent the activities
of a developer in one day. Table 2 presents the fields of a record. Each record
4 https://www.baidu.com/. As the world’s largest Chinese language Internet search
provider, Baidu responds to a huge amount of search queries from more than 100 countries
and regions every day, serving as the most important way for netizens to access Chinese
language information. With its mission to “make the complicated world simpler through
technology”, Baidu promotes constant technological innovation, and is committed to being
a world-leading technology company that understands its users and helps them grow.
5 Wuhan is the first city in China to be lockdown since 2020/01/23, and the whole country
start to lockdown from 2020/01/27, which is in the Spring Festival (2020/01/25) – the most
important holiday in China. After the holiday, Baidu asked its employees to work from
home.

Empir Software Eng

5

Table 2: The metrics of each record of developers’ daily activities provided by
Baidu.
Feature

Description

date partition
username e
repo name e
commit count
line inserted
line deleted
review count
job status build

The date of a record
The encrypted user name of a developer
The encrypted repository name
The number of commits submitted by a developer
The number of lines of code inserted by a developer
The number of lines of code deleted by a developer
The number of code review performed by a developer
The status of build performed by a developer
The number of builds performed by a developer
A build refers to the process of continuous integration,
including compilation, test, deploy, etc.
The status of release performed by a developer
The number of releases performed by a developer
The number of compilations performed by a developer

build count
job status release
release count
compile count

has a date (data partition) on which a developer’s activities are reported. The
developers’ names and their project in the record are encrypted due to the
security and privacy policy of Baidu. Each record has the following numeric
metrics: commit count, line inserted, line deleted, review count, build count, release count, compile count, which indicates the developer productivity in one
day.
Due to the security policy of Baidu, the numeric metrics are standardized
by the following formula:
X −µ
z=
σ
where z is the standardized value, X is the real value of a metric in a record,
µ is the mean of a metric in the dataset, and σ is the standard deviation
of a metric in the dataset. Thus, the standardized values do not affect the
distribution of a metric and the findings in this study since the findings are
based on the comparison between the values of metrics when developers work
from home and work onsite. Moreover, the standardized values can be positive
or negative. Additionally, there are two other fields, i.e., job status build and
job status release, which represent the status of builds/releases performed by
a developer. There are four possible values for the status of builds/releases,
including success, failed, canceled, or NULL. Comparing to the other three statuses, a successful build or release means that a developer is more productive
on that day.
Table 3 presents the information about the eight projects in the dataset.
These projects are created in two different years, i.e., 2017 and 2018. There
are three types of projects, i.e., APP (application software), SERVER (server
software such as web services, API libraries), and SDK (software development
kits). Among these projects, four projects are written in C++ while the other
four projects are written in Java. Additionally, we count the number of developers who have records of development activities in the dataset for each

6

Empir Software Eng

Table 3: The project information.

P1
P2
P3
P4
P5
P6
P7
P8

Created Year

Project Type

Language

2017
2017
2018
2017
2018
2018
2018
2017

APP
APP
SERVER
SERVER
SERVER
SDK
SERVER
SERVER

C++
Java
Java
Java
C++
C++
Java
C++

0.3
1.5
0.2
1.0

3.0

0.06

2.5

0.05

2.0

0.04

0.5

0.0
0.1

1.5

WFH ONSITE_ALL
lines_deleted

1.0

1.00

0.6

0.9

0.95

0.4

0.8

0.90

0.2

0.7

0.5

WFH ONSITE_ALL
review_count

0.80
0.75

0.5

0.2

0.70

0.4
WFH ONSITE_ALL
release_count

WFH ONSITE_ALL
lines_inserted

0.85

0.6

0.0

0.5

0.0

0.01

1.0

0.0

0.1

WFH ONSITE_ALL
compile_count

0.8

2.0

0.2

0.00

0.0
WFH ONSITE_ALL
commit_count

0.3

0.01

0.5

0.5
WFH ONSITE_ALL
build_count

0.4

0.02

1.0

0.0

13
13
4
25
53
10
7
14

0.03

1.5

0.1

#Developer

WFH ONSITE_ALL
build_success_rate

0.65

ONSITE_ALL
WFH
release_success_rate

Fig. 1: Violin plots for WFH and ONSITE ALL in terms of the mean of
numeric metrics grouped by day and build/release successful rate in one day.
project. We also report that these projects have different numbers of developers, for example, the project P5 has the most number of developers (i.e., 53)
and P3 has the least number of developers (only 4 developers).

2.2 Research Questions
In this section, we aim to answer the following six research questions:
RQ1. Are there any significant differences between the productivity
of developers working from home and work onsite?

Empir Software Eng

7

Motivation: In this RQ, we want to investigate whether working from home
can affect developers’ productivity comparing to working onsite. Given the
dataset from Baidu, we measure the overall productivity of all developers
by combining their activities together, then compare the overall productivity
when working from home and working onsite.
RQ2. Do different programming languages affect developer productivity when working from home?
Motivation: Previous studies have shown that programming languages have
an important impact on developers’ activities, such as programming comprehension Xia et al. (2017), and being a long-time contributor of open source
projects Von Krogh et al. (2003); Bao et al. (2019). Working from home might
have different impacts on developers using different programming languages.
For example, since C++ projects in Baidu are usually larger and require more
computing resources than Java projects, developers often need to build and debug these C++ projects on a powerful machine remotely. Meanwhile, for most
Java projects, developers can write code and debug in their own computers
at home. Thus, in this RQ, we want to investigate whether developers using
different programming languages have different productivities when working
from home.
RQ3. Do different project types affect developer productivity when
working from home?
Motivation: As shown in Table 3, the eight projects in the dataset have
three different types, i.e., APP, SERVER, and SDK. The projects with different
project types could have different project management methods and styles of
schedules, different development and communication tools, which might have
a potential impact on developers’ productivity Melo et al. (2011); Meyer et al.
(2014). WFH changes the way of project management and development, which
have different impacts on developer productivity for projects with different
types. For example, many APP projects develop mobile apps, which usually rely
on some specific framework and have predefined code styles and specifications.
While the software developed by SERVER projects are usually applied in much
more complicated scenarios and depend on many different frameworks and
programming languages. Thus, it might be more different for developers when
working from home to build, test, and debug a SERVER project than a APP
project. Thus, we want to investigate whether different project types have an
impact on developer productivity when working from home.
RQ4. Do different project ages affect developer productivity who
working from home?
Motivation: Different project ages might affect developers’ activities. For
example, our previous study found that developers in older projects spend
more time on program comprehension activities than those of projects in the
beginning stage Xia et al. (2017). Working from home might expand such
effects caused by project age, for example, for an older project, developers
need to read the source code and documents more frequently since such a

8

Empir Software Eng

project usually has more maintenance tasks; but they cannot access these
resources and communicate with colleagues easily when working from home,
which might lower their productivity. Thus, we want to investigate whether
different project phases have an impact on the productivity of developers when
working from home in this RQ.
RQ5. Do different project sizes affect developer productivity who
work from home?
Motivation: Different project sizes (measured by the number of developers of
a project in this study) might have an impact on developers’ productivity Paiva
et al. (2010). Due to different project sizes, projects might have different ways
of project management and software development, which would be affected
by working from home differently. For example, it might be more difficult to
communicate with each other in a large project when working from home,
which might decrease the productivity of the project.
RQ6. Do individual developers have different productivity when
working from home?
Motivation: Comparing with working onsite, developers might have different productivity when working from home due to some personal factors, e.g.,
experience, personality, habit, and skills. For example, developers are much
easier to be interrupted by some other stuff when working from home. Additionally, identifying developers who have different performance when working
from home and the potential reasons behind it can help project leaders manage the projects. Thus, in this RQ we want to investigate whether individual
developers have different productivity when working from home.

3 Case Study Results
In this section, we present the results of these six research questions one by
one.

3.1 RQ1. The Overall Developer Productivity when Working From Home
Methodology: To compare developer productivity when working from home
with that when working onsite, we first group the records in the dataset by
day, and compute several aggregate values including mean, median, sum, max,
and min for each numeric metric, as shown in Table 3. Thus, we can know a
more accurate distribution of developers’ productivity in terms of each metric.
For example, although mean of the submitted commits (commit count) in one
day indicate the average workload of developers in one day, but sometimes
a few experienced/core developers usually contribute more commits than junior/periphery developers, the mean of commits might still be very high. So,
we calculate these aggregate values of each metric of all developers for each day.
For the two other non-numeric feature job status build and job status release,

Empir Software Eng

9

Table 4: P-value and Cliff’s delta (δ) for WFH compared with ONSITE ALL in
terms of different aggregate values of each metric in one day.
Metric
build count
commit count
compile count
lines deleted
lines inserted
release count
review count

mean

median

sum

max

min

p-value

δ

p-value

δ

p-value

δ

p-value

δ

p-value

δ

0.037
0.174
0.008
0.221
0.163
0.019
0.131

0.219
0.116
-0.182
-0.095
-0.121
0.253
0.138

1.27E-06
0.295
0.241
0.129
0.031
NA
0.224

-0.560
0.064
-0.018
-0.138
-0.227
NA
0.084

0.029
0.323
8.58E-05
1.92E-05
1.33E-05
0.232
0.131

0.233
0.057
-0.461
-0.505
-0.516
0.090
0.138

1.93E-04
4.05E-04
0.241
0.166
0.240
0.065
0.005

0.411
0.434
-0.018
0.119
0.087
0.179
0.317

0.002
0.313
NA
0.313
0.313
NA
NA

-0.245
-0.009
NA
-0.009
-0.009
NA
NA

Table 5: P-value and Cliff’s delta (δ) for WFH compared with ONSITE 2019 in
terms of different aggregate values of each metric in one day.
Metric
build count
commit count
compile count
lines deleted
lines inserted
release count
review count

mean

median

sum

max

min

p-value

δ

p-value

δ

p-value

δ

p-value

δ

p-value

δ

0.016
0.335
0.007
0.209
0.067
0.041
0.262

0.279
0.056
-0.191
-0.106
-0.195
0.226
0.084

1.84E-07
0.351
0.268
0.007
0.000
NA
0.421

-0.647
-0.048
-0.015
-0.317
-0.449
NA
0.024

0.014
0.423
4.78E-06
2.48E-06
1.09E-06
0.377
0.150

0.287
0.026
-0.577
-0.596
-0.618
0.041
0.136

1.69E-04
0.001
0.268
0.103
0.332
0.153
0.007

0.467
0.394
-0.015
0.165
0.057
0.129
0.322

0.003
0.268
NA
0.268
0.268
NA
NA

-0.235
-0.015
NA
-0.015
-0.015
NA
NA

Table 6: P-value and Cliff’s delta (δ) for WFH compared with ONSITE 2020 in
terms of different aggregate values of each metric in one day.
Metric
build count
commit count
compile count
lines deleted
lines inserted
release count
review count

mean

median

sum

max

min

p-value

δ

p-value

δ

p-value

δ

p-value

δ

p-value

δ

0.196
0.069
0.012
0.297
0.498
0.019
0.056

0.122
0.212
-0.167
-0.077
0.000
0.296
0.226

0.001
0.034
0.216
0.139
0.175
NA
0.075

-0.419
0.245
-0.024
0.152
0.132
NA
0.182

0.153
0.227
0.027
0.006
0.007
0.119
0.161

0.146
0.107
-0.273
-0.359
-0.350
0.168
0.141

0.012
2.05E-04
0.216
0.378
0.172
0.027
0.015

0.320
0.500
-0.024
0.045
0.135
0.259
0.308

0.002
NA
NA
NA
NA
NA
NA

-0.262
NA
NA
NA
NA
NA
NA

we compute the success rate of build/release in one day, that is, the ratio of
the number of times that a build/release is successful.
For each aggregation function of a metric, we have two groups, i.e., the
days on which developers work from home and work onsite, respectively. The
number of data points of a group is equal to the number of days of the corresponding group. Then, we apply the Wilcoxon rank-sum test Wilcoxon (1945)
to investigate whether the difference is statistically significant in terms of one
kind of aggregate values of each metric. We also compute Cliff’s delta Cliff

10

Empir Software Eng

(2014) to quantify the amount of difference between the two groups. Also, We
repeat the above method using the different dataset of developers not working
from home, i.e., ONSITE All, ONSITE 2019, and ONSITE 2020. Cliff defines a
delta of less than 0.147, between 0.147 to 0.33, between 0.33 and 0.474, and
above 0.474 as negligible, small, medium, and large effect size, respectively.
Results: Since we only have standardized values for these metrics in the
dataset, we use violin plots to show the distributions of these metrics when
working from home and working onsite, as shown in Figure 1. From this figure,
these metrics have less wide distributions when developers work from home
than those when developers work onsite except the number of lines deleted
every day. For example, the range of the mean of build count by day when
working onsite is approximately from -0.1 to 0.3, while the range of the mean
of build count by day when working from home is approximately from -0.05 to
0.2. This indicates that developers might have more stable productivity when
working from home than that when they work onsite.
Table 4, 5, and 6 present p-values and Cliff’s deltas (δ) for WFH compared
with ONSITE ALL, ONSITE 2019 and ONSITE 2020 in terms of different aggregate values of each metric in one day, respectively. There are some cases whose
values are “NA” in these tables, which is caused by the two compared lists are
completely the same. We find that there are some cases in which developer
productivity when working from home is significantly different from that when
working onsite for ONSITE ALL, ONSITE 2019, and ONSITE 2020. For example,
the sum of compile count, line deleted and line inserted when working from
home is significantly less than those when working onsite, and all the effect
sizes are not at the negligible level. This might indicates WFH has a negative effect on developer productivity in terms of the number of compilations,
deleted lines, and inserted lines every day.
Moreover, we find that WFH has different impacts on developer productivity in terms of different metrics. For example, in terms of build count, its
median values for developers when working from home is less than these when
working onsite. On the contrary, the maximum value of build count for developers when working from home is larger than these when working onsite,
which is also shown in Figure 1 This might indicate that a small number of
developers perform more builds when working from home, while most of the
developers perform fewer builds.
According to the feedbacks from Baidu, the workload of a project varies
very quickly in different stages, and a project in the early stage has more
workload than in the mature stage. Thus, we believe that there might be
many other factors except WFH that can affect developer productivity at
different times. In the remaining paper, we only use the records of 2020 (i.e.,
ONSITE 2020 and WFH) to avoid the influences of confound factors.
Overall, WFH has different impacts on developer productivity in terms
of different metrics.

Empir Software Eng

11

Table 7: The cases in which values when working from home is significantly
different for C++ and Java projects
Language

Metric

Positive

Negative

C++

build count
commit count
compile count
lines deleted
lines inserted
release count
review count

sum, max
mean, max
—
—
—
mean
mean, max

min
—
mean, sum
sum
sum
—
—

Java

build count
commit count
compile count
lines deleted
lines inserted
release count
review count

—
—
—
—
—
—
—

mean, median, sum, min
sum
—
—
—
—
mean

3.2 RQ2. The Impact of Programming Language
Methodology: For both the records in WFH and ONSITE 2020, we divide
them into two groups: those from the projects using C++ and Java. For each
group, we use the same method in the RQ1 then investigate whether the difference between the productivity of developers working from home and working
onsite is statistically significant in terms of the aggregate values of each metric.
Results: Table 7 presents the cases in which values when working from home
are significantly different and the effect sizes are not negligible from these when
working onsite for C++ and Java projects. The column ‘Positive’/‘Negative’
means that WFH has a positive/negative impact on developer productivity
in terms of an aggregate value of a metric. “—” means there are no cases in
which values when working from home are significantly different from these
when working onsite for a metric.
We find that for C++ projects, there are both some positive and negative
cases. For example, the mean of commit count, release count and review count
are belong to positive cases while the sum of compile count, lines deleted and
lines inserted are belong to negative cases. On the other hand, all the cases
of Java projects belong to negative cases. This indicates that WFH has more
negative impacts on Java projects than C++ projects.
WFH has both positive and negative impacts on developer productivity
for C++ projects in terms of different metrics but has a negative impact
on developer productivity for Java projects.

12

Empir Software Eng

Table 8: The cases in which values when working from home is significantly
different for APP, SDK and Server projects
Type

Metric

Positive

Negative

APP

build count
commit count
compile count
lines deleted
lines inserted
release count
review count

max
mean, median, sum, max
—
—
—
mean
mean, median, sum, max

mean, min
—
mean
sum
—
—
—

SDK

build count
commit count
compile count
lines deleted
lines inserted
release count
review count

mean, max
—
—
—
—
—
—

min
min
—
min
min
—
min

SERVER

build count
commit count
compile count
lines deleted
lines inserted
release count
review count

—
—
—
—
—
—
—

median, min
—
mean, sum
sum
sum
mean
—

3.3 RQ3. The Impact of Project Type
Methodology: We split the records in the dataset into three parts based
on the project type, i.e., APP, SERVER, and SDK. For each part, we use the
same approach as RQ1 and RQ2 to investigate the difference between the
productivity of developers when working from home and working on site for
projects with different types.
Results: Table 8 presents the cases in which values when working from home
are significantly different from those when working onsite and and the effect
sizes is not negligible for APP, SERVER, and SDK projects. For APP projects, there
are some positive and negative cases, which indicates that WFH might have
both positive and negative impacts on developer productivity. For example, in
terms of mean, median, sum and max of commit count and review count, their
values for developers when working from home are significantly larger than
these when working onsite; on the contrary, in terms of mean of build count
and compile count, their values for developers when working from home are
significantly less than these when working onsite.
For SDK and SERVER projects, most of the cases are negative, which indicates that WFH have a negative impact on developer productivity. This might
be because SDK and SERVER projects usually has more components than APP
projects, which requires more collaboration and communication with the other
developers. According to the feedbacks from Baidu (see Section 4.1), WFH has

Empir Software Eng

13

Table 9: The cases in which values when working from home is significantly
different for projects created in 2017 and 2018
Year

Metric

Positive

Negative

2017

build count
commit count
compile count
lines deleted
lines inserted
release count
review count

max
mean, sum, max
—
median, max
median, max
mean
mean, median, sum, max

median, min
—
mean
—
sum
—
—

2018

build count
commit count
compile count
lines deleted
lines inserted
release count
review count

—
—
—
—
—
—
—

median, min
—
mean, sum
mean, sum
sum
—
sum

a negative impact on collaboration and communication, which decreases developer productivity.
WFH has both positive and negative impacts on developer productivity for APP projects and decreases developer productivity for SDK and
SERVER projects.

3.4 RQ4. The Impact of Project Age
Methodology: As the projects in the dataset are created in two different
years, i.e., 2017 and 2018, we split the records into two groups based on the
year in which a project is created. Then, we investigate the difference between developer productivity when working from home and working onsite for
projects of different ages.
Results: Table 9 presents the cases in which values when working from home
are significantly different from those when working on site and the effect sizes
are not negligible for projects created in 2017 and 2018. As shown in this table,
for projects created in 2017, there are more positive cases than negative cases.
For example, the mean of commit count, release count, and review count are
belong to positive cases while only the mean of compile count is belong to
negative cases. On the other hand, all the cases of projects created in 2018
belong to negative cases. According to the feedbacks from Baidu, comparing
to projects created in 2017, projects created in 2018 are newer and might have
more tasks and schedules. It is not easy for a project to complete some kinds
of tasks or schedules when working at home, for example, recruiting a new

14

Empir Software Eng

Table 10: The cases in which values when working from home is significantly
different for small and large projects
Size

Metric

Positive

Negative

Small

build count
commit count
compile count
lines deleted
lines inserted
release count
review count

max
mean, sum, max
—
median
median
—
mean, median, sum, max

median, min
—
mean
—
—
—
—

Large

build count
commit count
compile count
lines deleted
lines inserted
release count
review count

sum
—
—
—
—
—
—

median, min
—
mean, sum
sum
sum
mean, max
—

Table 11: Developers whose productivity when working from home is significantly different from those when working onsite in terms of different features
Project

Developer

P1
P1
P1
P1
P1
P1
P2
P5
P5
P5
P5
P5
P5
P5
P5
P5
P5
P5
P6
P7
P8

D1
D2
D3
D4
D5
D8
D1
D5
D6
D7
D11
D13
D14
D17
D20
D23
D24
D29
D2
D2
D6

build count

commit count

compile count

lines deleted

lines inserted

release count

review count

0.567 (large)∗∗∗
7
7
-0.395 (medium)∗∗
7
7
7
-0.427 (medium)∗∗
7
0.585 (large)∗∗
7
7
7
1.000 (large)∗∗
7
7
0.351 (medium)∗
7
7
7
7

0.634 (large)∗∗∗
-0.316 (small)∗
7
-0.358 (medium)∗∗
-0.083 (negligible)∗
7
-0.667 (large)∗
-0.296 (small)∗
7
0.530 (large)∗∗
-0.368 (medium)∗
7
7
0.636 (large)∗
7
7
0.385 (medium)∗∗
7
7
-0.312 (small)∗
7

7
-0.176 (small)∗
7
7
7
7
7
7
7
7
7
7
7
7
-0.167 (small)∗
7
7
7
7
7
7

0.324 (small)∗∗
7
7
7
7
-0.196 (small)∗
7
-0.290 (small)∗
-0.293 (small)∗
0.367 (medium)∗
-0.405 (medium)∗∗
7
7
0.591 (large)∗
7
0.280 (small)∗
7
7
7
-0.413 (medium)∗∗
7

0.295 (small)∗
7
7
0.272 (small)∗
7
-0.197 (small)∗
-0.667 (large)∗
7
7
0.537 (large)∗∗
-0.402 (medium)∗∗
7
7
-0.773 (large)∗∗
-0.451 (medium)∗∗
7
7
7
7
-0.264 (small)∗
7

7
7
7
7
7
0.148 (small)∗∗∗
7
7
7
7
7
7
7
7
7
7
7
-0.688 (large)∗
7
7
7

0.452 (medium)∗∗∗
7
0.445 (medium)∗∗∗
7
-0.335 (medium)∗∗
7
0.600 (large)∗
7
7
7
-0.299 (small)∗
0.288 (small)∗∗
0.214 (small)∗
7
7
0.372 (medium)∗∗
-0.368 (medium)∗∗
7
-0.342 (medium)∗
7
0.833 (large)∗

* denotes p-value< 0.05; ** denotes p-value< 0.01; *** denotes p-value< 0.001;.

developer usually takes more time when working at home, but a newer project
usually needs more new developers than these older projects.

WFH has a positive effect on developer productivity for projects created in 2017 but a negative impact on developer productivity for
projects created in 2018.

Empir Software Eng

15

Table 12: The number of developers whose productivity when working from
home is significantly larger and smaller than that when working onsite in terms
of each metric.
Metric

#Positive

#Negative

build count
commit count
compile count
line deleted
line inserted
release count
review count

4
3
0
3
3
1
7

2
7
2
6
6
1
4

3.5 RQ5. The Impact of Project Size
Methodology: As shown in Table 3, these eight projects have different numbers of developers. We regard the project P4 and P5 whose number of developers are larger than 20 as large projects, and the other 6 projects as small
projects. Then, we split the records into two groups based on project size.
Then, we investigate the difference between developers’ productivity when
working from home and working onsite for projects with different sizes.
Results: Table 10 presents the cases in which values when working from home
are significantly different from those when working onsite and the effect sizes
are not negligible for small and large projects. We find that there are more
positive cases than negative cases for small projects and most of the cases in
large projects are belong to negative cases except for the sum of build count.
The reason might be that it is more difficult for a large project to adjust
their structure and schedule after working from home and it is more difficult
for large projects to collaborate and communicate with others when working
from home.
WFH has a larger impacts on developer productivity for large projects
than small projects.

3.6 RQ6. The Productivity of Individual Developers When Working From
Home
Methodology: For each developer in our dataset, we have two kinds of
records, i.e, those when working from home and when working onsite. Then,
we investigate whether their productivity when working from home is significantly different from that when working onsite in terms of each metric. We
also compute Cliff’s delta Cliff (2014) to quantify the amount of difference.
For the records when working on site, we only use ONSITE 2020 according to
the findings in RQ1.

16

Empir Software Eng

Results: Table 11 presents the individual developers if there exists at least
one case in which the values of an aggregation of a metric when working
from home are significantly different from those when working onsite. The
second column in this table is the index of a developer in their project. Out of
139 developers in the whole dataset, the productivity of 21 developers when
working from home is different from that when working onsite. This indicates
that the productivity of the majority of developers (84.8%) when working from
home is similar to that when working onsite.
Table 12 presents the number of developers for who WFH has a positive or
negative impact on their productivity in terms of a metric. As shown in this
table, only in terms of compile count, there is no developer whose productivity
when working from home is significantly larger that that when working onsite.
We also notice that the productivity of several developers when working from
home is significantly larger than when working onsite in terms of all metrics,
e.g., D1 of the project P1 and D7 of the project P5. For these developers, the
company should encourage allow them to work from home for more time since
remote work can improve their productivity. On the contrary, some developers
are less productive when working from home, e.g., D2 of the project P1 and
D5 of the project P5. For these developers, remote work is not encouraged
since their productivity decreases when working from home.
The productivity of the majority of developers when working from
home is similar to that when working onsite. For a small portion of
developers, WFH has different impacts on their productivity.

4 Discussion
In this section, we first present the feedbacks from Baidu, then provide implications of our findings. At the end of this section, we discuss some threats to
validity.
4.1 Feedbacks from Baidu
Based on our findings, we asked the developers in the studied projects to share
their opinions on the impacts of WFH on their productivity. Many of them
agreed that WFH can have both positive and negative impacts on developer
productivity. Some also agree that there is no difference in productivity when
working from home. The followings are some of the feedbacks we collected:
WFH improves developer productivity.

U
U

It’s the first time for some developers to work from home, so they feel
very excited and have a lot of energy to do their work.
Developers can focus on their own work and not be disturbed by colleague.

Empir Software Eng

U
U
U
U
D
D
D

17

After working from home, the company asked developers to write daily
reports instead of weekly reports. Daily reports can help developers recall
their daily work and push them to work harder in the second day if their
tasks aren’t completed.
WFH decreases the cost of transportation and save a lot of time for
developers.
WFH might increase developers’ working time because there is no switch
between workplace and home and developers can work very early in the
morning or very late in the evening.
WFH gives developers better work-life balance so that developers can
work in better condition.

WFH decreases developer productivity.
There are many other stuff (e.g., looking after children or pets, cooking
by themselves, etc) to interrupt developers’ work and take a lot of their
time.
Some developers without self-discipline cannot focus on work when working from home. Unlikely onsite, they might be too relax at home since there
is no colleague around them.
Although video conferencing tools or telephone are now very convenient for communication, the efficiency of collaboration still decreases
due to working from home.

There is no difference in developer productivity when working from
home.
 There are no barriers for many developers to complete their daily tasks
(e.g., writing code, build projects, code review, etc.) when working from
home.
 There is no difference of project schedule between working from home and
working onsite since developers can know the schedule using an online
project schedule tool.
 Current video conferencing tools are very powerful, for example, they usually support screen sharing. So, there is a very slight difference between
meeting at a meeting room of the company and online.
4.2 Implications
WFH has different impacts on overall developer productivity. Many
previous studies have shown that WFH has a positive effect on the productivity of workers Neufeld and Fang (2004, 2005); Baker et al. (2007); Laihonen
et al. (2012); Coenen and Kok (2014); Campbell (2015); Kazekami (2020).
Some other studies also showed that WFH might have a negative impact on
employee productivity. For example, Kazekami found that the long working
time of WFH would decrease teleworker productivity Kazekami (2020). In our
study, we use a quantitative analysis method to show that WFH has different

18

Empir Software Eng

impacts on developer productivity. From the feedbacks of Baidu, the difference
in developer productivity might be caused by many reasons. As shown in RQ6,
since the productivity of developers is not affected by working from home, we
recommend that WFH can be considered as a choice of work arrangement
for employees because WFH offers many other benefits except productivity,
such as saving costs for the company and the flexibility of working time for
developers.
A project needs prepare for WFH according to its own characteristics. In this study, we find that developer productivity might be associated with the characteristics of a project including programming language
and project type/age/size. For example, WFH might have a positive effect
on developer productivity for small project but do not affect developer productivity for large projects (see RQ2 in Section 3.5). Thus, we believe that
adopting the WFH policy for a project should be based on its own characteristics, e.g., programming languages, and project size. When starting the WFH
policy, a project needs to prepare some resources to reduce the risks of decreasing developer productivity. For example, a large project should consider
the communication cost of WFH and prepare the relevant tools to facilitate
the communication of the team.
Using different strategies of WFH for individual developers. We find
that the productivity of the majority of developers in this study does not
change when working from home. Still there exist some developers whose productivity when working from home is different from these when working onsite. Thus, some approaches based on some development metrics can be used
to identify whether the productivity of a developer increases or decreases when
working from home. Once the productivity of a developer decreases, the project
manager needs to identify the reasons behind it. If the developer is not suitable
to WFH, they should be asked to go to the company for work. On the other
hand, if the productivity of a developer increases, the project team should
allow them to continue working from home.
For researchers, to improve individual developers’ productivity when working from home, more empirical studies are required to investigate more factors
that affect their productivity, e.g., personality, moods, and their working environment at home. Additionally, some machine learning models based on
developers’ daily activities can be built to predict whether their productivity
will change when working from home.

4.3 Threats to Validity
Threats to internal validity. First, there might exist errors in our code
and experiment setting. We write a python script to process and analyze the
dataset provided by Baidu. We double-check our code, however, there may
exist some errors that we do not notice. The second internal validity is that
we use some metrics of software development (e.g., the number of builds and

Empir Software Eng

19

commits) in the dataset to measure developer productivity. We think these
metrics can potentially indicate the productivity of developers and we also
use multiple aggregate values (such as mean and median) of these metrics by
day to measure the productivity. Third, there might be many other factors
(e.g., the workload in different times) that affect developer productivity. It
is difficult to exclude all other factors in the study. To minimize this threat,
we only use the records of developers’ activities of WFH and ONSITE in the
same year (i.e., 2020) for comparison. Finally, the metrics in the dataset are
standardized due to the security policy and privacy of Baidu. But we focus
on the difference between the productivity of developers when working from
home and working onsite. Thus, we believe that the comparison results using
standardized values does not affect the findings in the study.
Threats to external validity relate to the generalizability of our findings.
In this study, the dataset we used is from Baidu. Thus, it is unclear whether
the same results still hold for other developers from other companies. However,
since Baidu is one of the largest IT companies in China, we believe that our
findings in this study have typical and common characteristics to some extent.
Additionally, we analyze 138 working days of software development activities
from 139 developers. These developers are from eight different projects with
different characteristics such as programming languages and project types.
Another threat to external validity relate to the generalizability of the metrics
used to measure the productivity of developers. These metrics used in this
study are very general and often used in software development Bao et al.
(2019); Yan et al. (2019); ?. In the future, to reduce these threats, we plan
to investigate more developers from different companies and consider more
metrics.

5 Related Work
In this section, we discuss related work in fields of working from home and
developer productivity.
5.1 Working from Home
There are many studies in the literature that investigate the benefits and
drawbacks of WFH (Nilles 1994; Bailey and Kurland 1999; Shin et al. 2000;
Pérez et al. 2002; Felstead and Henseke 2017; Aguilera et al. 2016). According
to the literature, the main benefits of WFH for companies include saving costs
of buildings and increasing productivity and job satisfaction of employees. For
employees, WFH gives them more flexible working time and provides better
work-life balance. WFH can also offer benefits to some special kinds of persons,
such as the disabled (Spark 2017) and transgender developers (Ford et al.
2019). The main disadvantages of WFH are the access to technology and
the integration of telework with the company’s strategy and organisational
structure, as well as the teleworkers motivation and control (Pérez et al. 2002).

20

Empir Software Eng

Felstead and Henseke also reported that telework makes employees it difficulty
to insulate the world of work from other aspects of life when both worlds collide
and overlap (Felstead and Henseke 2017).
Several studies have investigated the impact of WFH on productivity (Neufeld
and Fang 2004, 2005; Baker et al. 2007; Laihonen et al. 2012; Coenen and Kok
2014; Campbell 2015; Kazekami 2020). Among these studies, many of them
reported that WFH has a positive impact on the productivity of teleworkers.
For example, Coenen and Kok found that telework has a positive effect on the
performance of new product development through enabling knowledge sharing,
cross-functional cooperation and inter-organizational involvement (Campbell
2015). On the contrary, WFH might have a negative impact on productivity.
For instance, Kazekami found that appropriate telework hours increase labor
productivity but when telework hours are too long, telework decreases labor
productivity (Kazekami 2020). WFH might decrease the efficiency of developer
communication, which plays an important role in software development (Wolf
et al. 2009).
However, most of previous studies for WFH are based on a qualitative
analysis using survey or interview. The participants in these studies are general workers not only for developers, and they do not have the experience
of working from home for a long continuing time. In this study, we perform
a quantitative analysis based on a lot of activity data of developers when
working from home during the time of COVID-19 pandemic. We focus on the
impact of WFH on developer productivity and the potential factors affecting
developer productivity.

5.2 Developer Productivity
A lot of studies use developers’ daily activities to investigate their productivity. For example, Perry et al. found that many developers spend a lot of
time on the communication with colleague (Perry et al. 1994). Additionally,
many studies reported that developers work is fragmented and frequently interrupted, which has an important impact on their productivity (Bailey et al.
2001; Chong and Siino 2006; Czerwinski et al. 2004; Horvitz 2001; Parnin and
DeLine 2010; van Solingen et al. 1998). For example, Sanchez et al. found that
work fragmentation is correlated to lower observed productivity and longer
activity switches seem to strengthen the effect (Sanchez et al. 2015).
Developer productivity is often measured by software artifacts produced
by developers in a certain time, e.g., submitted lines of code (LOC) (Devanbu
et al. 1996; Nguyen et al. 2011), function points (Albrecht 1979), completed
tasks (Minelli et al. 2015), and time to implement a requirement (Cataldo
et al. 2008). Meyer et al. proposed a list of metrics to measure developer
productivity and several ways to improve a developer’s productivity through
tool support (Meyer et al. 2014). Some studies also investigate the factors affecting developer productivity, e.g., characteristics of workplace (e.g., privacy,
noise) (DeMarco and Lister 1985), programming languages and development

Empir Software Eng

21

tools (Boehm 1987), project switching (Vasilescu et al. 2016), and developers’ mood (Khan et al. 2011). Additionally, personal factors might have an
impact on productivity, for example, some developers feel more productive
when communicating with others but some don’t like to be interrupted when
working (Meyer et al. 2017).
Due to the outbreak of COVID-19, some researchers also start to investigate the effect of the pandemic on developers’ productivity. For example,
Ralph et al. conducted a survey and found that the pandemic has had a negative effect on developers’ productivity (Ralph et al. 2020).
In this study, we focus on the difference of developer productivity between
working from home and working onsite. We measure developer productivity
by several metrics based on developers’ daily activities, which have been used
in previous studies. We also investigate the factors affecting developer productivity when working from home, such as programming language, project type,
project size, etc.

6 Conclusion
In this paper, we investigate the productivity of developers when working from
home for a long time due to the COVID-19 pandemic. We use a quantitative
analysis based on a dataset of developers’ daily activities from Baidu. To compare developer productivity when working from home with that when working
on site, we use several metrics of software development in the dataset, such as
the number of builds, commits, and inserted/deleted lines. We find that WFH
has different impacts on developer productivity in terms of different metrics.
Also, we investigate some factors affecting developer productivity when working from home including programming language and project type/age/size.
Additionally, we find that a small number of individual developers have different productivity when working from home. In the future, we plan to extend
our study by using more data from more developers and companies. We also
want to build machine learning models to predict developer productivity based
on developers’ daily activities.

References
A. Aguilera, V. Lethiais, A. Rallet, L. Proulhac, Home-based telework in france: Characteristics, barriers and perspectives. Transportation Research Part A: Policy and Practice
92, 1–11 (2016)
A.J. Albrecht, Measuring application development productivity, in Proc. Joint Share, Guide,
and IBM Application Development Symposium, 1979, 1979
B.P. Bailey, J.A. Konstan, J.V. Carlis, The Effects of Interruptions on Task Performance,
Annoyance, and Anxiety in the User Interface., in Interact, vol. 1, 2001, pp. 593–601
N. Bailey, N.B. Kurland, The advantages and challenges of working here, there, anywhere,
and anytime. Organizational dynamics 28(2), 53–68 (1999)
E. Baker, G.C. Avery, J. Crawford, Satisfaction and perceived productivity when professionals work from home. Research & Practice in Human Resource Management (2007)

22

Empir Software Eng

L. Bao, X. Xia, D. Lo, G.C. Murphy, A large scale study of long-time contributor prediction
for github projects. IEEE Transactions on Software Engineering (2019)
B.W. Boehm, Improving software productivity. Computer, 43–57 (1987)
K.M. Campbell, Flexible work schedules, virtual work programs, and employee productivity
(2015)
M. Cataldo, J.D. Herbsleb, K.M. Carley, Socio-technical congruence: a framework for assessing the impact of technical and work dependencies on software development productivity, in Proceedings of the Second ACM-IEEE international symposium on Empirical
software engineering and measurement, 2008, pp. 2–11
J. Chong, R. Siino, Interruptions on software teams: a comparison of paired and solo programmers, in Proceedings of the 2006 20th anniversary conference on Computer supported cooperative work, 2006, pp. 29–38
N. Cliff, Ordinal methods for behavioral data analysis (Psychology Press, ???, 2014)
M. Coenen, R.A. Kok, Workplace flexibility and new product development performance:
The role of telework and flexible work schedules. European Management Journal 32(4),
564–576 (2014)
M. Czerwinski, E. Horvitz, S. Wilhite, A diary study of task switching and interruptions, in
Proceedings of the SIGCHI conference on Human factors in computing systems, 2004,
pp. 175–182
T. DeMarco, T. Lister, Programmer performance and the effects of the workplace, in Proceedings of the 8th international conference on Software engineering, IEEE Computer
Society Press, 1985, pp. 268–272. IEEE Computer Society Press
P. Devanbu, S. Karstu, W. Melo, W. Thomas, Analytical and empirical evaluation of software reuse metrics, in Proceedings of IEEE 18th International Conference on Software
Engineering, IEEE, 1996, pp. 189–199. IEEE
A. Felstead, G. Henseke, Assessing the growth of remote working and its consequences for
effort, well-being and work-life balance. New Technology, Work and Employment 32(3),
195–212 (2017)
D. Ford, R. Milewicz, A. Serebrenik, How remote work can foster a more inclusive environment for transgender developers, in 2019 IEEE/ACM 2nd International Workshop on
Gender Equality in Software Engineering (GE), IEEE, 2019, pp. 9–12. IEEE
E.J. Hill, M. Ferris, V. Märtinson, Does it matter where you work? a comparison of how
three work venues (traditional office, virtual office, and home office) influence aspects of
work and personal/family life. Journal of Vocational Behavior 63(2), 220–241 (2003)
E.C.M.C.E. Horvitz, Notification, disruption, and memory: Effects of messaging interruptions on memory and performance, in Human-Computer Interaction: INTERACT, vol.
1, 2001, p. 263
S. Kazekami, Mechanisms to improve labor productivity by performing telework. Telecommunications Policy 44(2), 101868 (2020)
I.A. Khan, W.-P. Brinkman, R.M. Hierons, Do moods affect programmers’ debug performance? Cognition, Technology & Work 13(4), 245–258 (2011)
H. Laihonen, A. Jääskeläinen, A. Lönnqvist, J. Ruostela, Measuring the productivity impacts
of new ways of working. Journal of facilities management (2012)
C. Melo, D.S. Cruzes, F. Kon, R. Conradi, Agile team perceptions of productivity factors,
in 2011 Agile Conference, IEEE, 2011, pp. 57–66. IEEE
A.N. Meyer, T. Zimmermann, T. Fritz, Characterizing software developers by perceptions
of productivity, in 2017 ACM/IEEE International Symposium on Empirical Software
Engineering and Measurement (ESEM), IEEE, 2017, pp. 105–110. IEEE
A.N. Meyer, T. Fritz, G.C. Murphy, T. Zimmermann, Software developers’ perceptions of
productivity, in Proceedings of the 22nd ACM SIGSOFT International Symposium on
Foundations of Software Engineering, 2014, pp. 19–29
A.N. Meyer, L.E. Barton, G.C. Murphy, T. Zimmermann, T. Fritz, The work life of developers: Activities, switches and perceived productivity. IEEE Transactions on Software
Engineering 43(12), 1178–1193 (2017)
R. Minelli, A. Mocci, M. Lanza, I know what you did last summer-an investigation of how
developers spend their time, in 2015 IEEE 23rd International Conference on Program
Comprehension, IEEE, 2015, pp. 25–35. IEEE
D.J. Neufeld, Y. Fang, Predicting telecommuter productivity, in 37th Annual Hawaii Inter-

Empir Software Eng

23

national Conference on System Sciences, 2004. Proceedings of the, IEEE, 2004, p. 10.
IEEE
D.J. Neufeld, Y. Fang, Individual, social and situational determinants of telecommuter productivity. Information & Management 42(7), 1037–1049 (2005)
V. Nguyen, L. Huang, B. Boehm, An analysis of trends in productivity and cost drivers
over years, in Proceedings of the 7th International Conference on Predictive Models in
Software Engineering, 2011, pp. 1–10
J.M. Nilles, Making telecommuting happen: A guide for telemanagers and telecommuters
1994
E. Paiva, D. Barbosa, R. Lima, A. Albuquerque, Factors that influence the productivity
of software developers in a developer view, in Innovations in computing sciences and
software engineering (Springer, ???, 2010), pp. 99–104
C. Parnin, R. DeLine, Evaluating cues for resuming interrupted programming tasks, in
Proceedings of the SIGCHI conference on human factors in computing systems, 2010,
pp. 93–102
M.P. Pérez, A.M. Sánchez, M. de Luis Carnicer, Benefits and barriers of telework: perception
differences of human resources managers according to company’s operations strategy.
Technovation 22(12), 775–783 (2002)
D.E. Perry, N.A. Staudenmayer, L.G. Votta, People, organizations, and process improvement. IEEE Software 11(4), 36–45 (1994)
P. Ralph, S. Baltes, G. Adisaputri, R. Torkar, V. Kovalenko, M. Kalinowski, N. Novielli,
S. Yoo, X. Devroey, X. Tan, et al., Pandemic programming: How covid-19 affects software developers and how their organizations can help. arXiv preprint arXiv:2005.01127
(2020)
H. Sanchez, R. Robbes, V.M. Gonzalez, An empirical study of work fragmentation in software evolution tasks, in 2015 IEEE 22nd International Conference on Software Analysis, Evolution, and Reengineering (SANER), IEEE, 2015, pp. 251–260. IEEE
B. Shin, O.A. El Sawy, O.R.L. Sheng, K. Higa, Telework: Existing research and future
directions. Journal of organizational computing and electronic commerce 10(2), 85–101
(2000)
R. Spark, Accessibility to Work from Home for the Disabled: The Need for a Shift in Management Style, in Proceedings of the 14th Web for All Conference on The Future of
Accessible Work, 2017, pp. 1–4
R. van Solingen, E. Berghout, F. van Latum, Interrupts: just a minute never is. IEEE
software 15(5), 97–103 (1998)
B. Vasilescu, K. Blincoe, Q. Xuan, C. Casalnuovo, D. Damian, P. Devanbu, V. Filkov, The
sky is not the limit: multitasking across GitHub projects, in Proceedings of the 38th
International Conference on Software Engineering, 2016, pp. 994–1005
G. Von Krogh, S. Spaeth, K.R. Lakhani, Community, joining, and specialization in open
source software innovation: a case study. Research policy 32(7), 1217–1241 (2003)
F. Wilcoxon, Individual comparisons by ranking methods. Biometrics bulletin 1(6), 80–83
(1945)
T. Wolf, A. Schroter, D. Damian, T. Nguyen, Predicting build failures using social network
analysis on developer communication, in 2009 IEEE 31st International Conference on
Software Engineering, IEEE, 2009, pp. 1–11. IEEE
X. Xia, L. Bao, D. Lo, Z. Xing, A.E. Hassan, S. Li, Measuring program comprehension: A
large-scale field study with professionals. IEEE Transactions on Software Engineering
44(10), 951–976 (2017)
M. Yan, X. Xia, D. Lo, A.E. Hassan, S. Li, Characterizing and identifying reverted commits.
Empirical Software Engineering 24(4), 2171–2208 (2019)

