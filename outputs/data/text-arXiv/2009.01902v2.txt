IoT-based Contact Tracing Systems for Infectious
Diseases: Architecture and Analysis
Peng Hu

arXiv:2009.01902v2 [cs.CY] 13 Feb 2021

Digital Technologies Research Center
National Research Council of Canada
Waterloo, Canada
Peng.Hu@nrc-cnrc.gc.ca

Abstract—The recent COVID-19 pandemic has become a major threat to human health and well-being. Non-pharmaceutical
interventions such as contact tracing solutions are important
to contain the spreads of COVID-19-like infectious diseases.
However, current contact tracing solutions are fragmented with
limited use of sensing technologies and centered on monitoring the interactions between individuals without an analytical
framework for evaluating effectiveness. Therefore, we need to
first explore generic architecture for contact tracing in the
context of today’s Internet of Things (IoT) technologies based
on a broad range of applicable sensors. A new architecture
for IoT based solutions to contact tracing is proposed and its
overall effectiveness for disease containment is analyzed based
on the traditional epidemiological models with the simulation
results. The proposed work aims to provide a framework for
assisting future designs and evaluation of IoT-based contact
tracing solutions and to enable data-driven collective efforts on
combating current and future infectious diseases.

I. I NTRODUCTION
The recent COVID-19 pandemic has become a major threat
to human health and well-being. With the absence of effective
vaccines and pharmaceutical treatments, non-pharmaceutical
interventions (NPIs) [1] through reducing contact rates and
contact tracing of suspected exposure to an infectious disease
are essential to containing emerging epidemics [2]. The use of
Internet-based systems has shown its importance in pandemics
[3], but there is still much room for improvement for the
current non-pharmaceutical interventions based on the traditional reporting model. With the advanced Internet of Things
(IoT) and artificial intelligence (AI) technologies, autonomous
contact tracing for infectious diseases can be enabled. It is the
right time to examine how IoT-based contact tracing system
(IoT-CTS) can help with the disease containment.
Current implementations on contact tracing are centered on
user interactions between individuals. These so-called “peerto-peer” (P2P) contact tracing solutions need to detect locations or proximity of users, which can be done in various
means. Positioning or navigation devices such as GPS, Bluetooth [4]–[6], mobile networks [7], and thermal cameras can
be used to detect the location traces or proximity of users
automatically. There are solutions using other sensors such
as magnetometers [8] for inferring the proximity between
users. Contact tracing can be also performed through manual

scanning of bar codes or QR codes on mobile devices [9] and
through the analysis with the activity traces on social network
platforms. However, an IoT-CTS can involve a broad use of
various sensing technologies that have not been addressed
systematically from its design to evaluation.
With different sensing and connectivity options of an IoT
system, we may easily design a solution for contact tracing.
However, we need to understand two basic problems: what we
can do with an IoT-CTS for contact tracing and how to evaluate
it in the design phase? The first problem relates to the design
of a generic IoT-CTS, where the context of system architecture
and the mobility in geographical regions need to be considered.
In that context, the system capabilities, characteristics, use
cases, and deployment options can be clearly discussed. To
address the second problem, we need to see how the IoT-CTS
can affect the classical epidemiological models.
In this paper, we will address the essential topics for
the IoT-CTS designs from the perspective of key elements,
architecture, and analytical methods. The key contributions
made are summarized as follows:
• Key elements including sensing technologies, sensing
data and its usage for an IoT-CTS are systematically
discussed.
• A generic architecture for IoT-CTS solutions is proposed
where the protocol structure model, key entities and
operational models are discussed.
• Analysis of the proposed solution using the epidemiological model is examined against the classical SIR model
and is shown effective through the computer simulations
in typical scenarios.
The rest of the paper is structured as follows. Section II
presents the related work. Section III discusses the proposed
system architecture. Section IV discusses the general analysis methods and performance evaluation. Section V presents
conclusive remarks and future work.
II. R ELATED W ORK
The latest works have been focused on multi-disciplinary
research on contact tracing in interacting networks. Farrahi
et al. [4] studied how to reconstruct physical interactions
from the mobile phone communication logs on calls, short
messages, and Bluetooth interactions, where the physical interaction networks and communication networks are modelled

©2020 Crown
Citation: P. Hu, ”IoT-based Contact Tracing Systems for Infectious Diseases: Architecture and Analysis,” GLOBECOM 2020 - 2020 IEEE Global
Communications Conference, Taipei, Taiwan, 2020, pp. 1-7, doi: 10.1109/GLOBECOM42002.2020.9347957.

P. Hu, ”IoT-based Contact Tracing Systems for Infectious Diseases: Architecture and Analysis,” GLOBECOM 2020 - 2020 IEEE Global Communications Conference, Taipei,
Taiwan, 2020, pp. 1-7, doi: 10.1109/GLOBECOM42002.2020.9347957.

as a dual network setting where the latter can be viewed as
“proxies” of the former. Alvarez Zuzek et al. [4] studied the
isolation effect based on the SIR model following a twolayer network, with one layer in the work environment and
the other layer in the social environment. Salathé et al. [3]
indicated the use of Internet-based systems for surveillance
such as the Internet, mobile phones, and social media can
provide “important early epidemic intelligence for the 2003
SARS and 2009 H1N1 influenza pandemic”.
An IoT-CTS relies on sensing technologies, where multiple
kinds of them can be used. On the one hand, an automatic
P2P contract tracing solution with proximity sensing can be
realized through various sensing mechanisms such as wireless,
ultrasonic, inductive, and capacitive sensing. The proximity
sensing mechanisms may result in different precision performance at a distance. The wireless sensing technologies can use
RFID based solutions such as near-field communication (NFC)
in an active or passive fashion or regular wireless personal-area
networking (WPAN) technologies such as IEEE 802.15.4 and
Bluetooth. The encoded signals sent through electromagnetic
(EM) or acoustic waves can contain messages [10]. On the
other hand, a manual P2P contract tracing solution can be
done through multiple digital ways such as QR codes [7], [9].
The use of these sensing mechanisms would require the
support of hardware and software on user devices and
there are a few sensing technologies that have been utilized in recent implementations. A solution using magnetometers on smartphones based on magnetic induction has
been proposed in [8], where magnetometer readings of two
smartphone users are used to determine close proximity.
A P2P contact tracing app “TrackCOVID” was developed
[11] with privacy preservation. The spatial-proximity information is also shown to be able to infer the flu based on
Wi-Fi and Bluetooth scanning with the PocketCare mobile
app [5]. Apple and Google announced the plan for contact tracing apps called “Privacy-Preserving Contact Tracing” (https://www.apple.com/covid19/contacttracing/), where
the new “Contact Detection Service” for Bluetooth Low
Energy (BLE) [6] will be used as the underlying sensing
technology. From [6], the “contact tracing makes it possible
to combat the spread of the COVID-19 virus by alerting
participants of possible exposure to someone who they have
recently been in contact with, and who has subsequently
been positively diagnosed as having the virus.” The PrivateKit
mobile app (http://privatekit.mit.edu/) developed by MIT uses
GPS and Bluetooth trails for contact tracing with privacy. In
addition, there have been increasing global efforts on making
available data for health research. For example, in March 2020,
the Allen Institute for AI with other research groups have
prepared the COVID-19 Open Research Dataset (CORD-19)
with COVID-19 related full-text articles. In early April 2020,
Facebook released the new data tools for its Data for Good
program [12] to combat COVID-19.
The current applications mainly focus on interactions between users and the use of sensing technologies for nonpharmaceutical contact tracing is in the early stage and many

efforts in hardware and software have yet to be done. The
discussions on key elements and architecture for an IoT-CTS
using various sensing technologies for tracing all essential
events for infectious disease are lacking in the literature, which
will be addressed in the paper.
III. K EY E LEMENTS AND S YSTEM A RCHITECTURE
One characteristic of the IoT-CTS solutions compared to
the traditional contact tracing solutions is the use of sensing
technologies with Internet-based connectivity. Let us first
look at the key elements of an IoT-CTS in the following
subsections.
A. Sensing Technologies for IoT-CTS Solutions
Sensing capabilities are essential for IoT-CTS solutions and
we need to see what and how different types of sensors can
be used for a COVID-19-like infectious disease based on
its transmission methods. Although COVID-19 is still under
research, current information from the public health authorities
[13], [14] indicates that COVID-19 spreads from person to
person through respiratory droplets and from contaminated
surfaces/objects (which are collectively referred as “objects”
later) with different viability on various surfaces [15]. The contact tracing, therefore, needs to address person-to-person and
person-to-object/object-to-person transmissions. The personto-person transmission is for tracking peer-to-peer contacts
between a person in Susceptible (S) or Infectious (I) states
and a healthy person. The person-to-object tracing is to trace a
person in S/I states who may contaminate objects. The objectto-person is for any healthy person who may be infected by
the contaminated objects. In this case, we can enable the
contact tracing in a broader context such as when a person
enters a building where sensing capability for person-to-object
or object-to-person is deployed on the premises. For clarity,
we will refer person-to-object or object-to-person as objectto-person later in the rest of the paper.
Detecting the exposure to infectious diseases through the
person-to-person and object-to-person transmissions require
sensing technologies. The possible sensing technologies are
listed in Table I in alignment with the known methods of
COVID-19 transmissions. The example sensor devices in
Table I list the typical sensing devices, where “mobile” here
generally refers to mobile devices with the presence of mobile
networks, as it is often used to provide communication traces
where possible social media traces from installed apps may
also be utilized.
Generally speaking, these sensors shown in Table I can be
operated in different modes, such as passive mode, proactive
mode, and hybrid mode. The passive mode means sensors
automatically collect tracing-related data. The proactive mode
means sensors collect tracing data with users’ full control.
For example, using the QR code in Table I would fall in the
proactive mode where active user participation is required. The
hybrid mode means sensors can collect tracing data partially
in the proactive mode and partially in the passive mode. In the
hybrid mode, a user may configure which sensors can collect

2

P. Hu, ”IoT-based Contact Tracing Systems for Infectious Diseases: Architecture and Analysis,” GLOBECOM 2020 - 2020 IEEE Global Communications Conference, Taipei,
Taiwan, 2020, pp. 1-7, doi: 10.1109/GLOBECOM42002.2020.9347957.

User Interaction Map

TABLE I
T YPES OF S ENSING TECHNOLOGIES FOR VARIOUS TRANSMISSION MODES
Transmission
mode
Person-toperson

Contaminated
surfaces/objects
(Object-toperson)

Sensing Type

Example Sensor Devices

Location-based

GPS, mobile [4], [5], [11],
ultrasonic, Bluetooth [4],
[5], magnetometer [8]
Camera, QR code [7]
Inductive/capacitive, RFID
[16]

Computer vision
Touch

Distance, proximity

Ultrasonic, Bluetooth [4],
[5], RFID [16]

data without active interventions and which sensors can collect
data under the user’s control and permission. The sensing
devices may take various form factors such as a wearable
device. Although the privacy considerations can be addressed
in these modes, the in-depth discussions are out of the scope
of this paper.
B. Sensing Data

Geographical Map

Object

Contaminated Object

Healthy User

Recovered User

Infectious User

Fig. 1. An illustration visualizing the spatial-temporal sensing data collected,
where a user interacted with other users and objects in different states are
shown in objects interaction and user interaction maps.

C. Protocol stack model
A generic protocol stack model of an IoT-CTS is shown
in Fig. 2 with the key modules including sensor components,
sensors interface, data transport, data management, data logging, processing and reporting as well as security & privacy.
The sensor components can include a combination of sensors
for positioning, proximity, touch, vision, etc., where sensors
interface needs to be designed to configure and adapt the
sensors hardware. The module of data logging, processing &
reporting handles the monitoring and processing of the sensing
data and reporting mechanisms, where the data management
module handles the data storage, retrieval, and configurations,
which can be in compliance with the privacy settings through
the security & privacy module. The data transport module is
responsible for transmitting the data to and interacting with an
external endpoint securely.
IoT-CTS Applications
Data Logging,
Processing &
Reporting

Data
Management

Data Transport

Sensors Interface
Positioning

Distance/
Proximity

Touch

Security &
Privacy

Another important aspect of IoT-CTS solutions is the
sensing data, where its essential features of tracking data
should have the user identifier, location, and timestamp. The
identifier feature functions as the unique index of a user or
an object which can be anonymized. The location feature is
the coordinate of a geographic coordinate system, where the
locations recorded in different coordinate systems should be
able to be convertible between each other. Another useful
feature can be the S/I/R state of a user, which can be used
to log the basic states in the SIR model and extra attributes.
With these features, a spatial-temporal data of each user is
available, which not only allows us to track the probability
of getting infected and able to examine the transmission
patterns over time. Furthermore, the granularity of contract
tracing is indeed determined by the application requirements,
which can be done with different deployment options of
the sensing technologies. For example, if we make possible
contact tracking in public transport, schools, and hospitals (as
illustrated in Fig. 1), we are able to track contact activities
in these buildings, public transport facilities, and on public
transport vehicles. In this way, if there is an infection risk
occurred in a public facility at some time, users can be notified.
The tracing data in other places can be available to a user using
personal sensing devices (such as sensing devices on a mobile
device) while the data usage is in compliance with a privacy
setting or policy.
In the context of an IoT-CTS, we can assume a user is
equipped with a sensing device with sensors that can meet the
logging of the essential features of tracing data. The places that
equipped with sensing devices for automatic contact tracing
can log extra data.
To put the aforementioned discussions into a working IoTCTS, we need to look at the architectural elements of it.

Object Interaction Map

Vision

Fig. 2. Protocol stack model with key modules in an IoT-CTS

D. Architectural Entities
The proposed architecture for an IoT-CTS includes three
entities: user endpoint (UE), facility endpoint (FE), and object
endpoint (OE). An FE is an endpoint at a remote facility
that can communicate with a UE or an OE. An FE can be
a public health authority or a data center which can handle
the data securely and be compliant with privacy policies and
regulations. A UE is an endpoint for a sensing system equipped
sensors hardware and software used by a user following the
structure seen in Fig. 2. Each user has a UE which can
communicate with another UE on another user. An OE is an
endpoint if a sensing system for an object or object surface,
which can detect and monitor the touch events with sensors.
In Fig. 3, basic models of interactions between the basic
IoT-CTS entities are shown, where the models based on the
close proximity detected between UEs are the centralized

3

P. Hu, ”IoT-based Contact Tracing Systems for Infectious Diseases: Architecture and Analysis,” GLOBECOM 2020 - 2020 IEEE Global Communications Conference, Taipei,
Taiwan, 2020, pp. 1-7, doi: 10.1109/GLOBECOM42002.2020.9347957.

FE

FE

Communication
Networks

Communication
Networks

UE
A

UE
B

(a) Centralized model

UE
A

(b) User-centered model
FE

OE
A

(d) Indirect model

UE
A

UE
A

FE 0

UE
B

FE 1

(c) Distributed model

Detection of a contact
event
Data flow of reporting
contact events

Communication
Networks

Communication
Networks

FE

Communication
Networks

UE
B

FE

UE
A

FE

OE
A

FE 2

…

FE n

Fig. 4. Illustration of a virtual FE consisting of multiple FEs

Optional data flow of
reporting contact
events

(e) Direct model

Fig. 3. Models of interactions between UEs, FEs, and OEs.

model, user-centered model, and distributed model. In the
centralized model, UE A and UE B can detect the close
proximity between each other and report their own event data
to an FE through communication networks. In this model, the
FE has the full picture of the information, which can push
data (such as notification of infectious risks) to the UEs and
can enable UEs to retrieve data with authorization. The usercentered model allows a UE to be able to detect and record the
contact events with other UEs and allows the UE to retrieve
information from an FE. In the distributed model, UEs are able
to exchange data between each other and to assess a user’s
infection risks locally but it can retrieve information from an
FE and optionally transmit data to it.
The models between a UE and an OE is shown in Fig. 3
(d) and (e), where the indirect model means the contact event
data between a user and an object is stored through the UE
and the UE can optionally transmit data to the FE. The direct
model means the contact event data are stored in both the UE
and the OE where OE can opt to transmit the data to the FE,
which can reduce the use of compute resource on the OE.
From another perspective, UEs and OEs in Fig. 3 can be
operated in a lightweight or heavyweight fashion, depending
on how operations are performed. A lightweight UE may run
on a mobile device equipped with sensing devices has the
minimum duties. A lightweight OE involves no processing
and storage of data and only transmits data to FE or to UE.
In addition to a single physical FE, it is possible we use
multiple FEs as a virtual FE which is shown in Fig. 4, where
a root FE 0 and n leaf FEs can be interconnected. In a realworld setting, the FE 0 can be an entity of the public health
authority and leaf FEs can be infrastructural entities in public
facilities handling geographically distributed UEs and OEs.
E. Discussion on Use Cases
An IoT-CTS based on the proposed architecture can help
access the risk of exposure to contaminated objects or infectious users over time. We basically need two data sources
for enabling such a use case. One data source is about the
locations of objects and persons which a user has contacted
or has been in the proximity of. The other data source is
the persons or objects that have been identified as an S/I

state where such a data source may be maintained by public
health authorities and allow real-time access from authorized
users for assisting research and self-evaluation of infection
risks. The data sources may be physically stored in multiple
repositories such as the FE entities shown in Fig. 3. For
example, the individual tracing data may be partially stored on
a personal device, and partially stored in a data centre or on a
content distribution network (CDN) on top of interconnected
FEs. The tracing data (who made contacts at which time)
on objects or facilities may be stored in its own repositories.
In this sense, a mechanism of integrating the repositories to
provide seamless data access to users in real-time should be
available. In addition, the IoT-CTS can also make responsive
data collection for public health agencies. For example, the
personal data from facilities with user tracing data can be
fused into one data source with other data sources such as
clinical data which can be used for studying the transmission
and epidemiological patterns, and for determining measures
for public health purposes.

IV. A NALYSIS AND E VALUATION
A. Epidemiological Model of an IoT-CTS
The proposed solution can basically intervene in the transmissions of an infectious disease at least in the following
factors:
•

•

Time required to transition from S to I is shortened. This
is due to the fact that individual risk can be assessed with
medical tests is strengthened. This has been important in
the COVID-19 pandemic across countries.
The individualized strategies can be made when the
assisted assessment of the exposure to the potential risks
is available. This can result in actions such as reduced
interactions between people.

The enhanced capability of contact tracing based on the
proposed IoT-CTS solution can affect the dynamics of an
epidemic, which can be generally explained with the typical
SIR model in (1). Each individual of the population N can
move in three states over time from the susceptible state S,
infected state I, to recovered state R. In a time instant t, the
number of individuals in these states are S(t), I(t), and R(t),
respectively, where S(t) + I(t) + R(t) = N .

4

P. Hu, ”IoT-based Contact Tracing Systems for Infectious Diseases: Architecture and Analysis,” GLOBECOM 2020 - 2020 IEEE Global Communications Conference, Taipei,
Taiwan, 2020, pp. 1-7, doi: 10.1109/GLOBECOM42002.2020.9347957.

dS(t)
S(t)I(t)
= −β
dt
N
S(t)I(t)
dI(t)
=β
− γI(t)
dt
N
dR(t)
= γI(t)
dt

(1)

In (1), γ is the recovery rate and β is the effective contact
rate. The typical reproduction number R0 = βγ gets reduced
when β is reduced and γ is kept the same, which can also be
explained in (2) [17], where τ is the probability of infection
given contact between an S person and an I person, c̄ is the
average rate of contact between S and I persons, and d is the
duration of infectiousness.
(2)

We can see that with invariable τ and d, the enhanced
contact tracing can reduce the value of c̄, which reduces R0
accordingly.

Fig. 5. Illustration of the running simulation. The red circles, green diamonds,
and black squares represent the infectious, recovered, and fatality states of
individuals, respectively.

Population

τ · c̄
β
R0 = =
γ
d

Infectious

5000

Scenario 1
Scenario 2
Scenario 3

0
0

500

1000

B. Performance Analysis

TABLE II
S IMULATION PARAMETERS
Value
5000
3.4%
0.01

2000

2500

3000

2000

2500

3000

2000

2500

3000

Parameter
Average speed (unit/s)
Hospital beds per 1000 ppl.
Prob. of infection in range

Value
0.0042
4.7
0.03

An IoT-CTS solution based on the proposed architecture can
make interventions on a fine-grained individual level. It can at
least help reduce the interaction of users as discussed in the
previous section and affect two parameters in the simulation,
i.e., mobility speed and the probability of infection in range,
which is set to 0.0042 unit/s and 5% by default. The results
are compared against the baseline scenario with no measures
made.

Population

Recovered
2500
0
0

Population

Although we can see the overall effectiveness with the
proposed IoT-CTS architecture, we need to be able to examine
the dynamics with simulations where additional real-world
factors such as age, mobility, risk, and hospital capability are to
be considered. The Python simulations are made based on the
coronavirus simulator (https://tinyurl.com/vhp6pou), where the
simulated individuals are initially distributed across the 1×1
unit square plane. Each person randomly moves at the average
speed of 0.0042 unit/s which is mapped to the average 2.5 m/s
walking speed in the map (with the width of around 600 m)
shown in Fig. 1. Some simulation parameters are shown in
Table II based on the real data from the available information
about COVID-19 and public health. The number of hospital
beds per 1000 people is the average across OECD countries
[18]. An infected person is assumed to have less risk when
there are enough hospital beds for treatment, and that risk is
assumed to be doubled when the hospital beds are insufficient.

Parameter
Population N
Mortality rate
Infection range

1500
Time

500

1000

1500
Time

Fatality

500

0
0

500

1000

1500
Time

Fig. 6. Simulation results of three scenarios

Three scenarios are evaluated in the simulations. Scenario 1
is the baseline case where no measures are taken and the other
scenarios are the cases employing an IoT-CTS. In Scenario 1,
the infection chance is 5% and the average speed of individuals
is 0.0042 unit/s. In Scenarios 2, the infection chance is reduced
to 2% and the average speed to 0.002. Scenario 3 is similar
to Scenario 2 but the average speed is reduced to 0.001 where
the infection chance is kept the same. Scenarios 2 and 3 are
used as a result of the fact that people are more aware of
the risks and taken actions. Other measures may be able to
further reduce the key parameters based on Scenarios 2 and 3,
but the scenarios are used to show the essential results based
on IoT-CTS solutions. For each scenario, 5 simulation runs
are performed.
The intermediate result at time tick 640 for Scenario I
is visualized in Fig. 5, where the infectious, recovered, and
fatality states of individuals are shown after the first infectious
case starts at the time tick 53 at a random location. The
statistical results for all three scenarios are shown in Fig. 6.
We can see overall Scenario 3 has the best results where the
number of infectious cases and fatality cases is the lowest

5

Population

P. Hu, ”IoT-based Contact Tracing Systems for Infectious Diseases: Architecture and Analysis,” GLOBECOM 2020 - 2020 IEEE Global Communications Conference, Taipei,
Taiwan, 2020, pp. 1-7, doi: 10.1109/GLOBECOM42002.2020.9347957.

Infectious

5000

Scenario 1
Scenario 2L
Scenario 3L

0
0

1000

2000

3000

4000

5000

3000

4000

5000

3000

4000

5000

Time
Population

Recovered
2500
0
0

1000

2000
Time

Population

Fatality
250
0
0

1000

2000
Time

Fig. 7. Simulation results of three scenarios with a lockdown measure

of the 3 scenarios. Also, in Scenario 3, while the number of
recovered cases is the same as the other two scenarios, its
infectious, recovered, and fatality cases take the longest time
span. For example, the last infectious case of Scenario 3 occurs
at the time tick 3005, where the last recovered case and fatality
case occur at a similar time, while these cases of Scenario 1
occur around the time tick 937. Scenario 2 has a better result
where the last infectious case occurs at the time tick 1744
but the fatality case occurs at the time tick 1742 which lasts
longer. Scenario 2 has a better result than that of Scenario
1, where its number of infectious and fatality cases is lower
than those in Scenario 1. We can also see the curves of the
infectious cases in Scenarios 2 and 3 are flatter than those
of Scenario 1. The similar fatalities among the scenarios are
due to the limited hospital resources we have configured for
the simulation. In summary, the simulation results essentially
show the overall effectiveness of the IoT-CTS solutions based
on the proposed architecture.
In Fig. 7, the results of the Scenarios 2 and 3 with the use
of lockdown measures (referred to as Scenarios 2L and 3L,
respectively) are shown, where the lockdown measure for all
people is taken when 10% population is infected. Assuming
92% population is in compliance with the measure, we can see
the number of infectious cases here is much lower than that in
Fig. 6. Scenario 3L has a better performance than Scenario 2L
in the infectious and recovered cases. The results show even
in the presence of a strong lockdown measure an IoT-CTS can
still play a key role in early containment of the spreads of a
disease.
V. C ONCLUSION
With the intensive efforts on combating COVID-19, one
question we would raise is “what would we do differently
with the latest IoT technologies when facing such an infectious
disease?” Technological advancements in communications,
sensing, and computation have enabled powerful tools for infectious disease surveillance and detection in various aspects.
Recent advancements in IoT, Tactile Internet and AI allow us
to propose novel solutions based on new computation models

with ubiquitous and ever-enhanced sensing and networking. It
is of utmost importance to start exploring the key fundamentals
of the IoT-CTS solutions for the current pandemic and beyond.
The proposed work allows us to design IoT-CTS solutions
in a standardized way. With the IoT-CTS architecture, the
fine-grained capability of contact tracing can bee utilized
in various applications, such as containment of infectious
diseases, assisted self-evaluation of infections, and responsive
data sharing for collaborative research efforts. The future work
includes the improvement of the system architecture and its
theoretical models extended from this work.
R EFERENCES
[1] N. M. Ferguson et al., “Impact of non-pharmaceutical
interventions
(NPIs)
to
reduce
COVID19
mortality
and healthcare demand,” Imperial College London, Tech.
Rep.,
2020.
[Online].
Available:
https://www.imperial.
ac.uk/media/imperial-college/medicine/sph/ide/gida-fellowships/
Imperial-College-COVID19-NPI-modelling-16-03-2020.pdf
[2] C. M. Peak et al., “Comparing nonpharmaceutical interventions for
containing emerging epidemics,” Proceedings of the National Academy
of Sciences, vol. 114, no. 15, pp. 4023 LP – 4028, apr 2017. [Online].
Available: http://www.pnas.org/content/114/15/4023.abstract
[3] M. Salathé et al., “Influenza A (H7N9) and the importance
of digital epidemiology,” The New England journal of medicine,
vol. 369, no. 5, pp. 401–404, 2013. [Online]. Available: http:
//infoscience.epfl.ch/record/214506
[4] K. Farrahi, R. Emonet, and M. Cebrian, “Epidemic Contact Tracing
via Communication Traces,” PLOS ONE, vol. 9, no. 5, p. e95133, may
2014. [Online]. Available: https://doi.org/10.1371/journal.pone.0095133
[5] W. Dong et al., “PocketCare: Tracking the Flu with Mobile Phones
Using Partial Observations of Proximity and Symptoms,” Proc. ACM
Interact. Mob. Wearable Ubiquitous Technol., vol. 3, no. 2, jun 2019.
[Online]. Available: https://doi.org/10.1145/3328912
[6] Apple
and
Google,
“Contact
Tracing
Bluetooth
Specification v1.1,” Tech. Rep., 2020. [Online]. Available:
https://covid19-static.cdn-apple.com/applications/covid19/current/static/
contact-tracing/pdf/ContactTracing-BluetoothSpecificationv1.1.pdf
[7] “Countries are using apps and data networks to keep tabs on the
pandemic,” mar 2020. [Online]. Available: https://tinyurl.com/ydag5yzy
[8] S. Jeong, S. Kuk, and H. Kim, “A Smartphone Magnetometer-Based
Diagnostic Test for Automatic Contact Tracing in Infectious Disease
Epidemics,” IEEE Access, vol. 7, pp. 20 734–20 747, 2019.
[9] M. S. Yasheng Huang and Y. Sui, “How Digital Contact Tracing Slowed
Covid-19 in East Asia,” Harvard Business Review, Apr. 15 2020.
[10] M. Hanspach and M. Goetz, “On Covert Acoustical Mesh Networks in
Air,” Journal of Communications, vol. 8, no. 11, pp. 758–767, 2013.
[11] T. M. Yasaka, B. M. Lehrich, and R. Sahyouni, “Peer-to-Peer Contact
Tracing: Development of a Privacy-Preserving Smartphone App,” JMIR
Mhealth Uhealth, vol. 8, no. 4, p. e18936, apr 2020. [Online].
Available: http://www.ncbi.nlm.nih.gov/pubmed/32240973
[12] K. Jin and L. McGorman, “Data for Good: New Tools to Help
Health Researchers Track and Combat COVID-19.” [Online]. Available:
https://about.fb.com/news/2020/04/data-for-good/
[13] Health Canada, “Coronavirus disease (COVID-19): Prevention and
risks,” 2020. [Online]. Available: https://tinyurl.com/s6fce6d
[14] Centers for Diesease Control and Prevention (CDC), “How COVID-19
Spreads,” 2020. [Online]. Available: https://www.cdc.gov/coronavirus/
2019-ncov/prevent-getting-sick/how-covid-spreads.html
[15] N. van Doremalen et al., “Aerosol and Surface Stability of SARS-CoV-2
as Compared with SARS-CoV-1,” New England Journal of Medicine,
mar 2020. [Online]. Available: https://doi.org/10.1056/NEJMc2004973
[16] P. Hu, “A 5G NR based System Architecture for Real-Time Control
with Batteryless RFID Sensors,” in Proc. of the 14th Annual IEEE
International Systems Conference, Montreal, 2020 (To be published).
[17] J. H. Jones, “Notes On R0,” Standford University, Tech.
Rep., 2007. [Online]. Available: https://web.stanford.edu/{∼}jhj1/
teachingdocs/Jones-on-R0.pdf
[18] OECD, Health at a Glance 2019, 2019. [Online]. Available:
https://www.oecd-ilibrary.org/content/publication/4dd50c09-en

6

