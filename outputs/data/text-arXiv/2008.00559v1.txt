arXiv:2008.00559v1 [stat.AP] 2 Aug 2020

Vector quantisation and partitioning of
COVID-19 temporal dynamics in the United
States
Chris von Csefalvay∗
August 4, 2020

Abstract
The statistical dynamics of a pathogen within a population depend on
a range of factors: population density, the effectiveness and investment
into social distancing, public policy measures and non-pharmaceutical interventions (NPIs) are only some examples of factors that influence the
number of cases over time by state. This paper outlines an analysis of time
series vector quantisation and paritioning of COVID-19 cases in the United
States, using a soft-DTW (Dynamic Time Warping) k-means clustering
and a k-shape based clustering algorithm to identify internally consistent clusters of case counts over time. The identification of characteristic
types of time-dependent variations can lead to the identification of patterns within sets of time series. This, in turn, can help discern the future
of infectious dynamics in an area and, through identifying the most likely
cluster-wise trajectory by calculating the cluster barycenter, inform public
health decision-making.

1

Introduction

The emergence of SARS-CoV-2, and its associated viral syndrome COVID-19,
has raised important questions about the ways we analyse and identify dynamic
temporal processes. In particular, by identifying similarities in principal timedependent indicators of epidemic dynamics, such as cumulative prevalence (the
running total of confirmed cases over time), we can gain insight into similarities
that are likely to emerge across various regions. Such similarities may be reflective of various hidden processes, be they related to the pathogen, to the response
thereto or to various predisposing factors. By way of this, time series clustering
has the potential to play a significant role in understanding the spatio-temporal
factors governing the dynamic processes that drive an outbreak.
Vector quantisation and partitioning, or clustering, is the wider set of algorithms within unsupervised statistical learning that identify similar patterns
∗ Starschema

Inc., Arlington, VA. Correspondence: csefalvayk@starschema.net.

1

among data in arbitrarily high-dimensional vector spaces, effectively taking a
set P of N vectors in an n-dimensional vector space and assigning to each of
these a label from the label set L, so that the assignment of each element of
P to the groups defined by the labels comprising L minimise some objective
function (typically referred to as the distance metric of the clustering). Cluster
algorithms are widely used today and their practical applications are manifold, ranging from identifying clinical phenotypes in medicine and population
health [1–5] through fraud detection [6–10] to image segmentation. [11–16]
Time series clustering presents a particular complication of this problem
insofar as the subject of clustering is not a vector representing a single value,
but rather a time series. These time series are typically not in synchrony, but
rather exhibit a range of delays, lags and leads, and may depend on extrinsic
and/or hidden variables. We may formulate the essential task of time series
clustering as follows. Let T be a set of n time series x1...tmax . Further, let
k denote the cardinality of the label set L – in other words, the number of
partitions we wish to split the data into, with k ≤ n. Then, the mapping
f : T → l | l ∈ L is a clustering of the set of time series if it assigns to any
element xi ∈ X | i ≤ n one (and only one) label li ∈ L, so as to minimise an
objective function (typically referred to in this context as a distance metric) J
within each cluster Cj = xp ∈ T | lp = j, j ∈ L defined by its label.
This paper examines the use of two time series clustering algorithms – softDTW k-means clustering and k-shape clustering – to identify different patterns
in COVID-19 prevalence in the continental United States, and comparing the
results of the classifiers for inter-classifier consistency. By isolating the barycenters of the time-shifted clusters, we can identify consistent patterns in prevalence dynamics across multiple states. This in turn can be used to quantify
the overall effect of pre-existing characteristics, population dynamics and nonpharmaceutical interventions (NPIs) between states.

2
2.1

Methods
Source data

Source data for the 48 states of the continental United States was obtained
from the Starschema COVID-19 Data Set, [17] and filtered only for confirmed
case counts. Data was loaded into Python 3.7 using pandas, [18] and values
were scaled using tslearn.preprocessing’s TimeSeriesScalerMeanVariance
to µ = 0 and σ = 1. The results of this transformed raw data set are laid out,
by state, in Figure 1.

2.2

Soft-DTW k-means clustering

Since first described by Sakoe and Chiba (1978), [19] the dynamic time warping
algorithm has been expressed in multiple formulations. The presentation below is based on Cuturi and Blondel’s 2017 paper introducing Soft-DTW, with

2

3

Figure 1: Scaled raw data of prevalence by state.

2

0

2

8

6

4

2

0

2

8

6

4

2

0

2

8

6

4

2

0

2

8

6

4

2

0

2

8

6

4

2

0

2

8

6

4

2

0

2
AZ
CA
CO
CT

DE
FL
GA
IA
ID
IL

IN
KS
KY
LA
MA
MD

ME
MI
MN
MO
MS
MT

NC
ND
NE
NH
NJ
NM

NV
NY
OH
OK
OR
PA

RI
SC
SD
TN
TX
UT

VA
VT
WA
WI
WV
WY

2020-08

4
AR

2020-07

6
AL

2020-06

2020-05

2020-04

2020-03

2020-02

2020-08

2020-07

2020-06

2020-05

2020-04

2020-03

2020-02

2020-08

2020-07

2020-06

2020-05

2020-04

2020-03

2020-02

2020-08

2020-07

2020-06

2020-05

2020-04

2020-03

2020-02

2020-08

2020-07

2020-06

2020-05

2020-04

2020-03

2020-02

2020-08

2020-07

2020-06

2020-05

2020-04

2020-03

2020-02

8

8

6

4

2

0

2

the marginal difference of using J(·, ·) instead of δ to represent the distance
function. [20]
Given two time series x : tx ∈ Z and y : ty ∈ Z, there exists a cost matrix
∆(x, y) for the distance function J, from which we can derive the cost matrix
∆(x, y) = [J(xi , yj )]ij ∈ Rtx ×ty

(1)

For the two above-mentioned series, we may describe the set of matrices of
all possible alignments as Atx ,ty , which is a strict subset of {0, 1}tx ×ty . Then,
DTW can be defined as the function that for any pair of time series (x, y)
identifies an alignment A ∈ Atx ,ty so as to minimise the inner product of A with
the cost matrix ∆(x, y) as
def

DT W (x, y) ==

min hAtx ,ty , ∆(x, y)

A∈Atx ,ty

(2)

Thus, DTW can be conceived of as a search task, in which Atx ,ty is the
search space within which we search for an alignment A given x and y so as to
minimise the inner product hA, ∆(x, y)i.
Soft-DTW universalises the notion underlying the DTW cost metric and the
global alignment kernel metric
X
hA,∆(x,yi)
def
γ
(3)
GAKγ (x, y) ==
e−
A∈Atx ,ty

into a single metric. [21] Given the generalisation of the minimum metric with a
smoothing factor γ ≥ 0 as


ai ,
γ=0

min
i≤n
γ
def
n
X ai
min{a1...n } ==
(4)

e− γ , γ > 0

−γ log
i=1

we may now define Soft-DTW as
γ

def

sDT Wγ (x, y) ==

min {hA, ∆(x, y)i}

A∈Atx ,ty

(5)

Importantly, Soft-DTW – unlike the original DTW approach by Sakoe and
Chiba [19] – is explicitly differentiable. In particular, as Saigo (2006) noted, [22]
the gradient of Equation (3) can be calculated quite conveniently. Let Â be the
average alignment matrix following the Boltzmann distribution pγ ∼ e−hAi ,
for all Ai ∈ Atx ,ty . Then,
X
Â =

Ai e−hA,

∆(x,y)
i
γ

Ai ∈Atx ,ty

GAKγ (x, y)

and consequently

4

∆(x,y)i
γ

(6)

∇x DT Wγ (x, y) =

∂∆(x, y)
∂x

!T
Â

(7)

This can be easily calculated using backward recursion, as described in Algorithm 2 of Cuturi and Blondel (2017). [20] In addition, the notion of a clustering
centroid can be generalised to the metric space comprising the time series to
yield Frêchet means, also referred to in this context as barycenters. For a metric space (M, τ ), p ∈ M is a Frêchet mean of order q ≥ 1 of the time series
x1...n ∈ M if it minimises the Frêchet variance, i.e.
p = argmin
r∈M

n
X

τ (xj , r)q | q ≥ 1

(8)

j=1

Thus, based on the soft-DTW metric, laid out above, we can extract from
the time series of COVID-19 cumulative incidence a clustering that iteratively
minimises the within-cluster sum of squares (k-means clustering). For the purposes of this paper, soft-DTW clustering was performed using tslearn 0.4.1 [23]
using Python 3.7, with a γ parameter of 0.1.

2.3

k-shape clustering

k-shape clustering is a novel, robust clustering algorithm for time series that
relies on iteratively refining clusters, with cross-correlation as the underlying
distance metric. [24] Specifically, k-shape relies on a normalised version of crosscorrelation, referred to in this context as Shape Base Distance (SBD): time series are Z-normalised (i.e. µ = 0 and σ = 1), and the resulting cross-correlation
sequence is divided by the geometric mean of the individual time series’ autocorrelations. In this sense, k-shape can be understood as a k-means clustering
that uses a cross-correlation based metric SBD(x, y). Let xs be the series x
shifted, with zero-padding, by s, and the same be true for ys respectively, mutatis mutandis. For two time series of equal length x and y, we recursively
define shift-wise cross-correlation for shifts in the range s ∈ [−m, m] as
m−k
X


xl+k yl k ≥ 0
ψk (x, y) = l=1
(9)


ψ−k (x, y) k < 0
Then, for the cross-correlation sequence, we obtain the cross-correlation ρ̂w
for any value of w ∈ 1, 2, . . . , 2m − 1 as
ρ̂w (x, y) = ψw−m (x, y)

(10)

Now, we can define the distance metric SBD(x, y) by
ρˆw (x, y)

SBD(x, y) = 1 − max

p
ψ0 (x, x) · ψ0 (y, y)

w

5

!
(11)

Because of the convolution theorem, which states that under certain conditions convolution in one domain of a time series (or more generally, any signal)
is equivalent to elementwise multiplication in the other domain, [25] we can efficiently compute ψ(x, y) by taking the complex conjugate of the discrete Fourier
transform of each series F(x) ? F(y), where ? is the complex conjugate operator. [24] Then, given the inverse discrete Fourier transform F −1 ,


(12)
ψ(x, y) = F −1 F(x) ? F(y)
and as Paparrizzos and Gravano showed, [24] Fast Fourier Transforms allow this
to be calculated efficiently in O(|x|log(|x|)) time rather than O(|x|2 ) time.
Similarly to the cluster analysis carried out in Subsection 2.2, k-shape clustering was performed using the tslearn package’s clustering.KShape implementation, with an n init setting at 16 iterations for centroid seeds, using the
result with the lowest inertia, random initialization and a convergence tolerance
of 10−6 .

3

Results

3.1

Clustering time dynamics of disease prevalence

After fitting the soft-DTW k-means and k-shape clustering models on the data
set described in Section 2.1 with a label set cardinality (i.e. number of clusters)
of 3, indicators for goodness of fit were obtained using sklearn.metrics. These
show that the clustering is relatively sound. The silhouette scores (soft-DTW kmeans: 0.249, k-shape: 0.276) indicate while there is some chance of an overlap,
the clustering is a relatively good fit. [26] This is confirmed by a strong Variance
Ratio Criterion (Calinski-Harabasz score) of 18.809 and 20.155 for soft-DTW
k-means and k-shape, respectively. [27] As Figure 2 clearly indicates, there are
three distinctly characterisable patterns based on the barycenters:
1. Late peaking (k-means cluster 1, k-shape cluster 1): states in this cluster
typically have a steady, consistent pattern affected only by weekly periodicities, and begin to surge around mid-June 2020.
2. Early peaking (k-means cluster 2, k-shape cluster 2): states in this cluster
display a rapid-onset initial peak in April to May 2020, thereafter tapering
off.
3. Bimodal (k-means cluster 3, k-shape cluster 3): within this cluster, states
appear to exhibit a steady number of cases and the beginnings of a bimodal
distribution over time, with a peak in April-May 2020 that subsides in
June, then follows on to another rise in July and August.
Figure 2 highlights in red the barycenters or Frêchet means of the time series,
expanding the notion of a centroid as a central tendency to the metric space
of the time series. While the barycenters are different between the clustering
6

6
5

6

k-means cluster 1: Bimodal

5

4

4

3

3

2

2

1

1

0

0

1
2

1
2

2020-02 2020-03 2020-04 2020-05 2020-06 2020-07 2020-08

6
5

k-means cluster 2: Early peaking

5
4

3

3

2

2

1

1

0

0

1

2

2020-02 2020-03 2020-04 2020-05 2020-06 2020-07 2020-08

6

k-means cluster 3: Late peaking

5

4

4

3

3

2

2

1

1

0

0

1
2

k-shape cluster 2: Early peaking

1
2020-02 2020-03 2020-04 2020-05 2020-06 2020-07 2020-08

6
5

2020-02 2020-03 2020-04 2020-05 2020-06 2020-07 2020-08

6

4

2

k-shape cluster 1: Bimodal

k-shape cluster 3: Late peaking

1
2

2020-02 2020-03 2020-04 2020-05 2020-06 2020-07 2020-08

2020-02 2020-03 2020-04 2020-05 2020-06 2020-07 2020-08

Figure 2: Mutually consistent clusters (rows) between the k-means and k-shape
cluster algorithms. Data is time adjusted and barycenters are displayed in red.

7

4

k-shape: 1, k-means: 1

k-shape: 2, k-means: 1

k-shape: 3, k-means: 1

k-shape: 1, k-means: 2

k-shape: 2, k-means: 2

k-shape: 3, k-means: 2

k-shape: 1, k-means: 3

k-shape: 2, k-means: 3

k-shape: 3, k-means: 3

3
2
1
0
1
4
3
2
1
0
1
4
3
2
1
0

2020-08

2020-07

2020-06

2020-05

2020-04

2020-03

2020-02

2020-08

2020-07

2020-06

2020-05

2020-04

2020-03

2020-02

2020-08

2020-07

2020-06

2020-05

2020-04

2020-03

2020-02

1

Figure 3: Combined time traces of k-means and k-shape classifications for the
major consensus groups. Bimodal behaviour accounts for 21% of states, earlypeaking behaviour covers 17% and late-peaking, ascending behaviour accounts
for over half (56%) of states. Three states do not fall within the major consensus
groups.
algorithms (largely due to small differences in clustering, thus leading to different compositions for the barycenter calculation), they identify consistently the
underlying pattern characteristic of the cluster. Notably, the barycenters calculated by the k-shape classification exhibit much stronger short-term (weekly)
periodicity in all three clusters. At the same time, the second cluster’s abnormal peak in June is much less reflected in the barycenter based on the k-shape
clustering than it is on the k-means cluster, and the k-shape cluster presents a
barycenter with a much flatter ’peak’ in mid-April than the k-means barycenter.
The distribution of time series (i.e. states) over the permutations of softDTW k-means and k-shape cluster assignments (see Figure 3) shows that the
majority of states fall into matching soft-DTW k-means and k-shape categories,
with only 3 states falling outside. Over half (56%) of states fall into the softDTW k-means cluster 3 and k-shape cluster 3, while 8 states (17%) fall into

8

1

0.02

0.02

k-means
2

0.02

0.17

0.00

3

0.6
0.21

0.00

0.00

0.56

1

2
k-shape

3

0.5
0.4
0.3
0.2
0.1
0.0

Figure 4: Inter-classifier agreement between k-shape (k-shape) and soft-DTW
k-means (kmeans) classification.
the soft-DTW k-means cluster 2 and k-shape cluster 2, and 9 states (21%) fall
into the soft-DTW k-means cluster 1 and k-shape cluster 1. This distribution
is displayed in the inter-classifier agreement matrix in Figure 4.

3.2

Cross-cluster agreement

In order to ascertain cross-cluster agreement, the Adjusted Rand Index (ARI)
was used to quantify consensus between the k-shape and soft-DTW k-means
classifiers. [28] This index, first proposed by Hubert and Arabie in 1985, is symmetric, thus it can be used to identify consensus between clusters with different
metrics. At 0.864, the ARI indicates strong concurrence between the soft-DTW
k-means and the k-shape classifiers.
Cross-cluster agreement is illustrated in Figure 4. As it is evident therefrom,
over half of the states fall into the late-peaking (k-means cluster 3, k-shape
cluster 3) category, with relatively few cases and no pronounced peaks until
June 2020, after which the data evidences an oscillating but gradually increasing
case count.
The strong cross-cluster agreement, covering 96% of all samples, indicates
that despite their methodological differences, both the soft-DTW k-means clustering algorithm and the k-shape algorithm yield largely identical results when
it comes to assigning states’ time series to clusters. The strong concurrence and
favourable ARI indicate that the cluster assignments are unlikely to be artefactual results of the underlying algorithms but rather reflect truly significantly
distinct groupings of states by their case count time series.

4

Discussion

k-shape and soft-DTW k-means classification strongly concur in identifying the
three fundamental behavioural clusters of confirmed COVID-19 case count in the
48 states of the continental United States: a bimodal pattern, an early peaking

9

k-shape: 1, k-means: 1
k-shape: 1, k-means: 2
k-shape: 2, k-means: 1
k-shape: 2, k-means: 2
k-shape: 3, k-means: 1
k-shape: 3, k-means: 3

Figure 5: Choropleth map of the United States displaying the permutations of
k-shape and soft-DTW k-means clustering results by state.
pattern and a late, slower pattern that is largely stationary until approx. June
2020, then displays a rapid rise of cases.
The geographical distribution of these is worth noting. As Figure 5 shows,
at the time of writing, most of the area of the continental United States follows
the late peaking regime, and the calculated barycenters indicate these states are
currently poised to experience further growth in case counts. Only a few states
(green shades) have followed an early outbreak with a significant reduction in
cases and no further resurgence, as may be considered evidence of successful
mitigation/suppression efforts on their part. Finally, a number of states (blue
shades) have experienced early outbreaks and are exhibiting a bimodal pattern,
whereby an initial surge in April to late May 2020 has been followed not by
successful suppression but a reduction followed by yet another rise in the number
of reported cases of COVID-19.
As this paper has shown, time series clustering allows for finding commonalities between time series that are by necessity out of synchrony. In doing so,
it can be helpful in illuminating geographical and regional patterns of disease
dynamics. In particular, by using two different methods – a soft-DTW based,
time-shifted k-means classifier and the correlation-based k-shape classifier –, a
significant consensus between such classifications has been demonstrated where
the number of confirmed COVID-19 cases in the continental United States is
concerned. This lends credence to the hypothesis that epidemic dynamics of
COVID-19 follow three distinct temporal patterns. These are in all likelihood
conditioned by a combination of spatio-temporal factors (position along the
epidemic’s ’wavefront’), mitigation measures such as NPIs, their reltive effectiveness, as well as pre-existing factors of resilience and vulnerability.
Thus, by identifying the case count response, we can recognise different
internally consistent clusters of case count progression over time. This may
assist in understanding the governing patterns and dynamics of the SARS-CoV2 pandemic, and assist in tailoring responses to the needs of individual areas

10

and communities based on the temporal patterns of epidemic dynamics they
exhibit.

Competing interests
The author declares no competing interests.

Supplementary data
All simulations, code and data are available on Github and under the DOI
10.5281/zenodo.3970209. Shape files for the choropleth diagram in Figure 5
have been obtained from the United States Census Bureau, and are included in
the data set noted above.

References
[1] Tariq Ahmad, Michael J Pencina, Phillip J Schulte, Emily O’Brien, David J
Whellan, Ileana L Piña, Dalane W Kitzman, Kerry L Lee, Christopher M
O’Connor, and G Michael Felker. Clinical implications of chronic heart
failure phenotypes defined by cluster analysis. Journal of the American
College of Cardiology, 64(17):1765–1774, 2014.
[2] Pranab Haldar, Ian D Pavord, Dominic E Shaw, Michael A Berry, Michael
Thomas, Christopher E Brightling, Andrew J Wardlaw, and Ruth H Green.
Cluster analysis and clinical asthma phenotypes. American Journal of
Respiratory and Critical Care Medicine, 178(3):218–224, 2008.
[3] Christine Lochner, Sian MJ Hemmings, Craig J Kinnear, Dana JH Niehaus,
Daniel G Nel, Valerie A Corfield, Johanna C Moolman-Smook, Soraya Seedat, and Dan J Stein. Cluster analysis of obsessive-compulsive spectrum
disorders in patients with obsessive-compulsive disorder: clinical and genetic correlates. Comprehensive Psychiatry, 46(1):14–19, 2005.
[4] M Weatherall, J Travers, PM Shirtcliffe, SE Marsh, MV Williams,
MR Nowitz, S Aldington, and R Beasley. Distinct clinical phenotypes of
airways disease defined by cluster analysis. European Respiratory Journal,
34(4):812–818, 2009.
[5] Lichuan Ye, Grace W Pien, Sarah J Ratcliffe, Erla Björnsdottir, Erna Sif
Arnardottir, Allan I Pack, Bryndis Benediktsdottir, and Thorarinn Gislason. The different clinical faces of obstructive sleep apnoea: a cluster
analysis. European Respiratory Journal, 44(6):1600–1607, 2014.
[6] Tanmay Kumar Behera and Suvasini Panigrahi. Credit card fraud detection: a hybrid approach using fuzzy clustering & neural network. In 2015

11

Second International Conference on Advances in Computing and Communication Engineering, pages 494–499. IEEE, 2015.
[7] Qi Liu and Miklos Vasarhelyi. Healthcare fraud detection: A survey and
a clustering model incorporating geo-location information. In 29th World
Continuous Auditing and Reporting Symposium (29WCARS), Brisbane,
Australia, 2013.
[8] Yi Peng, Gang Kou, Alan Sabatka, Zhengxin Chen, Deepak Khazanchi,
and Yong Shi. Application of clustering methods to health insurance fraud
detection. In 2006 International Conference on Service Systems and Service
Management, volume 1, pages 116–120. IEEE, 2006.
[9] Andrei Sorin Sabau. Survey of clustering based financial fraud detection
research. Informatica Economica, 16(1):110, 2012.
[10] Sharmila Subudhi and Suvasini Panigrahi. Use of optimized fuzzy c-means
clustering and supervised classifiers for automobile insurance fraud detection. Journal of King Saud University-Computer and Information Sciences,
2017.
[11] Keh-Shih Chuang, Hong-Long Tzeng, Sharon Chen, Jay Wu, and TzongJer Chen. Fuzzy c-means clustering with spatial information for image
segmentation. Computerized Medical Imaging and Graphics, 30(1):9–15,
2006.
[12] Guy Barrett Coleman and Harry C Andrews. Image segmentation by clustering. Proceedings of the IEEE, 67(5):773–785, 1979.
[13] Xiao-Bo Jin, Guo-Sen Xie, Kaizhu Huang, and Amir Hussain. Accelerating
infinite ensemble of clustering by pivot features. Cognitive Computation,
10(6):1042–1050, 2018.
[14] Kyle Lafata, Zhennan Zhou, Jian-Guo Liu, and Fang-Fang Yin. Data clustering based on Langevin annealing with a self-consistent potential. arXiv
preprint arXiv:1806.10597, 2018.
[15] Thrasyvoulos N Pappas and Nikil S Jayant. An adaptive clustering algorithm for image segmentation. In International Conference on Acoustics,
Speech, and Signal Processing, pages 1667–1670. IEEE, 1989.
[16] Zhenyu Wu and Richard Leahy. An optimal graph theoretic approach to
data clustering: Theory and its application to image segmentation. IEEE
Transactions on Pattern Analysis and Machine Intelligence, 15(11):1101–
1113, 1993.
[17] Földi Tamás and Chris von Csefalvay. Starschema covid-19 data set, August
2020. URL https://doi.org/10.5281/zenodo.3969287.

12

[18] Wes McKinney et al. pandas: a foundational python library for data analysis and statistics. Python for High Performance and Scientific Computing,
14(9), 2011.
[19] Hiroaki Sakoe and Seibi Chiba. Dynamic programming algorithm optimization for spoken word recognition. IEEE Transactions on Acoustics,
Speech, and Signal Processing, 26(1):43–49, 1978.
[20] Marco Cuturi and Mathieu Blondel. Soft-dtw: a differentiable loss function
for time-series. arXiv preprint arXiv:1703.01541, 2017.
[21] Hicham Janati, Marco Cuturi, and Alexandre Gramfort. Spatio-temporal
alignments: Optimal transport through space and time. In International
Conference on Artificial Intelligence and Statistics, pages 1695–1704, 2020.
[22] Hiroto Saigo, Jean-Philippe Vert, and Tatsuya Akutsu. Optimizing amino
acid substitution matrices with a local alignment kernel. BMC Bioinformatics, 7(1):246, 2006.
[23] Romain Tavenard, Johann Faouzi, Gilles Vandewiele, Felix Divo, Guillaume Androz, Chester Holtz, Marie Payne, Roman Yurchak, Marc
Rußwurm, Kushal Kolar, and Eli Woods. Tslearn, a machine learning
toolkit for time series data. Journal of Machine Learning Research, 21
(118):1–6, 2020. URL http://jmlr.org/papers/v21/20-091.html.
[24] John Paparrizos and Luis Gravano. k-shape: Efficient and accurate clustering of time series. In Proceedings of the 2015 ACM SIGMOD International
Conference on Management of Data, pages 1855–1870, 2015.
[25] Alan V Oppenheim, John R Buck, and Ronald W Schafer. Discrete-time
signal processing. Vol. 2. Upper Saddle River, NJ: Prentice Hall, 2001.
[26] Peter J Rousseeuw. Silhouettes: a graphical aid to the interpretation and
validation of cluster analysis. Journal of Computational and Applied Mathematics, 20:53–65, 1987.
[27] Tadeusz Caliński and Jerzy Harabasz. A dendrite method for cluster analysis. Communications in Statistics – Theory and Methods, 3(1):1–27, 1974.
[28] Lawrence Hubert and Phipps Arabie. Comparing partitions. Journal of
Classification, 2(1):193–218, 1985.

13

