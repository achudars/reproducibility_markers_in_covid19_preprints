D ECENTRALISED , PRIVACY- PRESERVING BAYESIAN INFERENCE
FOR MOBILE PHONE CONTACT TRACING

arXiv:2005.05086v1 [cs.CY] 11 May 2020

Daniel Tang
Leeds Institute for Data Analytics‚àó
University of Leeds
Leeds, UK
D.Tang@leeds.ac.uk

May 12, 2020

A BSTRACT
Many countries are currently gearing up to use smart-phone apps to perform contact tracing as part
of the effort to manage the COVID-19 pandemic and prevent resurgences of the disease after the
initial outbreak. With the announcement of the Apple/Google partnership to introduce contact-tracing
functionality to iOS and Android[1], it seems likely that this will be adopted in many countries.
An important part of the functionality of the app will be to decide whether a person should be advised
to self-isolate, be tested or end isolation. However, the privacy preserving nature of the Apple/Google
contact tracing algorithm means that centralised curation of these decisions is not possible so each
phone must use its own ‚Äúrisk model‚Äù to inform decisions. Ideally, the risk model should use Bayesian
inference to decide the best course of action given the test results of the user and those of other
users. Here we present a decentralised algorithm that estimates the Bayesian posterior probability
of viral transmission events and evaluates when a user should be notified, tested or released from
isolation while preserving user privacy. The algorithm also allows the disease models on the phones
to learn from everyone‚Äôs contact-tracing data and will allow Epidemiologists to better understand the
dynamics of the disease.
The algorithm is a message passing algorithm, based on belief propagation, so each smart-phone
can be used to execute a small part of the algorithm without releasing any sensitive information. In
this way, the network of all participating smart-phones forms a distributed computation device that
performs Bayesian inference, informs each user when they should start/end isolation or be tested and
learns about the disease from user‚Äôs data.
Keywords COVID-19, SARS-CoV-2, contact tracing, Bayesian inference, belief propagation

1

Introduction: the need for Bayesian inference

While much has been said about how to use smart-phones to inform people that they have been in close proximity to an
infected person[2][1][3], relatively little has been said about how to evaluate the best course of action given information
about one‚Äôs own test results and those of one‚Äôs contacts.
Since clinical tests for SARS-CoV-2 have been found to have quite high rates of false-negatives[4], accurately diagnosing
whether someone is infected isn‚Äôt as easy as just testing them. However, by taking into account symptoms and test
results of a user and of the user‚Äôs close contacts we can potentially increase the sensitivity of the diagnosis. For
example, suppose a contact of a confirmed case is symptomatic but tests negative, yet on the next day a contact of
his independently becomes symptomatic and tests positive. If the newly confirmed case was in contact only with
the negative case around the inferred time of infection, we may have enough information to deem the negative test a
false-negative and contact trace/isolate them in any case.
Also, there is evidence that there is a high proportion of asymptomatic transmission of SARS-CoV-2[5]. This means that
it is important to identify asymptomatic carriers. So, if someone is confirmed infected, it is important to trace who they
caught the disease from, as well as who they may have passed the disease on to, so that a potential asymptomatic carrier
‚àó

This project has received funding from the European Research Council (ERC) under the European Union‚Äôs Horizon 2020
research and innovation programme (grant agreement No. 757455)

Decentralised, privacy-preserving Bayesian inference for mobile phone contact tracing

can be identified and their contacts traced. For example, if two people become symptomatic and test positive, we know
that each of them must have been infected a few days before their respective symptoms began. Each person is likely to
have had a number of contacts in that window of time but if they have one contact in common then it becomes much
more probable that the common contact was the original source of the infection. If it turns out the suspected source was
symptomatic around 5 days ago (but opted not to be tested) then this evidence may be enough to immediately trace their
contacts to identify other possible infectees (it would be less important to isolate the original source at this point as they
may be less infectious at this point. However, if that person had a tendency to have a very large number of contacts a
day and the timing meant there was still a chance of residual infectiousness, it may be deemed prudent to isolate for a
number of days).
Finally, if a person is traced as a contact of a confirmed case, but the contact occurred a few hours ago, there is little
point in testing that person immediately as the test is unlikely to be positive even if the person will go on to develop the
disease. There is also no need for the person to immediately isolate as they are probably not infectious at this point.
However, at some time in the near future we will want to test and possibly isolate that person, but when is the optimal
time to do this?
Doing this kind of inference automatically, while maintaining the privacy of a user‚Äôs close contacts, requires a reasonably
sophisticated inference algorithm. Simply alerting close contacts of confirmed cases is not enough. Here we present an
algorithm that uses a modification of the belief propagation algorithm[6] to do Bayesian inference in order to decide on
a testing schedule and isolation timings that minimise expected overall cost. The algorithm also allows the disease
model to learn from user‚Äôs data and allows Epidemiologists to gain information about the dynamics of the disease.

2

Description of the problem

Suppose mobile-phone contact tracing is in operation using the Apple/Google contact tracing specification[1]. Each day,
enabled phones randomly choose a ‚Äúdaily exposure key‚Äù. When enabled phones come close they exchange proximity
IDs (PIDs) which are numbers derived from their daily exposure key. The phones keep a log of the exchanged PIDs
along with the time of the contact and their own daily exposure keys. If a person is deemed at risk, a subset of their
daily exposure keys are published on a public server along with a payload containing some data. Each day, everyone‚Äôs
phone checks for newly published exposure keys and checks them against the PIDs of their close contacts. If there is a
match, the phone learns the user has been in close proximity to a person at risk.
The problem we consider here is how to calculate whether and when to notify the user to self-isolate, perform tests and
release from isolation, while maintaining the privacy of a user‚Äôs close contacts. In addition, we would like to use user‚Äôs
contact and test result data to update a set of epidemiological parameters about the natural history of the disease, again
without compromising the privacy of the users contacts.

3

Expressing the joint probability over transmission events

If two people, A and B, come within close proximity and broadcast PIDs a and b respectively, then there is a chance
P (œÑa‚Üíb ) that A will transmit the virus to B and a chance P (œÑb‚Üía ) that B will transmit the virus to A. Our first aim
is to calculate the joint probability of all transmission events and all the tests/observations that have been done on all
people to date. When we talk about transmission, we mean the transfer of viruses from one person to another such that
if the other person was susceptible, they would become infected. Transmission to an already infected person is still a
transmission event, but has no effect.
The binary random variables œÑa‚Üíb take values either 1 or 0. A value of 1 denotes the event that a transmission occurred
from A to B, while a value of 0 denotes the event that A and B had a close contact but no transmission occurred from A
to B.
When a contact first occurs, the user has no information about the other participant so the probability of transmission
from others is set to a prior probability. Up-to-date regional prior probabilities can be downloaded from publicly
available servers and the phone can estimate its current region from recent events such as the name/ID of the most
recently connected cell tower (this information will always stay local on the phone).
3.1

The disease model

Consider the phone of person A at time t with a log of contacts C(t) = ht1 , a1 , b1 i ... htn , an , bn i, where ti is the time
of the contact relative to the start of the log and ai and bi are the exchanged PIDs.
Define the first-exposure time to be the earliest time that A was exposed to the virus and let (t) be the event that the first
exposure is at time t. We assume that there is a continuous and slowly changing risk of exposure from the environment
(e.g. from surfaces or close contacts that were missed for any reason) at a rate œÅ. œÅ can be calculated from the local
prevalence of the disease, the uptake of the app and the rate of contacts of the user. Given this, the probability density of
2

Decentralised, privacy-preserving Bayesian inference for mobile phone contact tracing

first exposure since the start of the log is
Ô£´
P ((t)|C(t)) = Ô£≠œÅ +

n
X

Ô£∂
Œ¥(t ‚àí ti )œÑbi ‚Üíai

i=1

Y

(1 ‚àí œÑbj ‚Üíaj )Ô£∏ e‚àíœÅt

(1)

j<i

where Œ¥ is the Dirac delta function.
Define the disease onset time to be the earliest time that an infected person has a non-zero probability of transmitting
the disease and let œâ(t) be the event that disease onset occurs at time t. If we assume that there was no infection at the
start of the contact log then
Z t
P (œâ(t)|C(t)) =
P (œâ(t)|(t ))P ((t )|C(t))dt
(2)
0

where P (œâ(t)|(t )) represents the incubation time of the disease. This could be an analytical distribution such as a
Weibull distribution Pw (t ‚àí t ), or some more complex model.
After disease onset, the amount of viral shedding will vary with time. Let Œπ(t) = œÅi be the event that a person is
shedding viruses at a rate œÅi at time t, then the probability density of viral shedding is
Z t
P (Œπ(t) = œÅi |C(t), Œ±) =
Œ¥(Œπ(t|œâ(tœâ ), Œ±) ‚àí œÅi )P (œâ(tœâ )|C(t))dtœâ
(3)
0

where Œπ(t|œâ(tœâ ), Œ±) represents the clinical course of the disease and Œ± is a binary random variable indicating whether
the person is an asymptomatic carrier (in which case, their infectiousness curve may be different from symptomatics).
This could be a Beta distribution PŒ≤ (t ‚àí tœâ ) or something more complex. Asymptomatics may have a completely
different distribution, or may have the same distribution multiplied by a constant ŒπŒ± .
Given a person‚Äôs infectiousness, we assume that a close contact is a Bernoulli draw, based on that person‚Äôs infectiousness.
(4)

P (œÑ |Œπ(t)) = B(œÑ, Œπ(t))

If detailed information about the contact is logged (e.g. duration and proximity), the Bernoulli distribution could be
replaced with a more sophisticated model of the contact to get a more accurate probability of transmission (e.g. [7]).
Here we will assume a Bernoulli distribution to demonstrate the algorithm, but the same development could be applied
to a more complex transmission model.
Suppose we have a number of tests Œæ1 ...Œæn that give us information about whether a person is infected with SARS-CoV-2.
The characteristics of the nth test are defined by it‚Äôs specificity, P (Œæn‚àí |iÃÑ), which gives the probability that a person
will test negative on test n given that they are not infected, and it‚Äôs sensitivity P (Œæn+ (t)|œâ(tœâ ), Œ±) which gives the
probability that a person tests positive on test n at time t given that they had disease onset at time tœâ and whether they
are asymptomatic carriers.
Tests may take the form of clinical tests (e.g. PCR tests, antigen tests or antibody tests) but may also be simple
observations of the presence or absence of symptoms (e.g. fever, persistent-cough or loss of taste).
The conditional probability of a positive test result is given by


Z t
Z t
+
+
P (Œæn (t)|C(t), Œ±) =
P (Œæn (t)|œâ(tœâ ), Œ±)P (œâ(tœâ )|C(t))dtœâ + 1 ‚àí
P (œâ(tœâ )|C(t))dtœâ (1 ‚àí P (Œæn‚àí |iÃÑ))
0

3.2

0

The joint probabilities

The above conditional probabilities for each individual can be put together to create the joint probability over all people.
The probability that a contact with a person at time t ends in a transmission event from that person is independent of
other variables given the transmission events to that person before t, so we can imagine building up the joint from
conditionals starting with the earliest contact and moving one at a time to the latest. If the ith user has a log of contacts
Ci and we let C = ‚à™N
i=1 Ci be the set of all close contacts in the logs of all people, and T be the set of all transmission
events, it can be seen that the joint probability is given by
Y
P (T , Œ∏) = P (Œ∏)
P (œÑa‚Üíb | {œÑb0 ‚Üía : ht0 , b0 , ai ‚àà C ‚àß t0 < t} , Œ∏)
(5)
ht,a,bi‚ààC

where Œ∏ is the set of epidemiological parameters that specify, for example, the incubation period distribution and
the course of viral shedding, and P (Œ∏) are our prior beliefs in those parameter values based on current scientific
understanding.
We can group the terms in equation 5 by onward transmission from each user, giving
3

Decentralised, privacy-preserving Bayesian inference for mobile phone contact tracing

Param server
Œ¶(Œ∏)
Phone 1

Phone 2

Œ¶ 1 (Œπ 1‚Üí2 ,œÑ2‚Üí1 ,Œ∏)

Œ¶ 2 (Œπ 2‚Üí1 ,œÑ1‚Üí2 ,Œ∏)

Œ¶ B(œÑ 1‚Üí2 ,Œπ 1‚Üí2 )

Œ¶ B(œÑ 2‚Üí1 , Œπ 2‚Üí1 )

Figure 1: Layout of cluster graph for two phones that have exchanged PIDs

P (T , Œ∏) = P (Œ∏)

Y

Y

P (œÑa‚Üíb | {œÑb0 ‚Üía0 : ht0 , a0 , b0 i ‚àà Ci ‚àß t0 < t} , Œ∏)

i ht,a,bi‚ààCi

If we note that the probability of a positive/negative test result also depends only on the user‚Äôs contacts prior to the test
and whether the user is an asymptomatic carrier, then we can also add test results to the joint. If Ti is the set of tests
taken by user i, and Œ±i indicates whether they are asymptomatic carriers, the joint becomes
Y
Y
Y
P (T , T1..N , Œ±1..N , Œ∏) = P (Œ∏)
P (Œ±i )
P (œÑa‚Üíb |L(Ci , t), Œ±i , Œ∏)
P (Œæn (t)|L(Ci , t), Œ±i ) (6)
i

ht,a,bi‚ààCi

Œæn (t)‚ààTi

where P (Œ±) is the prior probability of being an asymptomatic carrier, and
L(C, t) = {œÑb‚Üía : ht0 , a, bi ‚àà C ‚àß t0 < t}
This joint can be expanded to include each user‚Äôs infectiousness at the time of each contact. For ease of notation, we
imagine an ‚Äúaugmented contact log‚Äù which includes the infectiousness in the Tuple of each contact so ht, a, b, Œπi ‚àà Ci
is a contact at time t where the broadcaster of PID a had infectiousness Œπ. So, the joint now looks like this
Y
Y
Y
P (T , I, T1..N , Œ±1..N , Œ∏) = P (Œ∏)
P (Œ±i )
B(œÑa‚Üíb |Œπ)P (Œπ|L(Ci , t), Œ±i , Œ∏)
P (Œæn (t)|L(Ci , t), Œ±i )
i

ht,a,b,Œπi‚ààCi

Œæn (t)‚ààTi

where I is the set of all infectiousnesses.

4

(7)

Calculating posterior marginal probabilities of transmission events

We can now calculate the posterior marginal probabilities of all transmission events, given all the test results. We do
this by embedding the joint in a cluster graph and performing belief propagation[6][8]. Figure 1 shows the layout of the
cluster graph for two phones that have exchanged PIDs. Each phone, i, has authority over a cluster that represents the
disease model of the user
X
Y
Y
Œ¶i (Œπ1..j , œÑ1..j , Œ∏) =
P (Œ±i )
P (Œπa‚Üíb |L(Ci , t), Œ±i , Œ∏)
P (Œæn (t)|L(Ci , t), Œ±i )
(8)
Œ±i

ht,a,b,Œπa‚Üíb i‚ààCi

Œæn (t)‚ààTi

where Œπ1..j = {Œπa‚Üíb : ht, a, b, Œπi ‚àà Ci } and œÑ1..j = {œÑb‚Üía : ht, a, b, Œπi ‚àà Ci }.
Each phone also has authority over one Bernoulli cluster for each onward transmission event from the user
{Œ¶B (œÑa‚Üíb , Œπa‚Üíb ) = B(œÑa‚Üíb |Œπa‚Üíb ) : ht, a, b, Œπi ‚àà Ci }

(9)

Finally, there is a cluster containing the epidemiological model parameters which is held on a central server, from which
all phones can obtain an up-to-date posterior distribution of the disease model parameters.
4

Decentralised, privacy-preserving Bayesian inference for mobile phone contact tracing

By splitting the joint into clusters in this way, we end up with a Bethe cluster graph which has good properties for
performing belief propagation[8], so we would expect belief propagation to perform well on this graph both in terms of
the accuracy of the results and the number of messages passed.
Given the cluster graph, belief propagation calculates the marginal probability of each cluster. The marginals can be
conditioned on the results of all tests by simply setting the values of each test when calculating the messages to pass.
4.1

Passing of messages

We now describe how belief propagation can be achieved on the network of mobile phones, and the parameter server,
without the need to expose any sensitive information.
Consider the messages sent from the ith phone. There are three types of message that need to be sent: ‚Äúforward‚Äù
messages from the phone‚Äôs Bernoulli clusters to the Œ¶j clusters of other phones, ‚Äúbackward‚Äù messages from the phone‚Äôs
Œ¶i cluster to the Bernoulli clusters on other phones and ‚Äúepidemiological‚Äù messages giving the parameter server
information about the nature of the disease. We use the notation Œ¥ for forward messages and Œ¥ 0 for backward messages.
In order to reduce the total number of messages sent, messages are only sent if the information contained within them
exceeds a threshold value. Since all edges that span phones represent binary variables, the information content of a
message between phones (once normalised) is just
I(Œ¥) = 1 + Œ¥ log2 (Œ¥) + (1 ‚àí Œ¥) log2 (1 ‚àí Œ¥)
Information is transferred between phones by publishing a data payload along with a daily exposure key on a public
server. The payload and exposure key is periodically downloaded by all mobiles, if any mobile has a PID in its log that
can be derived from the exposure key then the payload is deemed delivered to that phone.
However, a daily exposure key will match all contacts in a given day, but in order to implement belief propagation
we need to send different messages to different contacts on the same day. So somehow we need to deliver different
messages to all contacts on a given day by publishing a single data payload. We want to do this in an efficient way that
protects information about the contacts.
For forward messages we do this by publishing the phone‚Äôs current belief in the posterior marginal infectiousness
distribution for the day of the exposure key (under the approximation that the infectiousness of the person was constant
over that period. In practice, we can take the infectiousness at the mean of the contact times for that day). From this
single distribution all contacts can calculate their own forward messages.
To see this, suppose the posterior infectiousness distribution for the day in question is given by Œ¶i (Œπ). This is known
to phone i. Consider now one of the same phone‚Äôs Bernoulli clusters for this day Œ¶B , and suppose this is connected
to cluster Œ¶j on the other participant‚Äôs phone. If there have been no backward messages from Œ¶j to Œ¶B , the forward
message from Œ¶B to Œ¶j will be equal to
Z
Z
Œ¥ = B(œÑa‚Üíb (t)|Œπ)Œ¶i (Œπ)dŒπ = ŒπŒ¶i (Œπ)dŒπ
If on the other hand Œ¶B has received a backwards message, Œ¥ 0 , from Œ¶j , we need to remove the effect of this backward
message before calculating the forward message. The backward message to Œ¶B would in turn create another backward
message from Œ¶B to Œ¶i (Œπ) with value
Œ¥ 0 Œπ + (1 ‚àí Œ¥ 0 )(1 ‚àí Œπ) = (1 ‚àí Œ¥ 0 ) + (2Œ¥ 0 ‚àí 1)Œπ
So, the posterior belief about Œπ must be
Œ¶i (Œπ) = Œ±((1 ‚àí Œ¥ 0 ) + (2Œ¥ 0 ‚àí 1)Œπ)Œ¶0i (Œπ)
where Œ¶0i (Œπ) is the belief with the backward message removed and Œ± is a normalising constant. So, the correct forward
message from Œ¶B to Œ¶j must be
Z
Z
1
ŒπŒ¶i (Œπ)
Œ¥ = iŒ¶0i (Œπ)dŒπ =
dŒπ
(10)
0
Œ±
(1 ‚àí Œ¥ ) + (2Œ¥ 0 ‚àí 1)Œπ
where

Z

Œ¶i (Œπ)
dŒπ
(11)
(1 ‚àí Œ¥ 0 ) + (2Œ¥ 0 ‚àí 1)Œπ
but since the receiving phone, j, knows the value of Œ¥ 0 (i.e. the backward message it sent) it can reconstruct the correct
forward message from the Bernoulli cluster given only Œ¶i (Œπ).
Œ±=

So, if phone i publishes a parameterised version of Œ¶i (Œπ) along with a daily exposure key, all contacts for that day
can derive their individual forward messages. We suggest publishing Œ¶i (Œπ) in terms of its first n moments. By taking
the Taylor expansion of equations 10 and 11 about Œ¥ 0 = 0.5, the forward message can be expressed as a series in the
moments of Œ¶i (Œπ).
5

Decentralised, privacy-preserving Bayesian inference for mobile phone contact tracing

There is a similar problem with backward messages if we wish to publish them with the user‚Äôs daily exposure key;
different backward messages would need to be sent to contacts that happened on the same day.
However, suppose for all contacts in a day ht1 , a1 , b1 , Œπ1 i ... htn , an , bn , Œπn i, we imagine an additional cluster that sits
between the the Bernoulli clusters on the contacts‚Äô phones, Œ¶B (œÑb1 ‚Üía1 , _)...Œ¶B (œÑbn ‚Üían , _), and the local Œ¶i cluster.
The new cluster aggregates all incoming transmission edges for one day into a single effective transmission using a
logical OR operation, so that the effective transmission is true if any of the transmissions for that day are true. The Œ¶i
cluster now sends a single message to the OR cluster, Œ¥Œ¶ , which is its posterior likelihood function of the aggregated
transmission for the day, divided by any messages sent from the OR cluster. Since we‚Äôre not interested in normalisation
constants we‚Äôll assume that Œ¥Œ¶ has been normalised and so can be sent as a single number. Suppose also that that we‚Äôve
received forward messages Œ¥1 ...Œ¥m from the remote Bernoulli clusters. The OR cluster needs to send the following
backward message to Bernoulli cluster j
Œ¥j0 =

Œ¥œÜ + (1 ‚àí Œ¥œÜ )
=

Œ¥œÜ
Q
(1
‚àí
Œ¥
i ) + Œ¥œÜ (1 ‚àí
i6=j
i6=j (1 ‚àí Œ¥i ))

Q

(1 ‚àí 2Œ¥œÜ )
=

Œ¥œÜ
i6=j (1 ‚àí Œ¥i ) + 2Œ¥œÜ

Q

Œ¥œÜ
1‚àí2Œ¥œÜ
1‚àíŒ¥j

Q

i (1

‚àí Œ¥i ) + 2Œ¥œÜ

where we‚Äôve normalised the backward message for convenience even though it‚Äôs a likelihood.
Q
So, instead of sending separate backward messages to each Bernoulli cluster, we publish Œ¥œÜ and i (1 ‚àí Œ¥i ) along with
the daily exposure key. Then, since each phone already knows it‚Äôs own Œ¥j (i.e. the forward message it passed for that
contact) they can each calculate their own backward message from the published values. In this way we only need to
make a single publication to send backward messages to all contacts on that day.
4.2

Training the model: The parameter server

‚ÄúEpidemiological‚Äù messages from a phone to the parameter server will consist of the likelihood function of the parameters
for any new test results. If there are many parameters, an approximation could be sent in order to reduce bandwidth
requirements; for example, by assuming independence between certain parameter sets. Since the parameter server
doesn‚Äôt need to know the identity of the sender in order to update its belief, the updates can be sent anonymously.
Forward messages from the parameter server to each phone could be sent by publishing the posterior belief in the
parameters. Phones could update their values on a daily basis. In a similar way to that described above, if a user has sent
a backward message to the parameter server, the effects of that message can be removed from the published posterior
by simply dividing, in order to calculate the correct forward message from the parameter server.
The prior of the parameter server could also be updated centrally in response to new scientific understanding of the
dynamics of the disease.

5

Inference over multiple encounters between the same two people

If every pair of people meet at most once, the belief propagation algorithm will result in beliefs that are equal to the
Bayesian marginal posteriors. However, when the same two people have many encounters, this can lead to beliefs that
do not correspond exactly to the Bayesian posterior. To demonstrate this, suppose A and B meet twice within a short
space of time, and suppose A is infected. The variables of interest here are Œπ, the infectiousness of A at the time of the
meetings, (t), B‚Äôs first exposure time and œÑ1 and œÑ2 , the transmission events from A to B for each meeting. The joint
of these is given by
P (Œπ, œÑ1 , œÑ2 , (t)) = P (Œπ)B(œÑ1 |Œπ)B(œÑ2 |Œπ)P ((t)|œÑ1 , œÑ2 )
where B(œÑ |Œπ) is the Bernoulli distribution, and, from equation 1
P ((t)|œÑ1 , œÑ2 ) = Œ¥(t ‚àí t1 )œÑ1 + Œ¥(t ‚àí t2 )œÑ2 (1 ‚àí œÑ1 )
where, t1 and t2 are the times of the encounters. In order to keep the demonstration simple, we set œÅ to zero and assume
no other contacts, although the same argument applies in the presence of other contacts and non-zero œÅ.
Starting with forward inference, the correct marginal for P ((t)) is
Z


P ((t)) = Œ¥(t ‚àí t1 )Œπ + Œ¥(t ‚àí t2 )Œπ(1 ‚àí Œπ)P (Œπ)dŒπ = Œ¥(t ‚àí t1 )Œπ + Œ¥(t ‚àí t2 ) Œπ ‚àí Œπ2
However, the belief propagation algorithm will end up with a belief
B((t)) = Œ¥(t ‚àí t1 )Œπ + Œ¥(t ‚àí t2 )Œπ(1 ‚àí Œπ) = Œ¥(t ‚àí t1 )Œπ + Œ¥(t ‚àí t2 ) Œπ ‚àí Œπ2
6



Decentralised, privacy-preserving Bayesian inference for mobile phone contact tracing

So the the belief that the first encounter was a first exposure is correct, but the belief that the second encounter was a
first exposure is in error by the variance of P (Œπ).
To give a sense of the size of error in reverse inference, we take the worst case scenario which is that B is certainly
infected, and has only been in contact with A, so either œÑ1 or œÑ2 must be the first exposure. This is equivalent to saying
œÑ1 ‚à® œÑ2 = true. The correct posterior marginal is

P (Œπ|œÑ1 ‚à® œÑ2 = true) = A 2Œπ ‚àí Œπ2 P (Œπ)
where A is a normalising constant. Expressing Œπ as a perturbation from the mean Œπ = Œπ + Œ¥ and expanding in powers of
Œ¥ gives

P (Œ¥|œÑ1 ‚à® œÑ2 = true) = A Œπ(2 ‚àí Œπ) + 2(1 ‚àí Œπ)Œ¥ ‚àí Œ¥ 2 P (Œπ + Œ¥)
However, the propagation algorithm would give, after one cycle of message passing,
B(Œπ|œÑ1 ‚à® œÑ2 = true) = A0 (Œπ(1 ‚àí Œπ) + Œπ)2 P (Œπ)
Expanding this in powers of Œ¥ gives


(1 ‚àí Œπ)2 2
B(Œ¥|œÑ1 ‚à® œÑ2 = true) = A (Œπ(2 ‚àí Œπ)) Œπ(2 ‚àí Œπ) + 2(1 ‚àí Œπ)Œ¥ +
Œ¥ P (Œπ + Œ¥)
Œπ(2 ‚àí Œπ)
 
Œπ2
However, since Œπ and Œ¥ will be small (of the order 0.01[9]), the expected error is in the order O 2Œπ
. Further loops of
message passing would introduce higher order terms in Œ¥ but since Œ¥ is small these can be ignored.
0

We may wish to simply neglect these errors, or if we want more accuracy we could identify repeated encounters.
5.1

Identifying repeated encounters

If the phone receiving a message is able to identify transmission events that involve the same person, the corresponding
Bernoulli clusters can be bundled into a single cluster and belief propagation will again be exact.
If the repeated encounters occur on the same day, the phone that receives the message can easily identify them since the
daily exposure key will match multiple PIDs in its log. However, if the encounters were on different days, the matching
is more difficult as they will have different daily exposure keys and, by design, these cannot be tracked to an individual.
Repeated encounters will most often be between members of the same household, close friends or work colleagues.
Users could be given the option to match encounters with known contacts by allowing their phones to communicate
directly in any convenient way (e.g. Bluetooth). Suppose person A has published a number of daily exposure keys.
For any genuine close contacts with person B, both A and B know the daily exposure key and the PIDs that were
exchanged during the encounter. If B‚Äôs PIDs match multiple published exposure keys, B‚Äôs phone can choose one, use
the exchanged PIDs to encrypt the corresponding daily exposure key and send the encrypted message to A‚Äôs phone.
A‚Äôs phone can then try to decrypt the message using the PID pairs corresponding to its encounters. If the decrypted
message successfully matches A‚Äôs daily exposure key, a message can be sent back to B confirming that the encounter
was between A and B. In order for B‚Äôs phone to keep the number of PID matches secret, it can send a number of dummy
requests to make up the total number of requests to some randomly chosen number. In this way, the only information
either phone can gain is which encounters involved the two parties. Since this is not a secret between the two parties in
any case, no private information is revealed.
In order to match repeated encounters with strangers, the user could be prompted when the probability of two messages
being from the same person goes above some threshold. The user could then use information about the times of the
contacts, their memory of events and knowledge of their daily behaviour to try to work out whether they were repeated
encounters. For example, if the user goes to the same coffee shop every morning, then the pattern of encounters at the
same time every morning may allow them to assign them as repeated encounters.

6

Deciding when to self-isolate, test and release

Now we have a way of estimating posterior marginal probabilities, we can use these to make decisions. We adopt a
decision theoretic approach by calculating the expected cost of each option and taking the one that has the lowest cost.
We measure cost in days of life lost. If a person dies of COVID-19, the cost of that death is the expected number of
extra days of life that person would have had, had they not contracted the disease.
From this, we can calculate the cost of someone becoming infected when R < 1. In this case, a single infection will
Pd
1
result in an average of ‚àí ln(R)
total infections. If Pd is the case fatality ratio, then we would expect ‚àí ln(R)
deaths and
an average of
Pd L
cid = ‚àí
ln(R)
7

Decentralised, privacy-preserving Bayesian inference for mobile phone contact tracing

days of life lost, where L is the average number of days lost when someone dies of COVID-19, considering age
distribution and life expectancy.
There is also a cost, œá, associated with a person being hospitalised for a day (this covers the personal, inter-personal and
financial costs). If hÃÑ is the average number of days of hospitalisation per infection then we have a total expected cost of
a single infection
Pd L + œáhÃÑ
ci = ‚àí
ln(R)
Let the cost of a person having to self-isolate for a day be cs and let cT n be the cost of taking the nth test. These are
subjective values which must weigh up the social, personal and economic costs.
If we assume decisions are made on a daily basis then on each day we need to decide whether to self-isolate for that
day and whether to take test n ‚àà 1...N . Clearly, any tests with immediate results should be taken before the decision
whether to self isolate for that day so the decision which tests to take should be made first. Given any test results, a
person should self isolate on that day if
cs < ŒπÃÑ(t)œÅc ci
where œÅc is the user‚Äôs average daily rate of close contacts and ŒπÃÑ(t) is the user‚Äôs expected infectiousness on that day,
given all the evidence to date.
If we decide to test, there is a fixed immediate cost of taking a test, cT n , but in return we gain information about the
disease onset distribution. We can put a value on that information by calculating the difference in expected cost with
and without that information. If having the information reduces our expected cost by more than the cost of obtaining
the information then, on average, it is worth paying the price of the test for the information. So, the expected cost at
time t is
cÃÑ(t) = min(c¬Ø0 (t), cT n + P (Œæn+ (t)|C(t))cÃÑ(Œæn+ (t)) + P (Œæn‚àí (t)|C(t))cÃÑ(Œæn‚àí (t)))
where cÃÑ(Œæn+ (t)) and cÃÑ(Œæn‚àí (t)) is the expected cost given a positive/negative test result and cÃÑ0 (t) is the expected cost of
not testing.
cÃÑ0 (t) = (cs ‚àí ŒπÃÑ(t)œÅc ci )H(ŒπÃÑ(t)œÅc ci ‚àí cs ) + cÃÑ(t + 1)
where H(.) is the Heaviside step function.
cÃÑ(Œæn‚àí (t)) = (cs ‚àí ŒπÃÑ(t|Œæn‚àí )œÅc ci )H(ŒπÃÑ(t|Œæn‚àí )œÅc ci ‚àí cs ) + cÃÑ(t + 1)
If we assume that information that raises the probability of a transmission event above some threshold, pt will trigger
isolation and contact tracing of a close contact, then the expected cost of getting a positive test is
X
X
cÃÑ(Œæn+ (t)) = (cs ‚àí ŒπÃÑ(t|Œæn+ )œÅc ci )H(ŒπÃÑ(t|Œæn+ )œÅc ci ‚àí cs ) +
c‚Üí
c‚Üê
a (t ‚àí tc ) +
a (t ‚àí tc ) + cÃÑ(t + 1)
A

where

B


A = htc , a, bi ‚àà C(t) : P (œÑa‚Üíb |Œæn+ ) > pt ‚àß P (œÑa‚Üíb ) ‚â§ pt

B = htc , a, bi ‚àà C(t) : P (œÑb‚Üía |Œæn+ ) > pt ‚àß P (œÑb‚Üía ) ‚â§ pt

‚Üí
cÃÑ‚Üê
a (‚àÜt) is the expected cost saving of isolating and contact tracing an infector at a time ‚àÜt after the contact and cÃÑa (‚àÜt)
is the expected cost saving of isolating and contact tracing an infectee at a time ‚àÜt after the contact. These expected
values can be pre-calculated using Monte-Carlo simulation.

Notice that calculation of cÃÑ(t) requires calculation of cÃÑ(t + 1) so we have a recursion.
To make the recursion tractable, we make a few assumptions. First, since the logging of symptoms can be done with
very little cost, we assume that symptoms should be logged every day unconditionally (in practice, this will consist of
the logging of the onset of and recovery from any relevant symptoms, with the assumption of no symptoms otherwise).
Secondly, we assume that we take at most one clinical test a day, and that the appropriate clinical test (i.e. PCR, antigen
or antibody) can be decided by clinical considerations based on our belief about onset time and whether there have been
previous positive tests (i.e. whether we are trying to show that a person has been infected or is safe to release).
With these assumptions, we can easily calculate the recursion 7 days into the future without putting a significant
computational load on the phone. Since on each day either no test is performed, or a test is performed and returns
positive, or a test is performed and returns negative, there are three scenarios to evaluate each day and 37 = 2187
scenarios in total. Beyond the 7 day horizon, we assume that if isolated the user will remain isolated until no danger is
posed or if not isolated, the user will remain out of isolation. Since we don‚Äôt know what the result of symptom tests
will be, we take a Monte-Carlo sample of symptom onset times (say 100 samples) and run each scenario with each
sample, giving a total of just over 200, 000 scenarios to run. This is not a large computational load, but can be reduced
further if desired by pruning highly unlikely scenarios (such as getting two consecutive negative tests at the peak of
viral shedding after positive confirmation) and unreasonable testing schedules (e.g. performing a test around symptom
onset if a positive test has already been obtained).
8

Decentralised, privacy-preserving Bayesian inference for mobile phone contact tracing

7

Discussion and further work

We have described a privacy-preserving way of doing distributed Bayesian inference on a network of mobile phones in
order to inform decisions made by a contact tracing app. The algorithm also allows the disease model on each phone
to be updated in response to the data collected during contact tracing and allows Epidemiologists to learn about the
dynamics of the disease.
Further work is necessary to ensure that the network can withstand malicious attack, and a full analysis should be
made to ensure that there is no way that the content of the messages could be used to identify a person. However, we
have shown that Bayesian inference and epidemiological data collection is possible within the context of decentralised
contact tracing as described in the Apple/Google specification.

References
[1] Google Inc. Apple Inc. Privacy-preserving contact tracing, 2020. Accessed 6th May, 2020. URL: https:
//www.apple.com/covid19/contacttracing/.
[2] C Troncoso et al. Decentralized privacy-preserving proximity tracing, 2020. Accessed 6th May, 2020. URL:
https://github.com/DP-3T/documents/blob/master/DP3T%20White%20Paper.pdf.
[3] PEPP-PT.
Building blocks for pandemic management systems for proximity tracing, 2020.
Accessed 6th May, 2020. URL: https://github.com/pepp-pt/pepp-pt-documentation/blob/master/
PEPP-PT-building-blocks.pdf.
[4] Yicheng Fang, Huangqi Zhang, Jicheng Xie, Minjie Lin, Lingjun Ying, Peipei Pang, and Wenbin Ji. Sensitivity of
chest ct for covid-19: comparison to rt-pcr. Radiology, page 200432, 2020.
[5] Enrico Lavezzo, Elisa Franchin, Constanze Ciavarella, Gina Cuomo-Dannenburg, Luisa Barzon, Claudia Del Vecchio, Lucia Rossi, Riccardo Manganelli, Arianna Loregian, Nicol√≤ Navarin, et al. Suppression of covid-19 outbreak
in the municipality of vo, italy. medRxiv, 2020.
[6] Judea Pearl. Probabilistic reasoning in intelligent systems: networks of plausible inference. Elsevier, 2014.
[7] Felix Sattler, Jackie Ma, Patrick Wagner, David Neumann, Markus Wenzel, Ralf Sch√§fer, Wojciech Samek, KlausRobert M√ºller, and Thomas Wiegand. Risk estimation of sars-cov-2 transmission from bluetooth low energy
measurements, 2020. arXiv:2004.11841.
[8] Daphne Koller and Nir Friedman. Probabilistic graphical models: principles and techniques. MIT press, 2009.
[9] Lei Luo, Dan Liu, Xin-long Liao, Xian-bo Wu, Qin-long Jing, Jia-zhen Zheng, Fang-hua Liu, Shi-gui Yang, Bi Bi,
Zhi-hao Li, et al. Modes of contact and risk of transmission in covid-19 among close contacts. medRxiv, 2020.

9

