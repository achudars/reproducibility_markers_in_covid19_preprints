On Accelerated Testing for COVID-19
Using Group Testing

arXiv:2004.04785v1 [cs.IT] 9 Apr 2020

Krishna R. Narayanan, Anoosheh Heidarzadeh, and Ramanan Laxminarayan

Abstract
COVID-19 has resulted in a global health crisis that may become even more acute over the upcoming
months. One of the main reasons behind the current rapid growth of COVID-19 in the U.S. population
is the limited availability of testing kits and the relatively-high cost of screening tests. In this draft,
we demonstrate the effectiveness of group testing (pooling) ideas to accelerate testing for COVID-19.
This draft is semi-tutorial in nature and is written for a broad audience with interest in mathematical
formulations relevant to COVID-19 testing. Therefore, ideas are presented through illustrative examples
rather than through purely theoretical formulations. The focus is also on pools of size less than 64 such
as what is practical with current RT-PCR technology.

I. I NTRODUCTION
Epidemiologists believe large-scale testing and isolation of infected people is among the most effective
strategies to control the spread of COVID-19. One of the major reasons testing has been substantially
delayed in many countries including the United States is the limited availability of screening tests [1].
The resulting inability to rapidly test large sections of the U.S. population for COVID-19 is exacerbating
the health crisis. While more testing kits have started to become available within the last few days, it
is unlikely that the number of available tests will scale fast enough to be able to test large sections of
the population rapidly. Here, we investigate the use of ideas from group testing (pooling) to accelerate
testing for COVID-19.
The COVID Tracking Project provides real-time data on the number of tests conducted in each state
in the United States and the number of positive tests among them. This data for a few states and for the
K. R. Narayanan and A. Heidarzadeh are with the Department of Electrical and Computer Engineering, Texas A&M University,
College Station, TX 77843 USA (E-mail: {krn,anoosheh}@tamu.edu).
R. Laxminarayan is with the Center for Disease Dynamics, Economics & Policy, Silver Spring, MD 20910, USA, the
Department of Global Health, University of Washington, Seattle, WA 98104, USA, and the Princeton Environment Institute,
Princeton University, Princeton, NJ 08544, USA (E-mail: ramanan@cddep.org).

1

whole country is shown in Table I. The are two main takeaways from this table: (i) only a small number
TABLE I
N UMBER OF TESTS AND POSITIVES IN EACH STATE AS OF M ARCH 22, 2020.

State

Number of tests

Number of positives

% Positives

Washington

27,121

1,793

6.61%

California

12,840

1,536

11.96%

Texas

8,756

334

3.81%

U.S.A

225,374

31,888

14.14%

of people are being tested in each state, and (ii) only a small fraction of the people who were tested for
COVID-19 tested positive. In this regime, the group testing is expected to yield a significant reduction
in the number of tests per person, as compared to performing one test on each individual separately.
One of the effective strategies for managing the spread of COVID-19 is large-scale population-level
testing of asymptomatic people for obtaining coarse grained information. In such cases, the probability
of a person who is tested being infected (prevalence) will be even smaller, increasing the efficiency of
group testing.
In the current context, group testing can be useful for two problems:
1) Testing individuals: Group testing can be used to decrease the number of tests required to identify
infected individuals within a population.
2) Testing populations: Group testing can be used to classify the infection rate in a neighborhood as
being high or low, i.e., group testing can be used in conjunction with hypothesis testing.
II. G ROUP T ESTING
Consider the problem of testing a population of n people where each person in the population is likely
to have been infected with probability p, so as to determine the subset of infected people. The traditional
way to determine the set of infected people is to conduct individual tests on swabs obtained from each
person in the population. This requires n tests or, one test per person.
Group testing is an alternative way to solve the problem, which in some cases, requires drastically fewer
than n tests. The key idea in group testing is to group (or, pool) multiple items (swabs or blood samples)
and test each group rather than each individual. The output of the test will be negative if everyone in the
group is healthy or else, the output will be positive. The objective of group testing is to design the testing
scheme (or, pools) such that the total number of tests m to be performed is minimized. The remarkable
result from group testing is that if p is small, the infected people can be identified from far fewer than

2

n tests, i.e., the average number of tests per person can be substantially smaller than one. Group testing

was first introduced to the field of statistics by Dorfman [2] during World War II for testing soldiers
for syphilis without having to test each soldier individually. Since then, group testing has been used in
such as clone library screening, non-linear optimization, multi-access communication etc.., [3] and fields
like biology [4], machine learning [5], data structures [6] and signal processing [7]. In turn, advances in
coding theory and multi-access communication have substantially advanced the field of group testing. A
comprehensive survey of group testing algorithms can be found in [3], [8]‚Äì[12].
There are three versions of group testing that are commonly used. In non-adaptive group testing, the
pools are formed before testing begins and typically, tests on the pools are conducted in parallel. In
adaptive group testing, pools are formed adaptively, one at a time, after observing the results of tests on
earlier pools. Adaptive group testing, obviously, is more effective in terms of number of tests required;
however, it can be slow since each test may take hours to complete. Multi-stage group testing is a
compromise between the fully adaptive and fully non-adaptive versions. Here there are L rounds of tests
and the pools during the ith round can be formed after observing the results of tests from pools formed
until stage i ‚àí 1.
III. D ETERMINING I NFECTED I NDIVIDUALS U SING G ROUP T ESTING
In this section, we will explain a few group testing schemes and demonstrate their effectiveness through
some examples.
Example 1. Non-adaptive group testing: Consider a population of n = 4 people (labeled 1, 2, 3, 4),
among whom at most k = 1 people are infected. An obvious way to determine the infected people would
be to run a test on each individual, requiring 4 tests in total. However using the idea of group testing,
one can pool m = 3 different subsets of n = 4 people, and run one test on each pool, and determine the
k = 1 infected people (if any). For instance, consider the m = 3 pools P1 = {1, 4}, P2 = {2, 4}, and
P3 = {3, 4}. The selected pools in this example can be represented by a 3 √ó 4 binary matrix, called a

testing matrix, as follows:
Ô£Æ
Ô£π
1 0 0 1
Ô£Ø
Ô£∫
Ô£Ø
Ô£∫
M = Ô£Ø0 1 0 1Ô£∫ ,
Ô£∞
Ô£ª
0 0 1 1
where each row corresponds to one test, and the entries 1 in that row represent the people corresponding
to that test. For example, the first row of matrix M represents a test on the pool of individuals 1 and 4.
The main property of the matrix M is that every column is distinct and not all-zero. Such a matrix is
called 1ÃÑ-separable in the group testing literature. (In general, a binary matrix is called k -separable (or

3

Fig. 1. A schematic showing a non-adaptive group testing strategy for n = 4 people.

kÃÑ -separable) if no k columns (or no k -or-fewer columns) have the same Boolean sum (bitwise OR).)

Using the 1ÃÑ-separability of the testing matrix M , the results of the m = 3 tests can be used to determine
the k = 1 infected person (if any). For instance, suppose that the vector of results of the m = 3 tests is
[1, 0, 0]T , i.e., the first test is positive (represented by Boolean 1), the second test is negative (represented

by Boolean 0), and the third test is negative (0). Then, we will determine that the first person is infected.
As an another instance, if the vector of the test results is [0, 0, 0]T , we will determine that none of the
people is infected. A schematic showing this testing procedure is shown in Fig. 1.

Example 2. Adaptive group testing: Consider the same scenario as in Example 1, i.e., a population
of n = 4 people (labeled 1, 2, 3, 4), among whom at most k = 1 people are infected. In adaptive group
testing, we can first form the pool P1 = {1, 2} and test the pool. If the result is positive, then we use the
pool P2 = {1}. If the test on pool P1 is negative, then we test the pool P3 = {3, 4} and if the result is
positive, then we test P4 = {3}. It can be seen that this procedure identifies the infected person (if there
is one) with fewer tests on the average than that in the non-adaptive approach. However, in the worst
case, we still require 3 tests and more importantly, since the tests are performed sequentially, the total
time taken can be three times as long as in the non-adaptive case.
Example 3. Sparsity-oblivious multi-stage (SOMS) group testing: Consider a population of n = 4
people (labeled 1, 2, 3, 4). An obvious way to determine the infected people would be to run a test on each
individual, requiring 4 tests in total. However, with group testing, we can follow the procedure shown
in the flowchart in Figure 2. We refer to this strategy as the Sparsity-Oblivious Multi-Stage (SOMS)
strategy. Here Ti refers to the ith test and {a, b, c} refers to pooling the samples of a, b and c. For
example, T1 : {1, 2, 3, 4} means that the first test is conducted on a pool consisting of all 4 people. If

4

ùëáùëá1 : {1,2,3,4}

N

STOP

P

ùëáùëá2 : {1,2}
ùëáùëá3 : {3,4}

N,P,N
or P,N,N
or P,P,N

STOP

ùëáùëá4 : {1,3}
N,P,P

ùëáùëá5 : {4}

P,N,P

P,P,P

ùëáùëá5 : {2}

P or N

P or N

ùëáùëá5 : {1}
ùëáùëá6 : {2}
ùëáùëá7 : {3}
ùëáùëá8 : {4}

STOP

STOP

STOP

Fig. 2. Flowchart showing the SOMS group testing strategy for n = 4 people.

the result of that test is negative (denoted by N), we stop since it means no one is infected. If the result
of that test is positive (denoted by P), then we conduct three more tests T2 , T3 and T4 on pools {1, 2},
{3, 4}, and {1, 3}, respectively. If the result of the three tests T2 , T3 and T4 are (N, P, N), (P, N, N) or
(P, P, N), then we can uniquely identify the one person who is infected and we can stop. If the results of
T2 , T3 and T4 are (N, P, P), respectively, we conduct a fifth test just on {4} and we stop. If the results

of T2 , T3 and T4 are (P, N, P), respectively, then we conduct a fifth test just on {2} and we stop. If
the results of T2 , T3 and T4 are (P, P, P), respectively, then we conduct four tests individually on all 4
samples.
Example 4. Sparsity-oblivious fully-adaptive (SOFA) group testing: One of the main advantages of
the SOMS strategy is that it leverages parallel tests at some stages of the testing. This can significantly
reduce the total testing execution time in order to identify all infected people in the population (on
average). However, this advantage comes at the price of not being optimal in terms of the total number
of tests. In what follows, we propose another testing strategy, referred to as the Sparsity-Oblivious FullyAdaptive (SOFA) strategy, that will require less number of tests on average for a population of n = 4
people. It should be noted that the average execution time of SOFA is longer than that of SOMS. That

5

Average number of tests per patient (E[Tests]/n)

0.6

0.55

0.5

0.45

0.4

0.35

0.3

n=4 (SOMS)
n=4 (SOFA)
0.25
0.01

0.02

0.03

0.04

0.05

0.06

0.07

0.08

0.09

0.1

Probability of a patient being infected (p)

Fig. 3. Average number of tests per person for n = 4 and different values of p.

is, the SOMS and SOFA strategies achieve different tradeoffs between the average number of tests and
the average execution time.
In SOFA, depending on the results of the previous tests, at each stage either (i) we perform one test
on the pool of all unidentified people, or (ii) we perform a binary search on them until we find one
(and no more) infected person (if any). In order to choose the best action ((i) or (ii)) at each stage, the
algorithm uses the number of infected people that have already been identified. When the number of
already-identified infected people is relatively larger (or smaller) than the expected number of infected
people (np), the action (i) (or (ii)) will be taken. This procedure is motivated by the fact that when the
number of already-identified infected people is relatively large as compared to the expected number of
infected people, most likely none of the remaining people are infected; and hence it would be more
efficient (in terms of the number of tests) to perform one test on all unidentified people, instead of
performing a binary search on them.
The main advantage of any efficient group testing strategy is that the average number of tests required
can be substantially lower than n. Let p be the probability that each person who appears for the test is
infected, independently from other people.
In Figure 3, a plot of the average number of required tests per person is shown for n = 4 people and
for different values of p, when using both the SOMS and SOFA strategies. It can be seen that when
p = 0.05, the average number of tests required for identifying all infected people in a population of
n = 4 people using SOMS (or SOFA) is about 0.425 √ó n = 1.7 (or 0.375 √ó n = 1.5). This shows a

reduction in the number of tests by about 57.5% for SOMS (or 62.5% for SOFA), as compared to testing

6

Average number of tests per patient (E[Tests]/n)

0.55
0.5
0.45
0.4
0.35
0.3
0.25
0.2
0.15

n=4 (SOFA)
n=8 (SOFA)
n=16 (SOFA)
n=32 (SOFA)

0.1
0.05
0.01

0.02

0.03

0.04

0.05

0.06

0.07

0.08

0.09

0.1

Probability of a patient being infected (p)

Fig. 4. Average number of tests per person for different values of n and p.

the people individually. Not surprisingly, when n is fixed, the average number of required tests increases
as p increases. That said, when n = 4, even for p = 0.1, a reduction of about 42.5% (or 50%) can be
achieved using SOMS (or SOFA).
Figure 4 depicts a plot of the average number of tests per person when using SOFA for n ‚àà {4, 8, 16, 32}
people and different values of p. As can be seen, for sufficiently small values of p, the reduction in the
average number of tests (when compared to individual testing) becomes even more profound for larger
values of n. For instance, using SOFA, when p = 0.01, the average number of tests for n = 32 people is
about 0.1 √ó n = 3.2, resulting in about 90% reduction in the number of tests; whereas for n = 4 people
the reduction is about 72.5%.

A. Impact of correlation
A natural question to ask is how the correlation between the infection rates of people in the population
affects the performance of the group testing algorithms. Equivalently, what would the performance of
the group testing algorithms under worst-case correlation structure? Let Xk ‚àº Bernoulli(p), k = 1, . . . , n
denote binary random variables representing the infection status of each person in the sample. The infection status of the entire group is then given by a vector-valued random variable X = [X1 , X2 , . . . , Xn ] ‚àà
{0, 1}n . Let x be a realization of X . Let Z(x) denote the integer representation of x and let [x]k denote

the k th bit of x. Let Bk := {i : [Z ‚àí1 (i)]k = 1} be the set of integers i such that the k th bit in the binary
representation of i is 1. Let Œìi denote the number of tests required to determine Z ‚àí1 (i) correctly. Any

7

Average numbr of tests per patient (E[Tests]/n)

0.6

0.55

0.5

0.45

0.4

0.35

0.3

n=4 (SOMS)
n=4 (SOFA)
0.25
0.01

0.02

0.03

0.04

0.05

0.06

0.07

0.08

0.09

0.1

Probability of a patient being infected (p)

Fig. 5. Average number of tests per person for the worst-case correlation, for n = 4 and different values of p.

arbitrary correlation between Xk ‚Äôs can be captured by defining a distribution on X . Let œÄ = [œÄ1 , . . . , œÄ2n ]
denote the probability mass function of X , i.e., œÄi = P(Z(x) = i). We can solve for the worst case
expected value of Œì over œÄ by solving the following linear program
n

minimize: ‚àí

2
X

Œìi œÄi

i=1

Subject to: ‚àí œÄi ‚â§ 0
X
œÄi = 1
i

X

= p, ‚àÄk = 1, . . . , n

œÄj

(1)

j‚ààBk

The constraints in (1) refer to the constraints on the marginal probabilities of each Xk being p. The
performance of both the SOMS and SOFA strategies for the worst-case correlation subject to the constraint
that the probability of infection of any individual is p, is plotted in Figure 5 for n = 4 and different
values of p. As can be seen, even for the worst-case correlation, the average number of tests for both the
SOMS and SOFA strategies are substantially lower than that for individual testing.
IV. G ROUP T ESTING FOR I NFECTION R ATE C LASSIFICATION
We now move from the problem of using group testing for testing individuals to the problem of using
group testing for obtaining coarse-grained information about the prevalence of infections in neighborhoods. Consider the problem of classifying the infection rate in a neighborhood or geographic region as
being low (p0 ) or high (p1 ) when p0 and p1 are known a priori. Group testing can be very beneficial

8

in reducing the number of tests required for this classification task. This is a hypothesis testing problem
with two hypotheses
H0 : Infection rate is p0
H1 : Infection rate is p1

In our approach, we randomly select a group of N people from the region and split them into L
subpools, S1 , S2 , . . . , SL , each of size N/L. A subpool Sk is said to be infected if at least one person
in the subpool is infected. Let Xk be a binary random variable defined as follows
Ô£±
Ô£≤ 1, if S is infected;
k
Xk =
Ô£≥ 0, if S is not infected.
k
We assume a uniformly random sampling process such that each person in the pool is infected with
probability pi independent of every other person in the chosen samples. Therefore, Xi is a Bernoulli
random variable with parameter qi if hypothesis Hi is true, where qi is given by
qi = 1 ‚àí (1 ‚àí pi )N/L .

Let x = [x1 , x2 , . . . , xL ] denote a vector of realizations of Xk s indicating which subpools have been
P
infected and let n(x) := k xk denote the number of infected subpools. If the prior probabilities of H0
and H1 are given by œÄ0 and œÄ1 , respectively, the log likelihood ratio (LLR) for x is given by
P(H0 |x)
P(H1 |x)
œÄ0
q0
1 ‚àí q0
+ n(x) log
+ (L ‚àí n(x)) log
log
œÄ1
q1
1 ‚àí q1


œÄ0
q0
1 ‚àí q0
1 ‚àí q0
log
+ n(x) log
‚àí log
+ L log
.
œÄ1
q1
1 ‚àí q1
1 ‚àí q1

L(x) := log
=
=

(2)

It is clear from (2) that n(x) is a sufficient statistic for the LLR test. Hence, the solution to the hypothesis
testing problem is given by
$
Select H0 if n(x) ‚â§ V =

0
log œÄœÄ01 + L log 1‚àíq
1‚àíq1
0
‚àí log qq01 + log 1‚àíq
1‚àíq1

%
.

(3)

The main idea in our approach is to perform group testing using binary splitting at the subpool level
to determine whether n(x) ‚â§ V . An important difference between our algorithm and conventional binary
splitting is that we do not perform binary splitting until we recover x exactly; rather, we perform binary
splitting only until we are able to ascertain if n(x) ‚â§ V . Since

1n(x)‚â§V is a function of x, our algorithm

will typically require fewer tests on the average compared to conventional binary splitting.

9

Fig. 6. Flowchart representing hypothesis testing using binary splitting.

A. Probability of false alarm, probability of detection and average number of tests
The probability of false alarm (PF ) and probability of correct detection (PD ) are given by
PF

:= P(n(x) > V |H0 is true)
 
L
X
L j
=
q (1 ‚àí q0 )L‚àíj ,
j 0
j=V +1

PD := P(n(x) > V |H1 is true)
 
L
X
L j
=
q (1 ‚àí q1 )L‚àíj .
j 1
j=V +1

For every x, let Œì(x) denote the number of tests required. Since x is a random vector, Œì(x) is a random
P
variable and the average number of tests is given by E[Œì] = x P(x)Œì(x). The following example will
explain the group testing procedure and an analysis of the procedure in more detail.
Example 5. Suppose p0 = 0.01, p1 = 0.05, œÄ0 = 0.5, œÄ1 = 0.5. We choose N = 64 people from a region
and form L = 4 subpools labeled S1 , S2 , S3 , S4 . V can be computed from (3) and for these parameters,
V = 1. Our group testing procedure is shown in Figure 6.

We use the notation Ti = {Sa , Sb , Sc } to denote that the ith test is performed by pooling all the
samples from the subpools a, b, and c. T1 : {S1 , S2 , S3 , S4 } then refer to performing one test by pooling
the samples from subpools S1 , S2 , S3 , and S4 . If the result of test T1 is negative, we accept H0 . If the
result of T1 is positive, we perform two more tests T2 : {S1 , S2 } and T3 : {S3 , S4 }. If the results of
both tests T2 and T3 are positive, we accept H1 . If the result of only one of T1 or T2 is positive, then
we perform two more tests by breaking that pool into two smaller subpools. For example, if the result
of T2 is positive, then we perform two more tests T4 : {S3 } and T5 : {S4 }. If the result of only one
of T4 or T5 is positive, then we accept H0 , else we accept H1 . We can analyze the probability of false

10

TABLE II
C HOSEN HYPOTHESIS AND NUMBER OF TESTS NEEDED FOR DIFFERENT x VECTORS .

x

P(x|Hi )
(1 ‚àí qi )

4

Chosen hypothesis

No. of tests Œì(x)

H0

1

qi (1 ‚àí qi )

3

H0

5

0010

qi (1 ‚àí qi )

3

H0

5

0011

qi2 (1

2

H1

5

0000
0001

‚àí qi )

0100

qi (1 ‚àí qi )

3

H0

5

0101

qi2 (1

2

H1

3

0110

qi2 (1

2

H1

3

0111

qi3 (1

‚àí qi )

H1

3

‚àí qi )
‚àí qi )

1000

qi (1 ‚àí qi )

3

H0

5

1001

qi2 (1

2

H1

3

1010

qi2 (1

2

H1

3

1011

qi3 (1

‚àí qi )

H1

3

1100

qi2 (1

2

H1

5

1101

qi3 (1

‚àí qi )

H1

3

1110

qi3 (1

‚àí qi )

H1

3

H1

3

1111

‚àí qi )
‚àí qi )

‚àí qi )

qi4

alarm, probability of detection, and the average number of tests required as follows. The distribution of
the number of infected subpools, the chosen hypothesis, and the number of tests required in each case
are shown in Table II for L = 4.
The probability of false alarm (PF ) is the probability that 2,3, or 4 subpools are infected when H0 is
true and the probability of detection (PD ) is the probability that 2,3, or 4 subpools are infected when H1
is true. These probabilities are given by
PF

= 6q02 (1 ‚àí q0 )2 + 4q03 (1 ‚àí q0 ) + q04 ,

PD = 6q12 (1 ‚àí q1 )2 + 4q13 (1 ‚àí q1 ) + q14 .

The average number of tests required can be computed by taking the expected value of the random
variable Œì given by






E[Œì] = (1 ‚àí qi )4 ¬∑ 1 + 4qi2 (1 ‚àí qi )2 + 4qi3 (1 ‚àí qi ) + qi4 ¬∑ 3 + 4qi (1 ‚àí qi )3 + 2qi2 (1 ‚àí qi )2 ¬∑ 5.
B. Extensions
The above algorithm can be generalized in many ways. A proper choice of L is important to obtain
several points in the (PF , PD )-plane also called as the receiver operating characteristic (ROC) curve. As

11

Probability of detection/false alarm

1
Probability of detection
Probability of false alarm

0.8
0.6
0.4
0.2
0
0

50

100

150

200

250

300

200

250

300

Sample size (N)

Average number of tests

9
8
7
6
5
4
0

50

100

150

Sample size (N)

Fig. 7. PF , PD , and E[Œì] as a function of N when L = 8, V = 4, p0 = 0.01, and p1 = 0.05.

is common in any binary hypothesis testing, we can change the threshold V to trade off PF for PD .
When N is large, the result of T1 will be positive with high probability when either H0 or H1 is true.
In this case, T1 will not be very informative. Hence, we can skip this test and directly start with tests
at the next level, namely T2 and T3 . This strategy will reduce the number of tests without affecting the
probability of false alarm and the probability of detection significantly. The average number of tests in
this case is given by




E[Œì] = (1 ‚àí qi )4 + 4qi2 (1 ‚àí qi )2 + 4qi3 (1 ‚àí qi ) + qi4 ¬∑ 2 + 4qi (1 ‚àí qi )3 + 2qi2 (1 ‚àí qi )2 ¬∑ 4.
More generally, we can directly start the tests at level œÑ , and œÑ can be tuned as a parameter.

C. Results
1) Noiseless Setting: Plots of PF versus N , PD versus N , and E[Œì] versus N are shown in Figure 7.
It can be seen that with less than 8.7 tests on the average, a probability of detection of 95% can be
obtained while the probability of false alarm is only about 4%. These results can be improved at the
expense of an increase in the average number of tests.
In Figure 8, we plot the receiver operating characteristics (ROC) curve for different values of L and
V . (For a given pair of values of L and V , each point on the underlying curve corresponds to a different

value of N .) It can be seen that when L = 16 and V = 5, we can obtain an excellent trade-off between
PF and PD .

12

Fig. 8. ROC curve obtained by changing N for different values of L and V when p0 = 0.01, p1 = 0.05.

When p0 and p1 are closer to each other, more samples are required to distinguish between them. When
p0 = 0.005 and p1 = 0.01, we show the PF , PD versus N and the average number of tests versus N

curves in Figure 9 and the ROC curve in Figure 10. In these cases, we have used L = 128 and V = 26.
It can be seen that when N = 4096, which corresponds to a maximum pool size of 2N/L = 64, with
an average number of tests of 83.9, a detection probability of 96% and a false alarm probability of 3.5%
can be obtained.

Fig. 9. PF , PD and E[Œì] as a function of N when L = 128, V = 26, p0 = 0.005, and p1 = 0.01.

13

Fig. 10. ROC curve obtained by changing N when L = 128, V = 26, p0 = 0.005, and p1 = 0.01.

2) Noisy Setting: Due to several factors including human error and current technology, when testing
larger subpools the accuracy of tests may be lower than the accuracy of tests on individuals. A recent
study in [13] shows that using the standard RT-PCR technology, with a false negative rate of about 10%
a single infected individual can be identified in pools of size up to 32. This naturally raises a question
about the robustness of the proposed scheme (for infection rate classification) to the accuracy of tests. In
the following, we demonstrate the robustness of the proposed scheme in the presence of noisy test results
when the noise is modeled as follows. Given that the hypothesis Hi is true, we assume that the test result
for a subpool not containing any infected people will always be negative with probability 1 (representing
a false positive rate of 0%, or equivalently, a test specificity of 100%); whereas the test result for a
subpool containing some infected individual(s) will be positive with probability œÅi (representing a false
negative rate of 1 ‚àí œÅi , or equivalently, a test sensitivity of œÅi ).
Tables III and IV show the probability of detection PD , the probability of false alarm PF , and the
average number of tests E[Œì] for different values of the pool size N , the number of subpools L, and
the sensitivity œÅ := œÅ0 = œÅ1 . Table III corresponds to the cases with p0 = 0.01 and p1 = 0.05, whereas
Table IV corresponds to the cases with p0 = 0.005 and p1 = 0.01. For the range of parameters being
considered the maximum size of a pool being tested in the proposed scheme (i.e., 2N/L) is not greater
than 64.
As can be seen in both tables, when reducing the sensitivity œÅ from 100% to 80% (i.e., increasing
the level of noise in the test results) for a wide range of parameters it is still possible to attain PD and
PF that are within an acceptable range, e.g., PD ‚â• 95% and PF ‚â§ 5%. For instance, in Table III, for

14

TABLE III
PD , PF , AND E[Œì] FOR DIFFERENT VALUES OF N , L,
Pool size N

No. of subpools L

256

8

256

2N
L

AND

V

WHEN p0

= 0.01 AND p1 = 0.05.

Sensitivity œÅ

PD

PF

E[Œì]

Threshold V

64

100%

96.0%

4.1%

8.7

4

8

64

80%

88.8%

7.7%

6.7

3

256

16

32

100%

98.8%

7.6%

9.3

4

256

16

32

80%

91.2%

3.4%

9.8

4

448

14

64

100%

99.8%

6.2%

10.4

6

448

14

64

80%

97.3%

6.6%

11.1

5

448

28

32

100%

99.9%

4.6%

16.8

7

448

28

32

80%

99.1%

4.1%

16.1

6

Max. pool size

TABLE IV
PD , PF ,

AND

E[Œì] FOR DIFFERENT VALUES OF N , L,

Pool size N

No. of subpools L

4096

128

4096

2N
L

AND

V

WHEN p0

= 0.005 AND p1 = 0.01.

Sensitivity œÅ

PD

PF

E[Œì]

Threshold V

64

100%

97.5%

5.6%

83.0

25

128

64

80%

92.5%

4.7%

81.0

21

4096

256

32

100%

98.3%

6.1%

146.0

26

4096

256

32

80%

94.2%

4.6%

143.2

22

4736

148

64

100%

98.3%

4.4%

95.8

29

4736

148

64

80%

94.9%

4.3%

92.7

24

4736

296

32

100%

98.9%

5.2%

168.9

30

4736

296

32

80%

96.4%

4.6%

165.6

25

Max. pool size

N = 448 and L = 28, when œÅ = 100% we can achieve PD = 99.9% and PF = 4.6%, whereas when
œÅ = 80%, PD = 99.1% and PF = 4.1% can be achieved. It should be noted that in order to achieve

(almost) the same PD and PF for fixed N and L, the threshold V needs to be set to a smaller value as
the sensitivity œÅ decreases. As a result, for a smaller sensitivity œÅ the average number of tests required
for (almost) the same PD and PF is larger. However, the relative increase in the average number of tests
becomes smaller for larger values of N and L.
By comparing the results in Tables III and IV, it can be seen that when the values of p0 and p1 are
closer to each other, the pool size N needs to be larger in order to obtain a sufficiently large PD (about
95%) and sufficiently small PF (about 5%). This is expected because for closer values of p0 and p1 ,

distinguishing between the two hypotheses H0 and H1 becomes a more challenging problem, and hence
the need for sampling a larger pool of the population.

15

R EFERENCES
[1] O. Khazan. (2020, Mar) The 4 key reasons the U.S. is so behind on coronavirus testing. [Online]. Available:
https://www.theatlantic.com/health/archive/2020/03/why-coronavirus-testing-us-so-delayed/607954/
[2] R. Dorfman, ‚ÄúThe detection of defective members of large populations,‚Äù The Annals of Mathematical Statistics, vol. 14,
no. 4, pp. 436‚Äì440, 1943.
[3] D.-Z. Du and F. K. Hwang, Combinatorial group testing and its applications.

World Scientific, 1999, vol. 12.

[4] H.-B. Chen and F. K. Hwang, ‚ÄúA survey on nonadaptive group testing algorithms through the angle of decoding,‚Äù Journal
of Combinatorial Optimization, vol. 15, no. 1, pp. 49‚Äì59, 2008.
[5] D. M. Malioutov and K. R. Varshney, ‚ÄúExact rule learning via boolean compressed sensing.‚Äù in Proc. Int. Conf. on Machine
Learning., 2013, pp. 765‚Äì773.
[6] M. T. Goodrich, M. J. Atallah, and R. Tamassia, ‚ÄúIndexing information for data forensics,‚Äù in International Conference
on Applied Cryptography and Network Security.

Springer, 2005, pp. 206‚Äì221.

[7] A. Emad and O. Milenkovic, ‚ÄúPoisson group testing: A probabilistic model for nonadaptive streaming boolean compressed
sensing,‚Äù in Int. Conf. on Acoustics, Speech & Signal Proc. IEEE, 2014, pp. 3335‚Äì3339.
[8] M. Aldridge, O. Johnson, and J. Scarlett, Group Testing: An Information Theory Perspective.

now, 2019.

[9] C. L. Chan, S. Jaggi, V. Saligrama, and S. Agnihotri, ‚ÄúNon-adaptive group testing: Explicit bounds and novel algorithms,‚Äù
IEEE Trans. Inf. Theory, vol. 60, no. 5, pp. 3019‚Äì3035, 2014.
[10] G. K. Atia and V. Saligrama, ‚ÄúBoolean compressed sensing and noisy group testing,‚Äù IEEE Trans. Inf. Theory, vol. 58,
no. 3, pp. 1880‚Äì1901, 2012.
[11] A. Mazumdar, ‚ÄúNonadaptive group testing with random set of defectives,‚Äù IEEE Transactions on Information Theory,
vol. 62, no. 12, pp. 7522‚Äì7531, Dec 2016.
[12] A. Barg and A. Mazumdar, ‚ÄúGroup testing schemes from codes and designs,‚Äù IEEE Transactions on Information Theory,
vol. 63, no. 11, pp. 7131‚Äì7141, Nov 2017.
[13] I. Yelin, N. Aharony, E. Shaer-Tamar, A. Argoetti, E. Messer, D. Berenbaum, E. Shafran, A. Kuzli,
N. Gandali, T. Hashimshony, Y. Mandel-Gutfreund, M. Halberthal, Y. Geffen, M. Szwarcwort-Cohen, and
R. Kishony, ‚ÄúEvaluation of covid-19 rt-qpcr test in multi-sample pools,‚Äù medRxiv, 2020. [Online]. Available:
https://www.medrxiv.org/content/early/2020/03/27/2020.03.26.20039438

16

