Digital Contact Tracing Using IP Colocation
Matthew Malloy

University of Wisconsin
matthew.malloy@wisc.edu

Aaron Cahn

Comscore
acahn@comscore.com

arXiv:2006.09326v1 [cs.SI] 16 Jun 2020

ABSTRACT
The spread of an infectious disease through a population can be
modeled using a network or a graph. In digital advertising, internet
device graphs are graph data sets that organize identifiers produced
by mobile phones, PCs, TVs, and tablets as they access media on
the internet. Characterized by immense scale, they have become
ubiquitous as they enable targeted advertising, content customization and tracking. This paper posits that internet device graphs,
in particular those based on IP colocation, can provide significant
utility in predicting and modeling the spread of infectious disease.
Starting the week of March 16th, 2020, in the United States, many
individuals began to ‘shelter-in-place’ as schools and workplaces
across the nation closed because of the COVID-19 pandemic. This
paper quantifies the effect of the shelter-in-place orders on a large
scale internet device graph with more than a billion nodes by studying the graph before and after orders went into effect. The effects
are clearly visible. The structure of the graph suggests behavior
least conducive to transmission of infection occurred in the US
between April 12th and 19th, 2020. This paper also discusses the
utility of device graphs for i) contact tracing, ii) prediction of ‘hot
spots’, iii) simulation of infectious disease spread, and iv) delivery
of advertisement-based warnings to potentially exposed individuals.
The paper also posits an overarching question: can systems and
datasets amassed by entities in the digital ad ecosystem aid in the
fight against COVID-19?

KEYWORDS
Internet measurement, device graphs, online advertising, epidemiology, graphs, networks, COVID-19, SARS-CoV-2

1

INTRODUCTION

Epidemiologists often study the spread of infectious disease using
a contact process on a network (i.e, a graph) [5, 8–10, 18]. In a
contact process, an infection spreads along the edges of the graph,
infecting neighboring nodes. While the individual edges define who
becomes infected, the underlying structure of the graph controls the
characteristics of the spread of the infectious disease through the
population. Knowledge of the edges in the network is paramount
to contact tracing.
In digital advertising, device graphs are datasets that relate digital
identifiers produced by smartphones, PCs and tablets as they access
resources on the internet. Device graphs, characterized by immense
scale with billions of nodes and tens of billions of edges [22], have
become ubiquitous in the digital advertising ecosystem as they
facilitate targeted advertising. While device graphs are constructed
using information gathered online, the associations they capture
correspond to offline relationships.

Jon Koller

Comscore
jkoller@comscore.com

While the exact mechanisms for assembling device graphs vary,
the principles of their construction follow a similar paradigm. Websites, apps and advertising networks log information about smarphones and PCs as they access media on the internet. The information they collect includes a unique, anonymized identifier (either
a cookie-ID or an advertising ID), an IP address, a timestamp, and
information about the device and the content accessed.
One technique for generating device graphs is IP colocation. IP
colocation is the co-occurrence of identifiers on a single IP address
at approximately the same time. The efficacy of IP colocation techniques comes from the observation that IP space is intimate: IP
addresses are shared by family members, friends and co-workers
when they connect to the internet via the same WiFi access point.
Generally speaking, devices that connect to a WiFi router have the
same public-facing IPv4 address. Capturing these relationships is
valuable for marketing and targeted advertising, and many entities
in digital advertising have assembled device graphs [2, 4, 32]. These
datasets cover the majority of internet-connected devices in the
United States and elsewhere in the world [21].
While internet device graphs are ubiquitous in digital advertising, they also have potential utility for epidemiological study and
combating the worldwide COVID-19 pandemic. As WiFi access
points have limited range, IP colocation is a proxy for physical
colocation. As physical colocation supposes epidemiological contact,
device graphs are a natural fit to study the spread of infectious disease over a network. This paper posits that device graphs could be
used to: i) supplement contact tracing by enabling public health officials to identify users that connected to the same WiFi access points
at internet scale, ii) enable prediction of outbreak ‘hot spots’, and iii)
facilitate delivery of advertisement-based warnings to potentially
exposed individuals. While the datasets have great potential, there
are also limitations. Unlike digital contact tracing approaches based
on mobile apps and technology such as GPS and Bluetooth Low
Energy [13, 16], IP colocation is more susceptible to false positives.
This potential shortcoming is arguably overcome by scale.
This paper studies the effects of shelter-in-place on an internet
scale IP colocation device graph provided by a large internet analytics company, Comscore. The COVID-19 pandemic caused a
significant change in day-to-day behavior in the US and across the
globe. In the US, starting approximately the week of Monday March
16th, many individuals began to work from home and shelter-inplace either voluntarily or through mandate, as schools across the
nation closed. We study the effects of this change in behavior by
examining the community structure of the device graph∗ .
The effects of sheltering in place are clearly visible in the device graph, validating a simple hypothesis: when individuals stay
home, they do not connect to WiFi outside-the-home, reducing the
number of outside the home edges in the graph. We study two
∗ We intend to make anonymized graph datasets publicly available, corresponding
to before and after the shelter-in-place orders.

statistics of the graph and the inferred community structure: i)
the modularity, and ii) the ratio of edges that cross communities
to the total number of edges in the graph. Both metrics indicate
that behavior least conducive to the spread of infectious disease
occurred on the week beginning April 12th, 2020. Past this week,
both graph metrics suggest behavior becomes more conducive to
the spread of infectious disease. We also compare the metrics to the
estimated percent of the US population that is placed under stay at
home orders.
The use of internet device graphs for contact tracing, prediction
of transmission, and epidemiological studies, to the best of our
knowledge, is a new idea. Compared to other technology for digital
contact tracing using mobile devices [13], there are both significant
advantages and limitations. One main advantage of device graphs is
that they already exist and do not require custom apps or websites
as are often suggested for digital contact tracing in the media [1].
Required data collection only consists of server logs containing an
IP address, an ID (a cookie or advertising ID), and a timestamp. This
data is recorded any time a user accesses content on a webpage or
app, and these datasets are already produced and sold by a number of tracking and measurement entities in the digital advertising
ecosystem. The identifiers used in device graphing conform to established privacy guidelines, and are also precisely the identifiers
that facilitate targeted advertisements, which could be used for
public service announcements or warnings of potential exposure
to infectious diseases. There are limitations to using device graphs
based on IP colocation for contact tracing. Most importantly, they
do not reveal detailed location traces that are available using techniques based on precise geolocation services (i.e, GPS). Instead they
provide reliable estimation of habitual behavior.
To the best of our knowledge, the use of device graphs to simulate the spread of infectious disease is a new idea. The baseline
graph under normal conditions would likely be of interest to epidemiologists for use in a contact process model. Moreover, the
change in characteristics of the graph pre and post shelter-in-place
orders is also likely of interest to epidemiologists and policy makers
in understanding the effectiveness of such orders. The data structure provides a unique opportunity for simulation and exposition
to answer the following question: do the shelter-in-place orders
have material impact on the rate of spread of infectious disease
as modeled as a contact process on a device graph? A number of
related modeling questions ensue. We also pose the overarching
question: can the processes and datasets developed by the advertising ecosystem writ large aid in the fight against COVID-19?

Before proceeding, we define notation required in graph analysis.
An undirected, weighted graph G is a set of nodes V and a set of
edges E, G = (V , E). An edge e ∈ E consists of two elements from
V and a weight: e = (i, j, w) ∈ V × V × R. In a device graph, a node
i ∈ V is a digital identifier (e.g., a web cookie or advertising ID). An
edge e ∈ E represents a relationship between two identifiers. Many
of the applications of device graphs require determining groups
of devices that have strong relationships in the graph. We refer to
these groups as communities. When a community is aligned to a
residential household, we refer to it as a household. A community
is a set of one or more nodes, C = {i, . . . } ⊂ V , and the set of
communities is denoted C = {C 1 , C 2 . . . }. C is a partitioning of
Ð
V , i.e, Ci ∩ C j = {} for any i , j, and i Ci = V . In IP colocation
device graphs, communities are small groups of IDs often observed
together on the same IP address. These groups are are well aligned
with residential households and small business places.
The data used to build the IP colocation device graphs comes from
Comscore’s digital network, one of the largest in the world. This
data is collected over a 42 day period (six weeks) via the local execution of either a JavaScript/HTML or SDK (software development
kit) tag on a client machine. These tags can be found accompanying
a wide variety of internet resources, including web pages, video
requests, mobile applications, advertisement deliveries, and other
distributed content. When local execution occurs a unique record
is directly reported to Comscore’s infrastructure. The record is
run through an ETL (extract-transform-load) process before being
utilized in the construction of the IP colocation device graph.
Construction of the IP colocation device graph starts with a
dataset consisting of tuples of (device ID, IP address, time). For each
IP address in the dataset, an edge is established between every
pair of device IDs that share that IP address on epoch t = 1. The
weight of the edge is inversely proportional to the number of digital
identifiers observed on that IP at that epoch. This is repeated for
epoch t = 2, 3, . . . . After each epoch is considered, a final weight is
assigned to each pair of devices by summing over all epochs and all
IP addresses. The algorithm is detailed in Algorithm 1. Algorithm
1 requires two parameters: N max , which is set to exclude high
volume IP addresses, and the edge cutoff parameter γ , which results
in the exclusion of edges below a specified weight. Algorithm 1 is
implemented in practice utilizing the Apache Pig platform on an
Apache Hadoop environment consisting of 500+ worker nodes.

Algorithm 1 IP Colocation Device Graph [21]
1:

2

2:

BACKGROUND AND METHODOLOGY

3:

This section reviews background and methodology for generation
of an IP colocation device. More details can be found in [14, 21, 22].
IP colocation device graphing often follows three steps: i) data
collection, ii) generation of the graph, which establishes pair-wise
relationships between devices by observing them on the same IP
address at approximately the same time, and iii) community detection, which partitions the graph into smaller clusters that identify
household, person-level, or larger internet communities depending
on tuning of the algorithms.

4:
5:
6:
7:
8:
9:
10:
11:
2

parameters: N max , γ
input: tuples (device ID, IP address, time)
V = set of unique device IDs
for each time step t, each IP k
Nt,k = number of distinct device IDs on IP k at time t
if Nt,k ≤ N max
for all pairs of device IDs (i, j) on IP k at t
w i, j (t, k) = N 1
t, k
Í
w i, j = t,k w i, j (t, k) for all (i, j)
E = {(i, j, w i, j ) : w i, j > γ }
return Gγ = (V , E)

After construction of the graph, community detection algorithms
can be applied to cluster devices into small communities of closely
related nodes. The clusters, which partition V , correspond to individuals, residential households, and larger work and social communities. As the basis for the graph is IP colocation, the communities
correspond to individuals that share WiFi access points. To study
clustering properties of the graph, we applied community detection
algorithms, adjusting the parameter γ as one mechanism to control
the size of the communities.
The goal of community detection is to find a partitioning of the
nodes so that the edges between nodes in a group are dense and
edges between nodes from different groups are sparse. Community
detection is well studied with many available methods. The Louvain
method [6] is a popular technique due to its success on large scale
graphs, and we employ the approach to cluster the nodes of the IP
colocation graph. The Louvain approach consists of two repeated
steps - i) minimizing a cost function by moving nodes to neighboring communities and ii) creating a new graph with the communities
from the first step as nodes. The technique creates a hierarchy of
communities, each corresponding to a different partitioning of the
node set. In this paper we focus only on communities created after
the first iteration, i.e, step i) above.
While the resulting communities are based on relationships in IP
space, their interpretation translates into offline relations between
devices. The parameter γ is a cutoff for the minimum edge weight in
the graph. Tuning γ also has an effect on community size. For small
γ , the communities correspond to multiple identifiers that belong
to the same person. As γ is decreased, larger communities are
produced that align with groups of devices that share a residential
household. Further decreasing γ generates internet communities
that connect extended families, friends and co-workers. In this
paper we focus on parameter settings that result in communities
that corresponding to residential households.

3

G0
G 0.2
G 0.4
G 0.6
G 0.8
G 1.0

Nodes
1,169,103,380
1,057,968,932
873,110,979
753,677,283
696,068,576
600,338,457

Edges
6,189,562,782
3,456,105,267
1,917,085,849
1,331,218,411
1,048,758,994
841,785,094

Table 1: Edge count and node count of the graph before
‘shelter-in-place’. Data collected over six weeks from January 20th, 2020 to March 1st, 2020. Gγ corresponds to the
graph, restricted to edge weights above γ .

To analyze the effect of stay-at-home orders across the United
States on both graph modularity and the ratio of edges that cross
communities to the total number of edges, we looked at a series
of graphs produced using Comscore data collected over several
months. All data examined originated from the US between the
dates of UTC January 20, 2020 and UTC June 7, 2020 - a 140 day
period (20 weeks). Each graph consists of 6 weeks of data. The date
associated with the graph is the center date of the time frame; e.g., a
device graph on April 1st consists of data collected the three weeks
immediately preceding and following April 1st. In the hierarchy of
partitions produced by Louvain Modularity, only results from the
finest scale communities are presented. All results are presented
for G 0.8 .
As the United States began to stay-at-home, the frequency with
which the population shared IP space with co-workers, friends,
and others outside of their home decreased. The main hypothesis
is that such orders lead to a decrease in cross community edges
and an increase in graph modularity. Figures 1 and 2 confirm this
hypothesis. Both metrics indicate the graph is most modular on the
week beginning April 12th. This suggests the US in aggregate was
most observant of the stay-at-home orders at approximately that
date.
Figures 1 and 2 also suggest there is utility in simulating infectious disease spread on device graph datasets. The datasets provide
weekly snapshots of contacts (connections) at country wide scale.
The ability to simulate infectious disease spread on week over week
snapshots allows closer to ’real time’ estimations on the efficacy of
stay-at-home orders; both at large and in specific areas of the US. In
addition, being able to observe the resurgence of cross community
edges week over week has forward looking utility. It may be used
to predict areas susceptible to an outbreak or resurgence of cases
if the influx of cross community edges are observed in geographic
areas still experiencing a steady rate of new infections. This data
can allow policy makers to make better informed decisions on when
it is safe to resume certain public functions and business.
Results of community detection were validated using a ground
truthdataset provided by Comscore. The datasets involves recruitment of panelists for installation of customized wireless routers.
The wireless router captures an anonymized version of the media
access control (MAC) address, and the cookies ID/advertising IDs
of with the devices that connects to the router.

RESULTS

We study the characteristics of the graph and the communities,
focusing on two metrics: graph modularity, and the ratio of edges
that cross communities to the total number of edges. Modularity,
denoted Q, can be expressed as [7]
!
Õ `s  ds  2
Q=
−
L
2L
s
where s enumerates the communities, `s is the number of edges
inside the community, ds is the total degree of the nodes in community s, N = |V |, and L = |E|. The ratio of edges inside communities
to those outside is expressed as:
Í
E − s `s
R=
.
E
Both metrics quantify how well the graph conforms to the community structure. Graph modularity can be interpreted as the ratio
of the number of edges inside a community, minus the expected
number of edges if connections were defined at random, to the total
number of edges. Graphs with fully connected communities and
no cross community edges have a modularity Q = 1, and graphs
with no community structure and uniformly random edges over
the nodes have a modularity of Q = 0.
3

Edges
6,034,219,867
3,707,466,124
2,187,580,778
1,576,917,496
1,261,395,734
1,030,235,341

Table 2: Edge count and node count of the graph after
‘shelter-in-place’. Data collected over six weeks from March
30th, 2020 to May 10th, 2020. Gγ corresponds to the graph,
restricted to edge weights above γ .

95
85
75
65
55
45
35
25
15
5

45
percent of edges across communitities

Nodes
1,196,074,232
1,078,714,915
889,876,127
771,171,764
710,457,825
626,406,997

percent US population under
stay at home order

G0
G 0.2
G 0.4
G 0.6
G 0.8
G 1.0

40
35
30
25

percent edges
across communitities
percent of US at home

0.983

95
85
75
65
55
45
35
25
15
5

0.982
0.981
0.980
0.979

best aligned with a ground truth partitioning of the nodes between
April 12th and April 19th, 2020.
Figures 4 and 5 visualize a small portion of the graph, and represent an illustrative and hand-curated example of communities
before and after shelter-in-place. Notice that many connections
across communities are not present after stay-at-home orders. The
example figures also highlight the utility of the graph with respect
to contact tracing.

0.978
0.977

0.976
graph modularity
percent of US at home
0.975
5
1
5
1
5
1
5
2-1
3-0
3-1
4-0
4-1
5-0
5-1
0-0 020-0 020-0
0-0 020-0
0-0 020-0
202
2
2
202
2
202
2

Figure 1: Graph modularity (right axis), a measure of how
well a graph matches community structure. Percentage of
US population under state-issued ‘stay-at-home’ order (left
axis, adapted from [26]). The graph is constructed with six
weeks of data (three weeks before and three after the listed
date).

97.7

|C 0 ∩ C ∗ |
|C ∗ |

recall =

2020-04-19
2020-04-12
2020-04-05

97.6

2020-03-29
2020-04-26

recall (%)

97.5

The cookie IDs and advertising IDs recorded by a custom wireless router define a ground truth community (which correspond
to residential households). The dataset includes more than 5,000
ground truth communities. Only cookie IDs/advertising IDs that
correspond to MAC addresses observed for more than 2 days are
included, eliminating ‘guest’ devices that do not have a long term
association with the small community. The time frame of data collection used to define the ground truth communities is the same 6
weeks as the time frame used for graph data collection.
Precision and recall of communities produced by Louvain Modularity were calculated. In particular, let C be the set of communities
produced by the community detection algorithm. For a ground truth
community C 0 (i.e., a physical household), the best corresponding
graph community C ∗ is determined by finding the community with
the largest intersection of IDs: C ∗ := arg maxC ∈C |C 0 ∩ C |. The
precision and recall of C ∗ are given by
precision =

20

Figure 2: Percent of total edges that are inter-community
(across community) edges (right axis). Percentage of US population under state-issued ‘stay-at-home’ ordered (left axis,
adapted from [26]).

graph modularity, Q(G)

percent US population under
stay at home order

-15
-01
-15
-01
-15
-01
-15
-02
-03 20-03
-04 20-04
-05 20-05
0
0
0
0
2
2
2
2
20
20
20
20
20
20
20

97.4

2020-03-22 2020-05-03

97.3
97.2

2020-03-15

2020-02-09
2020-02-16
2020-02-23
2020-03-08
2020-03-01
97.0
76.5 77.0 77.5 78.0 78.5 79.0 79.5 80.0 80.5
precision (%)
Figure 3: Precision and recall of communities derived from
a ground truth dataset on more than 5000 communities.
97.1

4

RELATED WORK

The study of networks (i.e, graphs) in epidemiology has a rich
history dating back to at least the 1980’s [19]. There are a number
of review articles on the topic of graphs and infectious disease, and
while we aim to extract the relevant themes herein, we refer the
reader to [9] for a more thorough discussion.
A number of studies have looked at how (offline) social networks
predict, model and relate to the spread of infectious disease [19, 20,
27]. This includes studies of realized encounter networks, in which a
graph is constructed from documented physical encounters, and the

|C 0 ∩ C ∗ |
.
|C 0 |

The the precision and recall are plotted for Louvain Modularity
applied to G 0.8 in Figure 3. Notice that community structure is
4

of encounters. Such studies have in general been limited to graphs
with fewer than a thousand nodes. One difference between our
discussions and much work in epidemiology is that we do not
have information about nodes are infected with a disease. We
acknowledge significant challenge in relating that information to
the graph at scale. Relating offline information (i.e, a name/address)
to an advertising ID or cookie is often termed ‘digital onboarding’,
and a number of companies offer such datasets [3].
In addition to the broader study of infectious disease on networks
with social and encounter networks, there is work that studies the
effects of graph modularity on the spread of infectious disease [17,
29, 30]. While conventional wisdom would suggest that modular
organization of a network would prevent the spread of infectious
disease, there is work on animal social networks that in certain
settings supposes otherwise [30].
There has been a surge in work related to digital contact tracing (see, for example [13] and related articles). In general these
techniques require a significant portion of the population install
a mobile app for data collection, which is a significant challenge.
The technology involved is both based on global positioning (GPS),
Bluetooth Low Energy [12, 16].
Related work in device graphing is broadly divided into academic work, including the prequels to this paper [14, 21, 22], and
commercial literature. [21, 23] provides a introduction to device
graphing using IP co-location, and is the first academic paper to
study the datasets. [14] assumes that IP colocation associations
have been made, and focuses on refining the graph to create custom
user and device level groupings using an extension of Naive Bayes
termed Naive Bayes Similarity Scoring. Lastly, [22] proposes an
approach to extend the scale of the graph towards 10 billion nodes.
Beyond these publications, little academic literature exists with the
taxonomy ‘device graph’. Some literature on ‘cross device tracking’
[31] aims to provide a method to detect when cross device tracking (such as device graphing) occurs. A review of privacy in cross
device tracking is found in [33].
Commercial and industry publications with the ‘device graph’
taxonomy are more prevalent, as device graph offerings are ubiquitous and widely available e.g., [3, 4, 32] in the adverting ecosystem.
This includes a number of patents on systems for generation of
device graphs based on colocation [15, 24, 25]. The academic work
can be viewed as a formalization of many of the ideas encapsulated
in the commercial device graph patents and literature. Much of the
work that studies identification of users on the internet absent login
information can be broadly categorized as fingerprinting [11, 28].
The goal of fingerprinting, as the name suggests, is to identify a
user/browser in a persistent manner, absent login information and
without cookies or advertising IDs.

iPhoneWindows
6 16GB 10
Windows 10
iPhone

ChromeOS
Windows 10
INTEL MAC OS X

iPhone

Windows 8.1
Windows 10
Windows 10
INTEL MAC OS X
INTELWindows
MAC OS 10
X
HTC One M8
ChromeOS
Windows 10
INTEL MAC OS X
Windows 10
Windows 10
iPhone Windows 7
LG Nexus 5 D820 16GB LG Nexus 4 16GB

XBox One

LGLG
Nexus
5 D820
16GB
Nexus
5 D820
16GB

INTEL MAC OS X
iPhone 11 Pro
Linux H/W
INTEL MAC OS X

LG Nexus 5X
32GB
LG
Nexus 5 D820 16GB
Chromecast Internet TV Stick
Windows 10
Windows 10

Galaxy Note 4 SM-N910V

Figure 4: Illustrative example of a small portion of the graph
prior to stay-at-home orders. The color of node indicates the
assigned community. Note the large number of connections
between the device labeled ‘LG Nexus 5 D820 16GB’ and devices outside its community.

iPhoneWindows
6 16GB 10
Windows 10
iPhone

ChromeOS
Windows 10
INTEL MAC OS X

iPhone

Windows 8.1
Windows 10
Windows 10
INTEL MAC OS X
INTELWindows
MAC OS 10
X
HTC One M8
Windows 10
INTEL MAC OS X
Windows 10
Windows 10

XBox One

iPhone

Windows 7

ChromeOS

LG Nexus 5 D820 16GB LG Nexus 4 16GB

INTEL MAC OS X
iPhone 11 Pro
Linux H/W
INTEL MAC OS X

LGLG
Nexus
5 D820
16GB
Nexus
5 D820
16GB
LG Nexus 5X
32GB
LG
Nexus 5 D820 16GB
Chromecast Internet TV Stick
Windows 10
Windows 10

Galaxy Note 4 SM-N910V

Figure 5: Illustrative example of a small portion of the graph
after stay-at-home orders. The color of node indicates the
assigned community. Notice that many of the edges outside
the communities are no longer present.

5

SUMMARY

This paper proposes the utility of internet device graphs in epidemiology. Device graphs are characterized by immense scale and
ubiquitous use in digital advertising. More precisely, this paper
posits the utility of device graphs for four applications i) contact
tracing, ii) prediction of ‘hot spots’, iii) simulation of infectious
disease spread, and iv) delivery of advertisement based warnings
to potentially exposed individuals. The utility follows two natural

spread of a transmitted disease is studied on the resulting graph. A
major limitation of such approaches is the construction of the graph
itself, which requires participation from subjects and recollection
5

observations i) in epidemiology, the spread of infectious disease
through a population can be modeled using a network or graph,
and ii) in digital advertising internet device graphs are graph data
sets that organize digital identifiers produced by mobile phones,
PCs, TVs, and tablets as they access media on the internet.
This paper also studies the effects of the shelter-in-place orders on a large scale internet device graph constructed using IP
co-location with more than a billion nodes. As individuals stay at
home, fewer graph edges are created with co-workers and other
individuals outside the home. We study the impact on the community structure in the graph, and show that the graph modularity (a
measure of how well a graph conforms to community structure)
increases as the stay at home order went into place. The modularity
of the graph is closely related to the number of edges that cross
communities, in relation to the total edges. The number of cross
community edges decreases as the stay at home order went into
place. Both metrics indicate that the graph is most modular (best
adheres to community structure) the week beginning April 12th.
This implies that the US, in aggregate, best followed the stay at
home orders that same week.
While device graphs offer utility for the study of infectious disease, they may also supplement the more material and a immediate
needs of public health departments that are actively fighting the
worldwide COVID-19 pandemic. The digital advertising ecosystem
writ large has successfully built tools, infrastructure, and datasets
to track users as they access services on the internet. The question
remains: can the processes and datasets amassed by the digital
advertising industry help in the fight against COVID-19, and do so
in a privacy safe manner?

[10] Wen Dong, Alex Pentland, and Katherine A Heller. 2012. Graph-coupled hmms
for modeling the spread of infection. arXiv preprint arXiv:1210.4864 (2012).
[11] P. Eckersley. 2010. How Unique is Your Web Browser?. In In Proceedings of the
International Symposium on Privacy Enhancing Technologies. Berlin, Germany.
[12] Katayoun Farrahi, Remi Emonet, and Manuel Cebrian. 2014. Epidemic contact
tracing via communication traces. PloS one 9, 5 (2014).
[13] Luca Ferretti, Chris Wymant, Michelle Kendall, Lele Zhao, Anel Nurtay, Lucie
Abeler-Dörner, Michael Parker, David Bonsall, and Christophe Fraser. 2020.
Quantifying SARS-CoV-2 transmission suggests epidemic control with digital
contact tracing. Science 368, 6491 (2020).
[14] Keith Funkhouser, Matthew Malloy, Enis Ceyhun Alp, Philip Poon, and Paul
Barford. 2018. Device Graphing by Example. In Proceedings of the 24th ACM
SIGKDD International Conference on Knowledge Discovery and Data Mining. ACM,
1913–1921.
[15] Keith Funkhouser, Matthew L Malloy, Benjamin Itzkowitz, Paul Deitrick, Frank E
Pecjak, and Paul Barford. 2020. Reporting of media consumption metrics. US
Patent App. 16/103,679.
[16] Hossein Gorji, Markus Arnoldini, David F Jenny, Wolf-Dietrich Hardt, and Patrick
Jenny. 2020. STeCC: Smart Testing with Contact Counting Enhances Covid-19
Mitigation by Bluetooth App Based Contact Tracing. medRxiv (2020).
[17] Randi H Griffin and Charles L Nunn. 2012. Community structure and the spread
of infectious disease in primate social networks. Evolutionary Ecology 26, 4
(2012), 779–800.
[18] Justin Khim and Po-Ling Loh. 2018. A theory of maximum likelihood for weighted
infection graphs. arXiv:math.ST/1806.05273
[19] Alden S Klovdahl. 1985. Social networks and the spread of infectious diseases:
the AIDS example. Social science & medicine 21, 11 (1985), 1203–1216.
[20] Alden S Klovdahl, John J Potterat, Donald E Woodhouse, John B Muth, Stephen Q
Muth, and William W Darrow. 1994. Social networks and infectious disease: The
Colorado Springs study. Social science & medicine 38, 1 (1994), 79–88.
[21] Matthew Malloy, Paul Barford, Enis Ceyhun Alp, Jonathan Koller, and Adria
Jewell. 2017. Internet Device Graphs. In Proceedings of the 23rd ACM SIGKDD
Conference on Knowledge Discovery and Data Mining. ACM, 1913–1921.
[22] Matthew Malloy, Jon Koller, and Aaron Cahn. 2019. Graphing Crumbling Cookies.
In Proceedings of 2019 AdKDD. ACM.
[23] Matthew Malloy, Mark McNamara, Aaron Cahn, and Paul Barford. 2016. Ad
blockers: Global prevalence and impact. In Proceedings of the 2016 Internet Measurement Conference. 119–125.
[24] Matthew L Malloy and Paul Barford. 2018. Systems and methods for transmitting
content based on co-location. US Patent App. 15/369,512.
[25] Matthew L Malloy, Paul Barford, and Ceyhun Alp. 2019. Systems and methods for
generating and transmitting content based on association of a common device.
US Patent App. 15/726,777.
[26] Sarah Mervosh, Denise Lu, and Vanessa Swales. 2020. See Which States and Cities
Have Told Residents to Stay at Home. https://www.nytimes.com/interactive/
2020/us/coronavirus-stay-at-home-order.html. Accessed: 2020-05-20.
[27] Lauren Meyers. 2007. Contact network epidemiology: Bond percolation applied
to infectious disease prediction and control. Bull. Amer. Math. Soc. 44, 1 (2007),
63–86.
[28] K. Mowery, D. Bogenreif, S. Yilek, and H. Shacham. 2011. Fingerprinting Information in JavaScript implementations. In Proceedings of Web 2.0 Security and
Privacy Workshop (W2SP). Oakland, CA.
[29] Charles L Nunn, Ferenc Jordán, Collin M McCabe, Jennifer L Verdolin, and
Jennifer H Fewell. 2015. Infectious disease and group size: more than just a
numbers game. Philosophical Transactions of the Royal Society B: Biological
Sciences 370, 1669 (2015), 20140111.
[30] Pratha Sah, Stephan T Leu, Paul C Cross, Peter J Hudson, and Shweta Bansal.
2017. Unraveling the disease consequences and mechanisms of modular structure
in animal social networks. Proceedings of the National Academy of Sciences 114,
16 (2017), 4165–4170.
[31] Konstantinos Solomos, Panagiotis Ilia, Sotiris Ioannidis, and Nicolas Kourtellis.
2018. Cross-Device Tracking: Systematic Method to Detect and Measure CDT.
arXiv preprint arXiv:1812.11393 (2018).
[32] TAPAD. 2017. The TAPAD Device Graph. https://www.tapad.com/device-graph/
[33] Sebastian Zimmeck, Jie S Li, Hyungtae Kim, Steven M Bellovin, and Tony Jebara.
2017. A privacy analysis of cross-device tracking. In 26th {USENIX } Security
Symposium ( {USENIX } Security 17). 1391–1408.

REFERENCES
Contact Tracing With Your Phone: Itfis Easier but There
[1] 2020.
Are
Tradeoffs.
https://www.nytimes.com/2020/06/03/health/
coronavirus-contact-tracing-apps.html. Accessed: 2020-06-03.
[2] 2020. Drawbridge. http://www.drawbridge.com/c/graph/.
[3] 2020.
LiveRamp Identity Graph.
https://liveramp.com/our-platform/
identity-graph/.
[4] 2020. Lotame Cross Device. http://www.lotame.com.
[5] Roy M Anderson and Robert M May. 1992. Infectious diseases of humans: dynamics
and control. Oxford university press.
[6] Vincent D Blondel, Jean-Loup Guillaume, Renaud Lambiotte, and Etienne Lefebvre. 2008. Fast Unfolding of Communities in Large Networks. Journal of Statistical
Mechanics: Theory and Experiment 2008, 10 (2008), P10008.
[7] Ulrik Brandes, Daniel Delling, Marco Gaertler, Robert Görke, Martin Hoefer,
Zoran Nikoloski, and Dorothea Wagner. 2007. On finding graph clusterings with
maximum modularity. In International Workshop on Graph-Theoretic Concepts in
Computer Science. Springer, 121–132.
[8] Nicholas A Christakis and James H Fowler. 2007. The spread of obesity in a large
social network over 32 years. New England journal of medicine 357, 4 (2007),
370–379.
[9] Leon Danon, Ashley P Ford, Thomas House, Chris P Jewell, Matt J Keeling,
Gareth O Roberts, Joshua V Ross, and Matthew C Vernon. 2011. Networks and
the epidemiology of infectious disease. Interdisciplinary perspectives on infectious
diseases 2011 (2011).

6

