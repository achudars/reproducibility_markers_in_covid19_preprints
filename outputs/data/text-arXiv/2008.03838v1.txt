Generalized k-Means in GLMs with Applications to the Outbreak
of COVID-19 in the United States

arXiv:2008.03838v1 [stat.ME] 9 Aug 2020

Tonglin Zhang ∗and Ge Lin†
August 11, 2020

Abstract
Generalized k-means can be incorporated with any similarity or dissimilarity measure for
clustering. By choosing the dissimilarity measure as the well known likelihood ratio or F statistic, this work proposes a method based on generalized k-means to group statistical models.
Given the number of clusters k, the method is established under hypothesis tests between
statistical models. If k is unknown, then the method can be combined with GIC to automatically
select the best k for clustering. The article investigates both AIC and BIC as the special cases.
Theoretical and simulation results show that the number of clusters can be identified by BIC but
not AIC. The resulting method for GLMs is used to group the state-level time series patterns
for the outbreak of COVID-19 in the United States. A further study shows that the statistical
models between the clusters are significantly different from each other. This study confirms the
result given by the proposed method based on generalized k-means.

Key Words: Clustering; COVID-19; Dissimilarity measure; Generalized k-means; Generalized
information criterion; Generalized linear models (GLMs).

1

Introduction

Generalized k-means, including both k-means and k-medians as special cases, can be incorporated
with any similarity or dissimilarity measure to group objects (or observations). The similarity or
dissimilarity measure can be very general. In this work, we specify the dissimilarity measure as the
well known likelihood ratio or F -statistic, such that our method can be used to group statistical
models. In particular, if each object contains a vector for the response and a design matrix for the
explanatory variables, then statistical models can be used to describe the relationship between the
response and explanatory variables within the object. A clustering problem arises if we want to
group the statistical models between objects. This problem can be solved by generalized k-means.
The current research proposes the method and use it to group the state-level time series patterns
for the outbreak of COVID-19 in the United States.
∗

Department of Statistics, Purdue University; 250 North University Street, West Lafayette, IN 47907-2066; email:
tlzhang@purdue.edu
†
Department of Environmental and Occupational Health, University of Nevada Las Vegas, Las Vegas, NV 89154,
Email: ge.kan@unlv.edu

1

The outbreak of COVID-19 has become a worldwide pandemic since March 2020. According to
the website of the World Health Organization (WHO), until July 31, the outbreak has affected over
200 countries with almost eighteen million confirmed cases and seven hundred thousand deaths in
the entire world. Among those, the United States has almost five million confirmed cases and one
hundred sixty thousand deaths. To understand the outbreak in the United States, we compare
the time series patterns for daily new cases in the fifty states and Washington DC. We find that
some of the patterns are similar to each other and some of them are far away from each other,
implying that we need to have a clustering method to group these patterns. As statistical models
are involved, we cannot use traditional k-means. We recommend using generalized k-means.
Clustering is one of the most popular unsupervised statistical learning methods for unknown
structures. Clustering methods are often carried out by a similarity or dissimilarity measure between
objects such that they can be grouped into a few clusters. The purpose of clustering is to make
objects within clusters mostly homogeneous and objects between clusters mostly heterogeneous.
In the literature, one of the most well known clustering methods is the k-means. It assigns each
object to the cluster with the nearest mean. Based on a given k, the k-means provides k clusters
according to k centers. The k centers are solved by minimizing the sum-of-squares (SSQ) criterion,
which is derived based on the Euclidean distance between objects in the data. The SSQ criterion
in the k-means can be replaced by any similarity or dissimilarity measure. A method called the
generalized k-means is proposed [1, 27]. Because the choice of the similarity or dissimilarity measure
is flexible, generalized k-means can be extended to any divergence measure for clustering.
Many clustering methods have been proposed in the literature. Examples include hierarchical
clustering [34], fuzzy clustering [29], density-based clustering [18], model-based clustering, and
partitioning clustering. Model-based clustering is usually carried out by EM algorithms or Bayesian
methods under the framework of mixture models [11, 20]. Partitioning clustering can be interpreted
by the centroidal Voronoi tessellation method in mathematics [6]. It can be further specified to
k-means [10, 14, 21, 22], k-medians [2], and k-modes [12], where k-means is the most popular.
To implement those, one needs to express observations of the data in a metric space, such that a
distance measure can be defined. Several approaches have been developed to specify the distance
measure. A review of these can be found in [17], P 670.
Challenges appear when we want to group the time series patterns for the outbreak of COVID-19
in United States. Suppose that the time series patterns from individual states have been analyzed
by statistical models. Then, we need to study the relationship between these models. It is inappropriate to directly compare their coefficients because of disparity. To overcome the difficulty,
we recommending using likelihood ratio statistics or an F -statistics derived based on hypothesis
tests for the relationship between these models, leading to the generalized k-means in GLMs. Our
method wants to make models within clusters mostly homogeneous and models between clusters
mostly heterogeneous. Because of the differences of population sizes, transportation manners, and
social activities, the number of daily new cases among the fifty states and Washington DC cannot
be identical or even similar, implying that it is inappropriate to compare all of the coefficients. We
compare some of the coefficients. This is called the unsaturated clustering problem. In particular,
we partition the coefficient vector into two sub-vectors. The first sub-vector does not contain any
time information. Therefore, we only need to study the second sub-vector. We implement the
generalized k-means to the second sub-vector only. This problem can be partially reflected by

2

−5

0

5

Cluster 1
Cluster 2

2

3

4

5

6

7

time

Figure 1: Generalized k-means clustering for six regression lines.
Figure 1. Suppose that six regression lines are compared. Note that the intercepts do not contain
any time information. We allow them to vary within clusters. We restrict the generalized k-means
on the slopes only, leading to two clusters.
We investigate our method with either a known or an unknown k. In the case when k is
unknown, we propose GIC to select the best k. We specify it to BIC and AIC. We find that BIC
is more reliable than AIC in selecting the number of clusters. Therefore, we recommend using the
BIC selector. We compare our method with a previous method based on the EM algorithm [26].
Our simulation results show that the number of clusters can be identified by our proposed method
but not by the previous method. The previous EM algorithm cannot identify the number of clusters
if the true number of clusters is greater than two. We implement our method to the state-level
time series data for the outbreak of COVID-19 in the United States. We find six clusters.
The article is organized as follows. In Section 2, we propose our method. In Section 3, we study
theoretical properties of our method. In Section 4, we evaluate our method with the comparison to
a previous method by simulation studies. In Section 5, we implement our method to the state-level
COVID-19 data in the United States. In Section 6, we provide a discussion.

2

Method

We propose our method under a given k in Section 2.1. It can be combined with GIC [33] to
select the best k when k is unknown. This is introduced in Section 2.2. In Section 2.3, we specify
our method to regression models for normal data and loglinear models for Poisson data. The two
models will be used in our simulation studies in Section 4. The loglinear model for Poisson data
can be extended to a model with overdispersion for quasi-Poisson data. It will be used in clustering
for the state-level COVID-19 data in the United States.

3

2.1

Generalized k-Means in GLMs

Clustering is the problem of partitioning a set of N objects, denoted by S = {z1 , . . . , zN }, into
several non-empty subsets or clusters, such that the objects within clusters are mostly homogeneous
and the objects between clusters are mostly heterogeneous. In the case when the objects can be
expressed by points in an Euclidean space, the k-means partitions S into k distinct clusters denoted
by C = {C1 , . . . , Ck } with C given by
C = argmin
C

k X
X

kzi − cs k2 ,

(1)

s=1 i∈Cs

where cs is the center point of Cs . The right-hand side of (1) is called the SSQ criterion in the
k-means. The generalized k means is proposed if the SSQ criterion is extended to an arbitrary dissimilarity measure. In particular, let d(z, C) be a selected dissimilarity measure with z representing
an object and C representing a cluster. The generalized k-means solves C by
C = argmin
C

k X
X

d(zi , Cs ).

(2)

s=1 i∈Cs

When zi are points in an Euclidean space, the generalized k-means can be the k-means if one
chooses d(zi , Cs ) = kzi − cs k2 . It can also be the k-medians if one chooses d(zi , Cs ) = kzi − cs k1 .
Because d(z, C) is flexible in (2), the generalized k-means can be combined with any statistical
models. Suppose that zi is composed by a vector of response and a design matrix of explanatory
variables. Then, we can use a statistical model to describe the relationship between the response
and the explanatory variables. The response and explanatory variables can be general, implying
that the generalized k-means can be implemented to various kinds of data, such as text, DNA
strains, or images. Here, we restrict our attention to GLMs for continuous or count responses. Our
task is to group the GLMs for the objects into a number of clusters.
Suppose that zi contains a response vector yi = (yi1 , . . . , yini )⊤ and a design matrix X =
PN
⊤ ⊤
(x⊤
i1 , . . . , xini ) , such that the sample size of the data is n =
i=1 ni . Assume that yi1 , . . . , yini are
independently obtained from an exponential family distribution with the probability mass function
(PMF) or the probability density function (PDF) as


yij θij − b(θij )
f (yij ) = exp
+ c(yij , φ) ,
(3)
a(φ)
where θij is a canonical parameter representing the location and φ is a dispersion parameter representing the scale. The linear component ηij is related to explanatory variables by ηij = x⊤
ij βi . The
′
link function g(·) connects µij = E(yij ) = b (θij ) and ηij through
ηij = g(µij ) = g[b′ (θij )] = x⊤
ij βi

(4)

for all i ∈ {1, . . . , N } and j ∈ {1, . . . , ni }, where θij = h(x⊤
ij βi ) is the inverse function obtained
by (4). The variance of the response is V(yij ) = a(φ)v(µij ), where v(µ) = b′′ {h−1 [g(µ)]} is the
variance function of the model. If the canonical link is used, then (4) becomes ηij = θij = g(µij ) =
x⊤
ij βi , implying that h(·) is the identity function.
4

The MLEs of βi , denoted by β̂i , can only be solved numerically if the distribution is not normal.
A popular and well known algorithm is the iteratively reweighted least squares (IRWLS) [13].
The IRWLS is equivalent to the Fisher scoring algorithm. It is identical to the Newton-Raphson
algorithm under the canonical link. After β̂i is derived, a straightforward method is to estimate φ
by moment estimation [24] as
N ni
1 XX
(yij − µ̂ij )2
,
a(φ̂) =
df
b′′ [h(x⊤
ij β̂i )]

(5)

i=1 j=1

where µ̂ij = b′ [h(x⊤
ij β̂i )] and df is the residual degrees of freedom in the derivation of β̂i . If φ is
not present in (3), then (5) is not needed. This occurs in Bernoulli, binomial, and Poisson models.
The IRWLS is the standard algorithm for fitting GLMs. It is adopted by many software packages,
such as R, SAS, and Python.
Our interest is to determine whether βi can be grouped into a few clusters, such that there is
βi = βi′ if objects i and i′ are in the same cluster or βi 6= β′ otherwise. The regression version
of this problem has been previously investigated in gene expressions by an EM algorithm [26]. It
wants to know whether the entire coefficient vectors can be partitioned into a few clusters. In our
method, we allow a few components of βi to be different within clusters, such that we only need
to partition the objects based on the rest components.
Suppose that (4) is expressed as
⊤
ηij = x⊤
ij1 βi1 + xij2 βi2 ,

(6)

⊤ ⊤
⊤
⊤ ⊤
where xij = (x⊤
ij1 , xij2 ) and βi = (βi1 , βi2 ) . We want to know whether βi2 can be grouped
into a few clusters. It means that we want βi2 = βi′ 2 if objects i and i′ are in the same cluster or
βi2 6= βi′ 2 otherwise. Based on a given C, the clustering model in our method is
⊤
g(µij ) = x⊤
ij1 βi1 + xij2 βs2

(7)

for zi ∈ Cs . We call (7) the unsaturated clustering problem. If βi1 is absent, it becomes the saturated
clustering problem, the problem studied by [26]. As the choice of xij1 and xij2 is flexible in (7),
our method can be used to group GLMs based on any sub-vectors of βi . We use either a likelihood
ratio statistic or an F -statistic to construct d(zi , Cs ) in (2).
Our method starts with a set of cluster candidates C, which can be any partition of S. For
any given zi ∈ S and Cs ∈ C, if zi 6∈ Cs , we directly use zi and Cs in the derivation of d(zi , Cs );
otherwise, we remove zi from Cs in the derivation. Then, the resulting Cs does not contain zi . We
obtain the likelihood ratio statistic or the F -statistic for
H0 : βi2 = βs2 ↔ H1 : βi2 6= βs2 .

(8)

The likelihood ratio statistic is used if φ is absent in (3). This appears in Poisson and binomial
models. The F -statistic is used if φ is present. This appears in normal models. For each zi ∈ S
and Cs ∈ C, we calculate the p-value of the likelihood ratio statistic or the F -statistic. We assign
zi to the cluster candidate with the largest p-value. Then, we obtain the updated set of cluster
candidates, which is used in the next iteration. To ensure Cs non-empty, we do not move the object
with the largest p-value in Cs to any other cluster candidates. We have the following algorithm.
5

Algorithm 1 Generalized k-means in GLMs
Input: S = {z1 , . . . , zN } with zi = {yi , Xi }
Output: C = {C1 , . . . , Ck } and the value of the likelihood ratio or the F-statistic based on the
resulting C
1: Initialization: find distinct zi1 , . . . , zik such that they are most dissimilar, and use those to
generate the initial C.
2: procedure Update Iteratively
3:
For each Cs , compute the p-value of zi under (8) for every zi ∈ Cs . The object with the
largest the p-value will be remained in Cs .
4:
For every other zi that will not be remained, compute its p-values under (8) for every Cs ∈ C.
Assign zi to the cluster candidate with the largest p value.
5: end procedure
6: Output.
Algorithm 1 has two major stages. The second stage is given by Step 2 to Step 5, which is
common in many k-means algorithms. Therefore, we only discuss the first stage, which is given by
Step 1. The goal of the first stage is to find the best initial C. We do not use the usual approach
adopted by many k-means algorithms, as they select the initial set of cluster candidates randomly.
Instead, we want to make the initial C as heterogeneous as possible. At the beginning, we randomly
choose the first zi from S. We denote it as zi1 . It is the seed for C1 . We calculate the p-value of
the likelihood ratio statistic or the F -statistic for
H0 : βi = βi1 2 ↔ H1 : βi2 6= βi1 2

(9)

for every i 6= i1 . The object zi with the lowest p-value is chosen the seed for C2 . It is denoted by
zi2 . Then, we incorporate the minimax principle to select the rest seeds. Suppose that zi1 and zi2
are selected. For each i 6= i1 , i2 , we calculate the p-values of the likelihood ratio statistic or the
F -statistic based on two testing problems as
H0 : βi2 = βj2 ↔ H1 : βi2 6= βj2 ,

(10)

where the two testing problems are derived by taking j = i1 and j = i2 , respectively. We obtain
two p-values. We assign the maximum of the two p-values as the p-value of zi . The object with the
lowest p-value is chosen as the seed for C3 . It is denoted by zi3 . Using this idea, we can obtain all
the seeds zi1 , . . . , zik . Then, we reconsider the testing problem given by (10). For a given zi with
i 6∈ {i1 , . . . , ik }, we calculate the p-values of the likelihood ratio statistic or the F -statistic for all
j ∈ {i1 , . . . , ik }. We assign zi to Cs if the p-value is maximized at j = is . After doing this for all the
rest objects, we obtain the initial C. Combining it with the second stage, we obtain k non-empty
clusters with the corresponding value and p-value of the likelihood ratio statistic or the F -statistic.

2.2

Generalized Information Criterion

The generalized k-means introduced in Section 2.1 cannot be used if k is unknown. As the likelihood function is provided in Algorithm 1, we can used it to define a penalized likelihood function.
It is used to determine the number of clusters if k is unknown. The penalized likelihood approach
6

has been widely applied in variable selection problems. Here, we adopt the well known GIC approach [33] to construct our objective function. The best k is obtained by optimizing the objective
function.
Let ℓ(ωC ) be the loglikelihood of (7), where ωC represents all of the parameters involved in
the model. If the dispersion parameter is not present, then ω is composed by βi1 and βs2 for all
i ∈ {1, . . . , N } and s ∈ {1, . . . , k} only. It is enough for us to use ℓ(ωC ) to define the objective
function in GIC. If the dispersion parameter is present, then we need to address the impact of
estimation of a(φ), because variance can be seriously underestimated in the penalized likelihood
approach under the high-dimensional setting [7]. We decide to introduce our approach based on
(3) without a(φ). We then propose a modification when it is present.
Assume that a(φ) does not appear in (3). The GIC for (7) is defined as GICκ (C) = −2ℓ(ω̂C ) +
κdfC , where ω̂C is the MLE of ω and dfC is the model degrees of freedom under C, and κ is a positive
number that controls the properties of GIC. Let q1 be the dimension of βi1 and q2 be the dimension
of βi2 . Then, dfC = N q1 + kq2 . Note that N does not vary with k. We define the objective function
in our GIC as
GICκ (C) = −2ℓ(ω̂C ) + κkq2 .
(11)
The best k is solved by
k̂κ = argmin{GICκ (Cˆk )},

(12)

k

where Cˆk is the best grouping based on the current k. The GIC given by (11) includes AIC if we
choose κ = 2 or BIC if we choose κ = log n. If they are adopted, then the solutions given by (12)
are denoted by k̂AIC and k̂BIC , respectively.
We need to estimate the dispersion parameter if it is present. Because the estimator based
on the current k can be seriously biased, we recommending using k + 1 as the number of clusters
in the computation of the estimate of a(φ). In particular, we calculate the best C based on the
current k in the generalized k means. We use it to compute β̂i1 and β̂s2 for all i ∈ {1, . . . , N } and
s ∈ {1, . . . , k}. Then, we calculate the best C by setting the number of clusters equal to k + 1. We
use (5) to estimate a(φ). This is analogous to the full model versus the reduced model approach
in linear regression, where the variance parameter is always estimated under the full model. We
treat the model with k + 1 clusters in (7) as the full model, and the model with k clusters as the
reduced model. We estimate a(φ) based on the full model but not the reduced model. After a(φ̂)
is derive, we put it into (11) in the computation of GIC. We then use (12) to calculate the best k
with the dispersion parameter. This is important in our method for regression models.

2.3

Specification

We specify our method to regression models for normal data and loglinear models for Poisson
data. Ordinary regression models are commonly used if the interest is to discover the relationship
between a single continuous response variable and a number of explanatory variables. Multivariate
regression models are commonly used if at least two continuous response variables are involved.
Loglinear models for Poisson data and logistic linear models for binomial data are commonly used
if the response is count. They have been extended to quasi-Poisson or quasi-binomial models to
incorporate overdispersion.

7

In ordinary regression models, (6) becomes
yi = Xi1 βi1 + Xi2 βi2 + ǫi ,

(13)

⊤
⊤
⊤
⊤
⊤
2
where Xi1 = (x⊤
i11 , . . . , xini 1 ) , Xi2 = (xi12 , . . . , xini 2 ) , and ǫi ∼ N (0, σ Ini ). With a given C,
the model in our generalized k-means becomes

yi = Xi1 βi1 + Xi2 βs2 + ǫi

(14)

for zi ∈ Cs . We treat (14) as a special case of (13). The second stage in Algorithm 1 is common.
We only focus on the first stage.
We select seed zi1 for C1 randomly. Suppose that zi1 , . . . , zik̃ have been selected as the seeds
for C1 , . . . , Ck̃ , for any k̃ < k, respectively. To determine the seed for Ck̃+1 , we calculate the
dissimilarity measure between zs and zi for pairs (s, i) with s ∈ S̃k̃ = {zi1 , . . . , zik̃ } and i 6∈ S̃k̃
based on
yv = Xv1 (βs1 + δv ξs1 ) + Xv2 (βs2 + δv ξs2 ) + ǫv ,
(15)
where v = s or v = i, δv is the dummy variable defined as δv = 0 if v = s or δv = 1 if v = i, and
ǫv ∼ N (0, σ 2 Ini ) is the error vector. We calculate the F -statistic for
H0 : ξi2 = 0 ↔ H1 : ξi2 6= 0.

(16)

Let psi be the p-value of the F -statistic. We define the p-value of the dissimilarity between zi and
S̃k̃ as
pi = max psi .
(17)
s∈S̃k̃

We choose zi as the seed of Ck̃+1 if it has the lowest pi value among all objects in S̃k̃ . Therefore,
zik̃+1 is given by the minimax principal as
ik̃+1 = argmin pi = argminmax psi .
i

i

s

(18)

After we obtain S̃k , the set of all of the seeds for C, we calculate the p-value of the F -statistic
for (16) for every s ∈ S̃k and i 6∈ S̃k . We assign zi to Cs if psi is maximized at s. In the end, we
obtain the initial C. By iterating the second stage in Algorithm 1, we obtain Cˆk based on a given k.
Because of the presence of σ 2 = a(φ), we follow the GIC in variable selection for regression
models [33], and propose our GIC in the generalized k-means for regression models as
GICκ (C) =

SSE
+ κkq2 ,
σ2

(19)

where SSE is the sum of squares of errors given by (14). To implement (19), we need to estimate
σ 2 . If the current k is used, then the estimate of σ 2 is SSE divided by residual degrees of freedom.
The first term on the right-hand side of (19) is always equal to n − N q1 − kq2 , implying that we
cannot use this approach to select the best k. To overcome the difficulty, we recommend using k + 1
2 . Therefore, our GIC is
in (14) in estimating σ 2 . We denote it by σ̂k+1
GICκ (C) =

SSEk
+ κkq2 ,
2
σ̂k+1
8

(20)

where SSEk is the SSE with k clusters in (14). This is appropriate. If the number of true clusters is
less than or equal to k, then slightly increasing the number of clusters by 1 would not significantly
change the estimate of σ 2 , implying that the second term dominates the right-hand side of (20).
Otherwise, the estimate of σ 2 would be significantly reduced, implying that the first term dominates
the right-hand side of (20). Therefore, the objective function in our GIC provides a nice trade-off
between the SSE and the penalty function.
For Poisson data, there is V(yij ) = E(yij ) = µij , implying that a(φ) = 1. Under the framework
of loglinear models, (6) becomes
⊤
log(µij ) = x⊤
ij1 βi1 + xij2 βi2 .

(21)

⊤
log(µij ) = x⊤
ij1 βi1 + xij2 βs2

(22)

With a given C, it reduces to
for i ∈ Cs . Analogous to the regression models, after selecting zi1 randomly, we investigate
⊤
log(µvj ) = x⊤
vj1 (βs1 + δv ξi1 ) + xvj2 (βs2 + δv ξi2 )

(23)

with v = s or v = i. We measure the dissimilarity between zs and zi by the likelihood ratio statistic
for (16). We derive the initial C by the same idea that we have displayed in regression models.
With the second stage in Algorithm 1, we obtain Cˆk based on a given k. To determine the best k,
we choose −2ℓ(ω̂Ck ) as the residual deviance of (22). As the dispersion parameter is not present,
the implementation of GIC is straightforward.
For quasi-Poisson data, there is V(yijj ) = φE(yij ) = φµij , implying that a(φ) = φ. We can still
use (21), (22), and (23) to find the best C. To determine the best k, we estimate φ by (5), which is
the Pearson goodness-of-fit given by (22) divided by its residual degrees of freedom. For the same
reason, we choose the number of clusters equal to k + 1 in (22) in estimating φ. We denote it by
φ̂k+1 , leading to
G2k
+ κkq2 ,
(24)
GICκ (C) =
φ̂k+1
where G2k is the residual deviance (i.e., deviance goodness-of-fit) with k clusters in (22).

3

Asymptotic Properties

P
We evaluate the asymptotic properties of our method under n = N
i=1 ni → ∞. It is achieved by
letting nmin = mini (ni ) → ∞. To simplify our notations, we assume that ni are all equal to n0 and
|Cs | are all equal to c such that we have N = kc and n = kcn0 in our data. The case with distinct
ni and |Cs | can be proven under their minimums tend to infinity with bounded ratios between the
minimums and the maximums.
The asymptotic properties are evaluated under n0 → ∞ with k, c → ∞. For any i 6= i′ , let Λii′
be the likelihood ratio statistic for
H0 : βi2 = βi′ 2 ↔ H1 : βi2 6= βi′ 2 .

(25)

As n0 → ∞, −2 log Λ is asymptotically χ2q2 distributed if zi and zi′ are in the same cluster, or goes
to ∞ with rate n0 otherwise. Because (25) is applied to all pairs (i, i′ ) in S, the multiple testing
problem must be addressed. This can be solved by the method of higher criticisms [5].
9

⊤
Lemma 1 Assume that (yij , x⊤
ij ) for j ∈ {1, . . . , n0 } are iid copies from (7) for any given i ∈ S.
L

If zi and zi′ are in the same cluster, then −2 log Λii′ → χ2q2 . If zi and zi′ are in different clusters,
then exists a positive constant A = A(βi , βi′ , φ), such that the limiting distribution of −2 log Λ−n0 A
is non-degenerate as n0 → ∞.
Proof. The conclusion can be proven by the standard approach to the asymptotic properties of
maximum likelihood and M-estimation. Please refer to Chapter 22 in [9] and Chapter 5 in [30]. ♦
α

Theorem 1 If the assumption of Lemma 1 holds, and N = o(en0 ) for some α ∈ (0, 1) when
P
n0 → ∞, then Cˆk → C.
Proof. Note that the likelihood ratio test based on Λii′ is applied to distinct i, i′ ∈ C. We need to
evaluate the impact of the multiple testing problem. We examine the distribution of the maxi6=i′ λii′
based on Lemma 1. According to [5], it is asymptotically bounded by a constant times 2 log N if
zi and zi′ are in same clusters or increases to ∞ with rate n0 if zi and zi′ are in different clusters.
Thus, with probability 1, the increasing rate of Λii′ with zi and zi′ in different clusters is faster
♦
than that of Λii′ with zi and zi′ in same clusters, implying the conclusion.
Theorem 2 Assume that a(φ) is not present in (3) or a(φ) is consistently estimated by a(φ̂) used
in the construction of GIC, and the assumption of Theorem 1 holds. If κ−1 log c → 0 as n0 → ∞,
P
P
then k̂κ → k and Cˆk̂κ → C.
Proof. If k̂κ < k, then we can find at least one pair of zi and zi′ , such that they are not in the same
cluster but they are grouped to the same cluster. By Lemma (1), the first term on the right-hand
side of (11) goes to ∞ with rate n0 . It is faster than the rate of GIC under k̂κ = k, implying that
P (k̂κ < k) = 0 as n0 → ∞. Therefore, we only need to study the case when k̂κ ≥ k. Note that the
loglikelihood function of (7) based on a given C is equal to the sum of the loglikelihood functions
obtained from each Cs ∈ C. By Theorem 1, we can restrict our attention to the case when all
objects in Cs are in the same cluster. By [5], with probability 1, the loglikelihood function (7) in Cs
is not higher than that under the true cluster plus 2 log c. By the property of the χ2 -approximation
of the likelihood ratio statistic under the true C, we have that with probability 1 the first term on
the right-hand side of (11) is not higher than n0 N − (N q1 + kq2 ) + 2kq2 log c. Combining it with
P

the second term, we conclude that k̂κ → k. We obtain the first conclusion. Then, we draw the
P
second conclusion Cˆk̂κ → C by Theorem 1.
♦
Theorem 1 implies that both c and k can increase exponential fast than n0 if k is known, but
the rate is significantly reduced if k is unknown. If c → ∞, then we cannot choose κ = 2 in our
method, implying that k̂AIC is not consistent, but we can still show that k̂BIC is consistent.
Corollary 1 Suppose that all of assumptions of Theorem 2 are satisfied. If k → ∞ or k is constant,
P
and c/n0 → 0 when n0 → ∞, then k̂BIC → k.
Proof. Note that the increasing rate of log n cannot be lower than the increasing rate of log c. We
draw the conclusion by Theorem 2.
♦

10

4

Simulation

We carried out simulations to evaluate our methods. For an estimated cluster assignment Cˆ and
the true clustering assignment C, we define the clustering error (CE) of Cˆ as
 −1
N
(26)
#{(i, i′ ) : δ̂ii′ = δii′ , 1 ≤ i < i′ ≤ N }
CECˆ =
2
ˆ or δ̂ii′ = 0 otherwise, and similarly for
where δ̂ii′ = 1 if zi and zi′ belong to the same clusters in C,
δii′ in C. For estimated clustering assignments Cˆ1 , . . . , CˆR obtained from R simulation replications,
respectively, we calculate the percentage of clustering object errors (OE) by
R

OE =

100 X
CEĈj .
R

(27)

j=1

This is a commonly used criterion in the clustering literature [31]. We also study the percentage
of number of clusters identified correctly (IC) as
R

100 X
I(k̂j = k)
IC =
R

(28)

j=1

where k̂1 , . . . , k̂R are the numbers of clusters obtained from R simulation replications, respectively,
and k is the true number of clusters. We compare clustering methods based on CE and IC.

4.1

Regression Models

We established regression models with k = 2, 3 clusters. Each cluster had c = 10, 20 objects. Each
object contained n0 = 50, 100 observations. We generated explanatory variables xij1 from U [18, 70]
and xij2 from N (0, 9) independently. For each selected k, c, and n0 , we generated the normal
response from
yij = βi0 + xij1 βs1 + xij2 βs2 + ǫij ,
(29)
for j = 1, . . . , n0 and i = 1, . . . , N , where ǫij ∼iid N (0, σ 2 ) with σ = 0.5, 1.0 was the random
error. We evaluated our methods based on AIC and BIC with the comparison to the previous
EM algorithm method proposed by [26]. To implement the EM algorithm, we only considered the
saturated clustering problem, where we set βi0 not varied within clusters. We made βi0 = βi′ 0 if zi
and zi′ were in the same cluster in (29). If k = 2, we chose βi0 = 1, βi1 = −0.06, and βi2 = −0.01
if zi was in the first cluster or βi0 = 1, βi1 = 0.06, and βi2 = 0.01 if zi was in the second cluster. If
k = 3, we added one more cluster with βi0 = 1, βi1 = −0.02, and βi2 = 0.01 if zi was in the third
cluster. Then, we could generate data from (29) with either 2 or 3 clusters.
Table 1 displays the simulation results for the percentage of clustering number errors with
respect to the previous EM algorithm, and our AIC and BIC selectors. In all of the simulations
that we ran, we found that the number of clusters reported by the EM algorithm was either 1 or
2, implying that it could not find the correct number of clusters if k > 2. The true k could be
detected by our BIC not our AIC.
Table 2 displays the simulation results for the percentage of clustering object errors based on the
previous EM algorithm and our BIC selector. We did not include AIC in the table because it could
11

Table 1: Percentage of number clusters identified correctly (IC) in regression models based on 1000
simulation replications with data generated from (29).

σ
0.5

c
10
20

1.0

10
20

k
2
3
2
3
2
3
2
3

EM
81.1
0.0
75.1
0.0
75.1
0.0
74.2
0.0

n = 50
AIC
15.4
5.6
0.5
0.0
17.3
7.3
0.5
0.3

BIC
97.6
97.8
88.6
95.9
96.8
95.7
93.0
87.6

EM
72.4
0.0
75.2
0.0
71.6
0.0
72.2
0.0

n = 100
AIC BIC
21.4 98.1
6.2 98.9
0.3 93.2
0.0 97.3
15.9 98.6
4.9 98.4
0.3 93.8
0.0 96.5

Table 2: Percentage of clustering object errors (OE) in regression models based on 1000 simulation
replications with data generated from (29).

σ
0.5
1.0

c
10
20
10
20

n = 50
k=2
k=3
EM BIC EM BIC
10.0 0.3 33.6 0.0
12.8 1.3 33.1 0.3
13.1 0.4 33.6 3.1
13.3 0.8 34.5 3.8

12

n = 100
k=2
k=3
EM BIC EM BIC
14.5 0.2 33.1 0.3
12.8 0.8 31.8 0.2
14.9 0.2 36.4 0.2
14.3 0.7 36.5 0.4

Table 3: Percentage of number clusters identified correctly (IC) in loglinear models based on 1000
simulation replications with data generated from (30).

τ
0.5
1.0

c
10
20
10
20

n = 50
k=2
k=3
AIC BIC AIC BIC
1.6 91.7 0.3 90.9
0.1 71.2 0.0 68.7
2.1 92.5 1.2 92.1
0.0 78.1 0.0 76.5

n = 100
k=2
k=3
AIC BIC AIC BIC
1.6 94.9 0.4 93.9
0.0 80.1 0.0 77.1
1.3 95.3 0.6 95.2
0.1 83.4 0.0 83.0

not detect the correct k. Our result shows that BIC in the generalized k-means was always better
that in the previous EM algorithm. Our BIC was able to find the true number of clusters with
lower clustering object errors. The previous EM algorithm cannot be used to study the unsaturated
clustering problem. This is an advantage of our generalized k-means.

4.2

Loglinear Models

Similar to the regression models, we also chose k = 2, 3 clusters in loglinear models for Poisson
data. Each cluster had c = 10, 20 objects. Each object contained n0 = 50, 100 observations. We
generated explanatory variables xij1 and xij2 from N (0, 4) independently. For each selected k, c,
and n0 , we independently generated the response yij from P(λij ) with
log λij = βi0 + xij1 βs1 + xij2 βs2

(30)

for j = 1, . . . , n0 and i = 1, . . . , N . We generated βi0 independently from N (10, 1). We set
(β11 , β12 ) = (1, 1) in the first cluster and (β21 , β22 ) = (−1, −1) in the second cluster. This was used
if k = 2. If k = 3, we chose (β31 , β32 ) = (1, −1) in the third cluster. We evaluated our method
based on AIC and BIC for the unsaturated clustering problem, where we varied βi0 within clusters.
Table 3 displays the simulation results for the percentage of clustering number errors. We also
found that the true k could be identified by our BIC but not by our AIC. Table 4 displays the
results for the percentage of clustering object errors based on BIC. It shows that the percentage of
clustering object errors was still low, indicating that BIC can be used to find the correct number
of cluster with the low error rate. Therefore, we recommend using BIC in our generalized k-means
if the number of clusters is unknown.

5

Application

We implemented our method to the state-level COVID-19 data in the United States. It is known
that the outbreak of COVID-19 in the world has occurred in March 2020 and more than 200
countries have affected. The situation in the United States is the most serious in the world. Until
July 31, the United States has over 4.7 million confirmed cases and one hundred sixty thousand
deaths, which are the highest in the world. After briefly looking at the data (Figure 2), we found
13

Table 4: BIC for percentage of clustering object errors (OE) in loglinear models based on 1000
simulation replications with data generated from (30).

τ
0.5
1.0

c
10
20
10
20

k for n = 50
2
3
1.3
0.6
4.4
2.1
1.1
0.5
3.3
1.5

k for n = 100
2
3
0.8
0.4
3.0
1.5
0.7
0.3
2.5
1.1

significant changes in the time series patterns before May 31 and after June 1. We suspected two
possible reasons from social medias. The first was the George Floyd issue, occurred on May 25 in
Minneapolis. The second was the economy reopening issue. Most states reopened their economy or
released their restrictions for the spread of the infection at the end of May. Therefore, we needed
to pay attention to their impacts in the implementation of our method.
It is known that the first patient of COVID-19 appeared in Wuhan, China, on December 1
2019. In late December, a cluster of pneumonia cases of unknown cause was reported by local
health authorities in Wuhan with clinical presentations greatly resembling viral pneumonia [3, 28].
Deep sequencing analysis from lower respiratory tract samples indicated a novel coronavirus [8, 15].
The virus of COVID-19 primarily spreads between people via respiratory droplets from breathing,
coughing, and sneezing [32]. This kind of spreading can cause cluster infections in society. To
avoid cluster infections, many countries have imposed travel restrictions. These restrictions have
affected over 91% of the total population of the world with three billion people living in countries
with restrictions on people arriving from other countries borders completely closed to noncitizens
and nonresidents [25].
Exponential increasing trends are expected at the beginning of outbreaks of any infectious
disease. This phenomenon has been observed in the 2009 Influenza A (H1N1) pandemic [4] and the
2014 Ebola outbreak in West Africa [16]. Without any prevention efforts, the exponential trend
will be continuing for months until a large portion of people are infected, but this can be changed
due to prevention by governments [23].
To obtain a more appropriate model for the time series patterns in the United States, we
investigate a few candidate models. We choose the response as the number of daily new cases and
explanatory variables as functions of time. We find that two models were useful. The first is the
exponential model as
log λj = µ + β(tj − t0 ),
(31)
where t0 is the starting date, tj is the current date, λj = E(yj ), and yj is the number of daily new
case observed on the current date. The second is the Gamma model given as
log λj = µ + α log(tj − t0 ) + β(tj − t0 ).

(32)

It assumes that the expected value of number of daily new cases is proportional the density of a
Gamma-distribution. If the second term is absent, then the Gamma model becomes the exponential
model, implying that (31) is a special case of (32).
14

Aug

Feb

May

Aug

May

Feb

May

2000 4000

4000

0

2000

500

Aug

800
400
0
May

Aug

Feb

May

Aug

1500

Oklahoma

800

500
0
Feb

May

Aug

Feb

May

Aug

Delaware

200

400

500
Aug

May

Wisconsin

Rhode Island

Maine

Aug

0
Feb

Utah

Aug

May

Virginia

1500

2000
1000
0
800
400
0
Feb

0

200
May

Feb

Aug

0
Feb

Feb

May

Aug

Feb

Wyoming

May

Aug

Vermont

Feb

May

Aug

0

0

20

40

40

80

60

20 40 60 80
Aug

May

400
May

200
Aug

Aug

0
Feb

0
May

Montana

Aug

Aug

500

400
Feb

May

Minnesota

Oregon

150
Feb

May

800
Aug

New Mexico

Aug

Feb

Arkansas

200
May

Feb

400
May

Arizona

0

2000
0
500
1000
400
Aug

0
Feb

New Hampshire

Aug

120

Aug

May

0
May

Feb

Washington

0
Feb

Feb

Iowa

Illinois

South Carolina

0
Aug

1500
Feb

Idaho

Aug

1500

2500
0 1000

May

500
May

May

Ohio

0
Feb

Aug

4000

4000
2000

10000 20000
0
500
0
800
400
0

May

Feb

Aug

Colorado

North Dakota
50 100

May

May

Feb

Mississippi

200
Feb

0

100
Feb

Aug

600

500
Aug

0
Aug

Feb

Aug

0
May

West Virgina
200

400
200

May

May

200

400
Feb

May

Indiana

Nebraska

0
Aug

0
Feb

Feb

Aug

0

Aug

800

800
400

May

South Dakota

Aug

1500
May

Kansas

0
Feb

May

Connecticut

0 500
Feb

Kentucky

Feb

0

Aug

Feb

May

Tennessee

1500

Aug

Feb

0 50

May

Nevada

0
May

Aug

0
Feb

500

1500
500
0
Feb

May

500

2000
Aug
1500

May

Missouri

Feb

Maryland

0

0
Feb

Aug

500

Aug

1500

5000

2000
1000

May

Michigan

May

0

0
Feb

Feb

Massachusetts

150

Aug

Aug

1500

May

Alabama

May

Pennsylvania

1000

2000
0

1000
0
Feb

Feb

New Jersey

0

Aug

2000 4000

May

Louisiana

Georgia

0

15000
5000

Feb

New York

0 50

Aug

North Carolina

2000

May

Texas

0

5000
0

0
Feb
2500

Florida

15000

14000
6000

California

Feb

May

Aug

Feb

May

Aug

Figure 2: Daily new cases of COVID-19 in 48 states in the mainland United States.

Table 5: Fitting results of the exponential and the Gamma models for the outbreak of COVID-19
in eleven selected countries between January 11 to May 31, 2020

Country
China
USA
Canada
Russia
Spain
UK
Italy
France
Germany
Switzerland
Sweden

Exponential
µ
β
R2
7.91 −0.032 0.368
7.23 0.025
0.582
4.19 0.026
0.561
3.67 0.044
0.840
6.59 0.013
0.164
5.53 0.023
0.446
6.66 0.010
0.110
6.26 0.012
0.096
6.33 0.011
0.103
4.90 0.006
0.030
3.28 0.026
0.626

µ
−9.6
−64.7
−75.1
−135.2
−77.0
−82.9
−58.0
−96.9
−83.7
−116.0
−43.75

15

α
7.77
20.56
22.61
37.90
24.72
25.25
19.53
30.47
26.80
36.50
13.6

Gamma
β
−0.290
−0.195
−0.215
−0.308
−0.283
−0.248
−0.238
−0.353
−0.317
−0.463
−0.123

R2
0.813
0.939
0.920
0.993
0.899
0.857
0.945
0.694
0.862
0.853
0.876

Peak
02/07
04/26
04/26
05/13
04/08
04/22
04/03
04/07
04/05
03/30
04/30

Figure 3: Six clusters identified by BIC in generalized k-means for the period between and February
24 to May 31 (left) and the period between February 24 to July 31 (right), respectively.
Suppose that α > 0. If β > 0, then the third term dominates the variation of the right-hand
side of (32). The expected value of the response goes to infinity as time goes to infinity, leading
to an exponential increasing trend. If β < 0, then the peak of the model is tmax = t0 − α/β. An
increasing trend is expected if t < tmax and a decreasing trend is expected otherwise. Therefore,
we can use the sign of β to determine whether the outbreak is under control or out of control.
We chose t0 as January 11 in both (31) and (32). We assumed that yi followed the quasi-Poisson
model, such that we could fit the two models by the traditional loglinear model with the dispersion
parameter a(φ) = φ to be estimated by (5). We assessed the two models by their R2 values, where
the R2 value of a GLM was defined as one minus residual deviance divided by the null deviance.
We verified (31) and (32) by implementing them to eleven countries in the world (Table 5), where
the peak was estimated by t̂max = t0 − α̂/β̂ with α̂ and β̂ as the MLEs of α and β in the model.
We found that the results given by the Gamma model were significantly better than those given
by the exponential model.
We established our generalized k-means clustering under (32) to group the 50 states and Washington DC. The model was
log λij = µi + αs log(tj − t0 ) + βs (tj − t0 ),

(33)

where λij = E(yij ), yij was the number of daily new cases from the ith state on the jth date, and
αs and βs were the coefficients given by the sth cluster.
We looked at the state-level data and found that many of daily new cases were zeros in January
16

Table 6: Parameter estimates in the six clusters with a selected state (State) for each cluster based
on the Gamma model for the outbreak of COVID-19 in the United States, where the standard
errors are given inside the parenthesis and × means out of control.

Cluster
1
2
3
4
5
6

State
California
New York
Illinois
Louisiana
Minnesota
Florida

02/24–05/31
α
β
10.49(0.62)
−0.8750(0.0066)
24.63(0.65)
−0.2962(0.0078)
19.22(0.87)
−0.1780(0.0090)
21.00(0.72)
−0.2378(0.0082)
19.50(4.26)
−0.1545(0.0425)
19.39(0.63
−0.2011(0.0068)

Peak
5/10(2.27)
4/3(0.28)
4/28(0.81)
4/8(0.39)
5/17(7.3)
4/26(0.42)

State
California
New York
Illinois
Louisiana
Minnesota
Florida

02/24–07/31
α
β
1.958(0.25)
0.0069(0.0020)
11.05(0.29)
−0.1206(0.0030)
6.48(0.30)
−0.0538(0.0026)
1.179(0.39)
0.0044(0.0034)
8.010(0.69)
−0.0548(0.0056)
1.57(0.31)
0.0178(0.0024)

Peak
×
4/12
5/11
×
6/5
×

and February. This was because the United States only had 6 total number of confirmed cases
until February 24. We decided to exclude data before February 24 in the analysis. We applied
(33) to the data between February 24 and May 31 and the data between February 24 and July
31, respectively. We compared their difference to evaluate the impact of the two issues that we
mentioned at the beginning of this section. We obtained six clusters based on the BIC approach
(Figure 3).
To verify our clustering result, we examined three models. The first was the main effect model.
It had only one cluster in (33). The second was the resulting (33) with k clusters. The third was
the interaction effect model. It assumed that each state formed a cluster in (33). We calculated
the differences of residual deviance between the first and second models, and between the first and
the third models, respectively. We obtained the partial R2 value by the ratio of the two differences.
The partial R2 value interpreted the ratio of residual deviance reduced by the model with k clusters.
When k = 6, we obtained that the partial R2 was 0.9235 for data between February 24 and May
31, and 0.9606 for data between February 24 and July 31, implying that the model with six clusters
was good enough for the differences among the 50 states and Washington DC.
We evaluated properties of identified clusters by the MLEs of αs and βs with k = 6 in (33)
with k = 6 (Table 6). We found the situation in the entire United States was under control before
May 31 as the signs of β̂s were all negative. The situations in the states contained by the first, the
fourth, and the six clusters became worse, but the situations in the states contained by the second,
the third, and the fifth clusters were still under control. The change was probably caused by that
a lot of people did not keep social distance or did not stay at home in June and July in the United
States.

6

Discussion

We have proposed a new clustering method under the framework of the generalized k-means to
group statistical models. The method can automatically select the number of clusters if it is
combined with the GIC approach. We study BIC and AIC, which are two popular special cases
in GIC. Our theoretical and simulation results show that the correct number of clusters can be
identified by BIC but not by AIC. Therefore, we recommend using BIC to find the number of
clusters if k is unknown. We implement our method to partition loglinear models for the state-level
17

COVID-19 data in the United States and finally we have identified six clusters. An important
advantage is that our method can be used to study the unsaturated clustering problem, which is
different from the saturated clustering problem studied by traditional k-means or k-medians. As
the choice of the dissimilarity measure is flexible, our method can be extended to many scenarios
beyond GLMs. This is left to future research.

References
[1] Bock, H. (2008) Origins and extensions of the k-means algorithm in cluster analysis Electron.
Electronic Journal for History of Probability and Statistics, 4, Article 14.
[2] Charikar, M., and Guha, S. (2002). A constant-factor approximation algorithm for the k-median
problem. Journal of Computer and System Science, 65, 129-149.
[3] Chen, N., Zhou, M., Dong, X., Qu, J., Gong, F., Han, Y., Qiu, Y., Wang, J., Liu, Y., Wei, Y.,
Xia, J., Yu, T., Zhang, X., and Zhang, L. (2020). Epidemiological and clinical characteristics of
99 cases of 2019 novel coronavirus pneumonia in Wuhan, China: a descriptive study. The Lancet,
395, 507-513.
[4] de Picoli, S., Teixeira, J.J., Ribeiro, H.V., Malacarne, L.C., dos Santos, R.P., dos Santos Mendes,
R. (2011). Spreading patterns of the influenza A (H1N1) pandemic. PLOS ONE, 6, e17823.
[5] Donoho, D., and Jin, J. (2004). Higher criticism for detecting sparse heterogeneous mixtures.
Annals of Statistics, 32, 962-994.
[6] Du, Q., and Wong, T.W. (2002). Numerical studies for MacQueen’s k-means algorithms for
computing the centroidal Voronoi tessellations. Computer and Mathematics with Applications,
44, 511-523.
[7] Fan, J., Guo, S., and Hao, N. (2012). Variance estimation using refitted cross-validation in
ultrahigh dimensional regression. Journal of Royal Statistical Society Series B, 74, 37-55.
[8] Feng, Z. (2020). Urgent research agenda for the novel coronavirus epidemic: transmission and
non-pharmaceutical mitigation strategies. Chinese Journal of Epidemiology, 41, 135-138.
[9] Ferguson, T.S. (1996). A Course in Large Sample Theory. CRC Press, New York.
[10] Forgy, E. W. (1965). Cluster analysis of multivariate data: efficiency vs interpretability of
classifications. Biometrics, 21, 768769.
[11] Fraley, C. and Raftery, A.E. (2002). Model-based clustering, discriminant analysis, and density
estimation. Journal of the American Statistical Association, 97, 611-631.
[12] Goyal, M., and Aggarwal, S. (2017). A review on k-mode clustering algorithm. International
Journal of Advanced Research in Computer Science, 8, 725-729.
[13] Green, P.J. (1984). Iteratively reweighted least squares for maximum likelihood estimation,
and some robust and resistant alternative. Journal of Royal Statistical Society Series B, 46,
149-192.
18

[14] Hartigan, J. A. and Wong, M. A. (1979). A k-means clustering algorithm. Applied Statistics,
28, 100108.
[15] Huang, C., Wang, Y., Li, X., Ren, L., Zhao, J., Hu., Y., Zhang, L., Fan, G., Xu, J., Gu., X.,
Cheng, Z., Yu, T., Xia, J., Wei, Y., Wu., W., Xie, X., Yin, W., Li, H., Liu, M., Xiao, Y., Gao,
H., Guo, L., Xie, J., Wang, G., Jiang, R., Gao, Z., Jin, Q., Wang, J., Cao, B. (2020). Clinical
features of patients infected with 2019 novel coronavirus in Wuhan, China. The Lancet, 395,
497-506.
[16] Hunt, A.G. (2014). Exponential growth in Ebola outbreak since May 14, 2014. Complexity,
20, 8-11.
¯
[17] Johnson, R.A. and Wichern, D.W. (2002). Applied Multivariate Statistical Analysis. Prentice
Hall, New Jersey.
[18] Kriegel, H.P., Kröger, P., Sander, J., and Zimek, A. (2001). Density-based clustering. WIRES
Data Mining Knowledge Discovery, 1, 231-240.
[19] Kwedlo, W. (2011). A clustering method combing differential evolution with the k-means
algorithm. Pattern Recognition Letters, 32, 1613-1621.
[20] Lau, J.W. and Green, P.J. (2007). Bayesian model-based clustering procedures. Journal of
Computational and Graphical Statistics, 16, 526-558.
[21] Lloyd, S.P. (1982). Least squares quantization in PCM. IEEE Transactions on Information
Theory, 28, 128137.
[22] MacQueen, J. B. (1967). Some Methods for classification and Analysis of Multivariate Observations. Proceedings of 5th Berkeley Symposium on Mathematical Statistics and Probability.
University of California Press. pp. 281297.
[23] Maier, B.F. and Brockmann, D. (2020). Effective containment explains subexponential growth
in recent confirmed COVID-19 cases in China. Science, DOI: 10.1126/science.abb4557.
[24] McCullagh, P. (1983). Quasi-likelihood functions. Annals of Statistics, 11, 59-67.
[25] Pew Research Center (2020). More than nine-in-ten people worldwide live in countries with
travel restrictions amid COVID-19. https://www/pewreseach.org/fact-tank/2020/04/01
[26] Qin, L.X. and Self, S.G. (2006). The Clustering of regression models method with applications
in gene expression data. Biometrics, 62, 526-533.
[27] Soheily-Khah, S., Douzal-Chouakria, A., and Gaussie, E. (2016). Generalized k-means-based
clustering for temporal data under weighted and kernel time warp. Pattern Recognition Letters,
75, 63-69.
[28] Sun, K., Chen, J., and Viboud, C. (2020). Early epidemiological analysis of the coronavirus
disease 2019 outbreak based on crowdsourced data: a population-level observational study. The
Lancet Digital Health.
19

[29] Trauwaert, E., Kaufman, L., and Rousseeuw, P. (1991) Fuzzy clustering algorithms based on
the maximum likelihood principle. Fuzzy Sets and Systems, 42, 213-227.
[30] van der Vaart, A.W. (1998). Asymptotic Statistics, Cambridge University Press, Cambridge,
UK.
[31] Wang, J. (2010). Consistent selection of the number of clusters via cross validation.
Biometrika, 97, 893-904.
[32] World Health Organization (WHO) (2020). Getting your workplace ready for COVID-19.
February 27 2020.
[33] Zhang, Y., Li, R., and Tsai,, C. (2010). Regularization parameter selections via generalized
information criterion. Journal of the American Statistical Association, 105, 312-323.
[34] Zhao, Y. and Karypis, G. (2005). Hierarchical clustering algorithms for document datasets.
Data Mining and Knowledge Discovery, 10, 141-168.

20

