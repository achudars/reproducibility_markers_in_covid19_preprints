A stochastic geospatial epidemic model and
simulation using an event modulated Gillespie
algorithm

arXiv:2101.03934v3 [q-bio.PE] 28 Jan 2021

Alexander Temerev, Liudmila Rozanova
Institute of Global Health, University of Geneva
ABSTRACT
We developed a model and an instrument for stochastic simulations of spreading of COVID-19
and other similar infectious diseases, that takes into account both contact network structures and
geographical distribution of population density, detailed up to a level of location of individuals.
Our analysis framework includes the surrogate model (SuMo) optimization process for quick
fitting of the model‚Äôs parameters to the observed epidemic curves for cases, hospitalizations and
deaths. This set of instruments (the model, the simulation code, and the optimizer) can be a
useful tool for policymakers and epidemic response teams who can use it to forecast epidemic
development scenarios in local environments (on the scale from towns to large countries) and
design optimal response strategies. The simulation code also includes a geospatial visualization
subsystem, presenting detailed views of epidemic scenarios directly on population density maps.
We used the developed framework to draw predictions for COVID-19 spreading in Switzerland,
on the level of individual cantons; their difference in population density distribution accounts to
significant variety in epidemic curves and consequently the choice of optimal response strategy.
KEYWORDS
COVID-19, stochastic epidemic modeling, Gillespie algorithm, complex network, contact matrices, population density, epidemic simulation
INTRODUCTION
There are numerous epidemic modeling and simulation toolkits available as of 2020, in the range
from educational toy models to global-scale comprehensive frameworks (e.g. GLEAMviz [1],
which accounts for global air transport networks, commuting patterns, temporal changes of
epidemic parameters, etc). While working with rough-scale global epidemic dynamics tends to
be somewhat less difficult than detailed local simulations, as numerous differences in epidemic
spreading patterns and response options tend to be averaged away, the global models are less
useful for policymakers as there is no global pandemic response organization that can work on
truly international scale.
As epidemic response organizations do not work with unlimited resources (and in fact, available
resources can be quite limited in e.g. developing countries), optimal resource allocation is crucial
for developing the most efficient counter-epidemic strategy. It includes determining the most

vulnerable population segments, the most probable epidemic hotspots, and the most impactful
dates and locations for introducing non-pharmaceutical interventions. Our framework employs
age-based and context-based contact matrices to account for differences in social networks and
contact patterns of people within different age groups; it uses detailed population density maps
to predict (and visualize) geographical locations of epidemic hotspot clusters, and it employs
surrogate modeling optimization system to adapt itself for real observations and medical statistics
available for the chosen simulation area, enabling operators to choose most impactful response
options.
EPIDEMIC PROCESS DESCRIPTION

General assumptions
We use a standard representation the population as a network consists of N nodes (individuals)
{i} and a set of links {eij }, representing a contact between each nodes i and j. We assume that
the number of individuals in the network remains stable during the simulation [2].
In our case the network is weighted ‚Äì all links eij have the weights depending of the spatial
distance between each pair of nodes i and j) and complete i.e. we assume that all nodes are
connected each others.
For the description of the infectious process we construct a stochastic SEIR model on the network,
so all nodes are in one of the four states: S (susceptible), E (exposed in the latent period), I
(infected) or R (recovered/removed).
Stochastic infection process S ‚Üí E occurs as a result of contact between a susceptible (i ‚àà S)
and infectious (j ‚àà I) individual. This transition generally depends on the frequency of contacts
and proportional to the infection rate Œ≤ [2]. Simultaneously, two additional random processes
take place in the network: the transition of individuals from the exposed to infectious state
E ‚Üí I and the removal process I ‚Üí R.
The model assumes two types of contact events, which we call as ‚Äúlocal‚Äù and ‚Äúremote‚Äù contacts and
are distinguished using the distance matrix M = {mij }. Thus, we take into account the spread
of infection in some local area/region and the movement of individuals between the regions.
In a local area, we assume that each node can meet any other located in this area with the same
probability. Thus, we introduce a cutoff r on the distance function d(mij ), which is the same
for all nodes in the network. For each node i in the circle of the radius r with the center in i all
distances are assumed to be the same length: d(mij ) = r.
Remote spreading is modelled as a separate process where each infectious individual can spontaneously transmit the infection to a random target selected from the entire population (which
automatically normalizes it for population density, as the target will be located with more probability in densely populated areas), and flips it to the exposed state.
Thus, in our model, the following parameters affect the contact probability:

Transition
S ‚Üí El
S ‚Üí Ed
E‚ÜíI
I‚ÜíR

Type
Local contagion
Remote contagion
Spontaneous
Spontaneous

Mean rate
l
Œ≤si
d
Œ≤si
i
Œ≥i

State change
(st ‚àí 1, et + 1, it )
(st ‚àí 1, et + 1, it )
(st , et ‚àí 1, it + 1)
(st , et , it ‚àí 1)

Table 1. Transition rates between Markov chain states

1. The node assignment into one of the age groups (in our model we use 16 age groups, the
frequency of contacts between all groups forms an asymmetric 16x16 matrix A = {aij }).
2. The distance between contacting nodes. As only relative distances matter in our model, we
use the Euclidean distance between square locations on the population density map. Closer
nodes have a higher probability to participate in a contact and infection transmission.
3. The population density in a particular area (the contact probability for distant contacts
directly depends on the population density in the area of contact ‚Äì this is achieved with
rejection sampling of remote contacts over the entire simulated region).

Model construction
We represent the stochastic SEIR model as a continuous time 3-dimensional Markov chain
X = {(S(t), E(t), I(t)) : t ‚â• 0} that tracks the number of susceptible, exposed and infectious individuals at any time point. The number of removed individuals can be calculated as
R(t) = N ‚àí S(t) ‚àí E(t) ‚àí I(t).
The epidemic starts from one or several infectious individuals n0 ; the population is assumed
to consist of fully susceptible individuals; that is, the initial state of X is (S(0), E(0), I(0)) =
(N ‚àí n0 , 0, n0 ). In each moment of time the state space of X is described by changing the state
of individuals according to the rules shown in the table 1. All other types of contacts do not
change the state of the system [3].
SIMULATION ALGORITHM
We employ Poisson processes for link activation. When an exposure event occurs at node i ‚àà I,
we first randomly select a node j with the Euclidean distance d(mij ) less than r, and activate link
eij with the probability depending on the age-contact structure of the population: pij = aij /K,
where K is the normalization factor: total contact rate summed for all age groups. If j is in the
susceptible state, the disease is transmitted with the probability pij and the susceptible node
becomes infected (exposed).
For the remote contact, we select a random node j over the entire simulated geographical region with rejection sampling, so the target node is selected according to the population density
distribution. This accounts for all non-local contacts (random encounters, travel, etc.), allowing
to specify their relative proportion with a single parameter: the frequency of remote contacts
relative to local contacts.

An infected node stays in the exposed state for a time interval (exponentially distributed) calculated from the mean rate , and after it goes to an infectious state, where it can infect other
nodes. Transitions to the recovered state occur according to another Poisson process with the
exponentially distributed time intervals calculated from the rate Œ≥. A recovered node neither
infects nor becomes infected by other nodes.
The infection rate of a susceptible node depends on how many infected neighbours it has, but the
recovery rate and the time until the transition from the exposed to infectious class is independent
of the network configuration and status of neighbours.
R‚àû
The mean time to node activation, which enables infection, is given by hœÑ i = 0 œÑ œà(œÑ )dœÑ . The
mean time for moving an exposed node to infectious is 1/ and infected node to recover is equal
to 1/Œ≥.

A modified Gillespie algorithm
The continuous time evolution of stochastic processes with known transition rates (including epidemiological applications) can be numerically simulated with Gillespie algorithms family, which
are statistically accurate. For our needs we used a particular variation: the event-modulated
Gillespie algorithm [4].
In the direct Gillespie algorithm the instantaneous event rates are updated for all processes,
following the occurrence of each event, even if the probability density of the inter-event times
for the process is not perturbed by an event that has occurred elsewhere. This procedure is
time-consuming with large N . In the event-modulated Gillespie algorithm, we use a priority
queue to keep all future events sorted by their occurrence time; after processing the nearest
element in the queue, the future events that cannot modify the global state (e.g. spreading the
infection to people who are already not susceptible) can be safely discarded. Their occurrence
times are drawn from the corresponding exponential distributions governing the transition rates.
Consequently, the event-modulated Poisson process is a mixture of Poisson processes of different
rates.
Consider N Poisson processes with the rate of Œªi , i ‚àà [1, N ] running in parallel. Denote the
density of the event rate for the ith process by œÅi (Œªi ). The renewal process is fully characterised
by the probability density of inter-event times, denote this function as œài (œÑ ) for ith process.
For an event-modulated Poisson process with probability density of the event rate œÅi (Œªi ), we
have
Z ‚àû
œài (œÑ ) =
œÅi (Œªi )e‚àíŒªi œÑ dŒª.
0

A Poisson process with rate Œª0 , i.e., œài (œÑ ) = Œª0 e‚àíŒª0 œÑ is generated by œÅi (Œªi ) = Œ¥(Œªi ‚àí Œª0 ), where
Œ¥ is the delta function.
As there is a global priority queue already, it makes sense to calculate the contact network of
each individual in-place, during the processing of each transition event.

The algorithm itself is outlined in (Algorithm 1), adapted from Istv√°n Z. Kiss et al. [5]. Its
core capabilities (infection spreading depending on contact matrices and geographical location
of individuals) are abstracted into the find_contact function (line 17).
input : N: array of nodes with 2D coordinates (all in S state); Œ≤i , i , Œ≥i : SEIR
parameters; ti : regime change dates; nstart : initial infected
output: W : array of nodes with 2D coordinates and states at time t.
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28

Q‚Üê‚àÖ
I ‚Üê random_sample(N , nstart )
for n ‚Üê I do
e ‚Üê Infect(node = n, time = 0)
Q.enqueue(e)
end
while Q not empty do
U ‚Üê random(0, 1)
e ‚Üê Q.dequeue()
Œ≤t , t , Œ≥t ‚Üê regime_params(e.time)
if e is Expose then
e0I ‚Üê Infect(node = e.node, time = e.time +

/* priority queue */

‚àí log U
)
t

Q.enqueue(e0I )
e.node.state ‚Üê E
end
if e is Infect then
e0E ‚Üê Expose(node = find_contact(e.node), time = e.time +
e0R ‚Üê Remove(node = e.node, time = e.time +

‚àí log U
)
Œ≤t

‚àí log U
)
Œ≥t

if e0E .time < e0R .time then
Q.enqueue(e0E )
end
Q.enqueue(e0R )
e.node.state ‚Üê I
end
if e is Remove then
e.node.state ‚Üê R
end
end
Algorithm 1: Event-modulated Gillespie algorithm for the simulation

SIMULATIONS AND RESULTS

Simulation running
The main simulation code is written in C++ (C++17), using GDAL library for geospatial
transformations and manipulations, and nanoflann k-d tree implementation for radius queries.

Figure 1. Simulation results for Canton of Geneva, Switzerland: A) time +39 days; B) time +69 days; C) time
+187 days; D) time + 406 days.

The population density map from Global Human Settlement Layer dataset is loaded as a 2D
array, with areas inside and outside border marked separately. The state of the simulation is
exported each day of the simulated time as current SEIR counts, and, more importantly, as
PNG file representing the current state of population on the density map (where susceptible
individuals are represented by grey pixels, exposed ‚Äî by orange pixels, infected ‚Äî by red pixels,
and removed ‚Äî by green pixels. With this, localized infection clusters in the simulation are
clearly visible, as well as directions of infection spreading.
In every moment in time, the simulation software is capable of presenting population density
maps, showing the exact state of each individual in the simulation. The examples of such
snapshots are given in the Figure 1. It shows the appearance of new infections in localized
clusters, which are quickly moving to the wide geographical distribution of cases.
We run the set of simulations, each simulation starts from the same initial condition, in which
a set of randomly chosen nodes is infected and all the other N ‚àí 1 nodes are susceptible. We
measure the number of recovered nodes at the end of the simulation normalised by N , called the
final size, averaged over all simulations. For each simulation run, the current counts of nodes
in different states is dumped in the output log at some periodic intervals of simulation time
(e.g. every day in the simulation). These states are aggregated and displayed simultaneously as
stochastic epidemic curves.
The proximity matrix A is constructed using information about population density for the each
simulated region, obtained from the ESM2015 dataset [6]. The age-dependent contact matrix M
is obtained from the work of Kiesha Prem et al [7], which extended the results of the POLYMOD
project [8] to 152 countries.

0-5
5-10
10-15
15-20
20-25
25-30
30-35
35-40
40-45
45-50
50-55
55-60
60-65
65-70
70-75
75+

100
80
60
40
20
0

Apr
2020

May

Jun

Jul

Aug

Sep

Oct

Nov

Dec

Jan
2021

Feb

Mar

Figure 2. Simulation: daily hospitalizations in Geneva canton, by age groups

Surrogate model optimization
To provide the initial epidemic parameters for the full simulation, we use surrogate model optimization, fitting the (surrogate) model (a stochastic SEIR model assuming homogeneous contact
network) to match the observed data (a FOPH dataset for COVID-19 cases in Switzerland,
provided by ETH Zurich [9]).
We wrote an adapter function for running the model and exporting the simulation results, and
comparing it with actual observed number of cases and the number of hospitalizations for the
selected geographical region. Then we run a nonlinear least squares optimization routine curve_fit from scikit-optimize Python package, which works with arbitrary model functions. Then,
we chart the best fitted results together with boundary lines for assumed testing rates.
After the fitting, the determined parameter values are used as inputs to the simulation of the
main model, leaving only local infection distance and near/far rate of contacts as remaining free
parameters.
In the first stage of the fitting procedure, we fix the  and Œ≥ values of the SEIR model (inverse
incubation period and inverse infectiousness period, as these are not changing), and assume that
Œ≤ (infectiousness rate) is changing with time due to the different regimes. We do not know when
exactly the first infections started (as the first registered cases appeared while the epidemics
was already in progress for some time), but we have limits on when the first lockdown was
introduced and when it was lifted. We also assume that there was a regime change sometime
after the lockdown was lifted (people returning to vacations and/or the end of school holidays).

Simulated
0-5
5-10
10-15
15-20
20-25
25-30
30-35
35-40
40-45
45-50
50-55
55-60
60-65
65-70
70-75
75+

hospitalizations/day

200
150
100
50
0

Apr
2020

May

Jun

Jul

Aug

Sep

Oct

Nov

Dec

Jan
2021

Feb

Mar

Figure 3. Daily hospitalizations in Geneva canton, by age groups, compared to the simulation results

This leaves the following parameters to be fitted:
1. tk ‚Äî the regime change dates (actual start of the epidemics, lockdown started, lockdown
ended, new wave started), with bounds. Some of the regime change points (the date of
introduction of the new pandemic response policies) are known, and can be therefore fixed,
but it still occasionally makes sense to consider them as free parameters: if the optimizer
finds a regime change date completely on its own, from data only, it is a part of verification
that the model and the optimizer work correctly.
2. Œ≤k ‚Äî infection spreading rates for these time intervals (for Œ≤0 it is bounded from initial
estimations of R0 ).
3. qk ‚Äî the assumed percentage(s) of people tested, defined for the each regime interval. It is
quite difficult both to estimate how much it has changed through time (e.g. in Switzerland,
testing criteria changed nearly every week during the peak of the epidemic), and its present
value (there is much uncertainty in e.g. estimating the rate of asymptomatic cases in general
population, the probability of somebody having the symptoms going to do the testing, etc.
‚Äî all these estimates affect the value of q). In a sense, q acts as a hyperparameter here ‚Äî
some ranges of its values allows for the more efficient fitting than the others.
The fitting routine consists of solving the optimisation problem of finding the minimum of the
function
N
X
F (Œ∏) =
œÅ(fi (Œ∏)2 ),
i=1

where Œ∏ = (Œ∏1 , ..., Œ∏r ) is a set of parameters which we want to estimate, N is the number of
available data points, œÅ is a loss function to reduce the influence of outliers, fi (Œ∏) is the i-th
component of the vector of residuals.

Name
Œ≤k

Œ≥
tk

Description
Infection rates (for different regimes)
Incubation rate
Removal rate
Epidemic regimes change times, days from the official start of the epidemic

Typical values
0.1‚Äì2.5
0.15‚Äì0.3
0.1‚Äì0.3
location dependent

Table 2. Free parameters to be fitted in the surrogate model

25%

% recovered

20%
15%
10%
5%
0%
Feb

Mar

Apr

May

Jun

Jul

Aug

Sep

Oct

Nov

Dec

Jan
2021

Feb

Mar

Figure 4. Simulation: percentage of recovered population in the canton of Geneva

Given a model function m(t; Œ∏) and some data points D = {(tI , DI |i = 1, .., N } one normally
defines the vector of residuals as the difference between the model prediction and the data, that
is Fi (Œ∏) = m(ti ; Œ∏) ‚àí di .
To compare the simulation outputs against real world observations, we are using the COVID19 clinical dataset, provided by the Swiss Federal Office of Public Health [9]. The epidemic
parameters obtained in the fitting step were submitted to the main simulation code, which ran
for 100 independent iterations. We used the number of hospitalizations as a reference output for
comparison purposes (we consider hospitalizations to be a subclass of R (removed) compartment,
as hospitalized patients normally do not infect anybody else). Additionally, we compare the
cumulative percentage of recovered patients in the simulation with the numbers obtained from
seroprevalence studies performed in the canton of Geneva [10]. The simulation output as the
number of the daily hospitalized cases is plotted in the Figure 2. The real hospitalizations data
in the canton of Geneva for the same time period is given in the Figure 3, compared to the
simulation values. The simulated percentage of recovered population (for which seroprevalence
is a proxy) is plotted in Figure 4.

RESULTS AND DISCUSSION
In this paper we presented a developed framework for stochastic simulation of epidemic processes
in populations of any size taking into account population density and age structure in the region
under consideration.
In the most models currently used, the entire population is considered to be homogeneous in
terms of contact rates (either constant or independent and identically distributed). With this
simplification, everyone has an equal chance of contacting anyone else. The number of infections
is proportional to the product of the number of infected and the number of susceptible individuals,
and depends on the initial rate of transmission of infection (that is, on the properties of the virus
itself) and the density of contacts between different groups.
In our model, we take into account the contact heterogeneity of the population and differences
in population density in different regions, which significantly changes the prognosis of the development of the epidemic. We also take into account that at the different stages of the epidemic,
the infectiousness rate is changing, due to different quarantine regimes and response policies.
To simulate the infection process, we have developed a new variant of the event modulated Gillespie algorithm. Our implementation supports multiple regime intervals and arbitrary functions
and distributions of epidemic parameters. It can be used to validate the theoretical models and
it has the practical application for simulation the epidemic dynamics in larger regions and the
entire countries, allowing for different levels of detail.
The simulation reproduces faithfully the initial wave of COVID-19 infections which has happened
in March-April 2020. However, even when normalized by the incidence of hospitalizations, the
age structure of simulation output does not seem to match the real data observed in the canton
of Geneva; further research is necessary to discriminate between competing hypotheses (e.g.
misdetection of cases in the younger population, age-relative differences in travel patterns, case
clusters in retirement homes, etc.)
The simulated number of recovered cases can be compared with the result of seroprevalence
studies at a particular point in time. E.g. at May 1st, 2020, the seroprevalence in the canton
was estimated to be 6.6% (95% confidence interval: 4.3%‚Äì9.4%; the simulation gives 2.9% of
recovered cases at this date. It is lower than the confidence interval estimate, which can be
explained by a number of factors outside the scope of the model (most importantly with the
number of antibodies diminishing with time, but also geographical clustering, age structure
influence, etc). However, these results can serve as a limiting point for seroprevalence estimates.
Our system allows us not only to track and predict the epidemic progression, but also to simulate
and evaluate various measures introduced to contain the spread of infection, such as limiting
mobility, partial or complete quarantine, etc. The simulation software also makes it possible to
subsequently model the effectiveness of vaccination and determine the sequence and number of
vaccinated persons required to develop population immunity or to keep the number of infected
at a certain level.

REFERENCES
[1] Wouter Van den Broeck et al. ‚ÄúThe GLEaMviz computational tool, a publicly available
software to explore realistic epidemic spreading scenarios at the global scale‚Äù. In: BMC
infectious diseases 11.1 (2011), pp. 1‚Äì14.
[2]

Romualdo Pastor-Satorras et al. ‚ÄúEpidemic processes in complex networks‚Äù. In: Reviews of
modern physics 87.3 (2015), p. 925.

[3]

Jesus R Artalejo, Antonis Economou, and Maria Jesus Lopez-Herrero. ‚ÄúThe stochastic
SEIR model before extinction: Computational approaches‚Äù. In: Applied Mathematics and
Computation 265 (2015), pp. 1026‚Äì1043.

[4]

Naoki Masuda and Luis EC Rocha. ‚ÄúA Gillespie algorithm for non-Markovian stochastic
processes‚Äù. In: SIAM Review 60.1 (2018), pp. 95‚Äì115.

[5]

Istv√°n Z Kiss, Joel C Miller, P√©ter L Simon, et al. ‚ÄúMathematics of epidemics on networks‚Äù.
In: Cham: Springer 598 (2017).

[6]

Christina Corbane and Filip Sabo. European Settlement Map from Copernicus Very High
Resolution data for reference year 2015. European Commission, Joint Research Centre
(JRC), 2019. doi: 10.2905/8BD2B792-CC33-4C11-AFD1-B8DD60B44F3B.

[7]

Kiesha Prem, Alex R Cook, and Mark Jit. ‚ÄúProjecting social contact matrices in 152
countries using contact surveys and demographic data‚Äù. In: PLoS computational biology
13.9 (2017), e1005697.

[8]

Jo√´l Mossong et al. ‚ÄúSocial contacts and mixing patterns relevant to the spread of infectious
diseases‚Äù. In: PLoS Med 5.3 (2008), e74.

[9]

Epidemiological situation in Switzerland and Liechtenstein. https://www.bag.admin.ch/
bag/en/home/krankheiten/ausbrueche-epidemien-pandemien/aktuelle-ausbruecheepidemien/novel-cov/situation-schweiz-und-international.html. Accessed: 202001-18.

[10]

Silvia Stringhini et al. ‚ÄúSeroprevalence of anti-SARS-CoV-2 IgG antibodies in Geneva,
Switzerland (SEROCoV-POP): a population-based study‚Äù. In: The Lancet (2020).

APPENDIX A
Age
0-5
5-10
10-15
15-20
20-25
25-30
30-35
35-40
40-45
45-50
50-55
55-60
60-65
65-70
70-75
75+

0-5
1.35
0.48
0.18
0.09
0.13
0.35
0.59
0.61
0.35
0.19
0.17
0.30
0.31
0.23
0.10
0.20

5-10
0.56
5.67
1.74
0.29
0.17
0.24
0.80
0.95
0.80
0.58
0.64
0.66
0.33
0.35
0.27
0.27

10-15
0.25
0.89
9.11
3.11
0.31
0.24
0.64
0.77
1.03
0.79
1.11
0.79
0.26
0.28
0.31
0.40

15-20
0.14
0.22
0.81
11.68
2.35
0.89
0.52
0.74
1.20
1.86
1.53
0.94
0.44
0.17
0.31
0.33

20-25
0.21
0.15
0.29
1.50
3.95
2.07
1.06
0.77
0.97
1.00
1.15
0.75
0.38
0.27
0.17
0.15

25-30
0.39
0.33
0.25
0.77
1.77
3.66
1.82
1.45
1.34
1.12
1.48
1.27
0.61
0.42
0.29
0.18

30-35
0.69
0.62
0.43
0.64
1.23
1.91
3.13
1.81
1.73
1.39
1.38
1.35
0.82
0.73
0.33
0.33

35-40
0.73
0.80
0.68
0.79
1.15
1.52
1.98
3.14
1.99
1.59
1.38
1.07
0.79
0.68
0.53
0.38

40-45
0.49
0.88
1.11
1.09
1.01
1.36
1.58
2.22
3.19
1.79
1.91
1.29
0.63
0.65
0.66
0.48

45-50
0.22
0.37
0.64
1.20
1.32
1.17
1.26
1.46
1.89
2.57
2.15
1.13
0.56
0.43
0.52
0.57

50-55
0.22
0.21
0.34
0.67
0.98
1.21
0.96
1.06
1.34
1.37
2.37
1.33
0.51
0.44
0.41
0.56

Table 3. A contact matrix for 16 age groups in Switzerland [7]

55-60
0.18
0.16
0.15
0.24
0.49
0.68
0.67
0.53
0.47
0.60
1.00
1.68
0.71
0.58
0.35
0.35

60-65
0.14
0.14
0.09
0.08
0.12
0.21
0.29
0.29
0.22
0.20
0.30
0.52
1.23
0.63
0.67
0.27

65-70
0.13
0.12
0.10
0.06
0.06
0.08
0.14
0.21
0.16
0.13
0.16
0.27
0.49
1.29
0.72
0.40

70-75
0.07
0.05
0.07
0.03
0.06
0.04
0.06
0.11
0.11
0.11
0.10
0.12
0.26
0.33
1.00
0.33

75+
0.04
0.05
0.07
0.03
0.06
0.04
0.06
0.05
0.06
0.12
0.12
0.11
0.12
0.17
0.32
0.56

