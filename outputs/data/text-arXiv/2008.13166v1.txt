Effectiveness of the COVID-19 Contact-Confirming Application (COCOA) Based
on a Multi-Agent Simulation

Paper: Dr*-*-****; 2020/9/1

Effectiveness of the COVID-19 Contact-Confirming Application
(COCOA) Based on a Multi-Agent Simulation
Yuto Omae∗1 , Jun Toyotani∗1 , Kazuyuki Hara∗1 , Yasuhiro Gon∗2 , Hirotaka Takahashi∗3
∗1

College of Industrial Technology, Nihon University, 1-2-1, Izumi, Narashino, Chiba, 275-8575 Japan
Nihon University School of Medicine, 30-1, Kami, Ooyaguchi, Itabashi, Tokyo, 173-8610 Japan
Graduate School of Integrative Science and Engineering, Tokyo City University, 1-28-1, Tamazutsumi, Setagaya, Tokyo 158-0087 Japan
E-mail: oomae.yuuto@nihon-u.ac.jp
[Received 00/00/00; accepted 00/00/00]
∗2

arXiv:2008.13166v1 [cs.CY] 30 Aug 2020

∗3

Abstract. As of Aug. 2020, coronavirus disease
2019 (COVID-19) is still spreading in the world. In
Japan, the Ministry of Health, Labor, and Welfare
developed “COVID-19 Contact-Confirming Application (COCOA),” which was released on Jun. 19, 2020.
By utilizing COCOA, users can know whether or not
they had contact with infected persons. If those who
had contact with infectors keep staying at home, they
may not infect those outside. However, effectiveness
decreasing the number of infectors depending on the
app’s various usage parameters is not clear. If it is
clear, we could set the objective value of the app’s usage parameters (e.g., the usage rate of the total populations) and call for installation of the app. Therefore,
we develop a multi-agent simulator that can express
COVID-19 spreading and usage of the apps, such as
COCOA. In this study, we describe the simulator and
the effectiveness of the app in various scenarios. The
result obtained in this study supports those of previously conducted studies.
Keywords: COVID-19, Contact-Confirming Application, Multi-Agent Simulation, SEIR Model

1. Introduction
As of Aug. 2020, coronavirus disease 2019 (COVID19) infection is still spreading in the world. To overcome
the spread of COVID-19, the Japanese government gave
stay at home order to its citizens from Apr. 7, 2020 to
May. 25, 2020 [1]. Consequently, the number of total infectors significantly decreased (The number of daily average infectors one week ago before the order was about
300 persons; moreover, the number of daily average infector one week later after issuing the order was about
40 persons [2].). Besides, as measures to overcome the
spreading of COVID-19, the Japanese government is distributing cloth masks, as well as supporting the sterilization of medical institutions and PCR testing [3].
In addition, the Japanese government developed
“COVID-19 Contact-Confirming Application (COCOA).” COCOA is an application that can be installed
into a smartphone, and by utilizing it, users can know

Journal of Disaster Research Vol.0 No.0, 200x

whether they had contact with infectors of COVID-19.
Hereinafter, this is called an app. The diagram of the
app is shown in Fig.1. The upside of the figure is used
to verify whether the user had contact with the infectors
of COVID-19. If the user is infected with COVID-19,
he/she registers via the button shown in the downside
of the figure. If infectors register, other users who are
not infected can know whether or not to have contact
with infectors for at least two weeks or less via the app.
To obtain this information, one is required to install the
app and turn on the bluetooth of his/her smartphone.
Moreover, it is necessary that infectors and other persons
approaching within 1 meter and over 15 minutes [4]. The
app’s privacy policy and specifications are available on
the Japanese government website [5].
The Japanese government announced that there have
been cases where COVID-19 symptoms do not appear
[6]. Roth et al. [7] reported that even if the infectors
of COVID-19 are in their incubation period, it is possible that they can infect others. Consequently, it is possible that infectors, who do not show symptoms, can infect
many persons. In general, users can know the personal information of infectors via the app. If infectors continue to
stay at home, he/she could avoid infecting others. Therefore, the following 3 points are important to overcome the
spreading of COVID-19 by utilizing the app: (1) use the
App; (2) users who know about their contact with infectors via the app stay at home, (3) infectors register that
they are infected via the app. Moreover, other countries
Users can know whether or
not they had contact with
infected persons.

An infected person
registered that he/she is an
infector.

Fig. 1. The display of the app (COCOA).

1

Y. Omae

(e.g., China, India, Israel, and so on) also have developed
similar apps [8]. However, to overcome the spreading of
COVID-19, the target values of the described 3 points are
unclear.
In the real world, we cannot strictly verify the effectiveness of the app because there are various mixed measures for overcoming the spread of COVID-19. Moreover, since human life and death are involved, we cannot conduct a control experiment in the real world owing
to infection spread and convergence. Thus, we had better conduct experiments in an artificial world, and one of
the approaches is applying multi-agent simulation (MAS).
There are numerous previously conducted studies based
on virus-spreading simulations [9–12]. However, these
studies do not target COVID-19, and we cannot verify the
app’s effectiveness.
Very recently, simulations targeting how to overcome
the spread of COVID-19 spreading have been conducted in the year 2020. For example, by applying the
susceptible-exposed-infectious-recovered (SEIR) model
to study COVID-19, Hou et al. [13] observed that a measure of decreasing contact with persons can effectively decrease the total number of infectors at peak time. Chatterjee et al. [14] also developed a SEIR model for COVID19 and conducted a simulation experiment using India as
a case study. As a result, these authors reported that the
measures of avoiding contact with persons, such as lockdown, can significantly reduce the spread of COVID-19.
These studies are beneficial. Besides, the described
SEIR model-based COVID-19 simulations [13,14] do not
involve the app’s effect. To survey the app’s effectiveness
using England as a case study, Hinch et al. [15] conducted
simulations based on a mixed method of SIR model (it is
not a SEIR model) and agent-approach simulation. They
concluded that the usage of the app by 56% of the total
population can lead to the convergence of COVID-19. Although this is an innovative result, it is difficult to verify
its reliability in the case of social simulations.
In general, the reliability of simulations is measured by
calculating the difference between the data collected in
real world and those generated from a simulation model.
In addition, Takahashi [16] pointed out that this method
is not always possible in the case of social simulation. In
the case of the COVID-19 pandemic situation, it is difficult to collect data to calculate reliability in the real world.
Therefore, we cannot measure the reliability of COVID19 spreading and the app’s effectiveness by calculating the
difference between data of the real world and simulator.
As an alternative method, Takahashi [16] recommended
the comparison of results generated from different simulation models. If different simulation models generated
similar results, then we can justify that the simulation result is reliable. Further, COVID-19 and the app, such as
COCOA, are the latest research topics of the year 2020
(COCOA developed by the Japanese government was released on Jun. 19, 2020). Therefore, simulators for verifying the effectiveness of the apps, such as COCOA, are
very few as of Aug. 2020. Thus, applying a measuring
method of reliability based on the comparison of differ2

R
S

E

Recovered

I

Susceptible Exposed Infectious

D
Death

Fig. 2. Infection transition model.

ent simulation models is difficult. In conclusion, we observe that now is the time to report numerous simulation
cases based on the effectiveness of the app for the convergence of COVID-19 for different methods. In the future, the accumulation of different case studies by various
researchers can enable the study of the measurement of
simulation reliability.
Therefore, by improving a simulator developed by
Omae et al. [17], we introduce a multi-agent simulator
that can express COVID-19 spreading and the usage of
the app, such as COCOA. To overcome the spreading of
COVID-19, we employ the following three points: (1) install and use the app; (2) users who have contact with infectors via the app stay at home; (3) infectors register that
they have been infected via the app.
Furthermore, we include three parameters for the following expression: (1’) the usage rate of the app; (2’) decreasing value of going out probability of persons who
have contact with infectors via the app; (3’) infection registration rate of infectors through the app. In this study,
we introduce the details of the developed MAS and the
app’s effectiveness of reducing the number of infectors of
COVID-19.

2. Simulator
In this section, we describe the multi-agent simulator for the spreading of the virus infectors developed by
Omae et al. [17]. Moreover, the new parameters for expressing the app embedded in the simulator are described.

2.1. Transition of infection: The SEIR model
The SEIR model is one of the methods for simulating
the spread of the virus. There are four states (S, E, I, R) in
the model [13]. Furthermore, Susceptible person (State:
S) has a possibility of being an infector by having contact
with other infectors. Exposed person (State: E) means an
incubation period. Infectious person (State: I) means an
infector of a virus. Recovered person (State: R) means
the person who has recovered and acquired immunity. In
the case of SEIR model, there have been some simulations of COVID-19 [13, 14, 18–20]. Thus, we apply the
SEIR model for the simulations of COVID-19 spreading.
We note that the basic SEIR model is in the form of an
ordinary differential equation. It can be fast simulated,
but including various parameters, such as the expression
of COCOA, agents’ job, lifestyle, and so on, is difficult.
Moreover, a mixed model of the SEIR model and MAS
has been proposed [9, 12]. This is the model of a virus
Journal of Disaster Research Vol.0 No.0, 200x

Effectiveness of the COVID-19 Contact-Confirming Application (COCOA) Based
on a Multi-Agent Simulation

that stochastically spread through the contact of agents.
In this study, we use a mixed model of the SEIR model
and MAS.
An infection transition model is depicted in Fig.2. The
arrows denote a possibility of states’ transition and give
transition probabilities. If no arrow exists, states’ transition cannot occur. Additionally, states’ transitions are
from S to E, from E to I, and from I to R or D. In the
basic SEIR model, state D does not exist. State D means
death. The MAS developed by Omae et al. [17] included
state D because they conducted a simulation to verify the
relationship between the number of dead persons and the
capacity limit of isolation wards.
Next, we explain transition probabilities. The stochastic variable for the transition of S, E, I, R, D is defined
by
P(Xt+1 |Xt ,C, T, H).
(1)
If C, T, H are omitted, then the transition probability has
the same value whatever value we assigned to the variable.
Here, Xt and Xt+1 denote the infection state of an agent at
time t and t + 1, and they are defined by
Xt , Xt+1 ∈ {S, E, I, R, D}.

(2)

Moreover, C denotes the variable for expressing contact
with agents of state I (infectors); C = 0 denotes notcontact; C = 1 means contact with agents of state I (infectors). T denotes the number of days elapsed from changing to other states (a unit is [days]). H denotes the variable
for expressing hospitalization of agents of state I (H = 0:
nonhospitalization; H = 1: hospitalization). In addition,
Eq.(1)-based transition implies that transition probabilities depend on C, T , and H. The strict meaning of contact with an agent and infectors is that they are in contact
within 1 Euclidean distance for about 10 minutes in an
artificial society.
First, the transition probability from state S to state S is
defined by
(
1,
(C = 0),
P(Xt+1 = S|Xt = S,C) =
(3)
1 − β , (C = 1),
where β denotes an infection probability of about 10 minutes (the minimum unit of time of the simulator is 10 minutes [17]). In the case in which there is no contact with
a target agent and infectors, the transition probability is
zero. Further, in the case of contact with them, the transition probability is decreased.
The transition probability from state S to state E is defined as follows:
(
0, (C = 0),
P(Xt+1 = E|Xt = S,C) =
(4)
β , (C = 1).
If a target agent had contact with infectors (C = 1), the
transition probability from state S to state E is β . Since
state S only changes to state S or E, we have that
P(Xt+1 = S|Xt = S) + P(Xt+1 = E|Xt = S) = 1
Journal of Disaster Research Vol.0 No.0, 200x

(5)

is satisfied for all conditions of C, T, H.
The transition probability from state E to state E is defined as follows:
(
0, (T = TE→I ),
P(Xt+1 = E|Xt = E, T ) =
(6)
1, (T 6= TE→I ),
while the transition probability from state E to state I is
defined as follows:
(
0, (T 6= TE→I ),
P(Xt+1 = I|Xt = E, T ) =
(7)
1, (T = TE→I ),
where TE→I denotes the period of required transition time
[day] (incubation period of virus). If T reaches TE→I , the
state of an agent changes from state E to state I. In the
presence of other conditions, the target agent remains in
state E. Since state E only changes to state E or I, we
obtain that
P(Xt+1 = E|Xt = E) + P(Xt+1 = I|Xt = E) = 1

(8)

is satisfied for all conditions of C, T, H.
The transition probability from state I to state I is defined by
(
1, (T 6= TI→RD ),
(9)
P(Xt+1 = I|Xt = I, T ) =
0, (T = TI→RD );
the transition probability from state I to state R is defined
by

0,



1 − γ ,
0
P(Xt+1 = R|Xt = I, T, H) =
0,



1 − γ1 ,

(T
(T
(T
(T

6= TI→RD ∧ H = 0),
= TI→RD ∧ H = 0),
6= TI→RD ∧ H = 1),
= TI→RD ∧ H = 1).
(10)

In addition, the transition probability from state I to state
D is defined by

0,



γ
0
P(Xt+1 = D|Xt = I, T, H) =

0,



γ1 ,

(T
(T
(T
(T

6= TI→RD ∧ H = 0),
= TI→RD ∧ H = 0),
(11)
6= TI→RD ∧ H = 1),
= TI→RD ∧ H = 1),

where TI→RD denotes the period of required transition
time [day] (infection period of virus). If T , which is the
number of days elapsed from changing to state I, reaches
TI→RD , then the state of an agent changes from state I to
state R or D. In the case in which other conditions are
present, the target agent maintains state I. Additionally, γ0
represents the fatality rate in the case of nonhospitalization (H = 0), while γ1 represents the fatality rate in the
case of hospitalization (H = 1). Further, the fatality rate
depends on the hospitalization of agents. In general, because the fatality rate in the case of nonhospitalization has
higher value more than that of hospitalization, we recommend
γ0 > γ1
(12)
3

Y. Omae

Table 1. The simulator’s parameters of a previous study [17]

Variables
parameters
values
e1
Max simulation period
days
e2
The number of houses
numbers
e3
The number of initial infectors
persons
e4
Locations of companies
XY
e5
Locations of shops
XY
e6
Locations of schools
XY
e7
Capacity limitation of isolation wards beds
e8
Basic going out probability
prob.
e9
Going out time
time
e10 Stay time of facility
time
e11 Probability of going to a hospital
prob.
e12 Decreasing value of e8 during state I prob.
β
Infection probability
prob.
γ0
Fatality rate (nonhospitalization)
prob.
γ1
Fatality rate (hospitalization)
prob.
TE→I Incubation periods (from E to I)
days
TI→RD Infection periods (from I to R or D) days
as the fatality rates. Since state I only changes to state I,
R, or D, the following equation

∑

P(Xt+1 = x|Xt = I) = 1

(13)

x∈{I,R,D}

is satisfied for all conditions of C, T, H.
The state R denotes that the agents acquired immunity,
and the state D means death. Therefore, the following
equations are satisfied:
P(Xt+1 = R|Xt = R) = 1,

(14)

P(Xt+1 = D|Xt = D) = 1.

(15)

The described transition probabilities were proposed by
Omae et al. [17]. In this study, we also use them for infection simulations.

2.2. Simulations flow
First, we describe parameters of agents, simulation environment, and their initial conditions. The agents live in
a 2-dimensional (2D) space (x and y axes) with minimum
and maximum values 0 and 1000 as an artificial society.
The agents’ locations are expressed by utilizing 2D real
numbers from 0 to 1000. The parameters for expressing
them are shown in Table 1. Additionally, the max simulation period is denoted by e1 , and the number of houses
is denoted by e2 . We assume that 3 persons (an office
worker, homemaker, and student) live in a house. Therefore, the total number of populations in an artificial society is 3 × e2 . Next, the number of initial infectors (agents
of initial state I) is denoted by e3 . The state of e3 persons
out of 3e2 persons becomes state I (infection). Besides,
the state of other persons becomes state S. Afterward,
(x, y) coordinates of the agents’ houses and destination
facility locations (company, shop, or school) are decided.
A coordinate of a house means the location that agents
live daily, and its number is e2 . The destination facility
location means the place an individual goes almost daily.
4

It is possible that agents may not go there. The facilities
for office workers, homemakers, and students are company, shop, and school, respectively. In a society, there
are numerous companies, shops, and schools. Therefore,
we choose many (x, y) coordinates as variables of e{4,5,6} .
In the case of office workers, the company to choose is
decided by a uniform random number at simulation start
timing. As with office workers, destination facility locations of homemakers and students are selected. Further,
the destination facility location is one per agent. After the
decision, they do not change.
Moreover, it is possible that agents of state I do not go
to the destination facility, such as a company or school,
while they go to a hospital to be hospitalized. However,
if the capacity limit of isolation wards is reached, they
may not be hospitalized even if the agent is an infector.
Consequently, the capacity limit of isolation wards denoted by e7 is decided. Moreover, we set parameters of
β , γ0 , γ1 , TE→I , TI→RD described in Subsection 2.1.
After setting the initial parameters, we start our simulation. Further, there are “1-day process” and “1-step
process”. We remark that 1-day process means that the
process is conducted at the start timing of a day. In this
process, whether or not agents go to the destination facility location (company, shop, and school) is decided based
on the basic going out probability e8 . This value is different for each of the agents. If the agents go to the destination facility location, the going out time e9 and stay time
of facility e10 are decided. However, the agents of state I
go to hospital depending on the “probability of going to
a hospital” e11 . If the capacity limit of isolation wards
is not exceeded, the agents of state I are hospitalized. In
this case, the basic going out probability e8 of the agents
becomes zero. However, if the capacity limit of isolation
wards is exceeded, the agents of state I are not hospitalized. In this case, agents of state I are not isolated in a
hospital. Therefore, it is possible that they can go outside
even if they are infected. Then, since they may feel sick,
the basic going out probability e8 is reduced by “decreasing value during state I” e12 .
Besides, the 1-step process means that the process is
repeatedly conducted at each minimum unit of time of a
simulation. In our simulator, the minimum unit of time
is 10 minutes. Therefore, 1 step is equal to 10 minutes.
Agents who decide to go to the facility by a 1-day process
can go out, whereas other agents stay at home. Thus, office workers, homemakers, and students go to company,
shop, and school, respectively. Locations of companies,
shops, and schools are respectively denoted by e{4,5,6} ,
and their coordinates are destinations of agents. The going out time to destination is denoted by e9 ; at this time,
agents go there in the available shortest Euclidian distance. After arriving at the destination, agents stay there
based on stay time of facility e10 . Afterward, agents go
back to their homes.
The described process is called a “1-step process.”
Since 1 step is 10 minutes, 1 day is equal to 144 steps
(24 hours). After completing 144 steps, another day is repeatedly started. When the max simulation period e1 is
Journal of Disaster Research Vol.0 No.0, 200x

Effectiveness of the COVID-19 Contact-Confirming Application (COCOA) Based
on a Multi-Agent Simulation

are all satisfied, the app of agent j notifies about having
contact with an infector or infectors. Consequently, agent
j can know that “he/she had contact with an infected person.” Therefore, the basic going out probability of agent
j is reduced by app parameter p2app . The higher the p1app ,
the more likely conditions 1 and 3 are satisfied. Moreover,
the higher the p3app , the more likely condition 2 is satisfied. Persons who come in contact with infectors should
not be allowed to go out. Besides, if they do not properly use the app, they may not be aware of having contact
with an infector or infectors. Thus, if each element of the
app parameters p app is increased, then we believe that the
number of infectors could be decreased.
In an artificial society, the reducing period of going out
probability of agent j who got contact information via the
app is 2 weeks. This is because the contact recording period of the real app developed by the Japanese government
in the real world is 2 weeks [5]. Moreover, the real app
notifies about contact information when a person has contact with infectors for at least 15 minutes [5]. Further, our
simulator’s minimum unit time is 10 minutes. Therefore,
if agents have contact with infectors for at least 10 minutes, then the app notifies them concerning this.

Contact

Infector

App
App

Agent i
State: I

Agent j
State: S, E, I, R

Start
Condition 1:
Does the agent i use app?

No
Yes
No
Yes
No
Yes

Condition 2:
Does the agent i register
that I’m infected person?
Condition 3:
Does the agent j use app?

The app of the agent j
notifies being contact
with infectors.

3. Experiment

End
Fig. 3. A notification process of the app in the case of contact with infectors and other agents.

reached, a simulation is completed.

2.3. Contact-confirming application in MAS
This study aims to verify the effectiveness of COCOA
[4] by applying MAS. Therefore, we establish parameters
to incorporate the app into the existing simulator developed by Omae et al. [17] described in Subsections 2.1 and
2.2. The newly included parameter is
p app = (p1app , p2app , p3app ),

(16)

and we call it “app parameter” because it is used to express COCOA. Here, p1app denotes the usage rate of the
app for all the population; p2app denotes the decreasing
value of going out probability of agents that received notification of their contact with infectors from the app (infectors mean agents of state I); p3app denotes the infection
registration rate of infectors to the app.
A notification process of the app, such as COCOA, to
an agent that came in contact with infectors is illustrated
in Fig.3. As depicted in Fig.3, agent i is of state I (infector) and agent j is the person that received notification of
having contact with infectors from the app. Condition 1
checks whether or not agent i uses the app. If condition 1
is satisfied, condition 2 checks whether or not agent i registered that he/she is an infector. Conditions 1 and 2 are
conditional branches of the infectors’ side. If condition 2
is true, then condition 3 checks whether or not the agent
j utilizes the app. Furthermore, if conditions 1, 2, and 3
Journal of Disaster Research Vol.0 No.0, 200x

3.1. Experimental objectives and conditions
We examine that the app can effectively reduce the
number of infectors. Therefore, we conduct simulations
to verify the effectiveness of the app, such as COCOA.
Besides, our simulations’ conditions are presented in Table 2. The max simulation period e1 is 45 days, and the
number of houses e2 is 333 (the total population is 999).
The number of initial infectors e3 is 10 persons. Further, the basic going out probability e8 , going out time
e9 , and stay time of facility e10 of each agent are decided
by uniform random number or Gaussian random number.
A method for giving parameters of going out by applying
probability distributions is based on previously conducted
studies of mixed models of MAS and SEIR [12, 17]. The
number of companies, shops, and schools is 3 facilities
(the number of total facilities is 9).
Next, we describe the parameters of the infection transition. We recall that the minimum unit of time of the
simulator is 10 minutes. Therefore, it is desirable to set
an actual COVID-19 infection probability β for 10 minutes. However, an actual COVID-19 infection probability
is unclear. Consequently, we find the infection probability
that persons from 5% to 10% of the total population become infectors in 45 days when all agents do not use the
app. For this result, we set β = 0.006% as the infection
probability.
Afterward, we set parameters TE→I and TI→RD .
Ohashi’s assumption [21] states that the average incubation period is 5 days and the average infection period is
10 days. Parameters TE→I and TI→RD were determined by
adding ±2 days to Ohashi’s assumption [21]. Thus, the
incubation periods TE→I are 3, 5, and 7 days. The infec5

Y. Omae

Table 2. Simulation conditions

Variables
e1
e2
e3
e4
e5
e6
e7
e8
e8
e8
e9
e9
e9
e10
e10
e10
e11
e12
β
γ0
γ1
TE→I
TI→RD
p1app
p2app
p3app

parameters
Max simulation period
The number of houses
The number of initial infectors
Facility locations (companies)
Facility locations (shops)
Facility locations (schools)
Capacity limitation of isolation wards
Basic going out probability (office worker)
Basic going out probability (homemaker)
Basic going out probability (student)
Going out time (office worker)
Going out time (homemaker)
Going out time (student)
Stay time of facility (office worker)
Stay time of facility (homemaker)
Stay time of facility (student)
Probability of going to a hospital
Decreasing value of e8 during state I
Infection probability
Fatality rate (nonhospitalization)
Fatality rate (hospitalization)
Incubation periods (from E to I)
Infection periods (from I to R, D)
Usage rate of the app
DVP* during contact notification from the app
Registration rate of infected persons

tion periods TI→RD are 8, 10, and 12 days. Parameters
TE→I and TI→RD are decided by uniform random number
from the above dates for each agent. Since we consider
that agents in state I are sick, their going out probability decreases. We set 30% as the decreasing value of
going out probability of state I’s agents e12 . To confirm
the effectiveness of reducing the number of infectors of
only the App, there are no hospitals in an artificial society. Therefore, we set 0 as the capacity limit of isolation
wards e7 , and this implies that agents cannot be admitted
to hospitals. As a result, the probability of going to a hospital e11 and fatality rate (hospitalization) γ1 in Table 2
are empty. Next, we consider fatality rate (nonhospitalization) γ0 . For COVID-19’s fatality rate, the Mitsubishi
Research Institute [22] reported that the fatality rate of
countries that were medically collapse is over 10%. Even
though in other cases, the fatality rate is about 1% (e.g.,
Italy: 14.3%, Spain: 11.3%, Iceland: 0.6%, Singapore:
1.1%, as of Apr. 2020 [22]. In the case of Italy, the
death of out-of-hospital increased because of the COVID19 outbreak according to Baldi et al. [23]). Therefore, we
set 10% as fatality rate (nonhospitalization) γ0 .
Next, we describe the app’s parameters p app defined by
Eq.(16). Our study objective is to verify the effectiveness of the app. Therefore, we set many combinations
as the app parameters. As demonstrated in Table 2, the
6

values
45 [day]
333 [houses] (999 [ppl])
10 [ppl]
3 places: (x, y) = (200, 800), (500, 500), (800, 100)
3 places: (x, y) = (200, 500), (500, 100), (800, 800)
3 places: (x, y) = (200, 100), (500, 800), (800, 500)
0 [beds]
99.0 ∼ 100.0 [%]
50.0 ∼ 100.0 [%]
99.0 ∼ 100.0 [%]
8 : 30 ± 1 : 30
10 : 30 ± 1 : 30
8 : 30 ± 1 : 30
6:00 ∼ 8:00
0:10 ∼ 0:30
5:00 ∼ 6:00
- [%]
30.0 [%]
0.006 [%]
10.0 [%]
- [%]
3, 5, 7 [day]
8, 10, 12 [day]
0, 20, · · · , 100 [%]
0, 20, · · · , 100 [%]
0, 20, · · · , 100 [%]
a ∼ b: uniform random number from a to b.
a ± b: gaussian random number of mean a and std. b.
DVP*: Decreasing value of going out probability
values of p1app , p2app and p3app are 0%, 20%, · · · , 100%, respectively. Since the value of a parameter is 6 patterns,
all parameters’ combination is 6 × 6 × 6 = 216 patterns.
Additionally, because the simulations of infection spread
are stochastic events, it is desirable to conduct simulation multiple times per scenario and calculate the average
value of the total infectors. If this is not the case, the consequences can be influenced by chance. Therefore, we
conduct simulations of about 30 times per scenario while
changing the random seeds. In other words, the total number of conducted simulation for 45 days is 216 scenarios
× 30 random seeds = 6480 times.

3.2. Results and discussions: at the end of simulations
Now, we checked the number of total infectors of the
scenario of all agents who do not use the app. In the results generated by random seed of 30 patterns, there were
2 cases in which the infection did not spread even though
the app was not used (the total number of infectors at
the end of the simulation is below 30). Since the random seeds generating the above results are inappropriate
to verify the effectiveness of the app, we excluded them
from our analysis.
Thereafter, we calculated the total number of infectors.
The total number of infectors means the sum value of
Journal of Disaster Research Vol.0 No.0, 200x

Effectiveness of the COVID-19 Contact-Confirming Application (COCOA) Based
on a Multi-Agent Simulation

less than 65 × (2/3) = 43.3 persons. From the result depicted in Fig.4, the scenarios that the total number of infectors is less than 43.3 persons are as follows:

{1,2,3}

Fig. 4. The relationship between the app parameters papp
and the number of total infectors [ppl] at the end of the 45
days simulations (in the case of p3app = 100%). The higher
the number of infectors, the redder. DVP*: Decreasing value
of going out probability.

state E, I, R, and D. Further, the total number of infectors at the end of the 45 days simulation of the scenarios
of all infectors who registered that they are infected (i.e.,
p3app = 100%) is shown in Fig.4. The vertical and hori{1,2}

zontal axes denotes the respective app parameters papp .
If either p1app or p2app is 0, it implies that the app does not
work. Therefore, the number of infectors in row and col{1,2}
umn of papp = 0% has the same value (65 persons). Additionally, this number is less than 65 if the app is effective. As illustrated in Fig.4, as p1app and p2app increase, the
total number of infectors decreases.
From the result presented in Fig.4, we consider the target value of the app usage strategy required to halve the
number of infectors compared with when the app is not
used. Since the total number of infectors is 65 persons
in the case in which the app is not used, the standard
value is less than 65 × (1/2) = 32.5 persons. As shown
in Fig.4, there are no cases of the number of infectors less
than 32.5 persons in the result of the usage rate of the app
(p1app = 20%). Therefore, the usage rate of app p1app has to
be at least 40%. In the case in which 40% ≥ p1app , the scenarios that the total number of infectors is less than 32.5
persons are as follows:
(p1app , p2app , p3app ) = (40%, 60%, 100%), .

(17)

(p1app , p2app , p3app )
(p1app , p2app , p3app )

= (60%, 40%, 100%), .

(18)

= (100%, 20%, 100%).

(19)

For all populations, it is difficult to reach the usage rate (100%) of the app p1app . Therefore, p app =
(40%, 60%, 100%) or (60%, 40%, 100%) is a realistic target value. We confirmed that the total number of infectors
become under half value If about half of agents use the
App and about half of the frequency of going to the facility.
Next, we consider the target value for reducing the
number of infectors to about 2/3. The standard value is

Journal of Disaster Research Vol.0 No.0, 200x

(p1app , p2app , p3app ) = (20%, 80%, 100%), .

(20)

(p1app , p2app , p3app )
(p1app , p2app , p3app )

= (40%, 40%, 100%), .

(21)

= (60%, 20%, 100%). .

(22)

The first case p app = (20%, 80%, 100%) means that if
the usage rate of the app is low, the agents who had being in contact with infectors extremely reduce their going
out. The second and third cases p app = (40%, 40%, 100%)
and (60%, 20%, 100%) are the relaxation of Eq.(17)–(19),
which can reduce the number of infectors by half. As of
Aug. 2020, the Japanese population download rate of COCOA is about 10% [24]. Therefore, the usage rate of app
p1app = 20% is criteria that will be reached in the near future. Consequently, the most important scenario is the
first case p app = (20%, 80%, 100%).
Moreover, the above results are the scenarios in which
all infectors who use the app registered that they are infected (p3app = 100%). COCOA does not leak infection
information, but infectors may be afraid of their infection
information being leaked. As a result of this, it is possible that infectors feel unwilling to register when they
are infected. To verify this scenario, we changed p3app
from 20% to 80% in an increment of 20%. The results
obtained by this procedure are shown in Fig.5. Besides,
we note that Figs.5 (1), (2), (3), and (4) are the results of
p3app = 20%, 40%, 60%, and 80%, respectively. Moreover,
as p3app increases, the total number of infectors decreases.
In the case of infection registration rate p3app = 20%, to
reduce the total number of infectors to half, the usage rate
of the app p1app = 100% is required. This is a very difficult
condition. Moreover, in the case of p3app = 40%, 60%, if
the usage rate of app p1app is at least 60% or more, then
the scenarios that reduce the total number of infectors to
half appears. Thus, because rapidly increasing the app’s
usage rate is difficult, it is important to register infection
information.

3.3. Results of discussions: the relationship between app parameter p app and time series
trends of the total number of infectors
In Subsection 3.2, we discussed the relationship between the app parameters p app and the number of infectors at the end of the 45 days simulation. This discussion
is important, but it is unclear whether or not the number
of infectors increases after the max simulation period. To
clarify this viewpoint, it is necessary to check the time
series data of the number of infectors in each scenario.
However, considering that we simulated many scenarios,
it is difficult to show all the time series data. Therefore,
we calculate the index to determine whether the number
of infectors has exponential, linear, or logarithmic growth.
Afterward, we discuss how to converge infection spread
based on this index.
Now, the amount of the difference of the total number
7

Y. Omae

(1)

(2)

(3)

(4)

{1,2,3}

Fig. 5. The relationship between app parameters papp and the number total of infectors [ppl] at the end of the 45 days simulations
(in the case of p3app = 20, · · · , 80%). The higher the number of infectors, the redder. DVP*: Decreasing value of going out probability.

of infectors defined by
∆NIP (t; papp ) = NIP (t; papp ) − NIP (t − 1; papp )

(23)

is calculated, where NIP (t; p app ) denotes the total number
of infectors in t days of scenario using the app parameter p app , and ∆NIP (t; p app ) denotes the differential value.
Moreover, we develop a linear regression model with the
following intercept:
0
∆NIP
(t; p app ) = wt + b,

. . . . . . . . (24)

where
(w, b) = Argminw0 ,b0

∑

((w0t + b0 ) − ∆NIP (t; p app ))2 .

(25)

t∈Tmax

0 (t; p
Here, ∆NIP
app ) denotes an estimated value of
∆NIP (t; p app ), and Tmax denotes the max simulation period (Tmax = 45 days). Then, the coefficient of linear regression model w is the index for expressing time series
trend for the total number of infectors NIP (t; p app ). The
meaning of the index is shown in Fig.6. The upper side in
Fig.6 demonstrates diagram of NIP (t; p app ). The left and
center or right sides of Fig.6 demonstrate exponential and
linear or logarithmic growth, respectively. The underside
0 (t; p
in Fig.6 represents regression value ∆NIP
app ) calculated by utilizing Eq.(24). As depicted in Fig.6, w > 0,
w = 0 or w < 0 represents exponential, linear or logarith-

8

mic growth, respectively. Therefore, since the exponential
growth of the number of infectors (w > 0) causes infection pandemic, it should be avoided. However, because
the logarithmic growth (w < 0) leads to the convergence
of infection, it is a desirable case.
We calculate coefficient w of all the scenarios using the
app parameters p app . The results are shown in Fig.7. The
vertical and horizontal axes represent w and scenarios, respectively. The three numbers of the horizontal axis are
{1,2,3}
app parameters papp from bottom to up. Figs.7(1), (2),
(3), (4), and (5) denote coefficient w of the usage rate
of app p1app = 20%, 40%, 60%, 80%, and 100%, respectively.
First, we discuss the case of p1app = 20% shown in Fig.7
(1). In this case, if p1app = 20% and p2app is 40% or less,
the signs of coefficient w are positive. It illustrates an
exponential growth. In contrast, if p1app = 20% and p2app
is 60% or more, coefficient w is usually approximately 0.
Therefore, to avoid infection pandemic during the periods
of low app usage rate, it is important to keep p2app at 60%
or more.
Second, we discuss the case of p1app = 40% shown in
Fig.7 (2). In this case, the exponential, linear, and logarithmic growth are mixed. In the case of p1app = 40% and
p2app = 20%, there is an exponential or linear growth. In

Journal of Disaster Research Vol.0 No.0, 200x

Effectiveness of the COVID-19 Contact-Confirming Application (COCOA) Based
on a Multi-Agent Simulation

Exponential
growth

t

Linear
growth

Logarithmic
growth

t

t

Differential value & regression model

t

t

t

Fig. 6. The relationship between coefficient w and the total
number of infectors NIP (t; papp )

addition, if p2app is 40% or more, the growth of infectors is
almost logarithmic. Thus, when the usage rate of app p1app
and decreasing value of going out p2app are 40% or more,
scenarios of convergence of infection appear. However,
if p1app and p2app are 40% or more and p3app is 20%, then
coefficient w is approximately 0. In this case, the number
of infectors keeps increasing in proportion to time. Therefore, it is important to call on infected persons to register
and increase p3app .
Finally, we discuss the case of p1app = 60%, 80%, and
100% shown in Fig.7 (3)–(5). In this case, the growth of
the total number of infectors is almost logarithmic. Therefore, if about 60% or more of all population uses the app,
then the infection pandemic may converge. As of 2019
in Japan, the rate of spread of smartphone is 83.4% [25].
Therefore, if about 70% of smartphone users do not use
the app, it is difficult to reach the usage rate of the app,
which is about 60% of all the population. It is difficult to
achieve this condition. Thus, knowing the condition for
overcoming the spread of COVID-19 is important.
Besides, the result of overcoming COVID-19 by applying the usage rate of the app, which is 60% or more, is
similar to those of Hinch et al. [15] and Kurita et al. [26].
To overcome the spread of COVID-19, Hinch et al. [15]
reported that the usage rate of the app, i.e., about 56%
of the target populations is required. Table 1 of Kurita et
al. [26] shows that the number of COVID-19 reproductions is less than 1.0 in many cases when the usage rate of
the app is about 50% or more. This means that the spread
of COVID-19 converges. Therefore, our study supports
the results of Hinch [15] and Kurita [26]. It is noteworthy
that similar results were obtained using various methods
for verifying the effectiveness of the app, such as COCOA.

4. Conclusion
In this study, we utilized the MAS to verify the effectiveness of an app, such as COCOA. As basic trends, as
app parameter p app increases, the total number of infectors decreases (see Figs.4 and 5). Therefore, the usage
rate of the app, decreasing value of the going out probJournal of Disaster Research Vol.0 No.0, 200x

Fig. 7. Coefficient w of each scenario. The three numbers in
{1,2,3}
the horizontal axis are app parameters papp
from bottom
to up.

ability of persons who had contact with infectors, and
the registration rate of infectors can effectively reduce the
spread of COVID-19. Moreover, if the usage rate of the
app is 60% or more, the time series trends of the number
of infectors in many scenarios have logarithmic growth
(see Fig.7). Our study’s result supports some previously

9

Y. Omae

conducted studies [15, 26]. In the case of the simulation
task that cannot verify reliability in the real world, the accumulation and comparison of case studies using various
simulation methods is important. Thus, this study’s result
is beneficial.
As of Aug. 7, 2020, the installation rate of the COCOA of all the Japanese population is about 10% [24].
Besides, since one is required to always turn on his/her
smartphone’s bluetooth, the actual usage rate of the app
will be lower than the installation rate. As of Aug. 2020
in Japan, it is very important to call on everyone to install COCOA. We observed that one of the reasons that
many peoples do not install COCOA is because they do
not know its effectiveness in the reduction of infectors.
To solve this problem, it is very important that researchers
report the effectiveness of this app even if the simulation
environment is performed in an artificial society. Moreover, we hope that the accumulation of case studies, such
as our study, can lead to an increase in the usage rate of
the app.
Besides, this study reported the effectiveness of only
the app. As mentioned in Section 2, our simulator can include the capacity limit of isolation wards. In our future
studies, we will report the effectiveness of multiple measures, such as mixing the app and capacity limit of isolation wards to overcome the spread of COVID-19. Finally,
we will announce the effectiveness of the app and other
measures to everyone and request them to install and use
the App. We believe that apply consistent efforts can help
us to overcome the spread of COVID-19.
References:
[1] The Japanese government, “Basic policies for novel coronavirus disease control by the Government of Japan (Summary)” https://corona.go.jp/en/news/pdf/basic_
policy_20200531.pdf [accessed Aug. 19, 2020]
[2] Ministry of Health, Labor, and Welfare of the Japanese government,
“Open data of the number of infectors in Japan” https://www.
mhlw.go.jp/content/pcr_positive_daily.csv [accessed Aug. 19, 2020]
[3] Ministry of Health, Labor, and Welfare of the Japanese government, “Emergency response measures of COVID-19 spread”
https://www.mhlw.go.jp/content/10900000/
000612097.pdf [accessed Aug. 19, 2020]
[4] Ministry of Health, Labor, and Welfare of the Japanese government
“Request to install the COVID-19 Contact-Confirming Application” https://www.mhlw.go.jp/content/10900000/
000647649.pdf [accessed Aug. 19, 2020]
[5] COVID-19 Infection Control Team of the Japanese government “Contact Confirmation Application Privacy Policy”
https://www.mhlw.go.jp/stf/seisakunitsuite/
english_pp_00032.html [accessed Aug. 19, 2020]
[6] Ministry of Health, Labor, and Welfare of the Japanese government “Occurring of subclinical pathogen carrier of COVID19” https://www.mhlw.go.jp/stf/newpage_09273.
html [accessed Aug. 19, 2020]
[7] C. Rothe et al., “Transmission of 2019-nCoV infection from an
asymptomatic contact in Germany,” N. Engl. J. Med., Vol.382,
No.10, pp.970-971, Mar. 2020.
[8] COVID-19 Infection Control Team of the Japanese government, “Contact-confirming application trends in each country,”
https://cio.go.jp/sites/default/files/
uploads/documents/techteam_20200508_02.pdf
[accessed Aug. 19, 2020]
[9] D. Chumachenko, V. Dobriak, M. Mazorchuk, I. Meniailov, and
K. Bazilevych, “On agent-based approach to influenza and acute
respiratory virus infection simulation,” The 14th Int. Conf. on
Adv. Trends in Radioelecrtronics, Telecommun, and Comput. Eng.,
Slavske, Ukraine, 2018, pp.192-195.

10

[10] F. Yang, Q. Yang, X. Liu, and P. Wang, “SIS evolutionary game
model and multi-agent simulation of an infectious disease emergency,” Technol. and Health Care, Vol.23, No.s2, pp.S603-S613,
2015.
[11] J. B. Dunham, “An agent-based spatially explicit epidemiological
model in MASON,” J. Artif. Soc. Social Simul., Vol.9, No.1, Jan.
2005.
[12] H. Hirose, “Pandemic simulations by MADE: A combination of
multi-agent and differential equations, with Novel Influenza A
(H1N1) Case,” Inf., Vol.16, No.7(B), pp.5365-5389, July 2013.
[13] C. Hou, J. Chen, Y. Zhou, L. Hua, J. Yuan, S. He, and J. Zhang, “The
effectiveness of quarantine of Wuhan City against the Corona Virus
Disease 2019 (COVID-19): A well-mixed SEIR model analysis,” J.
Med. Virology, Vol.92, pp.841-848, Mar. 2020.
[14] K. Chatterjee, K. Chatterjee, A. Kumar, and S. Shankar, “Healthcare impact of COVID-19 epidemic in India: A stochastic mathematical model,” Med. J. Armed Forces India, Vol.76, No.2, pp.147155, 2020.
[15] R. Hinch, W. Probert, A. Nurtay, M. Kendall, C.
Wymant, M. Hall, and C. Fraser, “Effective configurations of a digital contact tracing app: A report to NHSX,”
https://045.medsci.ox.ac.uk/files/files/
report-effective-app-configurations.pdf
[accessed Aug. 19, 2020]
[16] S. Takahashi, “State-of-the-art of social system research 3 -methods
of evaluation and analysis (1)- resolutions of models and validation,” J. Soc. Instrum. and Control Engineers, Vol.52, No.7, pp.582587, 2013.
[17] Y. Omae, J. Toyotani, K. Hara, and H. Takahashi, “A prediction
method for viral disease outbreak using a multi-agent simulation
including capacity limitation for isolation wards and stay-at-home
orders,” J. Jpn. Soc. Fuzzy Theory and Intell. Inform., (Accepted
paper, 2020).
[18] Z. Yang et al., “Modified SEIR and AI prediction of the epidemics
trend of COVID-19 in China under public health interventions,” J.
Thorac. Dis., Vol.12, No.3, pp.165-174, Feb. 2020.
[19] S. He, Y. Peng, and K. Sun, “SEIR modeling of the COVID-19 and
its dynamics,” Nonlinear Dyn., pp.1-14, Jun. 2020.
[20] S. Annas, M. I. Pratama, M. Rifandi, W. Sanusi, and S. Side,
“Stability analysis and numerical simulation of SEIR model for
pandemic COVID-19 spread in Indonesia,” Chaos Soliton. Fract.,
Vol.139, 110072, Jul. 2020.
[21] J. Ohashi, “Epidemic prediction of COVID-19 infection (Apr. 11, 2020), the University of Tokyo,” http:
//www.bs.s.u-tokyo.ac.jp/content/files/
covid/COVID-19_SEIRmodel_full_ver4.1.pdf
[accessed Aug. 19, 2020]
[22] Mitsubishi Research Institute, “COVID-19 policy analysis report 3: Each country’s infection status from the analysis of lethality,” https://www.mri.co.jp/knowledge/
column/20200423.html [accessed Aug. 19, 2020]
[23] E. Baldi, G. M. Sechi, C. Mare, F. Canevari, A. Brancaglione,
R. Primi, and G. Beretta, “Out-of-hospital cardiac arrest during
the Covid-19 outbreak in Italy,” N. Engl. J. Med., Vol.383, No.5,
pp.496-498, Jul. 2020.
[24] Ministry of Health, Labor and Welfare of the Japanese government, “COVID-19 Contact-Confirming Application (COCOA),”
https://www.mhlw.go.jp/stf/seisakunitsuite/
bunya/cocoa_00138.html [accessed Aug. 19, 2020]
[25] Ministry of Internal Affairs and Communications of the
Japanese government, “Communications Usage Trend Survey,” https://www.soumu.go.jp/johotsusintokei/
statistics/data/200529_1.pdf [accessed Aug. 19,
2020]
[26] J. Kurita, T. Sugawara, and Y. Ohkusa, “Effectiveness of COCOA, a COVID-19 contact notification application, in Japan,”
(medRxiv, 2020) https://doi.org/10.1101/2020.07.
11.20151597 [accessed Aug. 19, 2020]

Journal of Disaster Research Vol.0 No.0, 200x

