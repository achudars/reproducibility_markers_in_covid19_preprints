1

Adaptive Methods for Short-Term Electricity Load
Forecasting During COVID-19 Lockdown in France

30000

Index Terms—Time series, forecasting, electricity demand,
model adaptation, COVID-19

50000

70000

wind speed) or tariff options as inputs and are then trained
on a large set of historical data (usually 3 to 5 years). A
good overview of load forecasting practices has been given by
the Global Energy Forecasting Competition (GEFCOM) 2012
[5]. Popular algorithms include gradient boosting machines
[6], neural networks [7], [8] or Generalized Additive Models
(GAM) [9], [10], [11]. These semi-parametric models are very
attractive to electric utilities as they combine the flexibility
of fully nonparametric models, the simplicity of multiple
regression model and are computationally efficient to scale
with big data [12]. The main French electricity provider, EDF
(Électricit de France) uses GAM as their lead forecasting tool.

Load

Abstract—The coronavirus disease 2019 (COVID-19) pandemic
has urged many governments in the world to enforce a strict
lockdown where all nonessential businesses are closed and citizens
are ordered to stay at home. One of the consequences of this
policy is a significant change in electricity consumption patterns.
Since load forecasting models rely on calendar or meteorological
information and are trained on historical data, they fail to capture
the significant break caused by the lockdown and have exhibited
poor performances since the beginning of the pandemic. This
makes the scheduling of the electricity production challenging,
and has a high cost for both electricity producers and grid
operators. In this paper we introduce adaptive generalized
additive models using Kalman filters and fine-tuning to adjust
to new electricity consumption patterns. Additionally, knowledge
from the lockdown in Italy is transferred to anticipate the change
of behavior in France. The proposed methods are applied to
forecast the electricity demand during the French lockdown
period, where they demonstrate their ability to significantly
reduce prediction errors compared to traditional models. Finally
expert aggregation is used to leverage the specificities of each
predictions and enhance results even further.

* The first two authors have contributed equally to this work.
D. Obst (david.obst@edf.fr), J. de Vilmarest (joseph.de-vilmarest@edf.fr)
and Y. Goude (yannig.goude@edf.fr) are with Électricité de France R&D.

20000

CCURATE electricity load forecasting is of paramount
importance for the balancing of the electricity grid, since
they are the main inputs of the production planning at different
horizons [1] and storage capacities are still limited regarding
the consumption needs. Load forecasting is performed at different horizons of time, ranging from intra-day (10 minutes to
24 hours ahead) to daily, weekly, monthly or even a few years
in advance for industrial needs covering production planning,
demand response, grid management, electricity trading, risk
management, optimization of production units maintenance
and commercialization.
The field has been thoroughly studied the past decades,
especially by the time series, statistics and machine learning
communities. Time series approaches are very efficient for
very-short term forecasts (typically less than 24 hours ahead).
They rely on auto-regressive moving-average (ARIMA) models [2] or functional approaches [3], [4] exploiting daily and
weekly patterns in the electricity load data. Statistical and
machine learning models are usually stronger for short and
mid-term predictions (more than 1 day ahead). They use
calendar characteristics (such as the time of the year, day of
the week...) as well as meteorological effects (temperature,

May

35000

I. I NTRODUCTION

A

Mar

50000

Jan

Load

arXiv:2009.06527v1 [stat.AP] 14 Sep 2020

David Obst* , Joseph de Vilmarest* , Yannig Goude

Fig. 1. French and Italian electricity load (in MW) at resp. half-hourly and
hourly resolution in 2020. Dashed lines are the starting and ending date of
the lockdown.

However the coronavirus pandemic has significantly affected consumption patterns all over the world. As presented
in [13], [14], the closure of nonessential businesses as well as
the stay-at-home directives have led to a significant drop of the
power demand and changes in the daily consumption patterns.
Figure 1 shows the French and Italian electricity load over time
in 2020, whose decrease due to the lockdown (which happens
before in Italy) is clearly seen. Daily profiles of the French
consumption before and after the lockdown are represented in
Figure 2. After lockdown for both countries the daily shapes
of the load have converged towards the one of Saturdays.
Since models are trained on historical data and make the
underlying assumption that future behavior will be similar to
past one, they will fail to produce satisfactory predictions
during the lockdown period. For instance in France GAM
usually achieve around 1% MAPE (mean absolute percentage

45000
tue_it

40000

25000

30000

tue
45000

electricity load forecasting to transfer information from one
set of customers to another one [22]. In our case our source
data will be the data before the lockdown and the target one
the data during the lockdown in the country of interest (France
in our study), or even a similar one where the lockdown came
before (e.g. Italy here). The contributions of our work are the
following:

Tue
Sat
Tue LD
Sat LD

35000

40000

Tue
Sat
Tue LD
Sat LD

50000

55000

2

5

10

15

20

5

10

15

20

Fig. 2. French and Italian electricity Tuesday and Saturday load profiles
before and during the lockdown (Dashed lines).

error) [9], but were around 5% during the first few weeks of the
lockdown thus necessitating expert intervention to correct the
model forecasts. Not only do these poor forecasts have a high
cost for electricity producers and system operators, but they
represent a threat to the proper functioning of the electrical
network as well, which could have even more consequences
than usual during a pandemic.
This is why finding novel approaches to better predict the
load demand during these troubled times is of paramount
importance. However to our knowledge, up to this date only
a few papers have addressed this problem. [15] is among the
first to propose an efficient strategy to improve the predictions
during the COVID-19 lockdown period in France. Using an
adaptive functional state-space model and assimilating the
period to non-workable days, the author was able to achieve
significantly better performance compared to the french system
operator. In [16] the integration of mobility data is combined
with multi-task learning to improve the forecasting during the
lockdown. They show that mobility is indeed a relevant feature
that should be integrated in load demand models, and that
joint training of a neural network for multiple geographical
areas yields additional benefits and compensates for the lack
of data. However none of these papers are investigating how
GAM could be improved during the lockdown period.
We consider here the framework of GAM and propose
two new adaptive versions of these models. The idea of
adaptive models is to take advantage of data observed in an
online fashion to update an initial model. In every adaptive
forecasting method a trade-off has to be found between a
good reactivity to a change (whether it is a smooth drift
or a break) and a good behavior during stable periods. One
of the most popular algorithm for that is the Kalman filter
[17] already applied to electricity load forecasting in [18] and
[19]. We propose here to couple Kalman filters with GAM to
obtain a forecasting procedure which performs well before
the lockdown, exploiting the nice properties of GAM but
also reacting quickly to the sudden change in the data at the
beginning of the lockdown. The second approach we present
leverages ideas from transfer learning to fine-tune a GAM
on the lockdown period. Transfer learning (also referred as
learning-to-learn or knowledge transfer) is a branch of machine
learning that aims at reusing knowledge from one source task
on another target one [20], [21]. It has shown great success,
particularly when the source data is plentily available and the
target one scarce. Recently it has even found applications for

1) Two mathematical approaches are proposed to efficiently
adjust a historical model to consumer behavior change
over time, even in the case where data is scarce. Furthermore they do not require the integration of additional
features.
2) The two methodologies have been successfully applied
on the difficult period of the COVID-19 lockdown in
France, achieving forecast accuracy close to the one
observed before the pandemic.
3) An empirical strategy is suggested to anticipate the impact of the lockdown on the load using another country’s
data, thus enabling satisfactory predictions from the very
first day of stay-at-home order.
The rest of the paper is organized as following. In Section
2 we introduce the two model adaptation methods relying on
Kalman filtering and fine-tuning. Section 3 presents the data
and the GAM model used for the French load and Section
4 summarizes the main results of our experiments. Finally
Section 5 concludes our study and suggests further work.
II. A DAPTATION OF ADDITIVE MODELS
We consider additive models whose assumption is that the
response variable yt is decomposed as
yt = β0 +

d
X

fj (xt,j ) + εt ,

j=1

where (εt ) is an independent identically distributed (i.i.d.) random noise, xt = (xt,1 , ..., xt,d ) are the explanatory variables
at time t, and each nonlinear effect fj is decomposed on a
spline basis (Bj,k ) with coefficients βj :
fj (x) =

mj
X

βj,k Bj,k (x) .

k=1

where mj depends on the dimension of the spline basis. The
coefficients β0 , β1 , . . . , βd then are estimated by penalized
least-squares. The penalty term involves the second derivatives
of the functions fj , forcing the effects to be smooth (see [23]).
The random residuals εt are supposed to be Gaussian i.i.d.
in the first place. Later in the numerical experiments we will
introduce another variant of this model, where the residuals
are supposed to be an ARIMA model optimised with classical
time series methods. We focus here on structural adaptation
of the GAM over time. We present two different levels of
adaptation. First, we consider the reduced problem of adapting
a linear combination of the frozen effects f1 , ..., fd . Secondly
we try to adapt the whole model by fine-tuning.

3

A. Multiplicative correction of the effects
In order to reduce the dimension of the adaptation problem,
a strategy is to freeze the nonlinear effects, and to correct
these effects by a multiplicative factor. Precisely, we define
f (xt ) = (1, f 1 (xt,1 ), ..., f d (xt,d ))> where f j is a normalized
version of fj obtained by subtracting the mean on the train
set and dividing by the standard deviation. Then we adaptively
estimate θt such that
E[yt ] =

θt> f (xt ) .

we reduce the number of coefficients from 1 +
PThus
d
m
to 1 + d. This is a good trade-off to obtain a
j
j=1
simple model which will react quickly to a break in the data
generation process but also complex enough to fit well with
the nonlinear properties of the load.
1) Exponential Least-Squares: An empirical method consists in solving at each step a least-squares problem where
we specify a weight decreasing exponentially with the time
difference. Precisely we define
t−1

2
X
θ̂t = arg min
e−µ(t−s) ys − θ > f (xs ) ,
θ∈Rd

s=1

and we predict ŷt = θ̂t> f (xt ). This formalisation leads to
a single parameter, the exponential forgetting factor µ. The
advantage of this type of adaptation lies in its simplicity.
The forgetting factor µ is determined by minimizing the
RMSE on a validation set composed of the last year of the
train set for a GAM trained on the beginning of the train
set, then we keep the same µ for the GAM trained on the
whole train set. Previous work has been done on estimating
this parameter online, but leads to computational issues and
potential instability of the model (see [24]).
2) Kalman Filter: We present also a state-space model
approach. We assume the following equations:
yt = θt> f (xt ) + εt ,
θt+1 = θt + ηt ,
where (εt ) and (ηt ) are gaussian white noises of respective
variance / covariance σ 2 and Q. This is the setting of Kalman
filtering [17], thus we use the recursive formulae of Kalman
providing the expectation and covariance of the state θt given
the past observations, and these estimators yield the mean and
variance of yt given the past. This is described in Algorithm 1.
There is a wide literature concerning the setting of the
hyper-parameters θ̂1 , P1 , σ 2 , Q on which the Kalman Filter
crucially relies, see for instance [25], [26], [27]. We observe
that the iterates of θ̂t depend only on θ̂1 , P1∗ = P1 /σ 2 and
Q∗ = Q/σ 2 , reducing the set of hyper-parameters as in [25].
An interesting degenerate covariance matrix is the static
setting Q∗ = 0 (the state equation becomes θt+1 = θt ).
Defining θ̂1 = 0, P1∗ = I, the estimate θ̂t is a regularized
empirical risk minimizer:
!
t−1
X
θ̂t = arg min
(ys − θ > f (xs ))2 + kθk2 .
θ∈Rd

s=1

In order to obtain a dynamic setting we maximize the
likelihood on the training set. The Expectation-Maximization

Algorithm 1: Kalman Filter
Initialization: the prior θ1 ∼ N (θ̂1 , P1 ) where
P1 ∈ Rd×d is positive definite and θ̂1 ∈ Rd .
Recursion: at each time step t = 1, 2, . . .
1) Prediction:
E [yt | (xs , ys )s<t , xt ] = θ̂t> f (xt ) ,
V ar [yt | (xs , ys )s<t , xt ] = σ 2 + f (xt )> Pt f (xt ) .
2) Estimation:
Pt f (xt )
(yt − θ̂t> f (xt )) ,
f (xt )> Pt f (xt ) + σ 2
Pt f (xt )f (xt )> Pt
+ Q.
= Pt −
f (xt )> Pt f (xt ) + σ 2

θ̂t+1 = θ̂t +
Pt+1

algorithm is a renowned algorithm allowing to find a local
optimum. However the lack of global guarantee makes it
inefficient in our case, and we chose to apply some kind of
grid search. Precisely we decided to set P1∗ = I as in the static
setting, and for a given Q∗ the optimal θ̂1 for the likelihood
has a closed-form solution. Q∗ is of dimension 10 × 10 and
we chose to restrict ourselves to diagonal matrices whose
coefficients are in the set {2j , −30 ≤ j ≤ 0}. This is still a set
of around 8 · 1014 elements, thus we used an iterative greedy
procedure: we start from Q∗(0) = 0 and at each step, having
Q∗(k) in hand, we compute the likelihood of each matrix where
only one coefficient differ from Q∗(k) , and we define Q∗(k+1)
as the one maximizing the likelihood among those tested. This
algorithm yielded less than 104 evaluations of the likelihood.
In order to take the lockdown into account in the state-space
representation, it is natural to consider a varying state noise
covariance Qt . Indeed, we expect the model to change much
faster during and after the lockdown than before. It motivates
a dynamic estimation of Qt , however due to the amplitude
of the crisis we modelled a break in the data at the lockdown
beginning. We chose to change only the state noise covariance
at the break time T , and for t 6= T we use Q∗t = 0 in the
static setting or Q∗t = Q∗ in the dynamic setting. We don’t
want to put any a priori on the break, therefore we defined
Q∗T = P1∗ = I  Q∗ .
B. Correction of the full model
In the previous methods the nonlinear effects fj (·) were
frozen and adjusted with a multiplicative factor. However it
may be insufficient on certain new types of behavior. Since
learning a new model from scratch is inadvisable considering
the few samples of target data available, we would like to start
from the previously trained model and adapt it on the few
instances available. This is a particular case of the framework
of transfer learning, more specifically of model fine-tuning
(FT). It consists in reusing a part of the parameters learned on
the source set (typically neural network layers) and adjust them
with a few gradient iterations on the target one for instance.
Model fine-tuning has been successful in different fields such
as computer vision [28] or even time series forecasting [29].

4

In our case we will fine-tune the parameters of our GAM.
Since it boils down to a penalized linear regression problem,
fine-tuning on it consists in fine-tuning a linear model. This
framework was elaborated in [30]. Starting from the coefficients β̂S learned on the source data, for each time step we
perform K iterations of batch gradient descent with fixed step
size α on following objective function to yield an adjusted
parameter vector β̂t :
Lt (β) =

t−1 
X

ys −

s=1

mj
d X
X

2
βj,k Bj,k (xs,j )

j=1 k=1

Let B(xs ) be the vector of the Bj,k (xs,j ) and B(Xt ) denote
the matrix made by the concatenation (by row) of the B(xs )
for s = 1, . . . , t−1. As discussed by the aforementioned paper,
the choice of the step size α is not crucial, as long as it is
small enough.
In practice a good step size is α = α∗ /5 where


α∗ = 2/ λmax (B(Xt )> B(Xt ))+λmin (B(Xt )> B(Xt )) and
λmax (M ) and λmin (M ) respectively designate the maximum
and minimum eigenvalue of M . Ergo the major hyperparameter to tune is K the number of gradient iterations to perform.
Theoretical methods are currently being investigated in the
aforementioned paper and have been used to guide our choice
here, but it was also observed empirically that for K between
50 and 100 the results are often good. Therefore a number of
iterations in that range is always considered, and this choice
usually coincides with the suggested theoretical guidelines.
III. DATA AND M ODEL P RESENTATION
In this section we detail the GAM model that has been used
to forecast the French electricity consumption, as well as the
data on which is has been applied.
A. Presentation of the data
The French electricity consumption is freely available on
the website of the system operator RTE (Réseau et Transport
d’Électricité)1 . Our dataset ranges from the 1st of January 2012
to the 7th of June 2020 with a 30 minutes temporal resolution.
As explanatory variables we obtained national averaged
temperature on the website of the French weather forecaster
Météo-France2 . We took observed temperatures instead of
forecasts in order to use only open data and make the results
reproducible. As our goal is to compare different forecasting
strategies on the same data this choice is relevant and allows
a more precise comparison as we don’t include in the score
the uncertainty due to physical meteorological forecast.
We train the models on historical data from the beginning
of 2012 to the end of August 2019. In this paper we are
interested in predicting the load during and after the COVID19 lockdown period in France. Since the consumer behavior
changed abruptly during the first month and stabilized during
the second one, we divide the crisis test data in two periods.
The first one ranges from March 16th to April 15th and the
second one from April 16th to June 7th . Note that although the
1 https://opendata.rte-france.com
2 https://donneespubliques.meteofrance.fr/

lockdown officially begun Tuesday the 17th of March 2020
at midday in France, we consider March 16th as the first day
of our lockdown period as the behavior had already changed.
Finally, in order to assess the suitability of the offline methods
and of the ones that do not model the break we consider the
pre-lockdown period between September 1st 2019 and March
15th 2020.
B. The additive model
The time of day is crucial for load forecasting. It doesn’t
appear in the following definition of the additive model
because we build one model for each instant of day, i.e. we
treat the 48 half-hour time series independently:
yt =

1
7 X
X

αi,j 1DayTypet =i 1DLSt =j

i=1 j=0

+

7
X

βi Load1Dt 1DayTypet =i + γLoad1Wt

(1)

i=1

+ f1 (t) + f2 (ToYt ) + f3 (t, Tempt ) + f4 (Temp95t )
+ f5 (Temp99t ) + f6 (TempMin99t , TempMax99t ) + εt ,
where at each time t,
• yt is the electricity load for the considered instant,
• DayTypet is a categorical variable indicating the type of
the day of the week,
• DLSt is a binary variable indicating whether t is in
summer hour or winter hour,
• ToYt is the time of year whose value grows linearly from
0 the 1st of January 00h00 to 1 on the 31st of December
23h30,
• Tempt is the temperature,
• Temp95t and Temp99t are exponentially smoothed temperatures of smoothing factor 0.95 and 0.99,
• TempMin99t
and TempMax99t are exponentially
smoothed variables of factor 0.99 of the minimal and
maximal temperature of the day,
• Load1D and Load1W are the load of the day before and
the load of the week before.
The models are trained in R using the library mgcv [31].
As previously mentioned in Section II, we suppose that εt is
a Gaussian noise with 0 mean and constant variance. However
this hypothesis is rarely true in practice and we observe an
auto-correlation structure in the error. We thus propose to
model it with an ARIMA model by selecting the best model
with AIC criteria [32] in the family of ARIMA(p,d,q) where
p, q ≤ 100 and d ≤ 1 (we use the R function auto.arima of
R. Hyndman). In that case the forecast are performed adding
GAM forecasts and the short term correction of the ARIMA
models exploiting recent observations.
C. Knowledge transfer from Italy
Italy was the first country to be massively affected by the
novel coronavirus in Europe. The Italian government decreed
a total lockdown from the 9th of March 2020, hence 7 days
before the French one. Also it seems reasonable to make the

5

IV. E XPERIMENTS

Algorithm 2: Transfer learning at time step t
Inputs: Step size α, number of iterations K, French and
Italian source parameters β̂SF R , β̂SIT , scale parameter ρ.
If GAM fine-tuned:
FR
• Initialize β̂t ← β̂S .
• Repeat K times:
R
β̂t ← β̂t − α∇LF
t−1 (β̂t ).
>
• Predict ŷt = β̂t B(xt ).
If GAM-δ:
IT
IT
• Initialize β̂t ← β̂S .
• Repeat K times:
IT
β̂tIT ← β̂tIT − α∇LIT
t−1 (β̂t ).
IT
IT
FR
• Set δ̂t = β̂t − β̂S , β̃t = β̂S + ρ δ̂t .
>
• Predict ŷt = β̃t B(xt ).

14 days moving average of the error (MW)
−1000
0
1000

2000

If GAM-δ fine-tuned:
FR
• Do fine-tuning on Italian data: β̃t = β̂S + ρ δ̂t .
• Repeat K times:
R
β̃t ← β̃t − α∇LF
t−1 (β̃t ).
>
• Predict ŷt = β̃t B(xt ).

−2000

assumption that countries will respond to the same stay-athome order in similar ways, which is reasonable considering
Figure 1. Hence our idea is to use this one week head-start
and to adjust our GAM model for France accordingly to
the changes observed in Italy. We have at our disposal data
from the Italian system operator Terna3 and meteorological
data gathered through the R package Riem available from
the 1st of January 2015 to the 28th of June 2020 with a 1
hour temporal resolution. For each instant, a model similar
to (1) is constructed on the data on the range 2015-2019,
with the main differences being that the effects f3 (·) and
f6 (·) are removed, and that f2 (·) is replaced by a sum of
7 effects, one for each day of the week. Then the same
procedure as described in Section II-B is applied. Let δ̂t
denote the adjustment of the estimated coefficients obtained
by performing the aforementioned fine-tuning procedure on
the Italian data ranging from the 28th of February up to date
t (typically t could correspond to the 15th of March, the day
before the stay-at-home order begun in France). We then use
β̃t = β̂SF R + ρ δ̂t to perform the predictions for France, where
β̂SF R is the French source parameters vector and ρ is a scale
parameter accounting for the difference of load levels between
France and Italy. We refer to this model as GAM-δ. Since
the ToY effect is modelized differently for the Italian model
(one function per day of the week), we will not adjust the
corresponding coefficients in the French model. This is further
justified by the fact that in general the ToY effect is very
specific to a country, and it should be learned on a whole year
at least. As for the choice of ρ, making the assumption that the
consumption in France and Italy are proportional
a factor
P with P
ρ allows us to use the simple estimate ρ̂ = t ytF R / t ytIT
summed over a year for instance. The advantage of GAM-δ is
that it can be applied to reduce the prediction error starting at
the very first day of lockdown. One can afterwards combine
this procedure with fine-tuning on the eventually available
French data. The procedures for both regular fine-tuning and
GAM-δ are summarized in Algorithm 2.

Kalman DynamicBreak
Kalman StaticBreak
Kalman Dynamic
Kalman Static
exp−LS
ARIMA
Nov

The presented adaption methods are used for the French
electricity load forecasting problem. While accuracy metrics
are of paramount importance, we also focus on the interpretation of our results and on model behavior.
A. Model dynamics
The moving average of the error of the different models are
represented in Figure 3. At the beginning of the lockdown all
the models will tend to overpredict the load. However most
of our adaptive methods quickly accommodate to the lower
demand and progressively reduce their bias, notably Kalman
with dynamic break and GAM fine-tuned. On the contrary
regular GAM does not succeed in reducing the error (even
with the help of an ARIMA) as it keeps overpredicting the
demand. GAM-δ on the other hand is very good during the
first couple of days, efficiently taking advantage of the change
3 https://www.terna.it

GAM+ARIMA
GAM
GAM delta
GAM delta FT
GAM FT

Jan

Mar

May

Date

Fig. 3. Moving average of the error of the different models at 8-8:30 PM.

in patterns observed in Italy. However it quickly drifts away
over time because the Italian consumption recovers faster than
the French one during the second month of lockdown (see fig.
1). However since the objective of GAM-δ is to provide an
initial boost of performance during the first couple of weeks
while the other models adjust, this is only a minor issue (see
Section IV-B).
We test the Kalman filter in a static and a dynamic setting as
described in Section II-A2. For both we assess the introduction
of a break at lockdown. The evolution of the state estimate θ̂t
is displayed in Figure 4 for different settings. In the static
setting the Kalman filter optimizes a state which is assumed
to be constant, hence explaining a slow evolution compared to
the faster changes of the dynamic one. Moreover, the model

6

Sep

Nov

Jan

Mar

May

500
Sep

Nov

Jan

Date

Mar
Date

(a) Static

Load1W
DayType:DLS
DayType:Load1D
f1(Time)
f2(ToY)
f3(Time,Temp)
f4(Temp95)
f5(Temp99)
f6(TempMin99,TempMax99)
Bias

−1500

Load1W
DayType:DLS
DayType:Load1D
f1(Time)
f2(ToY)
f3(Time,Temp)
f4(Temp95)
f5(Temp99)
f6(TempMin99,TempMax99)
Bias

−1500

−1500

Load1W
DayType:DLS
DayType:Load1D
f1(Time)
f2(ToY)
f3(Time,Temp)
f4(Temp95)
f5(Temp99)
f6(TempMin99,TempMax99)
Bias

Evolution of each state coefficient
−1000
−500
0

500
Evolution of each state coefficient
−1000
−500
0

Evolution of each state coefficient
−1000
−500
0

500

1000

Dynamic with break

1000

Dynamic

1000

Static

(b) Dynamic

May

Sep

Nov

Jan

Mar

May

Date

(c) Dynamic with break

Fig. 4. Evolution of the state coefficients for different Kalman variants at 8-8:30 PM (subtracting the coefficients on September 1st 2019).

0.04

changes faster during lockdown in both settings. As expected
the introduction of a break covariance matrix at the beginning
of the lockdown allows the model to adapt much faster.
The model dynamics can be analysed for the fine-tuning
too. The only coefficients of δ̂t with a significant evolution
after fine-tuning are the ones pertaining to the lagged load
(γ for Load1W and βi , i = 1..7 for Load1D) and have been
represented in Figure 5. The other ones are zero and have
been omitted for clarity. The coefficients of the working days
drop, especially the Monday, whereas the ones of the weekend
increase, notably Saturday. It can be interpreted as follows:
the historical model learned a certain transition between the
different days of the week. With the lockdown now all the days
are similar and close to a Saturday, which has a lower demand
than Monday and thus the associated coefficient plummets.
The coefficient of Saturday soars because the demand on
Fridays is now much lower than it used to be and that daily
profiles are similar. Finally since during the first weeks the
electricity demand progressively decreases (see Fig. 1) the
coefficient of γ drops as well.

0.02

●

●

●

●

●

βf4,1

βf4,2

βf4,3

βf4,4

●

●

●
●

−0.04

^
Value of δ
−0.02
0.00

●

●

●

●

β0

γ

βMon

βTue

βWed

βThu βFri βSat
Coefficient

βSun

Fig. 5. Value of δ̂t fine-tuned on the period 16/03-15/04 at at 8-8:30 PM.

B. Aggregation
We proposed 2 load forecasting models (ARIMA, GAM)
and different variants to adapt them to the lockdown period

(exp-LS, Kalman adaptation, transfer learning) leading to 11
candidates. A natural approach is then to aggregate them in
a single forecast which will take benefit of the best one in
function of time. This is the main idea behind online aggregation methods which has already demonstrated its benefits in
the field of electricity load forecasting (see [33], [34]). Since
Figure 2 shows the convergence of the daily profiles towards
the Saturday shape, this as well as [15] motivates adding
another expert named GAM Saturday, where the prediction
is made by the regular GAM as if every day was a Saturday.
We recall briefly the main principles of the online aggregation approach and refer the interested reader to [35] for a complete presentation. A bounded sequence of observations (here
half-hourly total consumption of customers) y1 , . . . , yn ∈
[0, B] is observed (B being an unknown constant). We have
access to a set of N experts who produce forecasts of the
sequence at each instant t based on past valuesP
of y. After
N
that, aggregation is computed step by step: ŷt = j=1 p̂j,t ŷtj
where the weights are updated according to past performances
of each experts. To compute the weights we use the MLPoly algorithm of [36], implemented in the R package OPERA
[37]. To summerize the procedure, the algorithm puts more
weight on an expert which improves the performance of the
aggregation in the past using a gradient descent like strategy
with a vectorial time varying step (also called the learning
rate) ηk,t depending only on the past performances of the
experts so that no parameter tuning is needed. Finally a few
experts are introduced in the aggregation only at lockdown.
Indeed the transfer learning experts don’t make sense (there
is no target data), the Kalman experts modelling the break
coincide with the other ones before lockdown, and the expert
considering every day is a Saturday was only introduced for
the lockdown period. These specialized experts are added to
the aggregation at the lockdown period with a uniform weight
(1/12), and the experts present before share the rest of the
weight proportionally to their previous weight [38].
The evolution of the weights of the experts over time is
given in Figure 6. It gives insight on which predictions are the
most useful in the aggregation at a given time. The lockdown

1.0

7

StaticBreak

Static

DynamicBreak

GAM

GAM delta

0.8

Static

exp−LS

exp−LS

Weights

0.6

GAM delta FT

GAM delta FT

GAM F
GAM FT

GAM + ARIMA

0.4

GAM + ARIMA

ARIMA

0.2

GAM

ARIMA

GAM

Gam Saturd
Gam Saturday

Dynamic

0.0

Dynamic

Sep 2019

Jan 2020

May 2020

Fig. 6. Weights attributed to each expert by the aggregation method at 8-8:30
PM. Dashed lines split the test sets.

acts as a break and causes a significant shift in the weights
distribution. As such, GAM Saturday immediately takes a
large weight: this is due to the aforementioned resemblance
between the daily profiles during the lockdown with Saturdays. Moreover, this expert predicts a lower consumption
than reality, compensating for the overestimation of the other
experts at the beginning of the lockdown. GAM-δ also has
high importance, as it has knowledge of what happened in
Italy and thus suits the new patterns of load demand in France.
For instance on the two first days of lockdown (16 and 17th of
March) GAM-δ yields 1984 MW of RMSE, compared to 2674
and 3005 for Dynamic Break and regular GAM respectively.
However their importance dwindle with time as the adaptive
Kalman and fine-tuning methods have seen enough data and
have become more competitive.
C. Numerical results
As usual in electricity load forecasting, the performance
metrics is the root mean squared error (in MW) and the mean
absolute percentage error (in %):
v
u n
n
u1 X
2
100 X yt − ŷt
RMSE = t
yt − ŷt , MAPE =
,
n t=1
n t=1
yt
where n is the number of instances in the test set.
We display the numerical performance of our methods in
Table I. The benefits brought by any of our methods is clear,
with RMSE and MAPE that are significantly lower than a
standard GAM+ARIMA on both COVID-19 test sets. The
Kalman with Dynamic Break yields the best results for the
two error metrics on both test sets, but the fine-tuned methods
are very close to it. The additional benefits brought by expert
aggregation is emphasized by the two last rows. The algorithm
manages to take advantage of the individual specificities of the

different predictions, leading to further error reduction on both
test periods. It is interesting to note that while individually
poor (see Table I), the inclusion of the GAM Saturday in the
mixture is of paramount importance for the first testing period.
This is because it compensates for the bias of the other experts
(they tend to overestimate the demand whereas GAM Saturday
underestimates it).
V. C ONCLUSION
In this paper, we proposed two novel approaches of adaptive
generalized additive models, one relying on Kalman filtering
and the other on transfer learning with GAM fine-tuning.
Kalman philosophy consists in reacting quickly to a change in
the data and update the forecasting taking advantage on recent
observations. Transfer allows to share information from other
data sets with similar/complementary properties. The methods
have been applied on real French electricity consumption data
from the COVID-19 lockdown period. We show the benefits
of the transfer approach to anticipate the lockdown effect
using Italian data and demonstrate the efficiency of adaptive
methods to significantly improved predictions compared to
benchmark models without relying on the inclusion of new
exogenous features. Moreover expert aggregation enabled to
take advantage of the individual experts’ specificities and
enhanced the results even further.
While in this paper we focused on adapting GAM, the proposed framework can be applied to other approaches. The use
of neural networks for instance, with their high performance
in the field of load forecasting, will soon be investigated.
We also plan to include other exogenous information as
mobility data proposed in [16] or macro-economic indicators.
Regarding load data, we believe that exploiting regional data
could be pertinent as the propagation of the pandemic and its
impact on consumption was different depending the region in
France and Italy. Also, we would like to include more countries. For these next steps, transfer approaches will obviously
be of fundamental importance but also adaptive questions as
the effect of this exogenous variables will probably vary with
time.
R EFERENCES
[1] D. Bunn and E. D. Farmer, “Comparative models for electrical load
forecasting,” 1985.
[2] S.-J. Huang and K.-R. Shih, “Short-term load forecasting via arma
model identification including non-gaussian process considerations,”
IEEE Transactions on power systems, vol. 18, no. 2, pp. 673–679, 2003.
[3] A. Antoniadis, X. Brossat, J. Cugliari, and J.-M. Poggi, “A prediction
interval for a function-valued forecast model: Application to load
forecasting,” International Journal of Forecasting, vol. 32, no. 3, pp.
939–947, 2016.
[4] H. Cho, Y. Goude, X. Brossat, and Q. Yao, “Modeling and forecasting
daily electricity load curves: a hybrid approach,” Journal of the American
Statistical Association, vol. 108, no. 501, pp. 7–21, 2013.
[5] T. Hong, P. Pinson, and S. Fan, “Global energy forecasting competition
2012,” 2014.
[6] J. R. Lloyd, “Gefcom2012 hierarchical load forecasting: Gradient
boosting machines and gaussian processes,” International Journal of
Forecasting, vol. 30, no. 2, pp. 369–374, 2014.
[7] D. C. Park, M. El-Sharkawi, R. Marks, L. Atlas, and M. Damborg,
“Electric load forecasting using an artificial neural network,” IEEE
transactions on Power Systems, vol. 6, no. 2, pp. 442–449, 1991.
[8] S. Ryu, J. Noh, and H. Kim, “Deep neural network based demand side
short term load forecasting,” Energies, vol. 10, no. 1, p. 3, 2017.

8

TABLE I
N UMERICAL PERFORMANCE IN MAPE (%) AND RMSE (MW).
Method
ARIMA
GAM
GAM + ARIMA
exp-LS
Kalman Static
Kalman StaticBreak
Kalman Dynamic
Kalman DynamicBreak
Fine-tuned
GAM δ
GAM δ - Fine-tuned
GAM Saturday
Aggregation without GAM Saturday
Aggregation with GAM Saturday

2019/09/01 - 2020/03/15
4.10 %, 3341 MW
1.39 %, 1085 MW
1.34 %, 1050 MW
1.26 %, 982 MW
1.38 %, 1077 MW
1.26 %, 979 MW
8.33 %, 6425 MW
1.28 %, 1005 MW
1.28 %, 1005 MW

2020/03/16 - 2020/04/15
5.44 %, 3248 MW
4.83 %, 2961 MW
4.28 %, 2654 MW
3.94 %, 2521 MW
4.81 %, 2923 MW
2.79 %, 1954 MW
3.66 %, 2351 MW
2.73 %, 1902 MW
2.78 %, 1917 MW
4.11 %, 2364 MW
2.81%, 1912 MW
6.09 %, 3970 MW
3.01 %, 2014 MW
2.54 %, 1636 MW

2020/04/16 - 2020/06/07
5.59 %, 3135 MW
3.12 %, 1753 MW
2.65 %, 1464 MW
1.97 %, 1029 MW
2.85 %, 1588 MW
1.59 %, 855 MW
1.89 %, 1002 MW
1.62 %, 854 MW
1.80 %, 938 MW
6.09 %, 2713 MW
1.72 %, 905 MW
8.40 %, 4616 MW
1.44 %, 745 MW
1.49 %, 766 MW

[9] A. Pierrot and Y. Goude, “Short-term electricity load forecasting with [27] L. Fahrmeir and G. Tutz, Multivariate statistical modelling based on
generalized linear models. Springer Science & Business Media, 2013.
generalized additive models,” Proceedings of ISAP power, vol. 2011,
2011.
[28] H.-C. Shin, H. R. Roth, M. Gao, L. Lu, Z. Xu, I. Nogues, J. Yao,
D. Mollura, and R. M. Summers, “Deep convolutional neural networks
[10] Y. Goude, R. Nedellec, and N. Kong, “Local Short and Middle term
for computer-aided detection: Cnn architectures, dataset characteristics
Electricity Load Forecasting with semi-parametric additive models,”
and transfer learning,” IEEE transactions on medical imaging, vol. 35,
IEEE transactions on smart grid, vol. 5, no. 1, pp. 440 – 446, 2013.
no. 5, pp. 1285–1298, 2016.
[Online]. Available: https://doi.org/10.1109/TSG.2013.2278425
[11] M. Fasiolo, S. N. Wood, M. Zaffran, R. Nedellec, and Y. Goude, [29] N. Laptev, J. Yu, and R. Rajagopal, “Reconstruction and regression loss
for time-series transfer learning,” in Proceedings of the Special Interest
“Fast calibrated additive quantile regression,” Journal of the American
Group on Knowledge Discovery and Data Mining (SIGKDD) and the
Statistical Association, pp. 1–11, 2020.
4th Workshop on the Mining and LEarning from Time Series (MiLeTS),
[12] S. N. Wood, Y. Goude, and S. Shaw, “Generalized additive models
London, UK, vol. 20, 2018.
for large data sets,” Journal of the Royal Statistical Society: Series C:
[30] D. Obst, B. Ghattas, J. Cugliari et al., “Transfer learning for linear
Applied Statistics, pp. 139–155, 2015.
regression: a statistical test of gain,” in Submitted to Advances in Neural
[13] M. Narajewski and F. Ziel, “Changes in electricity demand pattern in
Information Processing Systems, 2020.
europe due to covid-19 shutdowns,” arXiv preprint arXiv:2004.14864,
[31] S. Wood and M. S. Wood, “Package mgcv,” R package version, vol. 1,
2020.
p. 29, 2015.
[14] IEA,
“Year-on-year
change
in
weekly
electric[32] H. Akaike, “Time series analysis and control through parametric modity
demand,
weather
corrected,
in
selected
counels,” in Applied Time Series Analysis I. Elsevier, 1978, pp. 1–23.
tries,”
https://www.iea.org/data-and-statistics/charts/
[33] P. Gaillard and Y. Goude, “Forecasting electricity consumption by
year-on-year-change-in-weekly-electricity-demand-weather-corrected-in-selected-countries-2020,
aggregating experts; how to design a good set of experts,” in Modeling
2020.
and stochastic learning for forecasting in high dimensions. Springer,
[15] K. Nagbe, “France short-term load demand forecasting using a func2015, pp. 95–115.
tional state space adaptative model: case of covid-19 lockdown period,”
[34] B. Goehry, Y. Goude, P. Massart, and J.-M. Poggi, “Aggregation of
2020.
multi-scale experts for bottom-up load forecasting,” IEEE Transactions
[16] Y. Chen, W. Yang, and B. Zhang, “Using mobility for electrion Smart Grid, vol. 11, no. 3, pp. 1895–1904, 2019.
cal load forecasting during the covid-19 pandemic,” arXiv preprint
[35] N. Cesa-Bianchi and G. Lugosi, Prediction, Learning, and Games. New
arXiv:2006.08826, 2020.
York, NY, USA: Cambridge University Press, 2006.
[17] R. E. Kalman, “A new approach to linear filtering and prediction
[36] P. Gaillard, G. Stoltz, and T. Van Erven, “A second-order bound with
problems,” 1960.
excess losses,” in Conference on Learning Theory, 2014, pp. 176–196.
[18] A. Harvey and S. J. Koopman, “Forecasting hourly electricity demand
using time-varying splines,” Journal of the American Statistical Associ- [37] P. Gaillard and Y. Goude, “opera: Online prediction by expert aggregation,” URL: https://CRAN. R-project. org/package= opera. r package
ation, vol. 88, no. 424, pp. 1228–1236, 1993.
version, vol. 1, 2016.
[19] V. Dordonnat, S. J. Koopman, and M. Ooms, “Dynamic factors in
[38] M. Devaine, P. Gaillard, Y. Goude, and G. Stoltz, “Forecasting electricity
state-space models for hourly electricity load signal decomposition and
consumption by aggregating specialized experts,” Machine Learning,
forecasting,” in 2009 IEEE Power & Energy Society General Meeting.
vol. 90, no. 2, pp. 231–260, 2013.
IEEE, 2009, pp. 1–8.
[20] S. J. Pan and Q. Yang, “A survey on transfer learning. ieee transactions
on knowledge and data engineering,” 22 (10): 1345, vol. 1359, 2010.
[21] K. Weiss, T. M. Khoshgoftaar, and D. Wang, “A survey of transfer
learning,” Journal of Big data, vol. 3, no. 1, p. 9, 2016.
[22] L. Cai, H. Wen, J. Gu, J. Ma, and Z. Jin, “Forecasting customers’ response to incentives during peak periods: A transfer learning approach,”
International Transactions on Electrical Energy Systems, vol. 30, no. 7,
p. e12251, 2020.
[23] S. N. Wood, Generalized additive models: an introduction with R. CRC
press, 2017.
[24] A. Ba, M. Sinn, Y. Goude, and P. Pompey, “Adaptive learning of
smoothing functions: Application to electricity load forecasting,” in
Advances in neural information processing systems, 2012, pp. 2510–
2518.
[25] P. J. Brockwell, R. A. Davis, and M. V. Calder, Introduction to time
series and forecasting. Springer, 2002, vol. 2.
[26] J. Durbin and S. J. Koopman, Time series analysis by state space
methods. Oxford university press, 2012.

