A Spatial-Temporal Graph Based Hybrid Infectious Disease Model with
Application to COVID-19
Yunling Zheng,1 Zhijian Li, 1 Jack Xin 1 Guofa Zhou 2
1

arXiv:2010.09077v1 [cs.LG] 18 Oct 2020

2

Department of Mathematics, UC Irvine
College of Health Sciences, UC Irvine

Abstract
As the COVID-19 pandemic evolves, reliable prediction
plays an important role for policy making. The classical infectious disease model SEIR (susceptible-exposedinfectious-recovered) is a compact yet simplistic temporal
model. The data-driven machine learning models such as
RNN (recurrent neural networks) can suffer in case of limited time series data such as COVID-19. In this paper, we
combine SEIR and RNN on a graph structure to develop a
hybrid spatio-temporal model to achieve both accuracy and
efficiency in training and forecasting. We introduce two features on the graph structure: node feature (local temporal infection trend) and edge feature (geographic neighbor effect).
For node feature, we derive a discrete recursion (called Iequation) from SEIR so that gradient descend method applies
readily to its optimization. For edge feature, we design an
RNN model to capture the neighboring effect and regularize
the landscape of loss function so that local minima are effective and robust for prediction. The resulting hybrid model
(called IeRNN) improves the prediction accuracy on statelevel COVID-19 new case data from the US, out-performing
standard temporal models (RNN, SEIR, and ARIMA) in 1day and 7-day ahead forecasting. Our model accommodates
various degrees of reopening and provides potential outcomes
for policymakers.

Introduction
The classical infectious disease model, the SEIR model
(Hethcote 2000), is a variation on the basic SIR model (Anderson and May 1992). It assumes that all individuals in the
population can be categorized into one of the four compartments: Susceptible, Exposed, Infected and Removed, during the period of pandemic. The model describes the evolution of the compartmental populations in time by a system
of nonlinear ordinary differential equations (ODE):
dS
dt
dE
dt
dI
dt
dR
dt

= −β1 SI
= β1 SI − σ1 E
= σ1 E − γI
= γI

The total population S + E + I + R is invariant in time,
which we shall normalize to 1 or 100 % in the rest of this paper. Clearly, SEIR is a simplistic temporal model of a given
region or country.
However, the infectious disease data often provides not
only temporal but also spatial information as in the case of
COVID-19, see (Dong, Du, and Gardner 2020). A natural
idea is to elevate SEIR model to a spatio-temporal model so
that it can be trained from the currently reported data and
make more accurate real-time prediction. See (Roosa et al.
2020) for temporal modeling on cumulative cases of China
and real-time prediction.
In this paper, we set out to model the latent effect of inflow cases from the geographical neighbors to capture spacial spreading effect of infectious disease. For the practical
reason that the inflow data is not observable, machine learning methods such as regression and neural network are more
suitable. As widely adopted in time-series prediction problem, linear statistical models, such auto-regressive model
(AR) and its variants are standard methods to forecast timeseries data with some distribution assumptions on the time
series. And the Long Short Term Memory neural networks
model (LSTM) (Hochreiter and Schmidhuber 1997) for the
natural language processing problem, can be applied to time
series data, especially disease data. With additional spatial
information, the graph-structured LSTM models show a better performance on spatio-temporal data. See the application to influenza data (Li et al. 2019)(Deng et al. 2019) and
crime and traffic data (Wang et al. 2019, 2018). However,
such neural network models have a demand for a large training data to optimize the high dimensional parameters. Yet
the reliable daily data of COVID-19 in the US begins after March 2020 and limits the temporal resolution. Applying space-time LSTM models (Li et al. 2019; Wang et al.
2018) directly to COVID-19 may lead to overfitting. In light
of the shortage of data of COVID-19, we shall derive a hybrid SEIR-LSTM model with much fewer parameters than
space-time LSTMs (Lai et al. 2017)(Wu et al. 2018).

Related work
In (Yang, Santillana, and Kou 2015), ARGO (AutoRegression with Google search trends), a variant of AR, uses the
google search trends to generate external feature of ARGO
and forecasts influenza data from Centers for Disease Con-

trol of U.S.(CDC). ARGO is a linear statistical model that
combines historical observations and external features. The
prediction of influenza activity level is given by:
ŷt = ut +

52
X

αj yt−j +

100
X

j=1

βi Xi,t .

i=1

where ŷt is the predicted value at time t, and the optimization part of ARGO is:

min

~
µy ,~
α,β



yt − ut −

52
X

αj yt−j −

j=1

100
X

βi Xi,t

2

i=1

~ 1 +λb ||~
~ 2
+λa ||~
α||1 +ηa ||β||
α||22 +ηb ||β||
2
where α
~ = (α1 , · · · , α52 ) and β~ = (β1 , · · · , β100 ). yt−j
(1 ≤ j ≤ 52) are historical values of past 52 weeks and Xi,t
(1 ≤ i ≤ 100) are the google search trend features at time t.
The feature are generated by top 100 of most related trends
to influenza from google search at each time. The additional
regularization terms to linear regression model helps ARGO
optimize. The numerical experiment from (Yang, Santillana,
and Kou 2015) shows a better performance than machine
learning models such as LSTM, AR, and ARIMA.
The (Li et al. 2019) introduces a graph structured recurrent neural network (GSRNN) to further improve the
forecasting accuracy of CDC influenza activity level data.
From CDC data, the USA is divided into 10 Health and
Human Services (HHS) regions to report influenza activity level. These 10 regions are described as a graph
in GSRNN with nodes v1 , · · · , v10 and a collection of
edges based on geographic neighbor relationship (i.e. E =
{(vi , vj )|vi , vj are adjacent}, E is the set of all edges). By
comparing the average record of activity levels, the 10 HHS
region nodes are divided into two groups by relatively active
level, the high active group H, and low inactive group L. The
two group leads to 3 types of edges between them, L − L,
H − L, and H − H, where each edge type has a customized
RNN, called edge-RNN, to generate the edge features. There
are also two kinds of RNNs for each node group to combine
the edge feature with historical values and output the final
prediction. Suppose a fixed node v ∈ H. The edge feature
of v at time t are etv,H and etv,L , which are generated by the
average of historical values of neighbor nodes of v in corresponding groups. The edge features are the input of the
corresponding edge-RNN of each edge:
fvt = edgeRNNH−L (etv,L ), htv = edgeRNNH−H (etv,L )
Then, the outputs of edge-RNNs are fed into the node-RNN
of group H together with the node feature of v at time t,
denoted as v t , to output the prediction of the activity level of
node v at time t + 1, or yvt+1 :
yvt+1

= nodeRNNH (v

t

, fvt , htv ).

Our approach: IeRNN model
We propose a novel hybrid spatio-temporal model, named
IeRNN, by combining LSTM (Hochreiter and Schmidhuber
1997) and I-equation on a graph structure. The I-equation
is a discrete in time model derived from SEIR differential
equations. It resembles a nonlinear regression model of time
series. The LSTM framework is applied to model the latent
geographical inflow of infections. Our IeRNN model, comparing to (Li et al. 2019; Wang et al. 2019, 2018), is much
more compact.

Derivation of I-equation from SEIR ODEs
As a variation to SEIR model, we shall construct additional
features Ie and Ee that reveal the inflow population of infectious and exposed individuals from neighboring regions.
Then we augment the SEIR differential equations with Ie
and Ee as:
dS
= −β1 S I − β2 S Ie
(1)
dt
dE
= β1 S I + β2 S I e − σ 1 E − σ 2 E e
(2)
dt
dI
= σ1 E + σ2 Ee − γI
(3)
dt
dR
= γI
(4)
dt
It still follows that
S+E+I +R=1

(5)

by normalizing compartmentalized populations to percentages of total population. From (1) and (4), we have
Z t
R(t) = R(t0 ) + γ
I(τ )dτ
(6)
t0

S

 Z t

= S0 exp −
(β1 I + β2 Ie )dτ

(7)

t0

Substituting (6), (7) and (5) in (3), we have a closed Iequation:

Z t
dI
γI +
− σ2 Ee = σ1 1 − I(t) − R(t0 ) − γ
I(τ )dτ
dt
t0
 Z t

− S0 exp −
(β1 I + β2 Ie )dτ
t0

(8)
The above derivation holds for time dependent coefficients
βi = βi (t), i = 1, 2. Let Ee = τ Ie , and write σ2 τ as σ2 . By
the explicit Euler and (P + 1)-term Riemann sum approximation, we have a discrete time recursion:
γIt + It+1 − It − σ2 Ie,t
P

= σ1 α − σ1 It − γ

− S0 exp −

t − t0 X
It−j
P + 1 j=0

t − t0
P +1

P
X
j=0

(9)


(β1 I)t−j + (β2 Ie )t−j 

which gives the I-model:
P

It+1

t − t0 X
It−j
= σ1 α + (1 − σ1 − γ)It + σ2 Ie,t − γ
P + 1 j=0


P
X
t
−
t
0
(β1 I)t−j + (β2 Ie )t−j 
− S0 exp −
P + 1 j=0
(10)

If Ie ≡ 0 in I-model (10), we get an approximation of the It
component of SEIR model, a nonlinear regression model in
time for a single region, named the I-equation.
Since it is difficult to keep track of infectious and exposed populations coming from neighboring regions, here
we model Ie,t as a latent feature in absence of a mathematical formula or equation. To represent the latent feature from
time-varying influx of infectious individuals, we make use
of LSTM, a recurrent form of neural networks, see Fig. 1.

Output

×

ct-1

+

Figure 2: USA state map.
IeRNN, is named by this design of edge-RNN for Ie and the
I-equation:
Ie,t = Dense-Layer(edge-RNN(fi,t ))
(11)

ht

ct
Tanh

×
σ

σ

Tanh

×
σ

ht-1

ht

Input

xt

Figure 1: LSTM cell.

Figure 3: Stacked LSTM cells in edge-RNN.

Generate edge feature with Ie

Policy response modeling

The spatial information based on US states map (Andrew
2005), see Fig. 2, is formulated as an adjacent matrix G =
(gi,j ). If two states vi , vj are neighbors to each other, then
gi,j = 1 otherwise is zero. With the variables of graph information, we can define the edge feature of state vi at time
t:
!
p
X
X
1
gi,j
Ij,t−k
fi,t = P
j gi,j
j

During an epidemic, the rate of infection could change as
governments start responding to the epidemic. The infectious rate would start decreasing due to the restrictive policy
(partial or full lock-down) being put in place. We model the
policy response by changing the parameter, β1 , in the ODE
set (10). By multiplying a control factor βdecay (called test
decay) to β1 , we can control the infection levels in the future
resulting from various degrees of opening policies.
The policy response β1 is a function of time (Li et al.
2020) to reflect no measure, restricting mass gatherings, reopening, lock-down for different times:




2
−b(t − a)
(t − t0 )2
β1 (t) = arctan
+1+c exp −
π
20
s
(12)

k=1

where Ij,t is the infectious population percentage in state vj
at time t.
Then we design an edge-RNN composed of stacked
LSTM cells Fig. 3 with a following dense layer Fig. 4 to output Ie . The edge feature fi,t is the input of the edge-RNN.
The integrated procedure to generate edge feature is illustrated by Fig. 5, taking California as example. Our model,

where parameters a, b, c, t0 , s are learned from fitting historical data.

Experiment

Input
layer

Hidden
layer
(1)

w1

(2)

w1

We use the COVID-19 data in United States(Dong, Du, and
Gardner 2020) to evaluate our IeRNN model in training and
testing. From (Dong, Du, and Gardner 2020), we find the
state level infectious data in the US. Due to the incomplete
recovered cases of US, we use the difference of cumulative
cases in each state as the daily infected population. Then we
use the population of US (World-Population-Review 2020)
to calculate the infectious rate of each state, where we assume the population of a state is constant during the period
we concerned with. The data is split into training set (133
days) and testing set (35 days) for model evaluation.
The loss function for training is mean squared error
(MSE) of the output of model and true data value:

Output
layer
(3)

w1

yt−1

yt−p

..
.

..
.

(1)

wn

..
.

(2)

wn

..
.

tanh
yt

(3)

T

wn

loss =

1 X
(It − Iˆt )2
T + 1 t=0

where the output of model ŷt has the form (adapted from
(10)):

Figure 4: Fully connected dense layer.

Iˆt = σ1 α + (1 − σ1 − γ)It−1
P
t − t0 X
+ σ2 Ie,t−1 − γ
It−1−j
P + 1 j=0


P
X
t
−
t
0
(β1 I)t−1−j + (β2 Ie )t−1−j 
− S0 exp −
P + 1 j=0
(13)

Arizona

Oregon

Edge Feature
of California

Edge
RNN

Dense
Layer

Ie

where we have parameters (α, β1 , β2 , γ, σ1 , σ2 ). Due to
the interpretations of SEIR model, these parameter values
should range in the interval [0, 1].
We use gradient descent optimizer, Adam (Kingma and
Ba 2015), to train our IeRNN model. In each step, we update
the weight of neural networks model (10) and the parameters
of loss function (13) separately with different length of step
and regularization norms.
To assess the performance of our model, we design a series of numerical experiments to compare the IeRNN with
I-equation, temporal LSTM and ARIMA.
Regarding model size, the IeRNN and LSTM have about
4240 parameters while the I-equation and ARIMA have 5
parameters.

Robustness in parameter initialization
Nevada

Figure 5: Generate Ie of California.

Model robustness in training is an important attribute, so that
the model performance is not sensitive to initialization of parameters (α,β1 ,β2 ,γ,σ1 ,σ2 ) during training. We find that the
I-equation (I-model with Ie = 0) is not easy to learn in the
sense that a sub-optimal local minimum is often reached by
gradient descent during optimization. With coupling to RNN
(Ie 6= 0) in IeRNN, the landscape of loss function is regularized so that a local minimum from any random initialization
gives a robust and accurate fit. Fig. 8 shows that I-equation is
much less accurate in 1-day ahead prediction than IeRNN.
Fig. 9 illustrates the same outcome in 7-day ahead prediction.

In further experiment, we train and test IeRNN
and I-equation with randomly initialized parameters
(α,β1 ,β2 ,γ,σ1 ,σ2 ). By repeating the training and testing procedure for 20 times, we compare the average MSE loss for
both models. The results in Tables 1 and 2 show that IeRNN
performs better for both training loss and testing loss in 1day ahead and 7-day ahead predictions.

California
Florida
Virginia

training
testing
training
testing
training
testing

IeRNN
7.63e-09
1.26e-08
4.24e-08
3.59e-08
3.70e-09
6.90e-09

I-equation
8.49e-08
9.68e-07
3.45e-06
3.97e-05
2.60e-08
1.56e-07

Table 1: Average MSE’s of training (testing) loss in 1-day
ahead prediction.

California
Florida
Virginia

training
testing
training
testing
training
testing

IeRNN
8.01e-09
9.66-09
8.15e-09
9.77e-09
7.69e-09
2.03e-08

I-equation
1.32e-07
1.62e-06
1.49e-06
2.20e-05
8.21e-08
1.41e-06

Table 2: Average MSE’s of training (testing) loss in 7-day
ahead prediction.

1-day ahead prediction
We compare IeRNN (with β1 (t)), IeRNN, LSTM and
ARIMA on 1-day ahead prediction. IeRNN achieves lower
MSE error than LSTM and ARIMA on test set. With policy
response function β1 (t), IeRNN gives further improvement
beyond IeRNN with constant β1 , see Table 3.

California
Florida
Virginia

IeRNN
β1 (t)
1.83e-09
6.13e-09
1.27e-09

IeRNN

LSTM

ARIMA

2.45e-09
7.55e-09
1.29e-09

5.00e-09
4.68e-08
3.37e-09

1.44e-08
4.11e-08
3.74e-09

Table 3: MSE comparison of different models on 1-day
ahead prediction.

7-day ahead prediction
Motivated by weekly forecasting from CDC, we study the
7-day ahead prediction task. The loss function is modified
by replacing the I-model by a 7-day delayed version below:

Figure 6: Effect of test decay (policy response multiplier)
in test period of 1-day ahead prediction task. The IeRNN is
trained through March 3, 2020 to July 14, 2020. The vertical
axis is fraction of newly infected people in the population.
The horizontal axis is time in unit of days.

Iˆt = σ1 α + (1 − σ1 − γ)It−7
P
t − t0 X
It−7−j
+ σ2 Ie,t−7 − γ
P + 1 j=0


P
X
t
−
t
0
− S0 exp −
(β1 I)t−7−j + (β2 Ie )t−7−j 
P + 1 j=0
(14)
where the output value at time t is influenced by the feature
vector Ie at time t − 7 and later. With a similar modification
of loss function, we adapt LSTM to the 7-day ahead prediction. Table 4 compares IeRNN and LSTM in terms of MSE
on testing data.

Effect of Policy Response β1 (t) in Testing
To study the effect of policy response in IeRNN model on
testing data, we multiply the learned β1 (t) by a constant factor (called test decay) during testing. Fig. 6 and Fig. 7 show
the impact to model prediction on test data by adjusting test
decay which could control the future trend of infection.

California
Florida
Virginia

IeRNN
β1 (t)
6.79e-09
4.34e-08
1.16e-09

IeRNN

LSTM

9.84e-09
4.47e-08
1.55e-09

1.49e-08
5.74e-08
1.54e-08

Table 4: MSE comparison of different models on 7-day
ahead prediction.

Conclusions
We develop a novel spatio-temporal infectious disease
model called IeRNN, which is a hybrid model consisting
of I-equation from SEIR driven by spatial features. With
such features and RNN dynamics as external input to the Iequation, the robustness to parameter initialization in model
training is greatly improved. In 1-day and 7-day ahead
prediction, our model outperforms standard temporal models. In future work, the social control mechanisms (Albi,
Pareschi, and Zanella 2020; Morris et al. 2020) could be considered to strengthen the I-equation, as well as traffic data to
expand inflow effect beyond geographic neighbors.

Acknowledgement
The work was partially supported by NSF grants IIS1632935, DMS-1924548.
Figure 7: Effect of test decay (policy response multiplier)
in test period of 7-day ahead prediction task. The IeRNN is
trained through March 3, 2020 to July 14, 2020. The vertical
axis is fraction of newly infected people in the population.
The horizontal axis is time in unit of days.

References
Albi, G.; Pareschi, L.; and Zanella, M. 2020. Control with
uncertain data of socially structured compartmental epidemic models. arXiv preprint arXiv:2004.13067 .
Anderson, R.; and May, R. 1992. Infectious Diseases of Humans: Dynamics and Control. Oxford University Press, Oxford.

Figure 8: Comparing 1-day ahead predictions of IeRNN and
I-equation with training (testing) period to the left (right) of
the vertical dashed line. The vertical axis is fraction of newly
infected people in the population. The horizontal axis is time
in unit of days.

Figure 9: Comparing 7-day ahead predictions of IeRNN and
I-equation with training (testing) period to the left (right) of
the vertical dashed line. The vertical axis is fraction of newly
infected people in the population. The horizontal axis is time
in unit of days.

Andrew, C. 2005.
A map of the United
States, with state names (and Washington D.C.).
URL
https://commons.wikimedia.org/wiki/File:
Map of USA with state names.svg.
Deng, S.; Wang, S.; Rangwala, H.; Wang, L.; and Ning,
Y. 2019. Graph message passing with cross-location attentions for long-term ILI prediction.
arXiv preprint
arXiv:1912.10202 .
Dong, E.; Du, H.; and Gardner, L. 2020. An interactive webbased dashboard to track COVID-19 in real time. Lancet Inf
Dis. 20(5):533-534. doi: 10.1016/S1473-3099(20)30120-1 .
Hethcote, H. W. 2000. The mathematics of infectious diseases. SIAM Review 42: 599 – 653.
Hochreiter, S.; and Schmidhuber, J. 1997. Long short-term
memory. Neural computation 9(8): 1735–1780.
Kingma, D.; and Ba, J. 2015. Adam: A Method for Stochastic Optimization. 3rd International Conference for Learning
Representations, San Diego, 2015 .
Lai, G.; Chang, W.; Yang, Y.; and Liu, H. 2017. Modeling
Long- and Short-Term Temporal Patterns with Deep Neural
Networks. CoRR abs/1703.07015. URL http://arxiv.org/abs/
1703.07015.
Li, M. L.; Tazi Bouardi, H.; Skali Lami, O.; Trikalinos, T. A.; Trichakis, N. K.; and Bertsimas, D. 2020.
Forecasting COVID-19 and Analyzing the Effect of Government Interventions. medRxiv doi:10.1101/2020.06.23.
20138693. URL https://www.medrxiv.org/content/early/
2020/06/24/2020.06.23.20138693.
Li, Z.; Luo, X.; Wang, B.; Bertozzi, A.; and Xin, J. 2019. A
Study on Graph-Structured Recurrent Neural Networks and
Sparsification with Application to Epidemic Forecasting. In
World Congress on Global Optimization, 730–739. Springer.
Morris, D. H.; Rossine, F. W.; Plotkin, J. B.; and Levin, S. A.
2020. Optimal, near-optimal, and robust epidemic control.
arXiv preprint arXiv:2004.02209 .
Roosa, K.; Lee, Y.; Luo, R.; Kirpich, A.; Rothenberg, R.;
Hyman, J.; Yan, P.; and Chowell, G. 2020. Real-time forecasts of the COVID-19 epidemic in China from February 5th
to February 24th, 2020. Infectious Disease Modelling 5: 256
– 263.
Wang, B.; Luo, X.; Zhang, F.; Yuan, B.; Bertozzi, A.;
and Brantingham, P. 2018. Graph-based deep modeling and real time forecasting of sparse spatio-temporal
data. MiLeTS ’18, London, UK, DOI: 10.475/123 4; arXiv
preprint arXiv:1804.00684 .
Wang, B.; Yin, P.; Bertozzi, A.; Brantingham, P.; Osher, S.;
and Xin, J. 2019. Deep learning for real-time crime forecasting and its ternarization. Chinese Annals of Mathematics,
Series B 40(6): 949–966.
World-Population-Review. 2020. US States Population
2020. URL https://worldpopulationreview.com/states.
Wu, Y.; Yang, Y.; Nishiura, H.; and Saitoh, M. 2018. Deep
Learning for Epidemiological Predictions. The 41st International ACM SIGIR Conference on Research & Development
in Information Retrieval .

Yang, S.; Santillana, M.; and Kou, S. 2015. Accurate estimation of influenza epidemics using Google search data via
ARGO. Proceedings of the National Academy of Sciences
112(47): 14473–14478.

