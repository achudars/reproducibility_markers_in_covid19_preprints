COVID CT-Net: Predicting Covid-19 From Chest
CT Images Using Attentional Convolutional Network

arXiv:2009.05096v1 [eess.IV] 10 Sep 2020

Shakib Yazdani1 , Shervin Minaee2 , Rahele Kafieh3 , Narges Saeedizadeh3 , Milan Sonka4
1 ECE Department, Isfahan University of Technology, Iran
2 Snap Inc., Seattle, WA, USA
3 Medical Image and Signal Processing Research Center, Isfahan University of Medical Sciences, Iran
4 Iowa Institute for Biomedical Imaging, The University of Iowa, Iowa City, USA
Abstract—The novel corona-virus disease (COVID-19) pandemic has caused a major outbreak in more than 200 countries
around the world, leading to a severe impact on the health and
life of many people globally. As of Aug 25th of 2020, more than
20 million people are infected, and more than 800,000 death are
reported. Computed Tomography (CT) images can be used as
a as an alternative to the time-consuming “reverse transcription
polymerase chain reaction (RT-PCR)” test, to detect COVID-19.
In this work we developed a deep learning framework to predict
COVID-19 from CT images. We propose to use an attentional
convolution network, which can focus on the infected areas of
chest, enabling it to perform a more accurate prediction. We
trained our model on a dataset of more than 2000 CT images, and
report its performance in terms of various popular metrics, such
as sensitivity, specificity, area under the curve, and also precisionrecall curve, and achieve very promising results. We also provide
a visualization of the attention maps of the model for several
test images, and show that our model is attending to the infected
regions as intended. In addition to developing a machine learning
modeling framework, we also provide the manual annotation of
the potentionally infected regions of chest, with the help of a
board-certified radiologist, and make that publicly available for
other researchers.

I.

decrease in the number of lesions and involved lobes [5]. Chest
CT shows a low rate of missed diagnosis of COVID-19 (3.9%,
2/51) and may be useful as a standard method for the rapid
diagnosis of COVID-19 [6].

I NTRODUCTION

The coronavirus disease 2019 (COVID-19), caused by severe acute respiratory syndrome coronavirus 2 (SARS-CoV-2),
is an ongoing pandemic. By August 27, more than 24 million
confirmed cases, and more than 830,000 deaths cases were
reported in the world [1]. This has led to great public health
concerns, and World Health Organization (WHO) declared the
outbreak to be a Public Health Emergency of International
Concern (PHEIC) on January 30, 2020 and recognized it as a
pandemic on March 11, 2020 [2], [3].
For diagnosis of COVID-19, real-time reverse transcription polymerase chain reaction (RT-PCR) is regarded as the
reference standard; however, recent studies addressed the importance of chest computed tomography (CT) examination in
COVID-19 patients with false negative RT-PCR results [4]. In
initial stages of COVID-19, bilateral multilobar ground-glass
opacification (GGO) are common with a peripheral or posterior
distribution, mainly in the lower lobes. In intermediate stage
of disease, an increase in the number and size of GGOs and
progressive transformation of GGO into multifocal consolidative opacities are visible day 10 after the symptom onset
[5]. Imaging patterns corresponding to clinical improvement
of COVID-19 usually occur after week 2 of the disease
and include gradual resolution of consolidative opacities and

Fig. 1. The attention map of the model for three sample COVID-19 images.
We also provide the manually detected infected regions by a board-certified
radiologist. As we can see the attention maps are mostly active around the
infected regions.

Artificial Intelligence can help COVID-19 community by
accurate segmentation of infections and automatic diagnosis
and classification of X-ray and CT images. A number of studies aimed to separate COVID-19 patients from non-COVID-19
subjects (that include common pneumonia subjects and nonpneumonia subjects) [7]. Chen et al. [8] used CT images from
51 COVID-19 patients and 55 patients with other diseases
to train a UNet++ based segmentation model for segmenting
COVID-19 related lesions. They finally labeled each image
based on the segmented lesions and reached 95.2% (Accuracy),
100% (Sensitivity), and 93.6% (Specificity). Jin et al. [9] used
chest CT images from 496 COVID-19 patients with 1385
negative cases. They first segmented the lung using a 2D CNN
based model and then found slices related to COVID-19. The
model achieved sensitivity of 94.1%, specificity of 95.5%,
and AUC of 0.979. In [10], a similar strategy was taken in
3D format using U-Net+3D CNN based model (DeCoVNet)
for segmentation and 3D CNN for classification. The model
achieved a sensitivity of 90.7%, specificity of 91.1%, and AUC

of 0.959. DeepPneumonia [11] was proposed using ResNet50
to detect patients with COVID-19 (88 patients) from bacteria
pneumonia patients (101 patients) and 86 healthy people. They
reached an accuracy of 86.0% for pneumonia classification
(COVID-19 or bacterial pneumonia), and an accuracy of 94.0%
for pneumonia diagnosis (COVID-19 or healthy).
In this work, we propose a deep learning framework to
predict COVID-19 from the chest CT images directly. We
propose to use an attentional residual convolutional network,
which can better focus on the infected areas, leading to
an accurate classification of COVID-19 cases. We train our
model on a public dataset of COVID-19 CT images. Through
experimental results, we show that the attention maps of this
model are mostly active around the infected regions, which is
really encouraging. This is shown for three sample COVID-19
images in Figure 1.
We also perform a thorough experimental study, providing
both quantitative and qualitative analysis. In terms of quantitative study, we report the model’s sensitivity, specificity,
receiver operating characteristic, precision-recall curve, as well
as the distribution of predicted scores for both healthy and
COVID-19 images. In terms of qualitative results, we visualize
the attention maps of the trained model on some of the
COVID-19 test image, and also provide the potentially infected
regions by a visualization technique based on sliding window
on the model predictions, and show that our model is mostly
sensitive to the infected regions.
Here are the contribution of this paper:
•

We proposed a framework based on attentional convolutional network, to predict COVID-19 from CT
images.

•

We provided a detailed analysis of the model, by
looking at various qualitative and quantitative metrics,
as well as comparison with baselines.

•

We provide the visualization of the attention maps in
the trained model, and show that the model is mostly
sensitive to the infected areas.

•

We also annotate the infected regions for a subset of
COVID-19 images in this dataset with the help of a
board-certified radiologist, and make them available
publicly for other researchers to use them.

The structure of the rest of this paper is as follows. Section
II provides the details of the proposed framework. In III, we
provide an overview of the dataset used in this work, and its
characteristics. Section IV provides the experimental studies
and comparison with previous works. And finally the paper is
concluded in Section V.
II.

T HE P ROPOSED F RAMEWORK

Deep learning based models have achieved promising results in various computer vision and medical image analysis
problems in the past few years and have shown to beat
classical statistical models based on hand-crafted features with
a large margin in several studies [12]–[17]. They have also
been used by several research groups recently, to detect and
segment COVID-19 from medical images [18]–[21]. In this

work we focused on a predictive model based on attentional
covnolutional networks, to detect COVID-19 from CT images.
Given the fact that COVID-19 infects local regions of Lung, we
used a CNN model with attention mechanism to better focus
on the infected areas, resulting in higher accuracy. Our model
architecture is similar to residual attentional convolutional
network, and its details is provided in the next part.
A. Residual Attention Network
We adopt a residual attention model as our model architecture, which is a combination of multiple stacked residual
modules empowered with attention-aware units. Each attention module is composed of two branches: trunk branch and
mask branch. The trunk branch which is the upper branch of
attention module is supposed to do the feature extraction and
it can be based on a single block of any convolutional neural
network [22]. The architecture of our model is shown in Figure
2.
In this work, we use a single block of ResNet-56 as our
attention module basic unit. Considering input x the output of
trunk branch T(x) can be weighed using mask branch with
the output of M(x), which is based on a encoder-decoder
architecture. Therefore, the output of each attention module
can be obtained as in Eq 1:
Hi,c (x) = Mi,c (x) ∗ Ti,c (x)

(1)

where i ranges over all spatial positions and c ∈ {1, . . . , C}
is the index of the channel.
However, naive stacking of attention modules can lead to
performance drop because dot production with mask range
from zero to one will decrease the value of features in deep
layers. The ability to train a complex neural network such as
the aforementioned model that uses an stacking architecture is
the intuition behind using a residual attention learning. Thus,
the modified attention module output H can be written as
follows:
Hi,c (x) = (1 + Mi,c (x)) ∗ Fi,c (x)

(2)

where M(x) ranges from [0,1], and if M(x) is set to 0 we can
obtain the original features F(x).
Additionally, the difference between the original ResNet
and ours lies on the way residual learning is used. In the former
one, residual learning is written as Hi,c (x) = x + Fi,c (x),
where Fi,c (x) estimates the residual function, and in the latter
one, Fi,c (x) is the features generated by our baseline CNN.
Soft mask branch is consisted of a bottom-up top-down
fully convolutional network. In the bottom-up approach, it first
extracts the global features of the whole image, and then it
combines the extracted global features with the original feature
maps using the top-down architecture. First, max pooling is
performed to down sample the input image, following that
several number of residual units are used. For the top-down
part, the same number of linear interpolation (as max pooling)
is used to not only keep the output size the same as input
feature map but also to downsample them. Finally, following
two consecutive 1x1 convolution layers, a Sigmoid activation
function is applied to normalize the output between [0, 1].
A more understandable diagram of the identical mapping
between the trunk branch and the mask branch is shown in
Figure 3.

Fig. 2. Illustration of Residual Attention Network. In this network three hyperparameters are used which are p, t and r. The hyperparameter p represents the
total number of pre-processing residual units used before splitting into trunk and mask branches. t and r denote the number of residual units in trunk branch
and the number of neighboring pooling layers in the mask branch respectively. We use the following hyper-parameters setting: {p = 1, t = 2, r = 1} in our
experiments. Courtesy of [22].
TABLE I.
Data
Training
Test
Total

T RAIN /T EST OF THE DATASET WITH AND WITHOUT DATA
AUGMENTATION
No Augmentation
COVID-19
non-COVID-19
764
718
488
512
1252
1230

with Augmentation
COVID-19
non-COVID-19
3056
2868
488
512
3544
3380

Eight sampels images from this dataset are shown in Figure
4, from which four of them belong to COVID-19 patients, and
the other four to the none-COVID cases.

Fig. 3. The identical mapping between the trunk branch and the mask branch.
Courtesy of [22].

III.

COVID-19 CT DATASET

This study is performed on the publicly available SARSCoV-2 CT scan dataset, which has been collected from real
patients in the hospitals from Sao Paulo, Brazil [23]. It contains
2482 CT scan images in total, out of wchich 1252 are labeled
as COVID-19, and 1230 belong to the people not infected by
SARS-CoV-2. This data is divided into the training and test
sets, with the exact number of samples provided in Table I.

Fig. 4. Eight sample images from this dataset. The images in the first row
belong to the covid-19 cases, and the images in the second row belong to the
non-covid cases.

IV.
As the number of samples is important for a model to be
trained well, we used data augmentation technique to increase
the number of training samples (via Augmentor library in
Python [24]). Different transformations are used for data
augmentation, such as rotations, flip left-right, flip top-bottom,
random-distortion, and skew-titl. We were able to increase the
number of training samples by a factor of 4, with the help of
data augmentation.

E XPERIMENTAL R ESULTS

In this section we provide a detailed analysis of experimental studies performed for evaluating our classification framework. We present both qualitative and quantitative results, and
also compare our results with some baseline. Before getting
into the result details, we will provide a brief overview of
popular metrics used for evaluating classification models, and
also discuss about the hyper-parameters choice in our study.

TABLE II.

A. Evaluation Metrics
We used two widely adopted metrics, for evaluating the
performance of medical image classification models, sensitivity and specificity, as defined below:

Loss

T HE MODEL PERFORMANCE FOR DIFFERENT OPTIMIZERS ,
AND DIFFERENT LEARNING RATES .
Optimizer
ADAM
SGD

BCE
RMSProp

TP
Sensitivity (Sen.) =
TP + FN

(3)

TN
TN + FP

(4)

Specificity(Spec.) =

where, TP (True Positive) is the number of correctly classified
images of a class, FP (False Positive) is the number of the
wrong classified images of a class, FN (False Negative) is the
number of images of a class that have been detected as another
class, and TN (True Negative) is the number of images that do
not belong to a class and were not classified as belonging to
that class. In a more medical-friendly language, test sensitivity
is the ability of a test to correctly identify those with the
disease (true positive rate), whereas test specificity is the ability
of the test to correctly identify those without the disease (true
negative rate).
Besides these metrics, we also look at the model performance in terms of ROC-curve, precision-recall curve, an
histogram of predicted scores. The receiver operating characteristic curve (ROC curve ) shows the trade-off between
the true positive rate (TPR) and the false positive rate (FPR)
at various threshold settings. The true-positive rate is also
known as sensitivity, recall, or probability of detection in
machine learning. The false-positive rate is also known as
the probability of false alarm and can be calculated as (1
specificity). The area under the ROC curve is AUC. The
precision-recall curve is created by plotting precision against
Recall for different threshold. A high area under the curve
represents both high recall and high precision, where high
precision relates to a low false positive rate, and high recall
relates to a low false negative rate. High scores for both show
that the classifier is returning accurate results (high precision),
as well as returning a majority of all positive results (high
recall).

Learning
Rate
0.001
0.001
0.01
0.001
0.0001

Accuracy
0.907
0.885
0.920
0.881
0.900

±
±
±
±
±

0.001
0.002
0.001
0.002
0.001

C. Predicted Scores
As mentioned earlier, our model predicts a probability
score which shows the likelihood of a sample belonging to
COVID-19 class. The higher this score, the more likely the
image to have COVID-19 infection. In this section we present
the distribution of the predicted scores on the test set. Ideally
we expect the model to predict a very high likelihood score
(close to 1) for COVID-19 patients, while predicting low scores
(close to 0) for healthy people. Figures 5 and 6 show the
histogram of the predicted probabilities of both COVID-19
and Non-COVID cases on the test set. As it can be seen from
these figures, our model does a good job of separating the
scores of samples from each class.

Fig. 5.

The predicted probability scores of COVID cases on the test set

B. Model Hyper-parameters Impact
Hyper-parameters play an important role in the performance of machine learning models, specially deep neural
networks, and need to be tuned carefully. Hyper-parameter
tuning can be done both automatically and manually. In our
work, we manually tried several combinations of different
hyper-parameters so that we can select the best option. We
fixed the number of epochs to 100 and batch size to 16, and
varied the other hyper-parameters. Form optimizer, RMSProp
has shown to give us the best result, and for learning rate we
achieved the best validation accuracy with a rate of 0.01. It
is worth mentioning that although momentum-based nesterov
accelerated stochastic gradient descent reaches an acceptable
accuracy of 0.907, takes a long time to converge in comparison
to other below optimisers. Our entire implementation is done
in Keras with Tensorflow backend.
Table II shows the impact of different learning rates, and
different optimizers on the model validation accuracy.

Fig. 6. The predicted probability scores of Non-COVID cases on the test set

D. Cut-off Threshold Impact on Model Performance
As it is clear, in order to decide if a sample is COVID-19,
we can compare its predicted score with a cut-off threshold and
if it is larger than threshold it will be labeled as COVID-19.
Therefore, different cut-off thresholds can result on a different
set of samples being considered as COVID-19, and this can
lead to a trade-off between false positives and false negatives
rates. The default cut-off threshold is usually set to 0.5, but that
does not guarantee to achieve the best results. In order to find
the best threshold value, we try different thresholds ranging
from 0.1 to 0.9, and provide their performance in table III.

TABLE III.
S ENSITIVITY, SPECIFICITY SCORES OF THE PROPOSED
MODEL FOR DIFFERENT THRESHOLD VALUES . T HE CONFIDENCE SCORES
ARE ALSO PROVIDED , TO SEE THE STATISTICAL SIGNIFICANCE OF
RELATIVE GAINS .
Threshold
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9

Sensitivity
0.850 ± 0.002
0.870 ± 0.002
0.893 ± 0.002
0.893 ± 0.001
0.903 ± 0.001
0.893 ± 0.001
0.893 ± 0.001
0.870 ± 0.002
0.850 ± 0.002

Specificity
0.962 ± 0.001
0.951 ± 0.001
0.945 ± 0.001
0.939 ± 0.001
0.935 ± 0.001
0.939 ± 0.001
0.945 ± 0.001
0.951 ± 0.001
0.962 ± 0.001

F1 score
0.900 ± 0.001
0.906 ± 0.001
0.915 ± 0.001
0.913 ± 0.001
0.916 ± 0.001
0.913 ± 0.001
0.915 ± 0.001
0.906 ± 0.001
0.900 ± 0.001

E. Precision-Recall Curve, ROC Curve, and Confusion Matrix
Evaluating a model only by sensitivity and specificity metrics is difficult because these metrics are highly dependent on
the threshold value that is used to tune the model performance.
When we are dealing with a binary classification problem, we
are concerned with two types of errors, false positive rate, and
false negative rate. A better way to evaluate a model is to use
some metrics which combines FPR and FNR, and gives us a
global picture of the model. A common way to do so is the
Receiver operating characteristic (ROC), which shows the true
positive rate (y-axis) as a function of the false positive rate
(x-axis) for various thresholds ranging from zero to one. The
ROC curve of our model can be seen in Figure 7.

Fig. 8.

Precision-Recall curve for the test set

Fig. 9.

Confusion Matrix Plot

F. Visualization of Attention Layers

Fig. 7.

Receiver Operating Characteristic curve for the test set

Another way to compare the performance of a model for
all possible thresholds is through the precision-recall curve.
Precision is defined as a ratio of the number of true positives
divided by the sum of the positives. Recall or sensitivity is
also calculated as a ratio of the number of true positive images
divided by the sum of the total number of images regarded as
true positive and false negative. The precision-recall curve of
our model is illustrated in Figure 8.
Furthermore, the exact number of images labeled either as
COVID-19 cases or Non-COVID-19 cases in the test set can
be seen in the confusion matrix provided in Figure 9.

To visualize the attention maps, we make use of GradCAM and also its generalized version called Grad-CAM++.
Both of these methods are used as a visualization technique
to calculate which of the spatial locations in convolutional
layers are more important than others. This is done through
computing the gradient of the output class prediction with
respect to the feature maps of the desired convolutional layer.
Grad-CAM++ makes use of a different derivation to address
the shortcoming of the popularly used Grad-CAM, such as
multiple occurrences of a class in an image [25], [26].
The visual generated by Grad-CAM and Grad-CAM++ of
the third attention block layer of our model, for five sample
images are shown in Figure 10. With the help of a boardcertified radiologist, we also provide the manual regions which
are likely to be infected with COVID-19 in these images two,
and show them here. As we can see our model is very active
around the infected areas, which is really encouraging.

Fig. 11. The heatmap of the potentially infected regions, starting from the
left, the first image is the original in the dataset and following that the heatmap
of infected regions can be seen and the top most right one is the annotated
image by our radiologist.

mentioning that, the default threshold value of 0.5 is used in
these figures.

Fig. 10. Visualization of the third attention block. The left-most column
represents the original image, the second and third columns denote the
attention maps using Grad-CAM method, and Grad-CAM++ respectively, and
the last column shows the the annotated image by our radiologist.

G. Heatmap of Infected Regions by Model
We also used another simple technique (inspired by the
work of Zeiler and Fergus [27]) to show the potentially infected
regions of each image, with a sliding window technique on
the model predictions. This approach works by zeroing out
an NxN patch in the original image, finding its impact on the
model’s prediction and seeing if that lead the model to make
a mistake. If by occluding that region our model incorrectly
classifies a COVID-19 image as Non-COVID, that region
should be regarded as a potentially infected region in our CT
images. On the other hand, if this is not the case and the model
performance is not affected by occluding a region, then we
treat that region as not infected. Once we repeat this process
for various sliding windows of size NxN (by shifting them with
a stride of S each time), we can plot a saliency map of the
potentially infected regions for COVID-19. Here we provide
the detected regions for 5 sample images from our test set
in Figure 11. As we can see the model mostly contains the
manually detected infected regions.

Fig. 12.

The training and validation sensitivity of our model

Fig. 13.

The training and validation specificity of our model

H. Training Convergence Analysis
To see the model convergence during training, we provide
the recall (sensitivity), and specificity of the model on different
epochs in Figure 12 and Figure 13 respectively. Its worth

V.

C ONCLUSION

In this work, we proposed a deep learning framework for
COVID-19 prediction from chest CT images. To enable our
model to better attend to the infected parts of the images,
we used attention convolutional network. We train our model
one of the largest publicly available (so far) covid-19 CT
image datasets, and provide a detailed experimental study,
by looking on model performance in terms of sensitivity,
specificity, precision-recall curve, and ROC curve. In addition
to the quantitative analysis, we also provide a visualization
of the model attention maps and show how similar they are
with the manually detected infected regions by our boardcertified radiologist. As a part of this work, we also make
the manually detected infected regions publicly available, for
the future research use by the community.
ACKNOWLEDGMENT
The authors would like to thank the providers of the SARSCoV-2 CT scan dataset, for making it publicly available. We
would also like to thank our radiologist, Doctor Ghazaleh
Soufi, for her her help in manually detecting the infected
regions of CT images, which were not available as a part of
the original dataset.
R EFERENCES
[1] https://www.worldometers.info/coronavirus/
[2] WHO. (2020, 30 January, 2020). Statement on the second meeting of the International Health Regulations (2005) Emergency
Committee regarding the outbreak of novel coronavirus (2019nCoV).
[3] WHO. (2020). WHO Director-General’s opening remarks at the
media briefing on COVID-19.
[4] Huang, P., Liu, T., Huang, L., Liu, H., Lei, M., Xu, W., ... and
Liu, B. (2020). Use of chest CT in combination with negative
RT-PCR assay for the 2019 novel coronavirus but high clinical
suspicion. Radiology, 295(1), 22-23.
[5] Salehi, S., Abedi, A., Balakrishnan, S., Gholamrezanezhad, A.
(2020). Coronavirus disease 2019 (COVID-19): a systematic
review of imaging findings in 919 patients. American Journal
of Roentgenology, 1-7.
[6] Li, Y., Xia, L. (2020). Coronavirus disease 2019 (COVID-19):
role of chest CT in diagnosis and management. American Journal
of Roentgenology, 214(6), 1280-1286.
[7] Shi, F., Wang, J., Shi, J., Wu, Z., Wang, Q., Tang, Z., ... and
Shen, D. (2020). Review of artificial intelligence techniques in
imaging data acquisition, segmentation and diagnosis for covid19. IEEE reviews in biomedical engineering.
[8] Chen, J., Wu, L., Zhang, J., Zhang, L., Gong, D., Zhao, Y., ...
and Zhang, K. (2020). Deep learning-based model for detecting
2019 novel coronavirus pneumonia on high-resolution computed
tomography: a prospective study. MedRxiv.
[9] Jin, C., Chen, W., Cao, Y., Xu, Z., Zhang, X., Deng, L., ...
Feng, J. (2020). Development and Evaluation of an AI System
for COVID-19 Diagnosis. medRxiv.
[10] Zheng, C., Deng, X., Fu, Q., Zhou, Q., Feng, J., Ma, H., ... and
Wang, X. (2020). Deep learning-based detection for COVID-19
from chest CT using weak label. medRxiv.
[11] Song, Y., Zheng, S., Li, L., Zhang, X., Zhang, X., Huang, Z., ...
and Chong, Y. (2020). Deep learning enables accurate diagnosis
of novel coronavirus (COVID-19) with CT images. medRxiv.

[12] Ker, Justin, Lipo Wang, Jai Rao, and Tchoyoson Lim. ”Deep
learning applications in medical image analysis.” Ieee Access 6
(2017): 9375-9389.
[13] Oktay, Ozan, Jo Schlemper, Loic Le Folgoc, Matthew Lee, Mattias Heinrich, Kazunari Misawa, Kensaku Mori et al. ”Attention
u-net: Learning where to look for the pancreas.” arXiv preprint
arXiv:1804.03999 (2018).
[14] Minaee, Shervin, Yao Wang, Alp Aygar, Sohae Chung, Xiuyuan
Wang, Yvonne W. Lui, Els Fieremans, Steven Flanagan, and
Joseph Rath. ”MTBI identification from diffusion MR images
using bag of adversarial visual features.” IEEE transactions on
medical imaging 38, no. 11 (2019): 2545-2555.
[15] Ronneberger, Olaf, Philipp Fischer, and Thomas Brox. ”Unet: Convolutional networks for biomedical image segmentation.” International Conference on Medical image computing and
computer-assisted intervention. Springer, Cham, 2015.
[16] Minaee, Shervin, Amirali Abdolrashidi, Hang Su, Mohammed
Bennamoun, and David Zhang. ”Biometric recognition using
deep learning: A survey.” arXiv preprint arXiv:1912.00271
(2019).
[17] Bhatia, Siddharth, Yash Sinha, and Lavika Goel. ”Lung cancer
detection: A deep learning approach.” In Soft Computing for
Problem Solving, pp. 699-705. Springer, Singapore, 2019.
[18] Minaee, Shervin, Rahele Kafieh, Milan Sonka, Shakib Yazdani,
and Ghazaleh Jamalipour Soufi. ”Deep-covid: Predicting covid19 from chest x-ray images using deep transfer learning.” arXiv
preprint arXiv:2004.09363 (2020).
[19] Ozturk, T., Talo, M., Yildirim, E. A., Baloglu, U. B., Yildirim,
O., Acharya, U. R. ”Automated detection of COVID-19 cases
using deep neural networks with X-ray images”, Computers in
Biology and Medicine, 2020.
[20] Saeedizadeh, Narges, Shervin Minaee, Rahele Kafieh, Shakib
Yazdani, and Milan Sonka. ”COVID TV-UNet: Segmenting
COVID-19 Chest CT Images Using Connectivity Imposed UNet.” arXiv preprint arXiv:2007.12303 (2020).
[21] Wang, G., Liu, X., Li, C., Xu, Z., Ruan, J., Zhu, H., Meng,
T., Li, K., Huang, N. and Zhang, S., 2020. A Noise-Robust
Framework for Automatic Segmentation of COVID-19 Pneumonia Lesions From CT Images. IEEE Transactions on Medical
Imaging, 39(8), pp.2653-2663.
[22] Fei. Wang, Mengqing. Jiang, Chen. Qian, Shuo. Yang, Cheng.
Li, Honggang. Zhang, Xiaogang. Wang, Residual Attention
Network for Image Classification. IEEE Conference on Computer Vision and Pattern Recognition (CVPR), Jul. 2017, DOI:
10.1109/CVPR.2017.683.
[23] https://www.kaggle.com/plameneduardo/sarscov2-ctscandataset
[24] http://augmentor.readthedocs.io/
[25] Ramprasaath R. Selvaraju, Michael Cogswell, Abhishek Das,
Ramakrishna Vedantam, Devi Parikh. Grad-CAM: Visual Explanations from Deep Networks via Gradient-based Localization.
IEEE International Conference on Computer Vision (ICCV),
2017, DOI: 10.1109/ICCV.2017.74.
[26] Aditya Chattopadhyay, Anirban Sarkar, Prantik Howlader,
Vineeth N Balasubramanian, Grad-CAM++: Improved Visual Explanations for Deep Convolutional Networks. Computer Vision and Pattern Recognition, arXiv: 1710.11063, DOI:
10.1109/WACV.2018.0009.
[27] Matthew D. Zeiler, Rob Fergus. Visualizing and Understanding
Convolutional Networks. European Conference on Computer
Vision (ECCV), 2014, pp: 818833.

