On Fair Virtual Conference Scheduling:
Achieving Equitable Participant and Speaker Satisfaction
Gourab K Patro

Abhijnan Chakraborty

Indian Institute of Technology Kharagpur, India

Max-Planck Institute for Software Systems, Germany

Niloy Ganguly

Krishna P. Gummadi

Indian Institute of Technology Kharagpur, India

Max-Planck Institute for Software Systems, Germany

arXiv:2010.14624v1 [cs.SI] 24 Oct 2020

ABSTRACT
The (COVID-19) pandemic-induced restrictions on travel and social
gatherings have prompted most conference organizers to move
their events online. However, in contrast to physical conferences,
virtual conferences face a challenge in efficiently scheduling talks,
accounting for the availability of participants from different timezones as well as their interests in attending different talks. In such
settings, a natural objective for the conference organizers would be
to maximize some global welfare measure, such as the total expected
audience participation across all talks. However, we show that optimizing for global welfare could result in a schedule that is unfair
to the stakeholders, i.e., the individual utilities for participants and
speakers can be highly unequal. To address the fairness concerns,
we formally define fairness notions for participants and speakers,
and subsequently derive suitable fairness objectives for them. We
show that the welfare and fairness objectives can be in conflict
with each other, and there is a need to maintain a balance between
these objective while caring for them simultaneously. Thus, we
propose a joint optimization framework that allows conference
organizers to design talk schedules that balance (i.e., allow tradeoffs) between global welfare, participant fairness and the speaker
fairness objectives. We show that the optimization problem can be
solved using integer linear programming, and empirically evaluate
the necessity and benefits of such joint optimization approach in
virtual conference scheduling.

1

INTRODUCTION

Due to the restrictions on travel and social gatherings to tackle the
COVID-19 pandemic, most of the conferences have moved online
and some of them may remain online in the years to come. Online
conferences are not only hugely economical—due to the reduction
in organization and travel costs, thus enabling participation from
resource/budget constrained regions—they are also more environmentally sustainable than their physical in-person counterparts (by
reducing the carbon footprint from long-distance air travels, huge
power and non-renewable consumption at event venues, etc.). In
addition, they also provide a unique opportunity to significantly improve the scale and outreach of the conferences, along with focused
discussions through interactive tools like live messaging [16].
However, online conferences come with their own set of challenges. For example, scaling up participation is subject to the availability of stable and high-speed Internet in different regions; time
consuming training of participants and speakers on different interactive conferencing tools is essential for efficient participation [17].
Another big challenge in organizing online conferences is optimal

scheduling of the conference talks; this is because, online conferences usually have participants from different timezones all around
the globe unlike the physical conference setup where participants
assemble at a single place to participate in the conference. Thus, traditional timezone-specific conference schedules—usually followed
in physical conferences based on the timezone of the venue— is
no longer convenient for conferences being held online, as the participants from the other distant parts of the globe will find it hard
to attend. This demands for conference schedules which are not
timezone-specific but timezone-aware, and may stretch beyond the
usual 7-8 hours of a day, to cater to the participants from different
timezones. In this paper, we focus on this conference scheduling
problem and relevant concerns of efficiency and fairness.
A natural objective for conference scheduling would be to maximize some social welfare measure like the total expected audience
participation across all talks (formally defined in §2.3). However,
optimizing for such a social welfare objective could result in a schedule that is unfair to the stakeholders (as illustrated in §4.1), i.e., the
level of satisfaction enjoyed by individual participants (formally
defined in §2.1) can be very different, and the expected exposure
(audience size) at different talks can be disproportionately skewed
— leading to disparity in speaker satisfactions (formally defined in
§2.2). Intuitively, a participant would be less satisfied if her favorite
talks are scheduled in timeslots that are unfavorable for her, and
similarly a speaker would be less satisfied if her talk is scheduled in
a timeslot which adversely affects her deserved exposure (expected
audience or crowd). Thus, in conference scheduling, fairness for
participants and speakers are also desired along with social welfare.
We formally define the problem setup alongside suitable measures of participant satisfaction, speaker satisfaction, and social
welfare in §2. Intuitively, stakeholder fairness would be in bringing
parity to their normalized satisfactions (parity in individual participant satisfactions and parity in individual speaker satisfactions).
However, as absolute parity is often hard to achieve in discrete
real-world problems, we propose suitable relaxed fairness notions
for participants and speakers in sections 3.1 and 3.2 respectively.
Subsequently, we reduce these fairness notions to fairness objectives through suitable unfairness measures. Both fairness objectives
along with welfare objective are important in conference scheduling.
However, it may be impossible to optimize all three simultaneously
as there are some fundamental tensions among these objectives
(more details in §4.1); optimizing for one objective could cause
losses in other objectives.
We propose a joint optimization framework (§4.2) that allows
conference organizers to design schedules that balance (i.e., allow
trade-offs) between the global welfare, the participant fairness and

Preprint version, Oct 2020, (In submission)

the speaker fairness objectives. We show that the joint optimization
problem can be solved using integer linear programming, and we
also empirically evaluate the necessity and benefits of such joint
optimization approach in virtual conference scheduling along with
the analysis on the pitfalls of baseline approaches (§5). Our focus, in
this paper, is more towards bringing out the fundamental tensions,
trade-offs, and difficulties involved in online conference scheduling.
With this work, we begin to lay the foundation towards more focused research into—very timely and important problem—efficient
and fair online conference scheduling, and hope to motivate a new
line of work—both of theoretical and empirical interests—on such
multi-stakeholder scheduling settings. In this regard, we also provide a detailed description on possible future works (§7) to consider
many new nuances observed in online conferences.
In summary, we make the following contributions.
• We formally define the problem of online conference scheduling (§2), and the notions of social welfare (§2.3), participant
fairness (§3.1) and speaker fairness (§3.2). Through suitable
unfairness measures, we reduce them to fairness objectives.
To our knowledge, we are the first to do so.
• We illustrate the some fundamental tensions, trade-offs, and
possibility of conflicts among the two fairness objectives and
welfare objective (§4.1).
• We propose a joint optimization problem to suitably balance
these objectives, and empirically illustrate the difficulties
involved in the problem and the benefits of our approach
(sections 4.2 and 5). We also detail other nuances involved
in online conference and possible future works (§7).

2

PRELIMINARIES

Problem Setup: In a conference, let P, T , and S represent the sets
of participants, planned talks, and available slots (non-overlapping)
respectively; |P | = 𝑚, |T | = 𝑛, |S| = 𝑙; let 𝑝 ∈ P, 𝑡 ∈ T , and 𝑠 ∈ S
be instances of participant, talk, and slot respectively. Assuming a
talk to be scheduled only once, a conference schedule Γ is a mapping
Γ : T → S. Note that, in this paper, we limit ourselves to the case
with no parallel or overlapping time slots; this implies that each
slot refers to a unique time interval. Thus, the conference schedule
Γ is a one-to-one mapping with 𝑛 ≤ 𝑙. The goal of a conference
scheduling problem is to find a schedule Γ which satisfies some
specified constraint(s) or optimizes some specified objective(s).
Interest Scores [𝑉𝑝 (·)]: The participants may have different preference levels over the set of talks. We model this phenomenon using
participant-specific interest scores. Let 𝑉 (𝑡 |𝑝) = 𝑉𝑝 (𝑡) represent
𝑝’s interest score for talk 𝑡. Note that the interest score represents
the probability of satisfaction of the participant on attending the
corresponding talk; i.e., 𝑉𝑝 (𝑡) ∈ [0, 1], ∀𝑝 ∈ P, 𝑡 ∈ T .
Ease of Availability [𝐴𝑝 (·)]: In a virtual conference setting, the
participants are located in different parts of the world which makes
it convenient for them to attend talks only in specific times of the
day (usually during the day time of their timezone). Note that participants belonging to same timezone can still have different ease
of availability throughout the 24-hour period. We model this phenomenon using participant-specific availability scores. Let 𝐴(𝑠 |𝑝) =

Patro et al.

𝐴𝑝 (𝑠) represent the ease of availability score or the probability of 𝑝
making herself available in slot 𝑠; i.e., 𝐴𝑝 (𝑠) ∈ [0, 1], ∀𝑝 ∈ P, 𝑠 ∈ S.

2.1

Participant Satisfaction (𝑁𝐶𝐺)

In virtual conference settings, a participant’s satisfaction depends
on both her interest for the talks and her ease of availability for
the time slots when the talks are scheduled. For simplicity, we
assume 𝑉𝑝 (·) and 𝐴𝑝 (·) to be independent of each other, i.e., the
interest score of a talk does not affect the ease of availability of a
participant in a slot and vice-versa. However, a participant may
still attend a talk scheduled in a slot with less availability score if
she has a very high interest score for the talk. This means that the
expected gain of a participant 𝑝 from a talk 𝑡 in slot 𝑠 will depend
on the joint probability of 𝑝 making herself available in 𝑠 and she
getting satisfied after attending 𝑡: i.e, 𝑉𝑝 (𝑡) × 𝐴𝑝 (𝑠). Note that here
𝑉𝑝 (𝑡) × 𝐴𝑝 (𝑠) also represents the probability of the participant 𝑝
attending talk 𝑡 in slot 𝑠. Thus, given a conference schedule Γ, we
define the cumulative gain (𝐶𝐺) of∑︁
a participant as below.
𝐶𝐺 (𝑝 |Γ) = 𝐶𝐺𝑝 (Γ) =
𝑉𝑝 (𝑡) × 𝐴𝑝 (Γ(𝑡))
(1)
𝑡 ∈T

Now, let’s imagine a situation wherein the participant 𝑝 is asked to
choose the conference schedule Γ. Assuming 𝑝 to be a selfish and
rational agent, she would choose the schedule which benefits her
the most; i.e., the one which gives her the highest cumulative gain.
Here, the best conference schedule for 𝑝 would be the one in which
the talk with the highest 𝑉𝑝 is scheduled in the slot with the highest
𝐴𝑝 , the talk with second highest 𝑉𝑝 is scheduled in the slot with
the second highest 𝐴𝑝 , and so on; let Γ𝑝∗ be that best conference
schedule for 𝑝. We call the cumulative gain of 𝑝 given Γ𝑝∗ as her
ideal cumulative gain (𝐼𝐶𝐺) as defined below.
𝐼𝐶𝐺 (𝑝) = 𝐼𝐶𝐺𝑝 = max 𝐶𝐺𝑝 (Γ) = 𝐶𝐺𝑝 (Γ𝑝∗ )
(2)
Γ

𝐼𝐶𝐺 represents the maximum possible cumulative gain depending
on the interest scores of the participant and her availability scores.
Thus, a participant with higher overall interests or higher overall
availability will naturally have higher 𝐼𝐶𝐺. We now define the
overall satisfaction of a participant as her normalized cumulative
gain (𝑁𝐶𝐺) as below.
𝐶𝐺𝑝 (Γ)
𝑁𝐶𝐺 (𝑝 |Γ) = 𝑁𝐶𝐺𝑝 (Γ) =
(3)
𝐼𝐶𝐺𝑝
The denominator 𝐼𝐶𝐺𝑝 is the maximum possible cumulative gain
for the participant 𝑝. Thus, 𝑁𝐶𝐺𝑝 (Γ) ∈ [0, 1], ∀𝑝 ∈ P, ∀Γ.

2.2

Speaker Satisfaction (𝑁 𝐸𝐶)

The speaker of a talk gets satisfied if her talk gets participation;
more the participation more will be the speaker satisfaction. To
have higher participation, the talk needs to be scheduled in a slot
with high ease of availability of the participants who are highly
interested in the talk. Thus, given a schedule Γ, we define expected
crowd (𝐸𝐶) at talk 𝑡 as below. ∑︁
𝐸𝐶 (𝑡 |Γ) = 𝐸𝐶𝑡 (Γ) =
𝑉𝑝 (𝑡) × 𝐴𝑝 (Γ(𝑡))
(4)
𝑝 ∈P

Now if the speaker of the talk 𝑡 is given the task to design the
conference schedule, she would try to maximize her expected crowd
assuming that each speaker is a selfish and rational agent; let that
best schedule for 𝑡 be denoted as Γ𝑡∗ . We call the expected crowd at

On Fair Virtual Conference Scheduling:
Achieving Equitable Participant and Speaker Satisfaction

Preprint version, Oct 2020, (In submission)

talk 𝑡 with schedule Γ𝑡∗ as the ideal expected crowd (𝐼𝐸𝐶) of 𝑡.
𝐼 𝐸𝐶 (𝑡) = 𝐼𝐸𝐶𝑡 = max 𝐸𝐶𝑡 (Γ) = 𝐸𝐶𝑡 (Γ𝑡∗ )
(5)
Γ

𝐼𝐸𝐶 represents the maximum value for expected crowd depending
on the overall interest scores of the participants and their availability scores. Thus, a talk with higher overall interests from the
participants will have higher 𝐼𝐸𝐶. We now define the overall satisfaction of a speaker as the normalized expected crowd (𝑁 𝐸𝐶) at
her talk as below.
𝐸𝐶𝑡 (Γ)
𝑁 𝐸𝐶 (𝑡 |Γ) = 𝑁 𝐸𝐶𝑡 (Γ) =
(6)
𝐼𝐸𝐶𝑡
Note that the denominator 𝐼𝐸𝐶𝑡 is the maximum possible value of
the expected crowd at talk 𝑡. Thus, 𝑁 𝐸𝐶𝑡 (Γ) ∈ [0, 1], ∀𝑡 ∈ T , ∀Γ.

2.3

Social Welfare Objective (𝑇 𝐸𝑃)

A natural objective of the conference organizers is maximizing
the social welfare, i.e., the total participation in the conference.
Given a talk 𝑡 scheduled in slot 𝑠, the expectation of the participant
𝑝 attending it, can be written as 𝑉𝑝 (𝑡) × 𝐴𝑝 (𝑠). Thus, the total
expected participation (𝑇 𝐸𝑃) in the conference with schedule Γ can
be written as below.
∑︁ ∑︁
𝑇 𝐸𝑃 (Γ) =
𝑉𝑝 (𝑡) × 𝐴𝑝 (Γ(𝑡))
(7)

Note that, smaller the value of 𝜖, lesser is the disparity between
participant satisfactions, and fairer is the conference schedule for
the participants. Thus, to relate participant fairness notions with
different 𝜖 values, we can write the following lemma.
Lemma 1. If a schedule Γ is 𝜖 ′ -fair for the participants, then it is
also 𝜖-fair for participants ∀𝜖 ≥ 𝜖 ′ .
Proof. If pairwise disparities in participant satisfaction are less
than 𝜖 ′ , then they are also less than 𝜖, as 𝜖 ′ ≤ 𝜖.
□
In our setting, the value of 𝜖 can also be thought of as the tolerance level for disparity or unfairness in participant satisfactions.
Thus, given a schedule Γ, we can find the smallest possible 𝜖 and use
that to represent how unfair is Γ to the participants. We formally
define the metric to measure participant unfairness below.

Definition 2. Participant Unfairness ΨP (Γ) : The participant unfairness caused by a schedule Γ, is the smallest non-negative
value of 𝜖 such that Γ is 𝜖-fair for the participants.

ΨP (Γ) = inf 𝜖 : 𝜖 ≥ 0 & Γ is 𝜖-fair for participants
(10)

𝑝 ∈P 𝑡 ∈T

It is worth noting that the social welfare, here, is same as: (i) the sum
of cumulative gains of all the participants; (ii) the sum of expected
crowd at all the talks; i.e.,
∑︁ ∑︁
∑︁
𝑇 𝐸𝑃 (Γ) =
𝑉𝑝 (𝑡) × 𝐴𝑝 (Γ(𝑡)) =
𝐶𝐺 (𝑝 |Γ)
𝑝 ∈P 𝑡 ∈T

=

∑︁ ∑︁

𝑝𝑖 ∈ P

𝑉𝑝 (𝑡) × 𝐴𝑝 (Γ(𝑡)) =

∑︁

𝐸𝐶 (𝑡 |Γ)

𝑝𝑗 ∈P

(8)

𝑡 ∈T

Now the natural social welfare objective for conference scheduling can be written as argmaxΓ 𝑇 𝐸𝑃 (Γ). We use Γ SW to represent the schedule which maximizes the social welfare; i.e., Γ SW =
argmaxΓ 𝑇 𝐸𝑃 (Γ).

FAIRNESS IN CONFERENCE SCHEDULING

Optimizing for just participation-based objective could result in the
schedule being unfair to the stakeholders involved, i.e., participants
and speakers. Optimum participation could result in very high
satisfaction for some participants while other participants may
end up very less satisfied; same could happen for the speakers too.
Thus, we first define the fairness notions for the participants and
the speakers in §3.1 and §3.2 respectively.

3.1

Proposition 3.1. Participant unfairness metric from eq. (10) can
be reduced as below.


ΨP (Γ) = max 𝑁𝐶𝐺 (𝑝𝑖 |Γ) − min 𝑁𝐶𝐺 (𝑝 𝑗 |Γ)
(11)

𝑝 ∈P

𝑡 ∈T 𝑝 ∈P

3

(Here, the notation inf {·} represents infimum of a set.)

Participant Fairness

Disparity in normalized satisfactions of participants is the cause
of participant unfairness. Thus, to ensure fairness for participants,
the conference schedule should equally satisfy all the participants.
However, such hard constraint can be infeasible in real-world cases.
Thus, we define a relaxed fairness notion for participants below.
Definition 1. 𝝐-Fairness for Participants: For a non-negative
real number 𝜖, a schedule Γ is said to be 𝜖-fair for participants iff the
following condition is satisfied.
𝑁𝐶𝐺 (𝑝𝑖 |Γ) − 𝑁𝐶𝐺 (𝑝 𝑗 |Γ) ≤ 𝜖, ∀𝑝𝑖 , 𝑝 𝑗 ∈ P
(9)

Proof. For a schedule Γ, let’s assume ΨP (Γ) = 𝜖 ′ . Let 𝜖 ∈ [0, 𝜖 ′ ),
then Γ is not 𝜖-fair for participants (from definition 2). This implies that, there is a pair of participants 𝑝𝑖 , 𝑝 𝑗 ∈ P such that
𝜖 < 𝑁𝐶𝐺 (𝑝𝑖 |Γ) − 𝑁𝐶𝐺 (𝑝 𝑗 |Γ) ≤ 𝜖 ′ (from definition 1). Let’s increase 𝜖 till 𝜖 = 𝑁𝐶𝐺 (𝑝𝑖 |Γ) − 𝑁𝐶𝐺 (𝑝 𝑗 |Γ) . Thus, now the satisfaction disparity between 𝑝𝑖 and 𝑝 𝑗 is at most 𝜖, however 𝜖 may
still be less than 𝜖 ′ . If we keep on increasing 𝜖 like this, there
will not be any such opportunity to increase 𝜖 further when we
reach 𝜖 = max𝑝𝑖 ,𝑝 𝑗 ∈ P 𝑁𝐶𝐺 (𝑝𝑖 |Γ) − 𝑁𝐶𝐺 (𝑝 𝑗 |Γ) . Now with the
current value of 𝜖, Γ can be called 𝜖-fair for the first time. Therefore, ΨP (Γ) = 𝜖 ′ = max𝑝𝑖 ,𝑝 𝑗 ∈ P 𝑁𝐶𝐺 (𝑝𝑖 |Γ) − 𝑁𝐶𝐺 (𝑝 𝑗 |Γ) , which
is the maximum pairwise disparity in participant satisfaction.
As ∀𝑝 ∈ P,


max 𝑁𝐶𝐺 (𝑝𝑖 |Γ) ≥ 𝑁𝐶𝐺 (𝑝 |Γ) ≥ min 𝑁𝐶𝐺 (𝑝 𝑗 |Γ) ≥ 0,
𝑝𝑖 ∈ P

𝑝𝑗 ∈P

the maximum pairwise disparity will be in between the most satisfied participant(s)
and the least satisfied

 participant(s).
∴ ΨP (Γ) = max𝑝𝑖 ∈ P 𝑁𝐶𝐺 (𝑝𝑖 |Γ) − min𝑝 𝑗 ∈ P 𝑁𝐶𝐺 (𝑝 𝑗 |Γ)
□
Using the metric for unfairness above, we can define the following fairness objective for participants.
Definition 3. Fairness objective for participants can be defined as finding the schedule Γ which minimizes ΨP (Γ).
n
o n
o
argmin ΨP (Γ) ≡ argmin max 𝑁𝐶𝐺 (𝑝𝑖 |Γ) − min 𝑁𝐶𝐺 (𝑝 𝑗 |Γ)
Γ

Γ

𝑝𝑖 ∈ P

𝑝𝑗 ∈P

(12)

Preprint version, Oct 2020, (In submission)

3.2

Patro et al.

Speaker Fairness

Similar to participant fairness, we follow a parity-based notion for
speaker fairness and define the relaxed speaker fairness below.
Definition 4. 𝝐-Fairness for Speakers: For a non-negative real
number 𝜖, a schedule Γ is said to be 𝜖-fair for speakers iff the following
condition is satisfied.
𝑁 𝐸𝐶 (𝑡𝑖 |Γ) − 𝑁 𝐸𝐶 (𝑡 𝑗 |Γ) ≤ 𝜖, ∀𝑡𝑖 , 𝑡 𝑗 ∈ T
(13)

The lemma 1 can be repeated, here, for speakers too.
Lemma 2. If a schedule Γ is 𝜖 ′ -fair for the speakers, then it is also
𝜖-fair for speakers ∀𝜖 ≥ 𝜖 ′ .
Following arguments similar to participant unfairness, we define
the metric to measure speaker unfairness below.

Definition 5. Speaker Unfairness ΨS (Γ) : The speaker unfairness caused by a schedule Γ, is the smallest non-negative value of
𝜖 such that Γ is 𝜖-fair for the speakers.

ΨS (Γ) = inf 𝜖 : 𝜖 ≥ 0 & Γ is 𝜖-fair for speakers
(14)
Proposition 3.2. Participant unfairness metric from eq. (10) can
be reduced as below.


ΨS (Γ) = max 𝑁 𝐸𝐶 (𝑡𝑖 |Γ) − min 𝑁 𝐸𝐶 (𝑡 𝑗 |Γ)
(15)
𝑡𝑖 ∈ T

𝑡𝑗 ∈T

We skip the proofs for lemma 2 and proposition 3.2, as they will
follow arguments and approach similar to those in lemma 1 and
proposition 3.1 respectively. Using the speaker unfairness metric
from eq. (15), we define the following fairness objective for speakers.
Definition 6. Fairness objective for speakers can be defined
as finding the schedule Γ which minimizes ΨS (Γ).
n
o n
o
S
argmin Ψ (Γ) ≡ argmin max 𝑁 𝐸𝐶 (𝑡𝑖 |Γ) − min 𝑁 𝐸𝐶 (𝑡 𝑗 |Γ)
Γ

Γ

𝑡𝑖 ∈ T

𝑉𝑝 (𝑡)
𝐴𝑝 (𝑠)
𝑡
𝑠1
𝑠2
𝑠3
𝑝1
1
1 0.49 0
𝑝2
1
0 0.49 1
Table 1: Example Problem 1

Participants

𝑡𝑗 ∈T

Proof. Let’s assume the opposite argument to be true; i.e., we
can always gain participant fairness with no loss to social welfare.
We disprove this using a counter example with two participants,
one talk and three slots as given in table 1. Both participants have
interest score of 1 for the talk. Now looking at the availability
scores, while 𝑝 1 and 𝑝 2 have full ease of availability in 𝑠 1 and 𝑠 3
respectively, they both can make themselves available 𝑠 2 with 0.49
probability. If we consider a social welfare objective (participation
maximization) here, we would end up scheduling the talk in either
in 𝑠 1 or in 𝑠 3 ; if Γ(𝑡) = 𝑠 1 or Γ(𝑡) = 𝑠 3 , then 𝑇 𝐸𝑃 (Γ) = 1; if
Γ(𝑡) = 𝑠 2 , then 𝑇 𝐸𝑃 (Γ) = 0.98 which is less. However, maximizing
participation will either end up with [𝑁𝐶𝐺 (𝑝 1 ) = 1, 𝑁𝐶𝐺 (𝑝 2 ) = 0]
if Γ(𝑡) = 𝑠 1 or [𝑁𝐶𝐺 (𝑝 1 ) = 0, 𝑁𝐶𝐺 (𝑝 2 ) = 1] if Γ(𝑡) = 𝑠 3 ; As both
of these results from social welfare optimization provide disparate
satisfaction to the participants, they both are unfair. On the other
hand, if we schedule the talk in 𝑠 2 (Γ(𝑡) = 𝑠 2 ), then it becomes
fair to both the participants as they will get similar satisfaction
[𝑁𝐶𝐺 (𝑝 1 ) = 0.49, 𝑁𝐶𝐺 (𝑝 2 ) = 0.49]—they both get a chance to
make themselves available in 𝑠 2 to attend the talk. Even though
scheduling the talk in 𝑠 2 , ensures participant fairness, it has come
at a loss in social welfare; i.e., 𝑇 𝐸𝑃 (Γ) reduced from 1 to 0.98. □
Note that, in the example given in table 1, introducing participant
fairness has caused a loss in social welfare, and also a loss in the
speaker satisfaction 𝑁 𝐸𝐶 (𝑡) (also reduced from 1 to 0.98). Thus, it
is important to ask: Q1: to what extent the conference organizer
is ready to lose social welfare and speaker satisfaction while
bringing in participant fairness?

(16)

Claim 2. In the virtual conference scheduling problem (as defined
in §2), it is not always possible to gain speaker fairness with out losing
social welfare.

Given the conference scheduling problem (as defined in §2), the
ultimate goal is to find a schedule Γ which optimizes social welfare
while minimizing participant unfairness and speaker unfairness
(as defined in eq. (7), eq. (12), eq. (16) respectively). However, simultaneously optimizing for them could prove to be challenging
and present disagreement between the objectives. Thus, first in
§4.1, we bring out certain difficulties in simultaneously ensuring
fairness and social welfare while also highlighting the potential conflicts between them. Then, in §4.2, we propose a joint optimization
framework for the problem.

Proof. Let’s assume the opposite argument to be true; i.e., we
can always gain speaker fairness with no loss to social welfare.
We disprove this using a counter example with just one participant, two talks, and three available slots as given in table 2. Now,
to maximize social welfare, we can just match talks in decreasing order of overall interest scores to slots in decreasing order of
availability scores; i.e., Γ SW (𝑡 1 ) = 𝑠 1 and Γ SW (𝑡 2 ) = 𝑠 3 , which
will yield 𝑇 𝐸𝑃 (Γ SW ) = 1.4. The speaker satisfactions for the talks
with this schedule will be: 𝑁 𝐸𝐶 (𝑡 1 |Γ SW ) = 1 (as 𝐸𝐶 (𝑡 1 |Γ SW ) = 1
and 𝐼𝐸𝐶 (𝑡 1 ) = 1), and 𝑁 𝐸𝐶 (𝑡 2 |Γ SW ) = 0.8 (as 𝐸𝐶 (𝑡 1 |Γ SW ) = 0.4
and 𝐼𝐸𝐶 (𝑡 1 ) = 0.5). Such disparity in speaker satisfactions can
be attributed to speaker unfairness. In order to reduce speakerside disparity, we can use a different schedule: Γ(𝑡 1 ) = 𝑠 3 and
Γ(𝑡 2 ) = 𝑠 2 ; this yields speaker satisfactions 𝑁 𝐸𝐶 (𝑡 1 |Γ) = 0.8 and
𝑁 𝐸𝐶 (𝑡 2 |Γ) = 0.75 (as 𝐸𝐶 (𝑡 1 |Γ) = 0.8 and 𝐸𝐶 (𝑡 2 |Γ) = 0.375). This
above schedule has in fact the lowest possible disparity in speaker
satisfactions, i.e., the highest possible speaker fairness. Even though
this schedule {(𝑡 1, 𝑠 3 ), (𝑡 2, 𝑠 2 )} is fairer to the speakers than the

4

4.1

BALANCING WELFARE AND FAIRNESS

Tension between Fairness and Welfare

In this section, through a set of claims, we illustrate some fundamental tensions between social welfare and fairness.
Claim 1. In the virtual conference scheduling problem (as defined
in §2), it is not always possible to gain participant fairness without
losing social welfare.

On Fair Virtual Conference Scheduling:
Achieving Equitable Participant and Speaker Satisfaction

Preprint version, Oct 2020, (In submission)

𝑉𝑝 (𝑡)
𝐴𝑝 (𝑠)
𝑡1 𝑡2 𝑠1 𝑠2 𝑠3
𝑝1
1 0.7 1 1 0
𝑝2
1 0.7 1 0 1
Table 3: Example Problem 3

earlier {(𝑡 1, 𝑠 1 ), (𝑡 2, 𝑠 3 )}, the gain in speaker fairness has come at a
loss in social welfare; 𝑇 𝐸𝑃 (Γ) reduced from 1.4 to 1.175.
□
There are two important points to note from the example in
table 2: (i) the most fair solution for speakers leaves a very valuable
slot 𝑠 1 —with the highest overall availability scores for participants—
unused thereby losing a huge opportunity for larger participation; (ii) speaker fairness has introduced a loss in social welfare
(𝑇 𝐸𝑃 (Γ SW ) = 1.4 to 𝑇 𝐸𝑃 (Γ) = 1.175) and also a loss in participant
satisfaction (𝑁𝐶𝐺 (𝑝 |Γ SW ) = 1 to 𝑁𝐶𝐺 (𝑝 |Γ) ≈ 0.84). Thus, it is
important to ask; Q2: to what extent the conference organizer is
ready to lose social welfare and participant satisfaction while
bringing in speaker fairness?
Claim 3. In the virtual conference scheduling problem (as defined
in §2), it is not always possible to get speaker fairness with out losing
participant fairness and vice-versa.
Proof. Let’s assume the opposite argument to be true; we can
always get participant fairness and speaker fairness simultaneously.
We disprove this using a counter example with two participants,
two talks and four available slots as given in table 3. In this example, the schedule Γ = {(𝑡 1, 𝑠 2 ), (𝑡 2, 𝑠 3 )} achieves speaker fairness—
𝑁 𝐸𝐶 (𝑡 1 |Γ) = 𝑁 𝐸𝐶 (𝑡 2 |Γ) = 0.5 (as 𝐸𝐶 (𝑡 1 |Γ) = 1, 𝐸𝐶 (𝑡 2 |Γ) =
0.7, while 𝐼 𝐸𝐶 (𝑡 1 ) = 2, 𝐼𝐸𝐶 (𝑡 2 ) = 1.4). However, Γ is unfair
for the participants—𝑁𝐶𝐺 (𝑝 1 |Γ) = 11.7 < 10..77 = 𝑁𝐶𝐺 (𝑝 2 |Γ) (as
𝐶𝐺 (𝑝 1 |Γ) = 1, 𝐶𝐺 (𝑝 2 |Γ) = 0.7, while 𝐼𝐶𝐺 (𝑝 1 ) = 𝐼𝐶𝐺 (𝑝 2 ) = 1.7).
On the other hand, schedule Γ ′ = {(𝑡 1, 𝑠 1 ), (𝑡 2, 𝑠 4 )} is fair for the
participants—𝑁𝐶𝐺 (𝑝 1 |Γ ′ ) = 𝑁𝐶𝐺 (𝑝 2 |Γ ′ ) = 11.14
.7 , while being unfair for the speakers as 𝑁 𝐸𝐶 (𝑡 1 |Γ ′ ) = 1 > 0.2 = 𝑁 𝐸𝐶 (𝑡 2 |Γ ′ ). □

Participants

Here we normalize the social welfare objective to bring all the three
components to similar scales; i.e., 𝑇 𝐸𝑃 is divided by |P | · |T | = 𝑚𝑛
(it is the maximum possible value for 𝑇 𝐸𝑃—occurs when 𝑉𝑝 (𝑡) =
𝐴𝑝 (𝑠) = 1, ∀𝑝, 𝑡, 𝑠). We also reverse the fairness objective functions
from eq. (12) and eq. (16) while inserting them in eq. (17) as it
features argmax instead of argmin, and use 𝜆1, 𝜆2 as weights for
participant fairness and speaker fairness respectively.
We take a matrix 𝑋 of dimensions |T | × |S|. The elements of 𝑋 :
𝑋𝑡,𝑠 is a binary indicator variable for talk 𝑡 ∈ T being scheduled
in slot 𝑠 ∈ S, i.e., 𝑋𝑡,𝑠 = 1 if 𝑡 is scheduled in 𝑠 and 0 otherwise.
Now to operationalize the joint optimization objective in eq. (17),
we express it as the following integer linear program.
argmax
𝑋

As seen in the example in table 3, participant fairness and speaker
fairness can not always be achieved simultaneous. Thus, an important question is: Q3: to what extent the conference organizer is
ready to lose participant fairness while bringing in speaker
fairness and vice-versa?

1 ∑︁ ∑︁ ∑︁
𝑉𝑝 (𝑡) · 𝐴𝑝 (𝑠) · 𝑋𝑡,𝑠
𝑚𝑛
𝑡 ∈T 𝑝 ∈ P 𝑠 ∈S
"
∑︁ ∑︁ 𝑉𝑝 𝑗 (𝑡) · 𝐴𝑝 𝑗 (𝑠)
· 𝑋𝑡,𝑠
+ 𝜆1 min
𝐼𝐶𝐺 (𝑝 𝑗 )
𝑝𝑗 ∈P
𝑡 ∈T 𝑠 ∈S
#
∑︁ ∑︁ 𝑉𝑝 (𝑡) · 𝐴𝑝 (𝑠)
𝑖
𝑖
− max
· 𝑋𝑡,𝑠
𝐼𝐶𝐺 (𝑝𝑖 )
𝑝𝑖 ∈ P
𝑡 ∈T 𝑠 ∈S
"
∑︁ ∑︁ 𝑉𝑝 (𝑡 𝑗 ) · 𝐴𝑝 (𝑠)
+ 𝜆2 min
· 𝑋𝑡 𝑗 ,𝑠
𝐼𝐸𝐶 (𝑡 𝑗 )
𝑡 𝑗 ∈T
𝑝 ∈ P 𝑠 ∈S
#
∑︁ ∑︁ 𝑉𝑝 (𝑡𝑖 ) · 𝐴𝑝 (𝑠)
· 𝑋𝑡𝑖 ,𝑠
− max
𝐼𝐸𝐶 (𝑡𝑖 )
𝑡𝑖 ∈T
𝑝 ∈ P 𝑠 ∈S

It is very evident from the given examples that, both fairness and
satisfaction of participants and speakers could often come in conflict
with each other and also with the overall social welfare in such
conference scheduling problems. Thus, there is a need to maintain
suitable balance between both fairness notions and social welfare
while still simultaneously caring for them in conference scheduling.

s.t.
𝑋𝑡,𝑠 ∈ {0, 1} ∀𝑡 ∈ T , 𝑠 ∈ S
∑︁
𝑋𝑡,𝑠 = 1, ∀𝑡 ∈ T
𝑠 ∈S

∑︁

4.2

Joint Optimization for Welfare and Fairness

We combine participant and speaker fairness objectives with our
natural objective of social welfare maximization, and design the
following joint optimization problem.
n
o
o
𝑇 𝐸𝑃 (Γ)
argmax
+𝜆1 × min 𝑁𝐶𝐺 (𝑝 𝑗 |Γ) −max 𝑁𝐶𝐺 (𝑝𝑖 |Γ)
𝑚𝑛
𝑝𝑗 ∈P
𝑝𝑖 ∈ P
Γ
n
o n
o
+ 𝜆2 × min 𝑁 𝐸𝐶 (𝑡 𝑗 |Γ) − max 𝑁 𝐸𝐶 (𝑡𝑖 |Γ)
(17)
𝑡𝑗 ∈T

𝑋𝑡,𝑠 ≤ 1, ∀𝑠 ∈ S

𝑡 ∈T

(18)
Here the first constraint is the integral constraint for the interger
program. Second constraint ensures that, each talk gets scheduled
once. On the other hand, one slot can be allocated to atmost one
talk which is ensured by the third constraint. We use cvxpy (https:
//www.cvxpy.org/) paired with Gurobi (https://www.gurobi.com/)
solver for the integer linear programs.1

𝑡𝑖 ∈ T

𝑉𝑝 (𝑡)
𝐴𝑝 (𝑠)
𝑡1 𝑡2 𝑠1
𝑠2
𝑠3
𝑝
1 0.5 1 0.75 0.8
Table 2: Example Problem 2

Participants

𝑠4
0.2
0.2

1 Even

though we solve the joint optimization problem by converting it into an integer
linear program which works well for problems of small size, more research is needed
in developing approaches that are more scalable and computationally efficient. In this
paper, we use the integer program approach and focus more towards empirically bringing out fundamental tensions, trade-offs and difficulties involved in fair conference
scheduling problem.

Preprint version, Oct 2020, (In submission)

5

EXPERIMENTAL EVALUATION

In this section, we present the baselines, introduce the metrics for
evaluations and then show how our proposal compares with the
baselines along the presented metrics.

5.1

Patro et al.

≡ argmax
Γ

≡ argmax
Γ

∑︁ ∑︁

Γ

𝑝 ∈ P 𝑡 ∈T

∑︁

𝐴(Γ(𝑡))

𝑡 ∈T

h ∑︁

Baselines

Claim 4. In physical conference settings (i.e., all participants have
identical ease of availability over all available slots 𝐴𝑝 (𝑠) = 𝐴(𝑠),
∀𝑠 ∈ S, 𝑝 ∈ P), IAM yields a conference schedule which maximizes
social welfare.
Proof. As this is a special case of the scenario covered in lemma 3,
refer to case (a) of lemma 3 for the proof.
□
Lemma 3. IAM maximizes social welfare, if the participants are
identical either in terms of their interests in the talks or in terms of
their ease of availability over the available slots, or both.

𝑉𝑝 (𝑡)×𝐴(Γ(𝑡))

𝑡 ∈T 𝑝 ∈ P

i
∑︁
𝑉𝑝 (𝑡) ≡ argmax
𝐴(Γ(𝑡))×V (𝑡)
Γ

𝑝 ∈P

(where overall interest score = V (𝑡) =

We use the following baselines and empirically compare them with
our approach from §4.2 (further on referred to as FairConf).
(1) Social Welfare Maximization (SWM): In this baseline, we
just optimize the schedule for social welfare; i.e., Γ SW or
argmaxΓ 𝑇 𝐸𝑃 (Γ) without any fairness consideration.
(2) Participant Fairness Maximization (PFair): Here, we just
optimize for participant fairness; i.e., minimize participant
unfairness [argminΓ ΨP (Γ)] as defined in eq. (12).
(3) Speaker Fairness Maximization (SFair): Here, we just optimize for speaker fairness; i.e., minimize speaker unfairness
[argminΓ ΨS (Γ)] as defined in eq. (16).
(4) Interest-Availability Matching (IAM): Here, we sort the talks
in descending order of the overall interest scores received
Í
by them, i.e., 𝑝 ∈ P 𝑉𝑝 (𝑡), and the slots in descending order of the overall availability scores received by them, i.e.,
Í
𝑝 ∈ P 𝐴𝑝 (𝑠). Now, we assign the talk with the highest overall interest score to the slot with the highest overall availability score, the talk with the second highest overall interest
score to the slot with the second highest overall availability
score, and so on (with random tie-breaks). IAM is one of the
naive alternatives when scheduling is done manually (as natural objectives like SWM usually need computing resources).
It is also worth noting that, in the usual physical conference
settings, both SWM and IAM give results which maximize
social welfare, as we prove in claim 4.

∑︁ ∑︁

𝑉𝑝 (𝑡)×𝐴(Γ(𝑡)) ≡ argmax

𝑡 ∈T

Í

𝑝 ∈ P 𝑉𝑝 (𝑡))

Case-(b): Given 𝑉𝑝 (𝑡) = 𝑉 (𝑡), ∀𝑡 ∈ T , 𝑝 ∈ P. From eq. (7):
∑︁ ∑︁
SWM ≡ argmax
𝑉𝑝 (𝑡) × 𝐴𝑝 (Γ(𝑡))
Γ

≡ argmax
Γ

≡ argmax
Γ

∑︁ ∑︁

𝑝 ∈ P 𝑡 ∈T

𝑉 (𝑡)×𝐴𝑝 (Γ(𝑡)) ≡ argmax
Γ

𝑝 ∈ P 𝑡 ∈T

∑︁

𝑉 (𝑡)

𝑡 ∈T

h ∑︁

∑︁ ∑︁

𝑉 (𝑡)×𝐴𝑝 (Γ(𝑡))

𝑡 ∈T 𝑝 ∈ P

i
∑︁
𝐴𝑝 (Γ(𝑡)) ≡ argmax
𝑉 (𝑡)×A (Γ(𝑡))
Γ

𝑝 ∈P

(where overall availability score = A (𝑠) =

𝑡 ∈T

Í

𝑝 ∈ P 𝐴𝑝 (𝑠))

Case-(c): Given 𝐴𝑝 (𝑠) = 𝐴(𝑠), 𝑉𝑝 (𝑡) = 𝑉 (𝑡), ∀𝑠 ∈ S, ∀𝑡 ∈ T , 𝑝 ∈ P.
From eq. (7):
∑︁ ∑︁
SWM ≡ argmax
𝑉𝑝 (𝑡) × 𝐴𝑝 (Γ(𝑡))
Γ

≡ argmax
Γ

∑︁ ∑︁

𝑝 ∈ P 𝑡 ∈T

𝑉 (𝑡)×𝐴(Γ(𝑡)) ≡ argmax
Γ

𝑝 ∈ P 𝑡 ∈T

≡ argmax
Γ

∑︁

∑︁ ∑︁

𝑉 (𝑡)×𝐴(Γ(𝑡))

𝑡 ∈T 𝑝 ∈ P

𝑉 (𝑡) × 𝐴(Γ(𝑡))

𝑡 ∈T

In all the three cases above, SWM reduces to a form where the terms
are independent of individual participant interests and availability
while depending only on the overall interest levels (V in case
(a), and participant-independent 𝑉 in case (b) & (c)) and overall
availability (A in case (b), and participant-independent 𝐴 in case (a)
& (c)). Thus, to maximize the reduced objectives in all the cases, top
values of overall availability 𝐴 or A need to be matched with top
values of overall interests V or 𝑉 —making it identical to IAM. □
Note that, when there are ties in scenarios mentioned in lemma 3,
IAM approach could also be made to give multiple solutions which
maximize social welfare; however, we use random tie breaks.

5.2

Evaluation Metrics

We use the following metrics to capture the performances from
participant, speaker, and social welfare perspectives.
5.2.1

Participant-Side Metrics.ÍWe measure the mean satisfac𝑁𝐶𝐺 𝑝

Proof. There are three cases where we need to prove that IAM
maximizes social welfare; (a) if all participants have identical ease of
availability over all available slots 𝐴𝑝 (𝑠) = 𝐴(𝑠), ∀𝑠 ∈ S, 𝑝 ∈ P (this
case is similar to physical conference settings where all participants
gather at the same place, thus, have identical ease of availability); (b)
if all participants have identical interests over all talks 𝑉𝑝 (𝑡) = 𝑉 (𝑡),
∀𝑡 ∈ T , 𝑝 ∈ P; (c) if both (a) and (b) are true.
We, first, reduce the SWM objectives in the following cases, and
observe that they take a particular form where IAM gives solution.
Case-(a): Given 𝐴𝑝 (𝑠) = 𝐴(𝑠), ∀𝑠 ∈ S, 𝑝 ∈ P. From eq. (7):
∑︁ ∑︁
SWM ≡ argmax
𝑉𝑝 (𝑡) × 𝐴𝑝 (Γ(𝑡))
Γ

𝑝 ∈P 𝑡 ∈T

tion of participants (𝑁𝐶𝐺 mean = 𝑝∈P| P |
) as it is an indicator
of how efficient is the schedule for participants. We also measure
the participant unfairness (as defined in eq. (11): ΨP = 𝑁𝐶𝐺 max −
𝑁𝐶𝐺 min ). Lower values of ΨP represent better participant fairness.
5.2.2 Speaker-Side Metrics. Similar to participant-side metrics,
on speaker-side
Í also, we measure the mean satisfaction of speakers
𝑁 𝐸𝐶
(𝑁 𝐸𝐶 mean = 𝑡 ∈T| T | 𝑡 ) as an indicator of efficiency of the schedule
for speakers, and also the speaker unfairness (as defined in eq. (15):
ΨS = 𝑁 𝐸𝐶 max − 𝑁 𝐸𝐶 min ). Lower values of ΨS represent better
speaker fairness.

5.2.3 Social Welfare Metric. While taking into account the participant fairness and speaker fairness, there could be some loss in

On Fair Virtual Conference Scheduling:
Achieving Equitable Participant and Speaker Satisfaction

social welfare or the total expected participation as illustrated in
examples in §3. Thus, we also measure the social welfare achieved
by the conference schedules obtained by our approach and the baseline approaches to gauge the loss of welfare in comparison to the
maximum possible social welfare. We use 𝑇 𝐸𝑃 metric (as defined
in eq. (7)) for this.

5.3

Experimental Results

First, in §5.3.1, we show results on a synthetic dataset with random interest and availability scores. Then, in sections 5.3.2 to 5.3.5,
we experiment on some special cases of synthetic datasets—with
specific patterns in the data—to illustrate interesting nuances and
difficulties involved in the scheduling problem. Note that, we vary
the hyperparameters 𝜆1 and 𝜆2 in between 0 and 1 in separate
trials.

5.3.1 Random Interests and Availability: We take |P | = 10,
|T | = 10, |P | = 10, and generate the synthetic dataset where the
slots represent non-overlapping equal-sized time intervals—not
particularly required to be in any sequence—available for scheduling. For this dataset, the interest scores and availability scores
are sampled from a uniform random distribution in [0, 1]; i.e.,
𝑉𝑝 (𝑡) ∼ Uniform( [0, 1]) and 𝐴𝑝 (𝑠) ∼ Uniform([0, 1]), ∀𝑝, 𝑡, 𝑠. We
plot the results for this dataset in fig. 1. Note that, unlike FairConf,
the baseline approaches do not have hyperparameters 𝜆1, 𝜆2 ; thus,
baseline results are just horizontal straight lines while FairConf’s
results vary with hyperparameter settings.
Baseline Results: SWM achieves the highest expected participation𝑇 𝐸𝑃 (by definition it should), the highest mean participant satisfaction and mean speaker satisfaction (refer figs. 1a, 1c and 1e) while
performing poorly on participant and speaker fairness (figs. 1b
and 1d). On the other hand, the naive IAM performs poorly in all
the metrics. As PFair optimizes only for participant fairness, it has
the highest participant fairness (least unfairness in fig. 1b) while
losing in all the other metrics. The opposite happens with SFair; it
performs the best in speaker fairness (least unfairness in fig. 1d)
while losing in all other metrics as SFair optimizes only for speaker
fairness.
FairConf Results: Note that, for the plots in first row (fig. 1a to
fig. 1e), we fix 𝜆2 = 0.5 and vary 𝜆1 from 0 to 1; for the plots in
second row (fig. 1f to fig. 1j), we fix 𝜆1 = 0.5 and vary 𝜆2 from 0 to 1.
The general trends observed in FairConf’s results are: with increase
in the weight for participant fairness (𝜆1 ), FairConf achieves better
participant fairness (decrease in participant unfairness in fig. 1b) but
worse speaker fairness (increase in speaker unfairness in fig. 1d);
with increase in the weight for speaker fairness (𝜆2 ), FairConf
achieves better speaker fairness (decrease in speaker unfairness
in fig. 1i) but worse participant fairness (increase in participant
unfairness in fig. 1g). We find that FairConf with the setting of
𝜆1 = 𝜆2 = 0.5 gives a balanced performance across all the metrics;
it performs good in both participant fairness (very small unfairness
in fig. 1b– also close to PFair) and speaker fairness (very small
unfairness in fig. 1d– only little higher than SFair) while causing
only marginal losses in mean participant satisfaction (fig. 1a), mean
speaker satisfaction (fig. 1c), and the social welfare (fig. 1e).

Preprint version, Oct 2020, (In submission)

5.3.2 Balanced Participant Groups (Indentical Interests, Segregated Availability): Here, we take a dataset with |P | = 10,
|T | = 10, |S| = 15. While all the participants have identical interest scores same as 𝑉 1 in fig. 2a, the first 5 participants have
availability scores as 𝐴1 in fig. 2b, and the next 5 have 𝐴2 in fig. 2b.
We plot the results for this dataset in fig. 3.
Baseline Results: Both SWM and IAM yield same social welfare
(fig. 3e), as it also follows from lemma 3 under the special condition of identical interest scores of the participants; however, they
could result in different optimal-welfare schedules; here also we see
different schedules given by SWM and IAM (difference in fig. 3b).
As all participants have identical interests but segregated availability for two equal sized groups, there is huge scope for bringing
in participant fairness by balancing the talks in favorable slots of
both participant groups; thus, PFair brings a huge improvement
in participant fairness (fig. 3b) in comparison to SWM. However,
there is no such scope for improvement in speaker fairness which
is why SFair achieves only a marginal improvement (fig. 3d).
FairConf Results: Again FairConf with 𝜆1 = 𝜆2 = 0.5 performs
very good in all the metrics here too. While FairConf shows improvement in participant fairness (fig. 3b) with increase in 𝜆1 , it
does not improve speaker fairness (fig. 3i) with increase in 𝜆2 due
to very less scope for improving speaker fairness in this case. However, it is worth noting that, just because there is less scope for
improving speaker fairness, we should not just remove it from
joint optimization by setting 𝜆2 = 0; Setting 𝜆2 = 0 could adversely impact speaker fairness (see 𝜆2 = 0 point in fig. 3i). Setting
𝜆2 = 0 can give the joint optimization an opportunity to further
improve participant fairness (see 𝜆2 = 0 point in fig. 3g) at the
cost of losing speaker fairness. Thus, it is important to keep reasonable non-zero weight 𝜆2 for speaker fairness—even in absence of
any scope for improvement—as it can work both as optimizer and
defender/preserver of speaker fairness.
5.3.3 Imbalanced Participant Groups (Identical Interests, Segregated Availability): We use dataset same as previous, but with
just one change: here the first 7 participants have availability scores
as 𝐴1 in fig. 2b, and the next 3 have 𝐴2 in fig. 2b. We plot the results
for this dataset in fig. 4.
Baseline Results: In comparision to the case in §5.3.2, here SWM
achieves higher participant satisfaction (compare SWM in fig. 3a
and fig. 4a) and higher participation unfairness (compare SWM
in fig. 3b and fig. 4b) too. This is because, SWM can just assign
the high interest talks to favorable slots of the majority participant
group in order to maximize social welfare. Thus, there is huge scope
for improvement in participant fairness as the participant groups
have segregated availability too. That’s why PFair brings a huge
improvement in participant fairness (fig. 4b). However, just like the
case in §5.3.2, there is no such scope to improve speaker fairness,
thus, we see almost no improvement with SFair (fig. 4d).
FairConf Results: Here also FairConf causes significant improvements in participant fairness (fig. 4b) with increase in 𝜆1 . However,
as there is no scope to improve speaker fairness, we see no improvement in speaker fairness (fig. 4i) with increase in 𝜆2 . Here also we
see, it is not wise to set 𝜆2 = 0 just because there is no scope to
improve speaker fairness; here also, setting 𝜆2 = 0 adversely impacts speaker fairness and satisfaction (see 𝜆2 = 0 point in figs. 4h

0.6

𝜆2

𝜆2

(h) Metric: 𝑁 𝐸𝐶 mean

PFair

SWM

SFair

𝑇 𝐸𝑃

0
0.2
0.4
0.6
0.8
1

0
0.2
0.4
0.6
0.8
1
𝜆1

𝜆1

(d) Metric: 𝑁 𝐸𝐶 max − 𝑁 𝐸𝐶 min

𝜆2

(g) Metric: 𝑁𝐶𝐺 max − 𝑁𝐶𝐺 min

(f) Metric: 𝑁𝐶𝐺 mean

25

1
0.8
0.6
0.4
0.2
0

35
30
25
20
𝜆2

(i) Metric: 𝑁 𝐸𝐶 max − 𝑁 𝐸𝐶 min

IAM

(e) Metric: 𝑇 𝐸𝑃

0
0.2
0.4
0.6
0.8
1

0.7

30

20

𝑇 𝐸𝑃

𝑁 𝐸𝐶 mean

0.8

35

0
0.2
0.4
0.6
0.8
1

0.9

1
0.8
0.6
0.4
0.2
0

0
0.2
0.4
0.6
0.8
1

0
0.2
0.4
0.6
0.8
1

0.7

(c) Metric: 𝑁 𝐸𝐶 mean

0
0.2
0.4
0.6
0.8
1

0.8

𝑁𝐶𝐺 max − 𝑁𝐶𝐺 min

0.9

1
0.8
0.6
0.4
0.2
0

𝜆1

(b) Metric: 𝑁𝐶𝐺 max − 𝑁𝐶𝐺 min

𝑁 𝐸𝐶 max − 𝑁 𝐸𝐶 min

𝜆1

𝑁 𝐸𝐶 max − 𝑁 𝐸𝐶 min

0.7
0.6

𝜆1
(a) Metric: 𝑁𝐶𝐺 mean

𝑁𝐶𝐺 mean

0.8

0
0.2
0.4
0.6
0.8
1

0
0.2
0.4
0.6
0.8
1

0.7

0.9

1
0.8
0.6
0.4
0.2
0

𝑁 𝐸𝐶 mean

0.8

Patro et al.

0
0.2
0.4
0.6
0.8
1

𝑁𝐶𝐺 mean

0.9

𝑁𝐶𝐺 max − 𝑁𝐶𝐺 min

Preprint version, Oct 2020, (In submission)

𝜆2
(j) Metric: 𝑇 𝐸𝑃

FairConf

Figure 1: Results on synthetic dataset with random interests and availability. For the plots in first row, 𝜆2 is fixed at 0.5, and
𝜆1 is varied. For the plots in second row, 𝜆1 is fixed at 0.5, and 𝜆2 is varied.

1
0.8
0.6
𝑉
0.4
0.2
0

1

5
𝑡

1
0.8
0.6
𝐴
0.4
0.2
0

10

5

10

15

𝑠

(a) Interest (Power Law)

𝑉1

1

(b) Availability (Cosine)

𝑉2

𝐴1

𝐴2

Figure 2: Interest and Availability Patterns
and 4i). Looking at the FairConf results with 𝜆1 = 𝜆2 = 0.5, we can
say that FairConf has handled the case of imbalanced availability
segregation very well, and has produced very good results across
all metrics.
5.3.4 Balanced Participant Groups (Segregated Interests, Identical Availability): Here, we take a dataset with |P | = 10, |T | =
10, |S| = 15. While all the participants have identical availability
scores same as 𝐴1 in fig. 2b, the first 5 participants have interests
scores as 𝑉 1 in fig. 2a, and the next 5 have 𝑉 2 in fig. 2a. We plot
the results for this dataset in fig. 5.
As the participant groups have segregated interest scores for
the talks and identical availability scores over all slots, one would

expect SWM to show large unfairness in the results. However, the
slopes of the chosen interest score pattern and availability score
pattern also play a role in this. Looking at the slopes of 𝑉 1 , 𝑉 2
fig. 2a (power law slope), one can easily see that they decrease
significantly faster than 𝐴1 in fig. 2b (Cosine slope). Thus, two talks
with same overall interest scores, can be assigned two consecutive
slots without causing too high disparity in individual participant
satisfactions and individual speaker satisfactions, as the difference
between the overall availability scores of two consecutive slots is
not too large. This is why here, we see SWM not only optimizes social welfare but also achieves high participant and speaker fairness
(fig. 5)—close to FairConf.
It is also worth noting that even though SWM provides a solution with the best speaker fairness (fig. 5d), SFair gives a different
solution with same speaker fairness but with significantly poorer
performances in other metrics. Similarly, PFair also gives a different solution which improves participant fairness by a very small
amount (fig. 5b), but causes significant losses in other metrics. This
happens because both PFair and SFair are agnostic to the other
fairness objective and welfare objective. Thus, they may or may
not result in the same schedule as SWM even if it is optimal.
5.3.5 Imbalanced Participant Groups (Segregated Interests,
Identical Availability): We use dataset same as previous, but with
just one change: here the first 7 participants have interest scores as
𝑉 1 in fig. 2a, and the next 3 have 𝑉 2 in fig. 2a. We plot the results
for this dataset in fig. 6.

SWM

𝑇 𝐸𝑃
𝑇 𝐸𝑃

0.2
0.1

14

IAM

1

1

13

0
0.2
0.4
0.6
0.8

0

𝜆2

(i) Metric: 𝑁 𝐸𝐶 max − 𝑁 𝐸𝐶 min

SFair

1

0
0.2
0.4
0.6
0.8
15

0
0.2
0.4
0.6
0.8

1

0
0.2
0.4
0.6
0.8

(e) Metric: 𝑇 𝐸𝑃

𝜆2

(h) Metric: 𝑁 𝐸𝐶 mean

PFair

𝜆1

0.3

𝜆2

(g) Metric: 𝑁𝐶𝐺 max − 𝑁𝐶𝐺 min

14
13

1

1

0.9

𝑁 𝐸𝐶 max − 𝑁 𝐸𝐶 min

𝑁 𝐸𝐶 mean

1

𝜆2

(f) Metric: 𝑁𝐶𝐺 mean

0

(d) Metric: 𝑁 𝐸𝐶 max − 𝑁 𝐸𝐶 min

0.8

𝜆2

0.1

𝜆1

(c) Metric: 𝑁 𝐸𝐶 mean

0
0.2
0.4
0.6
0.8
1

1

0.7

𝑁𝐶𝐺 max − 𝑁𝐶𝐺 min

0.75

10−1
10−2
10−3

15

0.2

𝜆1

(b) Metric: 𝑁𝐶𝐺 max − 𝑁𝐶𝐺 min

0.8

0.3

0
0.2
0.4
0.6
0.8

𝑁 𝐸𝐶 mean
𝜆1

(a) Metric: 𝑁𝐶𝐺 mean

0
0.2
0.4
0.6
0.8

0.9
0.8

𝜆1

𝑁𝐶𝐺 mean

1

𝑁 𝐸𝐶 max − 𝑁 𝐸𝐶 min

10−1
10−2
10−3

0
0.2
0.4
0.6
0.8

1

0.7

Preprint version, Oct 2020, (In submission)

0
0.2
0.4
0.6
0.8
1

0.75

0
0.2
0.4
0.6
0.8

𝑁𝐶𝐺 mean

0.8

𝑁𝐶𝐺 max − 𝑁𝐶𝐺 min

On Fair Virtual Conference Scheduling:
Achieving Equitable Participant and Speaker Satisfaction

(j) Metric: 𝑇 𝐸𝑃

FairConf

SWM

SFair

𝑇 𝐸𝑃

0.5
0.4
0.3
0.2
0.1
0

1

0
0.2
0.4
0.6
0.8
𝑇 𝐸𝑃

16
15
14

𝜆2

1

13

(i) Metric: 𝑁 𝐸𝐶 max − 𝑁 𝐸𝐶 min

IAM

(e) Metric: 𝑇 𝐸𝑃

0
0.2
0.4
0.6
0.8

1

0
0.2
0.4
0.6
0.8
𝜆2

PFair

1

0
0.2
0.4
0.6
0.8

1

0.9

(h) Metric: 𝑁 𝐸𝐶 mean

𝜆1

1

𝑁 𝐸𝐶 mean

1

𝜆2

14

𝜆1

0.8

(g) Metric: 𝑁𝐶𝐺 max − 𝑁𝐶𝐺 min

15

13

(d) Metric: 𝑁 𝐸𝐶 max − 𝑁 𝐸𝐶 min

1

𝜆2

16

0
0.2
0.4
0.6
0.8

0.5
0.4
0.3
0.2
0.1
0

0
0.2
0.4
0.6
0.8

1

0.7

𝑁𝐶𝐺 max − 𝑁𝐶𝐺 min

0.75

0.5
0.4
0.3
0.2
0.1
0

𝜆1
(c) Metric: 𝑁 𝐸𝐶 mean

𝑁 𝐸𝐶 max − 𝑁 𝐸𝐶 min

𝜆1
(b) Metric: 𝑁𝐶𝐺 max − 𝑁𝐶𝐺 min

0.8

0
0.2
0.4
0.6
0.8

𝑁𝐶𝐺 mean

0
0.2
0.4
0.6
0.8

0.8

𝜆1
(a) Metric: 𝑁𝐶𝐺 mean

(f) Metric: 𝑁𝐶𝐺 mean

0.9

𝑁 𝐸𝐶 max − 𝑁 𝐸𝐶 min

𝑁 𝐸𝐶 mean

1

1

1

0.7

0.5
0.4
0.3
0.2
0.1
0

0
0.2
0.4
0.6
0.8

0.75

𝑁𝐶𝐺 max − 𝑁𝐶𝐺 min

0.8

0
0.2
0.4
0.6
0.8

𝑁𝐶𝐺 mean

Figure 3: Results on data with balanced participant groups (indentical interests, segregated availability). For the plots in first
row, 𝜆2 is fixed at 0.5, and 𝜆1 is varied. For the plots in second row, 𝜆1 is fixed at 0.5, and 𝜆2 is varied.

𝜆2
(j) Metric: 𝑇 𝐸𝑃

FairConf

Figure 4: Results on data with imbalanced participant groups (identical interests, segregated availability). For the plots in first
row, 𝜆2 is fixed at 0.5, and 𝜆1 is varied. For the plots in second row, 𝜆1 is fixed at 0.5, and 𝜆2 is varied.

𝜆2

𝜆2

SWM

𝑇 𝐸𝑃
𝑇 𝐸𝑃

18
17
16

IAM

1

15

𝜆2

(i) Metric: 𝑁 𝐸𝐶 max − 𝑁 𝐸𝐶 min

SFair

1

0
0.2
0.4
0.6
0.8

1

19

0
0.2
0.4
0.6
0.8

1

(e) Metric: 𝑇 𝐸𝑃

𝜆2

(h) Metric: 𝑁 𝐸𝐶 mean

PFair

𝜆1

1
0.8
0.6
0.4
0.2
0

𝜆2

(g) Metric: 𝑁𝐶𝐺 max − 𝑁𝐶𝐺 min

(f) Metric: 𝑁𝐶𝐺 mean

15

1

0.7
0.6

0

17
16

0
0.2
0.4
0.6
0.8

0.1

0.8

0
0.2
0.4
0.6
0.8

1

0.7

𝑁 𝐸𝐶 mean

0.8

0.2

18

(d) Metric: 𝑁 𝐸𝐶 max − 𝑁 𝐸𝐶 min

0.9

1

0.9

19

𝜆1

(c) Metric: 𝑁 𝐸𝐶 mean

0.3

0
0.2
0.4
0.6
0.8

1

𝑁𝐶𝐺 max − 𝑁𝐶𝐺 min

(b) Metric: 𝑁𝐶𝐺 max − 𝑁𝐶𝐺 min

(a) Metric: 𝑁𝐶𝐺 mean

0
0.2
0.4
0.6
0.8

𝜆1

𝑁 𝐸𝐶 max − 𝑁 𝐸𝐶 min

𝜆1

1

0.6

0

𝜆1

𝑁𝐶𝐺 mean

0.7

1
0.8
0.6
0.4
0.2
0

0
0.2
0.4
0.6
0.8

0.1

0.8

𝑁 𝐸𝐶 max − 𝑁 𝐸𝐶 min

0.2

0
0.2
0.4
0.6
0.8

1

0
0.2
0.4
0.6
0.8

0.7

0.9
𝑁 𝐸𝐶 mean

0.8

0.3

1

0.9

Patro et al.

0
0.2
0.4
0.6
0.8

𝑁𝐶𝐺 mean

1

𝑁𝐶𝐺 max − 𝑁𝐶𝐺 min

Preprint version, Oct 2020, (In submission)

(j) Metric: 𝑇 𝐸𝑃

FairConf

𝜆2

𝜆2

PFair

SFair

1

0
0.2
0.4
0.6
0.8

𝑇 𝐸𝑃

1

19
18
17
16
15

1

𝑇 𝐸𝑃
𝜆2

(i) Metric: 𝑁 𝐸𝐶 max − 𝑁 𝐸𝐶 min

IAM

(e) Metric: 𝑇 𝐸𝑃

0
0.2
0.4
0.6
0.8

1

0
0.2
0.4
0.6
0.8
(h) Metric: 𝑁 𝐸𝐶 mean

1

0.7

𝜆2

(g) Metric: 𝑁𝐶𝐺 max − 𝑁𝐶𝐺 min

SWM

0
0.2
0.4
0.6
0.8

1

0.8

0.6

0

𝜆1

1
0.8
0.6
0.4
0.2
0

0
0.2
0.4
0.6
0.8

𝑁 𝐸𝐶 mean

0.1

19
18
17
16
15

𝜆1
(d) Metric: 𝑁 𝐸𝐶 max − 𝑁 𝐸𝐶 min

0.9

1

1

0
0.2
0.4
0.6
0.8

0.7

0.2

0
0.2
0.4
0.6
0.8

0.8

𝑁𝐶𝐺 max − 𝑁𝐶𝐺 min

0.9

1
0.8
0.6
0.4
0.2
0

𝜆1
(c) Metric: 𝑁 𝐸𝐶 mean

𝑁 𝐸𝐶 max − 𝑁 𝐸𝐶 min

𝜆1
(b) Metric: 𝑁𝐶𝐺 max − 𝑁𝐶𝐺 min

1
𝑁𝐶𝐺 mean

0.7
0.6

0

𝜆1
(a) Metric: 𝑁𝐶𝐺 mean

(f) Metric: 𝑁𝐶𝐺 mean

0.8

𝑁 𝐸𝐶 max − 𝑁 𝐸𝐶 min

0.1

0
0.2
0.4
0.6
0.8

1

0
0.2
0.4
0.6
0.8

0.7

𝑁 𝐸𝐶 mean

0.8

0.9

1

0.9

0.2

0
0.2
0.4
0.6
0.8

𝑁𝐶𝐺 mean

1

𝑁𝐶𝐺 max − 𝑁𝐶𝐺 min

Figure 5: Results on data with balanced participant groups (segregated interests, identical availability). For the plots in first
row, 𝜆2 is fixed at 0.5, and 𝜆1 is varied. For the plots in second row, 𝜆1 is fixed at 0.5, and 𝜆2 is varied.

𝜆2
(j) Metric: 𝑇 𝐸𝑃

FairConf

Figure 6: Results on data with imbalanced participant groups (segregated interests, identical availability). For the plots in first
row, 𝜆2 is fixed at 0.5, and 𝜆1 is varied. For the plots in second row, 𝜆1 is fixed at 0.5, and 𝜆2 is varied.

On Fair Virtual Conference Scheduling:
Achieving Equitable Participant and Speaker Satisfaction

In contrast to the case in §5.3.4, here, there is an imbalance in
the interest segregation. Thus, it provides SWM an opportunity
to be biased towards the majority participant group and improve
social welfare. Thus, we see a higher participant unfairness (fig. 6b).
FairConf significantly improves participant fairness while causing
marginal loss in social welfare (fig. 6e).
5.3.6 Results Summary: While SWM maximizes social welfare,
it often results in high participant unfairness and speaker unfairness. On the other hand, naive approach IAM also optimizes social
welfare in special conditions (lemma 3), but due to random tie breaks
both SWM and IAM may not differentiate between two optimalwelfare schedules in terms of fairness. Moreover, in absence of any
explicit fairness consideration, both SWM and IAM often perform
poorly in term fairness. While PFair achieves maximum participant
fairness, it often becomes unfair to the speakers, and also causes
loss in mean speaker satisfaction; the opposite happens in case
of SFair. Our joint optimization approach FairConf with similar
weights for participant and speaker fairness, i.e., 𝜆1 = 𝜆2 = 0.5
is found to be performing very good across all the metrics in all
the tested cases (achieves good participant and speaker fairness
with only marginal losses in social welfare, and overall participant
satisfaction and overall speaker satisfaction).

6

Preprint version, Oct 2020, (In submission)

modelled only for the agents attending the event(s), and there is
no consideration of satisfaction from the side of the event (i.e., no
concept of speakers as individuals with self interests). In addition
to that most of these works consider only binary availability of
the agents, and are often focussed more on optimizing efficiency.
While there has been work on strategy-proof scheduling [3] and
privacy-aware scheduling [5, 10], fairness has not been considered
in such settings (except for Baum et al. [1] dealing with a very different setting). In constrast, we allow non-binary availability of the
agents, and care for both efficiency and fairness in our conference
scheduling problem.

7

DISCUSSION

In this work, we modeled a very timely and important problem of
online conference scheduling with welfare and fairness concerns.
Apart from formally defining the fairness notions and objectives,
we brought out several fundamental tensions among participant
fairness, speaker fairness, and social welfare, and showed the benefits of our proposed joint optimization framework. We believe that
this work will lay the ground for further research (both theoretical
and empirical) into such multi-stakeholder scheduling problems
(going beyond the virtual conference scheduling). Next, we present
a set of open questions and possible future works.

RELATED WORK

We briefly review related works in the following two directions.
Job and Network Scheduling: The most commonly studied scheduling problem in computing research is on job or network scheduling. In this problem, there are multiple agents (e.g., system processes, computing jobs, data packets, networked users or machines)
who have shared access to common resource(s) (e.g., fixed number
of processors, limited internet bandwidth), and the agents raise
requests for the use the common resource(s) from time to time;
now the goal is to allocate the resource(s) to the agents in fair
and optimal manner. For example: fair-share scheduling for system
processes [9, 11, 12]; scheduling of packet transfers to ensure fair
sharing of network channels [19]; fair scheduling of computing jobs
on computing clusters [8, 13]; fair scheduling for devices in shared
wireless charging systems [4]; fair scheduling of retrieval queries for
databases [7]. Our problem setup for fair conference scheduling is
of very different form than typical job scheduling setup. While conference scheduling has two types of stakeholders—participants and
speakers—whose functions and fairness requirements are different
from each other, job scheduling problems are usually modelled for
one type of stakeholders—the agents who use the shared resource.
Meeting/Event Scheduling: The problem which is closely related
to our conference scheduling problem is meeting or event scheduling where there are mulltiple agents with different availability in
different time intervals, and the goal is to find an optimal schedule
for meeting(s). These problems have been explored for different
types of optimality; for example: finalizing schedules with minimal
negotiations with agents [18]; schedules with optimal availability of
the agents [2, 6]. To solve these problems, methods like distributed
constraint optimization [14] have been proposed. Even though there
is a similarity between meeting scheduling and our conference
scheduling, in meeting scheduling problems, utility/satisfaction is

Future Work
(i) Even though, in this paper, we solved the proposed joint optimization problem by converting it into an integer linear program which
works well for problems of small size, more research is needed in
developing approaches which are more scalable and computationally efficient with provable guarantees.
(ii) We also limited ourselves with non-overlapping time slots; however, larger conferences often have overlapping and parallel sessions to accommodate their higher number of talks. Accounting
for such overlapping slots would require changes in the formulation of participant and speaker satisfactions as participants would
have to choose which of the parallel session to attend, thereby also
changing the expected audience in a particular talk.
(iii) We considered speaker satisfaction in terms of the expected
crowd at their talks, however, in virtual conferences, the ease of
availability of the speakers in the assigned time slot also plays a role
in their satisfaction; so one need to factor in both expected crowd
and ease of availability of the speaker to define an encompassing
measure for speaker satisfaction.
(iv) Although we considered the participants and speakers to be
separate agents in our model, a single agent could play the roles
of both a participant and a speaker; thus for such agents with dual
roles, the participant satisfaction measure can be modified to exclude the time slot(s) in which they play the role of a speaker.
(v) Another important aspect which may be of great importance
in conference scheduling is to consider group fairness: that is to
ensure fair satisfaction for timezone-specific groups of participants,
as well as domain-specific groups of speakers etc. Group fairness
notions form a long line of work in machine learning [15]; these
works can be explored and extended for this purpose.
Acknowledgements: G. K Patro is supported by a fellowship from
Tata Consultancy Services. This research was supported in part

Preprint version, Oct 2020, (In submission)

by a European Research Council (ERC) Advanced Grant for the
project “Foundations for Fair Social Computing", funded under
the European Unions Horizon 2020 Framework Programme (grant
agreement no. 789373).

REFERENCES
[1] Richard Baum, Dimitris Bertsimas, and Nathan Kallus. 2014. Scheduling, revenue
management, and fairness in an academic-hospital radiology division. Academic
radiology 21, 10 (2014), 1322–1330.
[2] Peter George Capek, William Grey, Paul Andrew Moskowitz, Clifford A Pickover,
and Dailun Shi. 2008. Event scheduling with optimization. US Patent 7,343,312.
[3] Eithan Ephrati, Gilad Zlotkin, and Jeffrey S Rosenschein. 1994. A non-manipulable
meeting scheduling system. In Proceedings of the 13th international workshop on
distributed artificial intelligence. 105–125.
[4] Wen Fang, Qingqing Zhang, Qingwen Liu, Jun Wu, and Pengfei Xia. 2018. Fair
scheduling in resonant beam charging for IoT devices. IEEE Internet of Things
Journal 6, 1 (2018), 641–653.
[5] Eugene C Freuder, Marius Minca, and Richard J Wallace. 2001. Privacy/efficiency
tradeoffs in distributed meeting scheduling by constraint-based agents. In Proc.
IJCAI DCR. Citeseer, 63–72.
[6] Leonardo Garrido and Katia Sycara. 1996. Multi-agent meeting scheduling: Preliminary experimental results. In Proceedings of the Second International Conference
on Multiagent Systems. 95–102.
[7] Michael Harris, John Carrino, and Eric Wong. 2015. Fair scheduling for mixedquery loads. US Patent 9,092,482.
[8] Michael Isard, Vijayan Prabhakaran, Jon Currey, Udi Wieder, Kunal Talwar, and
Andrew Goldberg. 2009. Quincy: fair scheduling for distributed computing
clusters. In Proceedings of the ACM SIGOPS 22nd symposium on Operating systems

Patro et al.

principles. 261–276.
[9] Judy Kay and Piers Lauder. 1988. A fair share scheduler. Commun. ACM 31, 1
(1988), 44–55.
[10] Hooyeon Lee and Ashish Goel. 2016. Probabilistic Matrix Inspection and Group
Scheduling.. In IJCAI. 322–328.
[11] Tong Li, Dan Baumberger, and Scott Hahn. 2009. Efficient and scalable multiprocessor fair scheduling using distributed weighted round-robin. ACM Sigplan
Notices 44, 4 (2009), 65–74.
[12] Jean-Pierre Lozi, Baptiste Lepers, Justin Funston, Fabien Gaud, Vivien Quéma,
and Alexandra Fedorova. 2016. The Linux scheduler: a decade of wasted cores.
In Proceedings of the Eleventh European Conference on Computer Systems. 1–16.
[13] Kshiteej Mahajan, Arjun Singhvi, Arjun Balasubramanian, Varun Batra,
Surya Teja Chavali, Shivaram Venkataraman, Aditya Akella, Amar Phanishayee,
and Shuchi Chawla. 2019. Themis: Fair and efficient gpu cluster scheduling for
machine learning workloads. arXiv preprint arXiv:1907.01484 (2019).
[14] Rajiv Maheswaran, Milind Tambe, Emma Bowring, Jonathan Pearce, and Pradeep
Varakantham. 2004. Taking DCOP to the real world: Efficient complete solutions
for distributed event scheduling. (2004).
[15] Ninareh Mehrabi, Fred Morstatter, Nripsuta Saxena, Kristina Lerman, and Aram
Galstyan. 2019. A survey on bias and fairness in machine learning. arXiv preprint
arXiv:1908.09635 (2019).
[16] OxfordAbstracts. 2020. Conference management: 5 benefits of hosting a virtual
conference. https://oxfordabstracts.com/blog/2020-03-30-5-benefits-of-hostinga-virtual-conference/
[17] Michael Saliba. 2020. Getting to grips with online conferences. Nature Energy 5,
7 (2020), 488–490.
[18] Sandip Sen and Edmund H Durfee. 1998. A formal study of distributed meeting
scheduling. Group Decision and Negotiation 7, 3 (1998), 265–289.
[19] Nitin Vaidya, Anurag Dugar, Seema Gupta, and Paramvir Bahl. 2005. Distributed
fair scheduling in a wireless LAN. IEEE Transactions on Mobile Computing 4, 6
(2005), 616–629.

