Maximum n-times Coverage for COVID-19 Vaccine Design
Ge Liu,1 Brandon Carter,1 David Gifford1

arXiv:2101.10902v1 [q-bio.QM] 24 Jan 2021

1

MIT Computer Science and Artificial Intelligence Laboratory, Cambridge, MA, USA
geliu@csail.mit.edu, bcarter@csail.mit.edu, gifford@mit.edu

Abstract
In the maximum n-times coverage problem, we are provided
a set of elements, a weight for each element, and a set of overlays where each overlay specifies an element specific coverage of zero or more times. The goal is to select up to k overlays such that the sum of the weights of elements that are
covered at least n times is maximized. We also define the
min-cost n-times coverage problem where the objective is to
select the minimum set of overlays such that the sum of the
weights of elements that are covered at least n times is at
least τ . We show that the n-times coverage objective is not
submodular, and we present an efficient solution by sequential greedy optimization. We frame the design of a peptide
vaccine for COVID-19 as maximum n-times coverage using
machine learning defined candidate peptide sets, and show
that our solution is superior to 29 other published COVID-19
peptide vaccine designs in predicted population coverage and
the expected number of peptides displayed by each individual’s HLA molecules.

Introduction
The COVID-19 pandemic has caused an unprecedented
challenge for healthcare systems worldwide, and developing
a vaccine that produces durable immunity with high population coverage is of upmost importance. A peptide vaccine
uses a set of peptides to elicit a protective cellular immune
response (Ott et al. 2017; Li et al. 2014). For a peptide to
be effective in a vaccine it must be presented by an individual’s Major Histocompatibility Complex (MHC) molecules
and be immunogenic. A displayed peptide is immunogenic
when it activates T cells, which expand in number and mount
a response against pathogens or tumor cells. Memory T cells
provide robust immunity against COVID-19, even in the absence of detectable antibodies (Sekine et al. 2020). The use
of peptide vaccine components to activate T cells is in development for cancer (Hu, Ott, and Wu 2018) and viral diseases including HIV (Arunachalam et al. 2020), HPV (Kenter et al. 2009) and malaria (Li et al. 2014; Rosendahl Huber
et al. 2014).
A challenge for the design of peptide vaccines is the diversity of human MHC alleles that each have specific preferences for the peptide sequences they will display. The
Human Leukocyte Antigen (HLA) loci, located within the
MHC, encode the HLA class I and class II molecules. We

consider the three classical class I loci (HLA-A, HLA-B,
and HLA-C) and three loci that encode class II molecules
(HLA-DR, HLA-DQ, and HLA-DP). An individual’s HLA
type describes the alleles they carry at each of these loci.
Peptides of length 8–10 residues can bind to HLA class I
molecules whereas those of length 13–25 bind to HLA class
II molecules (Rist et al. 2013; Chicz et al. 1992). To create
effective vaccines it is necessary to consider the HLA allelic
frequency in the population, as well as linkage disequilibrium between HLA genes to discover a set of peptides that
is likely to be robustly displayed.
For a peptide vaccine to be effective it needs to invoke a
robust cellular immune response with a diverse set of peptides (Schultheiß et al. 2020; Grifoni et al. 2020b), which
motivates our use of n-times coverage. Redundant coverage
is also important to compensate for our imperfect ability to
predict what peptides will be immunogenic in a given individual. We adopt an experimentally calibrated model of
peptide-HLA immunogenicity to create a set of candidates
and perform population coverage optimization to select a
compact set of peptides that provides diverse display of peptides in each individual. Our vaccine designs and evaluations
are based upon the observed immunogenicity of peptides in
convalescent COVID-19 patient peripheral blood mononuclear cell samples (Snyder et al. 2020; Klinger et al. 2015;
Nolan et al. 2020), and by ensembling machine learning predictions for peptides or HLA alleles that are not observed in
the clinical data (Liu, Carter, and Gifford 2021).
We formalize the number of times that an individual displays peptides as a coverage problem, and thus we generalize single coverage problems to n-times coverage problems. We show that framing vaccine design as maximum ntimes coverage produces a solution that produces superior
predicted population coverage when compared to 29 previous published vaccines for COVID-19 with less than 150
peptides. We also show that maximum n-times coverage is
not submodular, and introduce M ARGINAL G REEDY, an efficient algorithm for solving n-times coverage problem on
both synthetic data and real vaccine design.
In the maximum n-times coverage problem, we are provided a set of elements, a weight for each element, and a set
of overlays where each overlay specifies an element specific
coverage of zero or more times. The goal is to select up to
k overlays such that the sum of the weights of elements that

are covered at least n times is maximized. In this framing,
an element is a specific collection of HLA alleles (a haplotype), weights are the frequency of haplotypes in the population, n is the desired number of peptides displayed by each
individual, and an overlay is a peptide that is predicted to
be displayed by each haplotype a specified number of times.
The solution of the maximum n-time coverage problem allows us to find a set of overlays (peptides) that maximizes
the sum of weights (population coverage).
Our introduction of weighted elements and required ntimes coverage creates a new class of problem without a
known solution or complexity bound. The closest problem
to the maximum n-times coverage problem is the multi-set
multi-cover problem which does not assign weights to the
elements and thus can be formulated as the Covering Integer Program (CIP) problem (Srinivasan 1999). A log(n)time approximation algorithm for CIP can violate coverage
constraints (Dobson 1982; Kolliopoulos 2003; Kolliopoulos
and Young 2001). Other existing robust coverage problems
do not address the need for explicit n-times coverage of elements to ensure each individual is predicted to display multiple peptides. Deletion-robust submodular maximization protects against adversarial deletion (Bogunovic, Zhao, and
Cevher 2018; Mirzasoleiman, Karbasi, and Krause 2017)
and robust submodular optimization protects against objective function uncertainty (Iyer 2019), but neither guarantees
that each element is covered n times.

The Maximum n-times coverage problem
S ET C OVER and M AXIMUM C OVERAGE
In the standard S ET C OVER and M AXIMUM C OVERAGE
problems, we are given a set U of |U| elements (also known
as the universe) and a collection
S = {S1 , S2 , . . . , Sm } of
S
m subsets of U such that i Si = U. The goal in the S ET
C OVER problem is to select a minimal-cardinality set of subsets from S such that their union covers U. In the M AXI MUM C OVERAGE problem, our goal is to select k subsets
from S such that the union of these subsets contains maximum number of elements. Both problems are known to be
NP-hard (Feige 1998), but can be solved with a greedy approximation algorithm with the best guaranteed approximation ratio.
A generalization of S ET C OVER is to use any submodular set function as the objective instead of the cardinality function. Given a set function f : 2V → R that assign each subset S ⊆ V a value f (S) where V is a finite
set, we define the discrete derivative (or marginal gain) as
∆f (e|S) := f (S ∪ {e}) − f (S) for e ∈ V . A set function f
is submodular iff it satisfies the following diminishing return
property:
Definition 1. (Submodularity) A function f : 2V → R is
submodular if for every A ⊆ B ⊆ V and e ∈ V \ B it holds
that ∆f (e|A) ≥ ∆f (e|B).
Equivalently, f is a submodular function if for every
A, B ⊆ v, f (A ∩ B) + f (A ∪ B) ≤ f (A) + f (B).
We can then define the S UBMODULAR S ET C OVER problem as the problem of selecting a minimal-cardinality subset

S ⊆ V such that f (S) = f (V ), where f is a monotone submodular function and V is the ground set of items. A similar
problem is the M IN - COST C OVERAGE problem:
S ∗ = arg min |S| s.t.

f (S) ≥ τ

S

The S UBMODULAR M AXIMUM C OVERAGE problem is defined as selecting a subset S ⊆ V that maximizes f (S) with
cardinality constraint |S| ≤ k, where f is monotone and
submodular.
Given f is monotone submodular, a greedy algorithm is
known to provide (1 − 1e ) approximation for S UBMODU LAR M AXIMUM C OVERAGE and ln(maxi∈V f (i)) + 1 approximation for S UBMODULAR S ET C OVER (Nemhauser,
Wolsey, and Fisher 1978).

M ULTI - SET M ULTI - COVER problem
The M ULTI - SET M ULTI - COVER (MSMC) problem is a generalization of S ET C OVER, where multi-sets are special type
of sets in which an element e ∈ V can appear in S for more
than once. The objective of the MSMC problem is to determine the minimum number of multisets (a multi-set can be
chosen multiple times) such that each element i is covered
at least bi times. It can be formulated into Covering Integer
Program (CIP) (Srinivasan 1999) problem:
Definition 2. (Covering Integer Program, CIP) Given A ∈
m
Rn×m
, b ∈ Rn+ , w ∈ Rm
+ , d ∈ R+ , a CIP P = (A, b, w, d)
+
T
seeks to minimize w x, subject to Ax ≥ b, x ∈ Zm
+ ,and
x ≤ d.
Here Aij represents the number of times i-th element
appears in the j-th multi-set. The w is set to be all 1 in
MSMC. The constraints x ≤ b are called multiplicity constraints which limit the number of times a single multiset can be reused, and they generally make covering problems much harder as natural linear programming (LP) relaxation can have an unbounded integrality gap (Chuzhoy
and Naor 2006). P
Dobson (1982) provides a combinatorial
greedy H(maxj i Aij )-approximation algorithm (H(t)
stands for t-th harmonic number) but multiplicity constraints
can be dealt with effectively only in the (0,1) case thus this
algorithm can be as bad as polynomial. Kolliopoulos and
Young (2001); Kolliopoulos (2003) gave a tighter-bound solution that can obtain O(logn)-approximation.

M AXIMUM n- TIMES C OVERAGE
We introduce the maximum n-times coverage problem, a
variant of the MSMC problem that accounts for multiple coverage of each element while also assigning weights
to different elements. We are given a set X with l elements {X1 , X2 , . . . , Xl } each associated with a nonnegative weight w(Xi ), and a set of m overlays A =
{A1 , A2 , . . . , Am }. Each overlay Aj covers each element i
in X an element specific number of times cj (Xi ), which is
similar to a multi-set. When cj (Xi ) = 0 the element Xi is
not covered by overlay Aj . We use a very strict multiplicity constraint such that each overlay can be used only once.
Given a subset of overlays O ⊆ A, the total number of times

Figure 1: Example of n-times coverage calculation.
an element Xi is covered by O is the sum of cj (Xi ) for each
overlay j in O:
X
C(Xi |O) =
cj (Xi )
(1)

Table 1: Coverage map of overlays used in the counter example
w(Xi )

0.01
X1

0.01
X2

0.5
X3

0.48
X4

A1
A2
A3

0
0
1

1
0
1

0
1
0

1
1
0

j∈O

We define the n-times coverage function fn (O) as the
sum of weights of elements in X that are covered at least
n times by O. Figure 1 shows an example computation of
the n-times coverage function.
fn (O) =

l
X

w(Xi )1{C(Xi |O)≥n}

i=1

=

l
X

(2)
w(Xi )1{Pj∈O cj (Xi )≥n}

i=1

The objective of the M AXIMUM n- TIMES C OVERAGE problem is to select k overlays O ⊆ A such that fn (O) is maximized. This can be formulated as the maximization of the
monotone set function fn (O) under cardinality constraint k,
O∗ = arg max fn (O)

(3)

O⊆A,|O|≤k

We define M IN - COST n- TIMES C OVERAGE as the minimum set of overlays such that the sum of the weights of
elements covered at least n times is ≥ τ . We assume A provides sufficient n-times coverage for fn (A) ≥ τ . We define the n- TIMES S ET C OVER problem as the special
case
P
of M IN - COST n- TIMES C OVERAGE where τ = i w(Xi ).
M IN - COST n- TIMES C OVERAGE
O∗ = arg min |O| s.t. fn (O) ≥ τ

(4)

O

n- TIMES S ET C OVER
O∗ = arg min |O| s.t.

fn (O) = fn (A) (5)

O

Theorem 1. The n-times coverage function fn (O) is not
submodular.
Proof. We show fn (O) is not submodular for n = 2 (a similar counter example can be found for any n > 1). Consider the example overlays A in Table 1. When n = 2, none
of {A1 },{A2 },{A3 } or {A2 , A3 } provides n-times coverage

while {A1 , A3 } covers X2 two times and {A1 , A2 } covers
X4 two times. Therefore, the marginal gain of adding A1 ,
A2 , or A3 into an empty set is always zero, whereas adding
A1 into {A2 } or {A3 } achieves non-zero gains and adding
A1 into {A2 , A3 } achieves even higher gain:
∆f (A1 |∅) := fn=2 ({A1 }) − fn=2 (∅)
=0
∆f (A1 |{A2 }) := fn=2 ({A1 , A2 }) − fn=2 ({A2 })
= w(X4 ) − 0 = 0.48
∆f (A1 |{A3 }) := fn=2 ({A1 , A3 }) − fn=2 ({A3 })
= w(X2 ) − 0 = 0.01
∆f (A1 |{A2 , A3 }) := fn=2 ({A1 , A2 , A3 }) − fn=2 ({A2 , A3 })
= w(X2 ) + w(X4 ) − 0 = 0.49
Given that {A3 } ⊆ {A2 , A3 } and ∆f (A1 |{A3 }) <
∆f (A1 |{A2 , A3 }), the function fn=2 (O) does not satisfy
the diminishing return property (Definition 1) and thus is
not submodular.
Since the n-times coverage problem is not submodular,
we cannot take advantage of the proven near-optimal performance of the greedy algorithm for the S UBMODULAR
M AXIMUM C OVERAGE problem. Thus we seek new solutions.

Vaccine population coverage maximization
Peptide vaccine design can be framed as an instance of
the maximum n-time coverage problem. Peptides must immunogenic to be effective in a vaccine, and we use an integrated model of peptide-HLA immunogenicity (Supplemental Data). We define a peptide-HLA hit as a (peptide, HLA
allele) pair where the peptide is predicted to immunogenic

and displayed the HLA allele. Once we have determined a
candidate set of peptides that are predicted to be immunogenic we then need to select a minimal subset of peptides
such that each individual in τtarget of the population is predicted to have n peptide-HLA hits.
We first introduce EvalVax-Robust, an evaluation tool for
estimating the population coverage of a proposed peptide
vaccine set. EvalVax-Robust evaluates the percentage of the
population having at least n peptide-HLA binding hits in
each individual. It takes into consideration allelic zygosity,
and utilizes HLA haplotype frequencies for MHC class I
(HLA-A/B/C) and MHC class II (HLA-DP/DQ/DR) genes
to account for linkage disequilibrium (LD) among loci.
The MHC class I genes are encoded by the HLA-A, HLAB, and HLA-C loci and a single chromosome contains one
allele at each locus that is described by Ai , Bj , and Ck
respectively. The haplotype frequency of Ai Bj Ck is dePMA PMB PMC
noted by G(i, j, k) and i=1
k=1 G(i, j, k) = 1.
j=1
Each individual inherits two haplotypes to form their diploid
genotype. The the frequency of a diploid genotype is thus:
F i1 j1 k1 i2 j2 k2 = F (Ai1 Bj1 Ck1 , Ai2 Bj2 Ck2 )
= G(i1 , j1 , k1 )G(i2 , j2 , k2 )

(6)

For a given peptide p and an HLA allele X ∈ A ∪ B ∪ C,
our machine learning model outputs a binary hit prediction
ep (X) ∈ {0, 1} indicating peptide-HLA immunogenicity.
For each diploid genotype we compute the total number of
peptide-HLA hits as the sum of ep (X) over the unique HLA
alleles in the genotype. There can be 3-6 unique alleles depending on the zygosity of each locus:
cip1 j1 k1 i2 j2 k2 = cp (Ai1 Bj1 Ck1 , Ai2 Bj2 Ck2 )
X
=

ep (X) (7)

X∈{Ai1 ,Bj1 ,Ck1 }∪{Ai2 ,Bj2 ,Ck2 }

The total number of peptide-HLA hits provided by a set of
peptides P is the sum of number of hits per peptide:
CPi1 j1 k1 i2 j2 k2 = C(Ai1 Bj1 Ck1 , Ai2 Bj2 Ck2 |P )
X
=
cp (Ai1 Bj1 Ck1 , Ai2 Bj2 Ck2 )

(8)

p∈P

We define the EvalVax-Robust predicted population coverage with ≥ n peptide-HLA hits for a peptide vaccine set P
as:
fn (P ) =

MA X
MB X
MC X
MA X
MB X
MC
X
i1 =1 j1 =1 k1 =1 i2 =1 j2 =1 k2 =1

F i1 j1 k1 i2 j2 k2 · 1{CPi1 j1 k1 i2 j2 k2 ≥ n}

(9)

EvalVax-Robust optimization can be accomplished by a solution to maximum n-times coverage. X corresponds to the
possible genotypes, and the weights w(Xi ) are population
genotype frequencies F (Ai1 Bj1 Ck1 , Ai2 Bj2 Ck2 ). The peptide candidate set is the set of possible overlays V, where
each peptide p ∈ V is an overlay which covers a genotype
cip1 j1 k1 i2 j2 k2 times.

The M ARGINAL G REEDY algorithm for
maximum n-times coverage
We observed that greedy solutions to the maximum n-times
coverage problem are problematic when the n-times objective is directly approached. The greedy approach can fail if it
is unable to find early overlays with sufficient n-times coverage, and can fail later because of early bad overlay choices.
Both problems result in subsequent overlay choices not providing sufficient marginal gain to avoid ties and the random
selection of subsequent overlays. Thus we needed a solution
that did not try to directly solve for n-times coverage at the
outset, but rather marginally approached it.
Algorithm 1 M ARGINAL G REEDY algorithm (for M IN COST n- TIMES C OVERAGE )
Input:
Weights
of
the
elements
in
X :w(X1 ), w(X2 ), . . . , w(Xl ), ground set of overlays A where each overlay j in A covers Xi for cj (Xi )
times, target minimum # times being covered ntarget ,
coverage cutoff for different n: τ1 , τ2 , . . . , τntarget , beam
size b
Initialize beam B 0 ← {∅}, t = 0
for n = 1, . . . , ntarget do
Using
set
function
fn (O)
=
Pl
P
as
objective
function.
w(X
)
1
i { j∈O cj (Xi )≥n}
i=1
repeat
solution candidate set K t ← ∅
for O ∈ B t do
. Beam search
for a ∈ A \ O do
K t ← K t ∪ {O ∪ {a}}
t+1
B
← {Top b candidate overlay subsets in K t
scored by fn (O)}
t←t+1
mt ← median score of candidate overlay sets in
the beam B t
until mt ≥ τn (in ntarget -th cycle the termination
condition is maxO∈B t fn (O) ≥ τtarget )
(for M AXIMUM n- TIMES C OVERAGE with cardinality constraint k, there is additional
termination condition t > k)
O∗ = arg maxO∈B t fntarget (O)
Output: The final selected subset of overlays O∗
We propose M ARGINAL G REEDY, an efficient algorithm
that optimizes n-times coverage with a sequence of greedy
optimization cycles where the n-th cycle optimizes the coverage function fn (O). We establish coverage starting at n =
1 and increase the criteria to ntarget . Thus early overlay selections are guided by less stringent cycle-specific coverage
objectives. A set of coverage cutoffs {τ1 , τ2 , . . . , τtarget } is
used as the termination condition for each greedy optimization cycle, and when not specified, we assume τ1 = τ2 =
· · · = τtarget by default. We use beam search to keep track
of top b candidate solutions at each iteration.
The full algorithm is given in Algorithm 1. A similar algorithm can be used to solve the n- TIMES S ET C OVER problem in which τtarget = fntarget (A). For the M AXIMUM n-

Figure 2: The M ARGINAL G REEDY algorithm outperforms the greedy algorithm on both LARGE and SMALL toy examples.
Superior performance is seen on both the n- TIMES S ET C OVER where a smaller number of overlays is used by M ARGINAL G REEDY to achieve 100% coverage at different criteria of n, and on the M AXIMUM n- TIMES C OVERAGE problems where
M ARGINAL G REEDY achieves higher coverage given same number of overlays. Shaded regions indicate 95% confidence intervals.
TIMES C OVERAGE problem with cardinality constraint k,
the optimization terminates when t > k. When beam search
is not used to reduce computation time (b = 1), we have
extended the algorithm to break ties during the n-times coverage iteration by looking ahead to (n + 1)-times coverage.
We call this extension look ahead tie-breaking.
Another advantage of M ARGINAL G REEDY is that it is capable of guaranteeing high coverage for nt < ntarget by
controlling the cycle-specific coverage cutoffs τt . This is desired in vaccine design where wider population coverage is
also important and we want to make sure that almost 100%
of the population will be covered at least once.

Results
M ARGINAL G REEDY outperforms a greedy
baseline on toy examples
We empirically evaluate our M ARGINAL G REEDY algorithm
with two toy examples: a LARGE dataset where a set
of 30 overlays are randomly generated to cover a set of
10 elements (with equal weights) 0, 1, or 2 times, and a
SMALL dataset where a set of 10 overlays that were randomly generated to cover a set of 5 elements with equal
weights 0, 1, or 2 times. Figure 2 shows the efficiency of
the M ARGINAL G REEDY algorithm on both the n- TIMES
S ET C OVER and M AXIMUM n- TIMES C OVERAGE problems for varying values of n. We compare our M ARGINAL G REEDY algorithm to a greedy algorithm that directly optimizes n-times coverage and find the greedy algorithm degenerates to sub-optimal solutions for large values of n.
These sub-optimal solutions can be as bad as random. We
repeated problem generation and optimization with 6 dif-

ferent random seeds to provide confidence bounds and used
beam size b = 1 with look-ahead tie-breaking. As shown
in Figure 2, M ARGINAL G REEDY outperforms greedy on all
tasks and datasets. We observed that M ARGINAL G REEDY
has a significant advantage over greedy in tests with larger
n and in regions of higher coverage. We also compared the
performance of polynomial-time M ARGINAL G REEDY to an
exponential-time exhaustive search procedure that discovers
the optimal set of overlays on smaller problems. We found
M ARGINAL G REEDY produces solutions close to optimal.

COVID-19 vaccine design using maximum n-times
coverage
We used our M ARGINAL G REEDY algorithm to design
a peptide vaccine for COVID-19 using the EvalVaxRobust objective described in (9). We obtained the SARSCoV-2 viral proteome from the first documented case
from GISAID (Elbe and Buckland-Merrett 2017) (sequence entry Wuhan/IPBCAMS-WH-01/2019). We used
Nextstrain (Hadfield et al. 2018) to identify open reading
frames (ORFs) and translate the sequence. We applied sliding windows of length 8–10 (MHC class I) and 13–25 (MHC
class II) to identify candidate peptides for inclusion in our
peptide vaccine, resulting in 29,403 candidate peptides for
MHC class I and 125,593 candidate peptides for MHC class
II. We exclude peptides that may be glycosylated (Gupta,
Jung, and Brunak 2004; Wolfert and Boons 2013), cross
known cleavage sites (Wang et al. 2020; Consortium 2019),
overlap with human self-peptides (Consortium 2019), or
have a mutation rate > 0.001 (as calculated over 4,690 geographically sampled viral genomes) (Elbe and Buckland-

Figure 3: EvalVax population coverage evaluation of SARS-CoV-2 vaccines for (A) MHC class I and (B) MHC class II. (a)
EvalVax-Robust population coverage with n ≥ 1 peptide-HLA hits per individual, OptiVax-Robust performance is shown
by the blue curve and baseline performance is shown by red crosses (labeled by name of first author). (b) EvalVax-Robust
population coverage with n ≥ 5 peptide-HLA hits. (c) EvalVax-Robust population coverage with n ≥ 8 peptide-HLA hits. (d)
Comparison of OptiVax-Robust and baselines on expected number of peptide-HLA hits.
Merrett 2017; Hadfield et al. 2018) (details in Supplement).
We use observed haplotype frequencies of 230 different
HLA-A, HLA-B, and HLA-C loci for class I computations
and observed haplotype frequencies of 280 different HLADP, HLA-DQ, and HLA-DR for class II computations (Liu
et al. 2020). This dataset contains independent haplotype
frequency measurements for three populations self-reporting
as having White, Black, or Asian ancestry. We score peptideHLA immunogenicity based upon clinical data from convalescent COVID-19 patients (Liu, Carter, and Gifford 2021).
For peptide-HLA combinations not observed in our clinical
data we selected a machine learning model of immunogenicity that best predicted the peptide-HLA combinations we did
observe. Our selected MHC class I model predicts a peptideHLA combination will be immunogenic if they are predicted
to bind with an affinity of ≤50nM by the mean of the predictions from PUFFIN (Zeng and Gifford 2019), NetMHCpan4.0 (Jurtz et al. 2017) and MHCflurry 2.0 (O’Donnell, Rubinsteyn, and Laserson 2020). Our selected MHC class II
model predicts a peptide-HLA combination will be immunogenic if they are predicted to bind with an affinity of ≤50 nM
by NetMHCIIpan-4.0.
We implemented the OptiVax-Robust method for peptide
vaccine design using the M ARGINAL G REEDY algorithm,
but modified M ARGINAL G REEDY to reduce vaccine redundancy by eliminating unselected peptides that are within
three (MHC class I) or five (MHC class II) edits on a sequence distance metric from the selected peptides at each
iteration. We used a beam size of 10 for MHC class I and 5
for MHC class II.
Contemporary peptide vaccine design methods use machine learning scoring of peptide display for specific HLA
alleles followed by the manual selection of peptide sets or a
greedy search that maximizes coverage at n=1. These meth-

ods do not utilize the distribution of HLA haplotypes in a
population and thus can not accurately assess the population
coverage provided by a vaccine. For a selected set of peptides, the IEDB Population Coverage Tool (Bui et al. 2006)
estimates peptide-MHC binding coverage and the distribution of peptides displayed for a given population but assumes
independence between different loci and thus does not consider linkage disequilibrium. However, the IEDB tool does
not provide automated peptide selection as we describe.
We compared our vaccine designs with 29 vaccine designs in the literature on the probability that a vaccine has
at least N peptide-HLA hits per individual in a population,
and the expected number of per individual peptide-HLA hits
in the population, which provides insight on how well a vaccine is displayed on average (Lee and Koohy 2020; Fast,
Altman, and Chen 2020; Poran et al. 2020; Bhattacharya
et al. 2020; Baruah and Bose 2020; Abdelmageed et al.
2020; Ahmed, Quadeer, and McKay 2020; Srivastava et al.
2020; Herst et al. 2020; Vashi, Jagrit, and Kumar 2020;
Akhand, Azim, and et al. 2020; Mitra et al. 2020; Khan
et al. 2020; Banerjee, Santra, and Maiti 2020; Ramaiah and
Arumugaswami 2020; Gupta, Mishra, and Niraj 2020; Saha
and Prasad 2020; Tahir ul Qamar et al. 2020; Singh et al.
2020). Figure 3 shows the comparison between OptiVaxRobust (A) MHC class I and (B) class II vaccine designs
at all vaccine sizes (top solution in the beam up to the given
vaccine size) from 1-45 peptides (blue curves) and baseline
vaccines (red crosses) from prior work. We observe superior performance of OptiVax-Robust vaccine designs on all
evaluation metrics at all vaccine sizes for both MHC class I
and class II. Most baselines achieve reasonable coverage at
n ≥ 1 peptide hits. However, many fail to show a high probability of higher hit counts, indicating a lack of predicted
redundancy if a single peptide is not displayed. Note that

Figure 4: SARS-CoV-2 OptiVax-Robust selected peptide vaccine set for (A) MHC class I and (B) MHC class II. (a) EvalVaxRobust population coverage at different per-individual number of peptide-HLA hit cutoffs for populations self-reporting as
having White, Black, or Asian ancestry and average values. (b) Binding of vaccine peptides to each of the available alleles.
(c) Distribution of the peptide origin. (d) Distribution of the number of per-individual peptide-HLA hits in populations selfreporting as having White, Black, or Asian ancestry. (e) Fraction of vaccine peptides that are also peptides of SARS-CoV.
OptiVax-Robust also outperforms all baselines on n = 1
coverage and achieve 99.99% (MHC class I) and 99.67%
(MHC class II) coverage for n = 1, suggesting its capability to cover almost full population at least once while optimizing for higher peptide display diversity. We also found
that OptiVax-Robust outperforms all baselines with an immunogenicity model that does not incorporate clinical data
(Supplement Figure S1).

MHC class I results. We selected an optimized set of peptides from all SARS-CoV-2 proteins using OptiVax. We use
our MHC class I integrated model of peptide-HLA immunogenicity for our objective function (Supplemental). After all
of our filtering steps we considered 1546 candidate peptides.
With OptiVax-Robust optimization, we design a vaccine
with 18 peptides that achieves 99.999% EvalVax-Robust
coverage over populations self-reporting as having Asian,
Black, or White ancestry with at least one peptide-HLA hit
per individual. This set of peptides also provides 99.53%
coverage with at least 5 peptide-HLA hits and 92.32% coverage with at least 8 peptide-HLA hits (Figure 4A, Table S1).
The population level distribution of the number of peptideHLA hits in White, Black, and Asian populations is shown
in Figure 4A, where the expected number of peptide-HLA
hits 12.532, 11.425 and 13.326, respectively.

MHC class II results. We use our MHC class II model
of peptide-HLA immunogenicity for our objective function
(Supplemental). After all of our filtering steps we had 8003
candidate peptides. With OptiVax-Robust optimization, we
design a vaccine with 18 peptides that achieves 99.67%
EvalVax-Robust coverage with at least one peptide-HLA hit
per individual. This set of peptides also provides 97.22%
coverage with at least 5 peptide-HLA hits and 87.99% coverage with at least 8 peptide-HLA hits (Figure 4B, Table S1).
The population level distribution of the number of peptideHLA hits per individual in populations self-reporting as having Asian, Black, or White ancestry is shown in Figure 4B,
where the expected number of peptide-HLA hits is 17.206,
16.085 and 11.210, respectively.

Conclusion
We introduced the maximum n-times coverage problem,
and showed that it is not submodular. We presented a beam
search algorithm for solving the problem, and used it to produce a peptide vaccine design for COVID-19. We compared
the resulting optimized peptide vaccine design with 29 other
published designs and found that the optimized design provides substantially better population coverage for both MHC
class I and class II presentation of viral peptides. The use of
n-times coverage as an objective increases vaccine redundancy and thus the probability that one of the presented pep-

tides will be immunogenic and produce a T cell response.
Our methods can also be used to augment existing vaccine
designs with peptides to improve their predicted population
coverage by initializing the algorithm with peptides that are
present in an existing design.

Akhand, M. R. N.; Azim, K. F.; and et al. 2020. Genome based
Evolutionary study of SARS-CoV-2 towards the Prediction of Epitope Based Chimeric Vaccine. bioRxiv .

Ethics Statement

Banerjee, A.; Santra, D.; and Maiti, S. 2020. Energetics based epitope screening in SARS CoV-2 (COVID 19) spike glycoprotein by
Immuno-informatic analysis aiming to a suitable vaccine development. bioRxiv .

This work presents a principled combinatorial design approach for developing peptide vaccines using machine learning methods, and we apply it to develop a novel MHC class I
and II vaccine design for COVID-19. On our metrics, the resulting design is predicted to provide better population coverage than 29 existing vaccine designs with less than 150
peptides. More broadly, the EvalVax and OptiVax methods
we introduce may be used to evaluate and design peptide
vaccines against viral infections or cancer to achieve greater
population coverage and robust peptide display per individual over existing methods. The general formulation of the
maximum n-times coverage problem may find use in other
fields, such as economics. One potential consequence of this
work is identifying vaccines that do not provide adequate
population coverage that could lead to costly failures of vaccine trials. We aim to mitigate this risk via our principled
vaccine formulation objective and conservative approach for
defining the candidate peptide set.

Acknowledgements

Arunachalam, P. S.; Charles, T. P.; Joag, V.; and et al. 2020. T cellinducing vaccine durably prevents mucosal SHIV infection even
with lower neutralizing antibody titers. Nature Medicine .

Baruah, V.; and Bose, S. 2020. Immunoinformatics-aided identification of T cell and B cell epitopes in the surface glycoprotein of
2019-nCoV. Journal of Medical Virology .
Bhattacharya, M.; Sharma, A. R.; Patra, P.; and et al. 2020. Development of epitope-based peptide vaccine against novel coronavirus
2019 (SARS-COV-2): Immunoinformatics approach. Journal of
medical virology 92(6): 618–631.
Bogunovic, I.; Zhao, J.; and Cevher, V. 2018. Robust Maximization
of Non-Submodular Objectives. In AISTATS.
Bui, H.-H.; Sidney, J.; Dinh, K.; and et al. 2006. Predicting population coverage of T-cell epitope-based diagnostics and vaccines.
BMC Bioinformatics 7(1): 153.
Chicz, R. M.; Urban, R. G.; Lane, W. S.; Gorga, J. C.; Stern, L. J.;
Vignali, D. A.; and Strominger, J. L. 1992. Predominant naturally
processed peptides bound to HLA-DR1 are derived from MHCrelated molecules and are heterogeneous in size. Nature 358(6389):
764–768.

This work was supported in part by Schmidt Futures, a
Google Cloud Platform grant, NIH grant R01CA218094,
and a C3.AI DTI Award to D.K.G. Ge Liu’s contribution
was made prior to joining Amazon.

Chuzhoy, J.; and Naor, J. 2006. Covering problems with hard capacities. SIAM Journal on Computing 36(2): 498–515.

Code Availability

Coutard, B.; Valle, C.; de Lamballerie, X.; Canard, B.; Seidah, N.;
and Decroly, E. 2020. The spike glycoprotein of the new coronavirus 2019-nCoV contains a furin-like cleavage site absent in CoV
of the same clade. Antiviral research 176: 104742.

An open source implementation of the methods described
can be found at https://github.com/gifford-lab/optivax.

Author Contributions
G.L., B.C., and D.G. contributed to problem definition and
solution. G.L. designed and implemented the optimization
procedure, with advice from B.C. and D.G. G.L., B.C., and
D.G. wrote the paper.

Declaration of Interests
Brandon Carter is an employee of Think Therapeutics, and
Ge Liu is an employee of Amazon. David Gifford and Brandon Carter have a financial interest in Think Therapeutics,
Inc.

Consortium, U. 2019. UniProt: a worldwide hub of protein knowledge. Nucleic acids research 47(D1): D506–D515.

Dobson, G. 1982. Worst-case analysis of greedy heuristics for integer programming with nonnegative data. Mathematics of Operations Research 7(4): 515–531.
Elbe, S.; and Buckland-Merrett, G. 2017. Data, disease and diplomacy: GISAID’s innovative contribution to global health. Global
Challenges 1(1): 33–46.
Fast, E.; Altman, R. B.; and Chen, B. 2020. Potential T-cell and
B-cell Epitopes of 2019-nCoV. bioRxiv .
Feige, U. 1998. A threshold of ln n for approximating set cover.
Journal of the ACM (JACM) 45(4): 634–652.

References

Grifoni, A.; Sidney, J.; Zhang, Y.; Scheuermann, R. H.; Peters, B.;
and Sette, A. 2020a. A Sequence Homology and Bioinformatic
Approach Can Predict Candidate Targets for Immune Responses
to SARS-CoV-2. Cell Host & Microbe 27(4): 671–680.

Abdelmageed, M. I.; Abdelmoneim, A. H.; Mustafa, M. I.; Elfadol,
N. M.; Murshed, N. S.; Shantier, S. W.; and Makhawi, A. M. 2020.
Design of multi epitope-based peptide vaccine against E protein of
human 2019-nCoV: An immunoinformatics approach. bioRxiv .

Grifoni, A.; Weiskopf, D.; Ramirez, S.; and et al. 2020b. Targets
of T cell responses to SARS-CoV-2 coronavirus in humans with
COVID-19 disease and unexposed individuals. Cell doi:10.1016/j.
cell.2020.05.015.

Ahmed, S. F.; Quadeer, A. A.; and McKay, M. R. 2020. Preliminary identification of potential vaccine targets for the COVID-19
coronavirus (SARS-CoV-2) based on SARS-CoV immunological
studies. Viruses 12(3): 254.

Gupta, E.; Mishra, R. K.; and Niraj, R. R. K. 2020. Identification of
potential vaccine candidates against SARS-CoV-2, A step forward
to fight novel coronavirus 2019-nCoV: A Reverse Vaccinology Approach. bioRxiv .

Gupta, R.; Jung, E.; and Brunak, S. 2004. Prediction of Nglycosylation sites in human proteins. In preparation URL http:
//www.cbs.dtu.dk/services/NetNGlyc/.

Nemhauser, G. L.; Wolsey, L. A.; and Fisher, M. L. 1978. An analysis of approximations for maximizing submodular set functions-I.
Mathematical programming 14(1): 265–294.

Hadfield, J.; Megill, C.; Bell, S. M.; Huddleston, J.; Potter, B.;
Callender, C.; Sagulenko, P.; Bedford, T.; and Neher, R. A. 2018.
Nextstrain: real-time tracking of pathogen evolution. Bioinformatics 34(23): 4121–4123.

Nolan, S.; Vignali, M.; Klinger, M.; and et al. 2020. A large-scale
database of T-cell receptor beta (TCRβ) sequences and binding associations from natural and synthetic exposure to SARS-CoV-2.
Research Square .

Herst, C. V.; Burkholz, S.; Sidney, J.; and et al. 2020. An Effective
CTL Peptide Vaccine for Ebola Zaire Based on Survivors’ CD8+
Targeting of a Particular Nucleocapsid Protein Epitope with Potential Implications for COVID-19 Vaccine Design. Vaccine .

O’Donnell, T. J.; Rubinsteyn, A.; and Laserson, U. 2020.
MHCflurry 2.0: Improved Pan-Allele Prediction of MHC Class IPresented Peptides by Incorporating Antigen Processing. Cell Systems 11(1): 42–48.

Hu, Z.; Ott, P. A.; and Wu, C. J. 2018. Towards personalized,
tumour-specific, therapeutic vaccines for cancer. Nature Reviews
Immunology 18(3): 168.

Ott, P. A.; Hu, Z.; Keskin, D. B.; Shukla, S. A.; Sun, J.; Bozym,
D. J.; Zhang, W.; Luoma, A.; Giobbie-Hurder, A.; Peter, L.; et al.
2017. An immunogenic personal neoantigen vaccine for patients
with melanoma. Nature 547(7662): 217–221.

Iyer, R. 2019. A Unified Framework of Robust Submodular Optimization. arXiv preprint arXiv:1906.06393 .
Jurtz, V.; Paul, S.; Andreatta, M.; Marcatili, P.; Peters, B.; and
Nielsen, M. 2017. NetMHCpan-4.0: improved peptide–MHC class
I interaction predictions integrating eluted ligand and peptide binding affinity data. The Journal of Immunology 199(9): 3360–3368.

Poran, A.; Harjanto, D.; Malloy, M.; Rooney, M. S.; Srinivasan,
L.; and Gaynor, R. B. 2020. Sequence-based prediction of vaccine
targets for inducing T cell responses to SARS-CoV-2 utilizing the
bioinformatics predictor RECON. bioRxiv .

Kenter, G. G.; Welters, M. J.; Valentijn, A. R. P.; and et al. 2009.
Vaccination against HPV-16 oncoproteins for vulvar intraepithelial
neoplasia. New England Journal of Medicine 361(19): 1838–1847.

Ramaiah, A.; and Arumugaswami, V. 2020. Insights into crossspecies evolution of novel human coronavirus 2019-nCoV and
defining immune determinants for vaccine development. bioRxiv
.

Khan, A.; Alam, A.; Imam, N.; Siddiqui, M. F.; and Ishrat, R.
2020. Design of an Epitope-Based Peptide Vaccine against the Severe Acute Respiratory Syndrome Coronavirus-2 (SARS-CoV-2):
A Vaccine Informatics Approach. bioRxiv .

Rist, M. J.; Theodossis, A.; Croft, N. P.; Neller, M. A.; Welland,
A.; Chen, Z.; Sullivan, L. C.; Burrows, J. M.; Miles, J. J.; Brennan,
R. M.; et al. 2013. HLA peptide length preferences control CD8+
T cell responses. The Journal of Immunology 191(2): 561–571.

Klinger, M.; Pepin, F.; Wilkins, J.; Asbury, T.; Wittkop, T.; Zheng,
J.; Moorhead, M.; and Faham, M. 2015. Multiplex identification
of antigen-specific T cell receptors using a combination of immune assays and immune receptor sequencing. PLoS One 10(10):
e0141561.

Rosendahl Huber, S.; van Beek, J.; de Jonge, J.; Luytjes, W.;
and van Baarle, D. 2014. T cell responses to viral infections–
opportunities for peptide vaccination. Frontiers in immunology 5:
171.

Kolliopoulos, S. G. 2003. Approximating covering integer programs with multiplicity constraints. Discrete applied mathematics
129(2-3): 461–473.
Kolliopoulos, S. G.; and Young, N. E. 2001. Tight approximation
results for general covering integer programs. In Proceedings 42nd
IEEE Symposium on Foundations of Computer Science, 522–528.
IEEE.
Lee, C. H.-J.; and Koohy, H. 2020. In silico identification of vaccine targets for 2019-nCoV. F1000Research 9.
Li, W.; Joshi, M. D.; Singhania, S.; Ramsey, K. H.; and Murthy,
A. K. 2014. Peptide vaccine: progress and challenges. Vaccines
2(3): 515–536.
Liu, G.; Carter, B.; Bricken, T.; Jain, S.; Viard, M.; Carrington, M.;
and Gifford, D. K. 2020. Computationally Optimized SARS-CoV2 MHC Class I and II Vaccine Formulations Predicted to Target
Human Haplotype Distributions. Cell Systems 11(2): 131–144.
Liu, G.; Carter, B.; and Gifford, D. K. 2021. Predicted Cellular Immunity Population Coverage Gaps for SARS-CoV-2 Subunit Vaccines and Their Augmentation by Compact Peptide Sets. Cell Systems 12(1): 102–107.
Mirzasoleiman, B.; Karbasi, A.; and Krause, A. 2017. Deletionrobust submodular maximization: Data summarization with the
right to be forgotten. In Proceedings of the 34th International Conference on Machine Learning-Volume 70, 2449–2458. JMLR. org.
Mitra, D.; Shekhar, N.; Pandey, J.; Jain, A.; and Swaroop, S. 2020.
Multi-epitope based peptide vaccine design against SARS-CoV-2
using its spike protein. bioRxiv .

Saha, R.; and Prasad, B. V. 2020. In silico approach for designing of a multi-epitope based vaccine against novel Coronavirus
(SARS-COV-2). bioRxiv .
Schultheiß, C.; Paschold, L.; Simnica, D.; and et al. 2020. NextGeneration Sequencing of T and B Cell Receptor Repertoires from
COVID-19 Patients Showed Signatures Associated with Severity
of Disease. Immunity 53(2): 442–455.
Sekine, T.; Perez-Potti, A.; Rivera-Ballesteros, O.; and et al. 2020.
Robust T Cell Immunity in Convalescent Individuals with Asymptomatic or Mild COVID-19. Cell 183: 158–168.
Singh, A.; Thakur, M.; Sharma, L. K.; and Chandra, K. 2020. Designing a multi-epitope peptide-based vaccine against SARS-CoV2. bioRxiv .
Snyder, T. M.; Gittelman, R. M.; Klinger, M.; and et al. 2020. Magnitude and Dynamics of the T-Cell Response to SARS-CoV-2 Infection at Both Individual and Population Levels. medRxiv .
Srinivasan, A. 1999. Improved approximation guarantees for packing and covering integer programs. SIAM Journal on Computing
29(2): 648–670.
Srivastava, S.; Verma, S.; Kamthania, M.; and et al. 2020. Structural basis to design multi-epitope vaccines against Novel Coronavirus 19 (COVID19) infection, the ongoing pandemic emergency:
an in silico approach. bioRxiv .
Tahir ul Qamar, M.; Rehman, A.; Ashfaq, U. A.; Awan, M. Q.;
Fatima, I.; Shahid, F.; and Chen, L.-L. 2020. Designing of a next
generation multiepitope based vaccine (MEV) against SARS-COV2: Immunoinformatics and in silico approaches. bioRxiv .

Vashi, Y.; Jagrit, V.; and Kumar, S. 2020. Understanding the B and
T cells epitopes of spike protein of severe respiratory syndrome
coronavirus-2: A computational way to predict the immunogens.
bioRxiv .
Wang, Q.; Qiu, Y.; Li, J.-Y.; Zhou, Z.-J.; Liao, C.-H.; and Ge, X.-Y.
2020. A unique protease cleavage site predicted in the spike protein of the novel pneumonia coronavirus (2019-nCoV) potentially
related to viral transmissibility. Virologica Sinica 1–3.
Wolfert, M. A.; and Boons, G.-J. 2013. Adaptive immune activation: glycosylation does matter. Nature Chemical Biology 9(12):
776–784. doi:10.1038/nchembio.1403.
Zeng, H.; and Gifford, D. K. 2019. Quantification of uncertainty
in peptide-MHC binding prediction improves high-affinity peptide
Selection for therapeutic design. Cell Systems 9(2): 159–166.

Supplementary Material:
Maximum n-times Coverage for COVID-19 Vaccine Design
Details of Candidate Peptide Filtering
For our SARS-CoV-2 peptide vaccine design, we eliminate peptides that are expected to mutate and thus cause vaccine escape,
peptides crossing cleavage sites, peptides that may be glycosylated, and peptides that are identical to peptides in the human
proteome.
Removal of mutable peptides. We eliminate peptides that are observed to mutate above an input threshold rate (0.001) to
improve coverage over all SARS-CoV-2 variants and reduce the chance that the virus will mutate and escape vaccine-induced
immunity in the future. When possible, we select peptides that are observed to be perfectly conserved across all observed
SARS-CoV-2 viral genomes. Peptides that are observed to be perfectly conserved in thousands of examples may be functionally
constrained to evolve slowly or not at all.
For SARS-CoV-2, we obtained the most up to date version of the GISAID database (Elbe and Buckland-Merrett 2017)
(as of 2:02pm EST May 13, 2020, acknowledgements in Supplementary table) and used Nextstrain (Hadfield et al. 2018)1
to remove genomes with sequencing errors, translate the genome into proteins, and perform multiple sequence alignments
(MSAs). We retrieved 24468 sequences from GISAID, and 19288 remained after Nextstrain quality processing. After quality
processing, Nextstrain randomly sampled 34 genomes from every geographic region and month to produce a representative
set of 5142 genomes for evolutionary analysis. Nextstrain definition of a “region” can vary from a city (e.g., “Shanghai”) to
a larger geographical district. Spatial and temporal sampling in Nextstrain is designed to provide a representative sampling of
sequences around the world.
The 5142 genomes sampled by Nextstrain were then translated into protein sequences and aligned. We eliminated viral
genome sequences that had a stop codon, a gap, an unknown amino acid (because of an uncalled nucleotide in the codon), or
had a gene that lacked a starting methionine, except for ORF1b which does not begin with a methionine. This left a total of
4690 sequences that were used to compute peptide level mutation probabilities. For each peptide, the probability of mutation
was computed as the number of non-reference peptide sequences observed divided by the total number of peptide sequences
observed.
Removal of cleavage regions. SARS-CoV-2 contains a number of post-translation cleavage sites in ORF1a and ORF1b that
result in a number of nonstructural protein products. Cleavage sites for ORF1a and ORF1b were obtained from UniProt (Consortium 2019) under entry P0DTD1. In addition, a furin-like cleavage site has been identified in the Spike protein (Wang et al.
2020; Coutard et al. 2020). This cleavage occurs before peptides are loaded in the endoplasmic reticulum for class I or endosomes for class II. Any peptide that spans any of these cleavage sites is removed from consideration. This removes 3,739
peptides out of the 154,996 we consider across windows 8-10 (class I) and 13-25 (class II) (∼2.4%).
Removal of glycosylated peptides. Glycosylation is a post-translational modification that involves the covalent attachment
of carbohydrates to specific motifs on the surface of the protein. We eliminate all peptides that are predicted to have N-linked
glycosylation as it can inhibit MHC class I peptide loading and T cell recognition of peptides (Wolfert and Boons 2013). We
identified peptides that may be glycosylated with the NetNGlyc N-glycosylation prediction server (Gupta, Jung, and Brunak
2004) and eliminated peptides where NetNGlyc predicted a non-zero N-glycosylation probability in any residue. This resulted
in the elimination of 18,957 of the 154,996 peptides considered (∼12%).
Self-epitope removal. T cells are selected to ignore peptides derived from the normal human proteome, and thus we remove
any self peptides from consideration for a vaccine. In addition, it is possible that a vaccine might stimulate the adaptive immune
system to react to a self peptide that was presented at an abnormally high level, which could lead to an autoimmune disorder.
All peptides from SARS-CoV-2 were scanned against the entire human proteome downloaded from UniProt (Consortium 2019)
under Proteome ID UP000005640. A total of 48 exact peptide matches (46 8-mers, two 9-mers) were discovered and eliminated
from consideration.

Detailed OptiVax-Robust Vaccine Design Results
Table S1 shows the evaluation of our OptiVax-Robust vaccine designs using the M ARGINAL G REEDY algorithm compared to
29 designs by others as baselines (Lee and Koohy 2020; Fast, Altman, and Chen 2020; Poran et al. 2020; Bhattacharya et al.
2020; Baruah and Bose 2020; Abdelmageed et al. 2020; Ahmed, Quadeer, and McKay 2020; Srivastava et al. 2020; Herst et al.
2020; Vashi, Jagrit, and Kumar 2020; Akhand, Azim, and et al. 2020; Mitra et al. 2020; Khan et al. 2020; Banerjee, Santra, and
Maiti 2020; Ramaiah and Arumugaswami 2020; Gupta, Mishra, and Niraj 2020; Saha and Prasad 2020; Tahir ul Qamar et al.
1

from GitHub commit 639c63f25e0bf30c900f8d3d937de4063d96f791

2020; Singh et al. 2020). Additionally, we compare to baseline vaccines containing the full S and S1 proteins (Grifoni et al.
2020a), OptiVax-Robust designed vaccines with peptides stemming from the S, M, and N proteins only (Grifoni et al. 2020b),
and random subsets of peptides that are binders (averaged over 200 runs, each consisting of the same number of peptides as the
OptiVax-Robust design).

Evaluation of OptiVax-Robust Vaccine Design and baselines with non-experimentally-calibrated
machine learning predictions
We found that M ARGINAL G REEDY produced vaccine designs superior to the baselines we tested even when it used immunogenicity models that did not rely upon clinical data of peptide immunogenicity. Since our immunogenicity model used experimental data that was not accessible to the baseline methods, our designs have an advantage over baseline vaccines that did not
use calibrated machine learning predictions. We repeated vaccine design using an ensemble of NetMHCpan-4.0 and MHCflurry
with 50 nM predicted affinity cutoff for predicting MHC class I immunogenicity and NetMHCIIpan-4.0 for MHC class II. As
shown in Figure S1, OptiVax-Robust again shows superior performance on all metrics at all vaccine size under 35, indicating
the success of M ARGINAL G REEDY in optimizing population coverage with diverse peptide display.

Figure S1: EvalVax population coverage evaluation of SARS-CoV-2 vaccines for (A) MHC class I and (B) MHC class II using
non-experimentally calibrated machine learning predictions. (a) EvalVax-Robust population coverage with n ≥ 1 peptide-HLA
hits per individual, OptiVax-Robust performance is shown by the blue curve and baseline performance is shown by red crosses
(labeled by name of first author). (b) EvalVax-Robust population coverage with n ≥ 5 peptide-HLA hits. (c) EvalVax-Robust
population coverage with n ≥ 8 peptide-HLA hits. (d) Comparison of OptiVax-Robust and baselines on expected number of
peptide-HLA hits.

EvalVaxRobust
p(n ≥ 1)

EvalVaxRobust
p(n ≥ 5)

EvalVaxRobust
p(n ≥ 8)

Exp. #
peptideHLA
hits /
vaccine
size

MHC Class I Peptide Vaccine Evaluation
OptiVax-Robust (Ours)
18
S-protein
3795
S1-subunit
2055
Srivastava et al. (2020)
37
Herst et al. (2020)
52
Random subset of binders
18
Herst et al. (2020)-top16
16
Baruah and Bose (2020)
5
Fast, Altman, and Chen (2020)
13
Vashi, Jagrit, and Kumar (2020)
51
Abdelmageed et al. (2020)
10
Lee and Koohy (2020)
13
Ahmed, Quadeer, and McKay (2020)
16
Poran et al. (2020)
10
Singh et al. (2020)
7
Akhand, Azim, and et al. (2020)
31
Bhattacharya et al. (2020)
13
Khan et al. (2020)
3
Saha and Prasad (2020)
5
Gupta, Mishra, and Niraj (2020)
7
Mitra et al. (2020)
9

100.00%
100.00%
100.00%
99.90%
97.76%
97.09%
96.70%
95.31%
89.60%
84.86%
79.09%
75.78%
73.49%
72.56%
67.80%
61.44%
53.78%
42.08%
39.30%
38.91%
32.13%

99.53%
99.43%
99.05%
80.06%
50.93%
65.70%
13.97%
6.39%
57.38%
2.53%
7.05%
42.18%
26.65%
0.84%
2.84%
0.04%
0.01%
0.09%
0.00%
3.01%
0.00%

92.32%
99.06%
97.37%
44.74%
13.50%
40.98%
0.07%
0.00%
30.55%
0.00%
0.11%
20.60%
9.29%
0.00%
0.00%
0.00%
0.00%
0.00%
0.00%
0.00%
0.00%

12.428
40.183
20.788
7.163
4.719
6.851
2.931
2.565
5.558
1.802
2.000
4.113
3.085
1.355
1.499
0.840
0.710
0.614
0.423
0.804
0.355

12.532
38.212
20.616
7.533
5.207
7.007
3.236
3.128
5.616
1.976
2.192
4.397
3.051
0.997
1.431
1.062
0.977
0.702
0.496
0.747
0.504

11.425
38.250
20.397
7.018
4.473
6.028
2.988
2.031
4.386
1.711
1.777
3.384
2.248
1.383
1.305
0.774
0.635
0.878
0.291
0.388
0.251

13.326
44.086
21.351
6.938
4.477
7.519
2.568
2.537
6.672
1.720
2.030
4.558
3.957
1.686
1.760
0.682
0.518
0.263
0.482
1.278
0.311

MHC Class II Peptide Vaccine Evaluation
OptiVax-Robust (Ours)
18
S-protein
16315
Ramaiah and Arumugaswami (2020)
134
S1-subunit
8905
Random subset of binders
18
Fast, Altman, and Chen (2020)
13
Banerjee, Santra, and Maiti (2020)
9
Tahir ul Qamar et al. (2020)
11
Poran et al. (2020)
10
Akhand, Azim, and et al. (2020)
31
Singh et al. (2020)
7
Ahmed, Quadeer, and McKay (2020)
5
Mitra et al. (2020)
5
Vashi, Jagrit, and Kumar (2020)
20
Abdelmageed et al. (2020)
10
Baruah and Bose (2020)
3

99.67%
99.28%
98.88%
98.86%
93.26%
86.99%
83.51%
72.75%
69.37%
60.45%
56.29%
54.96%
47.92%
35.12%
28.40%
0.00%

97.22%
96.53%
90.20%
91.87%
57.28%
15.24%
12.49%
0.27%
0.00%
9.22%
0.96%
0.00%
0.04%
0.04%
0.96%
0.00%

87.99%
96.04%
83.97%
90.97%
30.68%
3.69%
0.66%
0.00%
0.00%
1.01%
0.00%
0.00%
0.00%
0.00%
0.00%
0.00%

14.834
395.096
33.743
177.838
5.805
2.560
2.398
1.278
0.983
1.886
0.981
0.654
0.657
0.673
0.479
0.000

17.206
541.429
45.044
265.183
7.461
3.650
3.162
1.840
1.469
2.531
1.438
0.736
0.905
0.959
0.919
0.000

16.085
416.406
38.254
175.615
6.367
2.262
2.354
1.464
0.910
2.536
1.113
0.717
0.579
0.618
0.274
0.000

11.210
227.455
17.932
92.717
3.587
1.769
1.679
0.530
0.569
0.591
0.392
0.510
0.488
0.442
0.244
0.000

Peptide Set

Vaccine
Size

Exp. #
peptideHLA
hits
(White)

Exp. #
peptideHLA
hits
(Black)

Exp. #
peptideHLA
hits
(Asian)

Table S1: Comparison of existing baselines, S-protein peptides, and OptiVax-Robust peptide vaccine designs on various population coverage evaluation metrics. The rows are sorted by EvalVax-Robust p(n ≥ 1). Random subsets are generated 200 times.
The binders used for generating random subsets are defined as peptides that are predicted to bind with ≤ 50 nM to more than 5
of the alleles.

