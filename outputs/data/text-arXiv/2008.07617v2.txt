Comparative study of variational quantum
circuit and quantum backpropagation multilayer
perceptron for COVID-19 outbreak predictions

arXiv:2008.07617v2 [quant-ph] 19 Aug 2020

Pranav Kairon1 and Siddhartha Bhattacharyya2
1

2

Delhi Technological University, Bawana, Delhi, India,
pranavkairon bt2k17@dtu.ac.in
CHRIST (Deemed to be University), Bangalore, India,
dr.siddhartha.bhattacharyya@gmail.com

Abstract. There are numerous models of quantum neural networks that
have been applied to variegated problems such as image classification,
pattern recognition etc.Quantum inspired algorithms have been relevant
for quite awhile. More recently, in the NISQ era, hybrid quantum classical
models have shown promising results. Multi-feature regression is common
problem in classical machine learning. Hence we present a comparative
analysis of continuous variable quantum neural networks (Variational circuits) and quantum backpropagating multilayer perceptron (QBMLP).
We have chosen the contemporary problem of predicting rise in COVID19 cases in India and USA. We provide a statistical comparison between
two models , both of which perform better than the classical artificial
neural networks.
Keywords: COVID-19, Corona virus, Quantum machine learning, Quantum neural network

1

Introduction

The Novel Corona virus disease/COVID-19 was first detected in Wuhan, China
on 31st December 2019. After the 1918 H1N1 influenza, COVID-19 has been accounted for as the most pernicious respiratory infection to affect the population
worldwide [1]. With meteoric spread it has taken lives of half a million people
and around 13 million confirmed cases bringing lives of millions to a standstill.
According to the World Health Organization report 170 countries now have adumbrated at least one case as on July, 2020. While, 4.5% is the mortality rate of
this deadly disease, for the age group 70-79 this has ascended to be 8.0% while
for those above 80 it is soaring 14.8%. People already suffering from heart disease, diabetes are especially at higher risk, the fact that they are older than 50
only exacerbates the situation [2]. Middle East Respiratory Syndrome (MERS),
Severe Acute Respiratory Syndrome (SARS) and COVID-19 all belong to a family of severe acute respiratory syndrome, called as coronavirus. The symptoms
are self evident within 2-14 days [3] and have been signified by gamut of fever,

2

Pranav Kairon and Siddhartha Bhattacharyya

cough, shortness of breath to pneumonia. Flattening the epidemic curve is key
part in managing this pandemic since there is no commercially available vaccine
against COVID-19. Although there is some hope as researchers in Russia and
Oxford University have completed the human trials of the vaccine, which show
positive results.
Given the effectual predictions in healthcare, machine learning has proven itself
fundamentally. After intensifying patterns and expertise of radiologists, machine
learning is now helping them to predict the disease and diagnose it earlier. Also
with availability of meager data on COVID-19 the role of data scientists has
increased drastically Since they have to integrate the data and then release the
results which will help in taking unerring decisions. [4].
Quantum computing [5] is an amalgamation of quantum physics and computer
science. Originally proposed in the 1970s, the research remained mostly theoretical until early 2000s with advent of Shorâ€™s and Groverâ€™s Algorithms [6]. We
are presently in the NISQ (Noisy intermediate Quantum) era of quantum computing which implies that the presently available quantum processors are small
and noisy. Since many countries are investing heavily on quantum technologies,
the growth rate has been accelerated in past two years. Quantum computers
supersede classical computers by harnessing quantum effects for computational
vantage providing polynomial and even exponential speedups for specific problems. With Mooreâ€™s law coming to an end, quantum computers become even
more eminent since they are not made up of small transistors but rather quits.
On the other hand we are living in an age of data and machine learning provides
robust models for predictions, classification and organisation tasks.

2

Motivation

Presently available artificial neural network models provide robust models for
plethora of problems ranging from stock prediction and statistical modeling to
image recognition, data mining [7]. However, quantum neural networks are still
somewhat unexplored in terms of their applicability to eclectic and pragmatic
problems. In terms of convergence rate and fit ability, Quantum Backpropagation
Neural Networks have outperformed classical ANNs, since they can harness the
mathematical advantage of complex numbers [8] using Quantum phase door and
two negates controlled controlled Quantum neuron model. Continuous variable
Quantum neural networks [9] are similar to variational circuits in that they are
free parameter dependent quantum algorithms. They are gaining attention as
an alternate way to characterize NISQ era devices. Given the guessing abilities
of quantum neural systems, these networks are agile to cost degradation.These
properties have roused us to apply these network models to regressional tasks like
predicting rise in cases for COVID 19 and compare them against the intelligent
paradigmatic classical ANNs.

Title Suppressed Due to Excessive Length

3

3

Proposed Methodology

The experimental data has been collected from [15] for India and USA. We have
considered a live time-series dataset from 30th January till 1st July 2020. It provides the number of confirmed cases, number of deaths and number of people who
have recovered from the pervasive infection. We can find additional two features
i.e. the number of active cases which is given by Active cases=No.of Confirmed
Cases - (No.of deaths + No. of recovered patients) and New cases added each
day which is just the difference of active cases on the nth day and (n âˆ’ 1) th day.
The global data for all the three columns is plotted in Figure 1. The pervasive
nature of the infection is evident from the exponential curves in Figure 1. In this
work, Quantum Neural Networks (QNNs) have been employed to predict rise
in cases. QNNs are seldom applied to regressional tasks [10]. We consider two
kinds of quantum neural networks. First being, a Quantum Backpropagation
Multilayer Perceptron (QBMLP) which utilizes the superposition feature and
complex numbers [8][11]. Secondly, we employ a Continuous Variable Quantum
Neural Network (CVQNN) provided by Xanadu in their Pennylane and Strawberry fields package [9]. CVQNNs are variational circuits that use Gaussian and
non-Gaussian gates to perform affine and non linear transformations. Both the
QBMLP and CVQNN can be generalized to any number of hidden layers, and
are characterized by the Tanh and Kerr activation functions, respectively. The
accuracy for both the models in finding out the rise in number of cases and
deaths due to COVID-19 in India and USA is tested. Moreover, a comparative
study has been made between both the networks using a two tailed statistical
t-test. CVQNN outperforms QBMLP in some cases whereas an opposite effect
is seen in some, as can be seen from the two tailed t-test.

6

#105

3

2.5

Confirmed
Death
Recovered

4

Number of Cases

Number of Cases

5

3

2

1

0

#106

Confirmed
Death
Recovered

2

1.5

1

0.5

0

20

40

60

80

100

120

140

160

Days

(a) India COVID-19 cases

180

0

0

20

40

60

80

100

120

140

160

180

Days

(b) USA COVID-19 cases

Fig. 1. Total number of cases for all the countries from January 30th to 1st July 2020

4

4

Pranav Kairon and Siddhartha Bhattacharyya

Models

Deep feed forward neural networks have shown tremendous results on problems
like image processing, stock predictions etc. They owe their success to affine
transformations done through hidden layers, which are the building blocks of a
mulitlayer perceptron, and activation functions that introduce non linearity to
map input x to output y. A typical architecture can be represented by
L : x â†’ y = Ï†(W x + b)

(1)

for l input variables and m output variables, W is a lÃ—m matrix and b is constant
vector of length l, where W, b R. Ï† is usually chosen from a pool of functions, it
can be sigmoid, tanh, ReLU (x) = max(0, x). Inputs for all the layers form the
output for the next layers, and the weights are optimized for the defined task
on basis of hyper parameters adjusted by the user, which include the number of
layer wise input variables (features) and number of layers (depth d).
4.1

Fuzzified Quantum Backpropagation Multilayer Perceptron

Consider a dataset of N features that can be represented as x = (x1, x2, ....xN ).
The input data can be squashed into the range [0, 1] using fuzzy linear membership function [11] with 1 signifying the highest value whereas 0 lies on opposite
end of the spectrum. Membership value is allotted to all the data points in between using linear scaling rule [8].
Given the inputs x, we define a function f (x) as
|xi = cos(x) |0i + sin(x) |1i â‰¡ cos(x) + i.sin(x)

(2)

The weights which are modeled as rotation gates, R(Î¸i ) to the input qubits, |xi i
with input bias Î». Hence, the modified neural network equation takes the form
u=

n
X

R(Î¸i ) |xi âˆ’ |Î»i

(3)

i=1

Now, instead of applying just a non linear function as in the classical case, the
transformed output is given by
y=
âˆ’2Î´

amplitude(|1i)
Ï€
g(Î´) âˆ’ arctan(
)
2
amplitude(|0i)

(4)

where, g(Î´)= 1âˆ’e
is the tanh function.
1+eâˆ’2Î´
Similar to the classical Multilayer Perceptron, the QBMLP is designed with the
first layer accepting inputs in form of qubits, followed by any number of hidden
layers, ending at an output layer with a single neuron (for regressional tasks).
The qubits for QBMLP are designed by transforming the squashed input x into
the range of [0, Ï€2 ] so that they become suitable angles for rotation gates, which
after can be transformed to
Ï€
Ï€
Ï€ E
xi = cos( x) |0i + sin( x) |1i
(5)
2
2
2

Title Suppressed Due to Excessive Length

5

The output of the model is a quantum state expressed as a complex number in
Eulerâ€™s form. To extract the physical meaning of this output, either a quantum
measurement can be done and the probability of getting |0i , |1i is considered as
the output or equivalently the final output can be obtained as square of either the
real or the imaginary part of the output. In this paper, we have taken complex
part of output which is the same as taking probability of getting |1i as the final
result. The necessary changes need to be made in the analysis of backpropagaton
if one decides otherwise.
O = P robability(|1i) =| Im(y) |2 = sin2 (y)

(6)

Interested readers may refer to [11] for details on the architecture and operation
of the network architecture.
4.2

Continuos Variable Quantum Neural Network

Pennylane is a quantum macine learning python library provided by Xanadu[12],
working on the principle of quantum differentiable programming. It provides an
efficient platform by combining quantum simulators and classical machine learning, that helps users in traning various circuits. [13]. The Strawberry fields in a
photonic quantum computing library used to solve plethora of problems such as
boson sampling, graph optimiation etc. This has been used to construct a photonic neural network model having continuos variable gates. Variational circuits
[14] behave similar to neural networks in that, there is a definite input (input
quantum state) which is embedded into the circuit using a suitable embedding,
weights (circuit parameters) that need to be learnt by the model and quantum
measurement of an observable say A, which generates a classical output on which
training rules are applied for parametric learning. A three qumode CVQNN architecture is shown in Figure 2 (a). They are quite useful algorithms for NISQ
devices in prblems such as quantum chemistry, optimization etc.
This continuous variable quantum neural network actually contains classical neural networks within itself. The use of continuous variable Gaussian and non Gaussian operations such as displacement operators, squeezing gates, Kerr gates etc,
attribute novelty to this approach given the fact that it doesnâ€™t contain quantum
features such as entanglement and superposition in contrast with other variational quantum circuits. If the input dataset has N features (columns), it can
be encoded into the circuit using displacement operators. Let the classical input
x is given by x = (x1 , x2 ...xN ) and the initial quantum state of circuit is given
NN
by |xi = i=1 |xi = 0i. Then the displacement operators, D(x) can be applied
to all qumodes, to encode classical input x such that
|xi =

N
O

D(xi )|xi = 0i

(7)

i=1

Just like in classical feed forward neural networks, any layer takes inputs from
the output of the preceding layer, results are extracted by applying homodyne

6

Pranav Kairon and Siddhartha Bhattacharyya

measurements on each qumode. A similar type of transformation has been used,
by using continuous variable quantum analogs. Information about the various
CV analogs applied in the quantum neural network can be found in Table 1.
Combining all of the above, in order to obtain the our full affine transformation
D â—¦ U â—¦ S â—¦ U |xi = |W x + di, we can simulate a classical neural network layer
which if broken down is basically a transformation given by equation 8, and the
post proccessing of the output is similar to what is done in all neural network
models, i.e. paramters are updated on basis of training rules as
L(z) = Ï†(M z + Î±)

(8)

Table 1. Various CV quantum gates used to simulate affine transformation
Classical
Weight Matrix : W

CV analog
Interferometer :UÌ‚

UÌ‚|xi =

âˆ’1

Squeezing gate : SÌ‚
Bias : b
Displacement Operator :DÌ‚
Activation Function : Ï† Non-Gaussian transformation : Î¦

S(r1)

D(Î±1)

Ñ„(Î»1)

S(r2)

S(r3)

U2
(Ñ„2, Î¸2)

D(Î±2)

Ñ„(Î»2)

BS
(Ñ„2,Î¸2)
D(Î±3)

Ñ„(Î»3)

(a) Standard CVQNN architecture

BS
(Ñ„3,Î¸3)

P

ri

P

SÌ‚(r) |xi = e 2 i
DÌ‚(Î±) |xi = |x + Î±i
Ï†|xi = |Î¦(x)i

S(r1)

D(Î±1)

Ñ„(Î»1)

S(r2)

D(Î±2)

Ñ„(Î»2)

S(r3)

D(Î±3)

Ñ„(Î»3)

BS
(Ñ„1,Î¸1)
U1
(Ñ„1, Î¸1)

Transformation
PN
| j=1 Cij xj i = |Cxi
i=1

NN

(b) Modified CVQNN architecture

Fig. 2. Three qumode CVQNN architectures

5

Experimental Results

Both the QBMLP and CVQNN have been applied to study the rise of corona
virus cases in India and USA. The problem is same as multi dimensional regression analysis done commonly using classical neural nets. The networks have been
trained to map non linear functions on basis of given data points and their performance has been compared on basis of two tailed t-test. A 3-3-1 architecture
has been designed for QBP (i.e. 3 input neurons, 3 hidden neurons and 1 output
neuron) and for the CVQNN, a 3 qumode quantum circuit has been constructed
with only one hidden layer shown in Figure 2 (a). The output of the first qumode
is finally measured using homodyne measurement in position eigenstates. The

x

Title Suppressed Due to Excessive Length

7

four parameters used from the data are Confirmed cases, Number of Deaths and
Recoveries and number of days passed. Three of these features have been used to
predict confirmed cases and the number of deaths since this information is quite
important with regards to public safety and social distancing standards. The
activation function used is tanh as opposed to the more commonly used sigmoid
function for quantum inspired model. The learning rate has been defined to be
0.001 for 15000 iterations(IQBM LP ). Since a nested for loop has been used in
the algorithm of QBMLP, itâ€™s time complexity is given by O(Len(y) âˆ— IQBM LP ),
where Len(y) is specified by the length of output column. For CVQNN, the
learning rate has been chosen as 0.1 (using stochastic gradient descent) with 200
iterations(ICV QN N ). The Strawberry fields simulator which is used to perform
the CV computation, utilizes time/memory as O(C W âˆ— ICV QN N ) where C is the
cutoff dimension (a hyper parameter, equal to 10 for our case) and W is the
number of wires (or qumodes) involved in the computation which were 3 in this
case, as their were 3 features. The caveat is, if we choose cutoff dimension to be
low in order to speed up the computation, some operations like Displacement,
Squeezing, Kerr operations push the quantum states out of the defined space
giving low fidelity. Hence, the standard layer architecture has been modified to
a novel version to speed up the computation as shown in Figure 2 (b). As we
can see from the algorithm the CVQNN has better time complexity than our
QBMLP model, but owing to sluggish nature of Strawberry fields simulator the
former takes longer to execute in real time than the latter. The prediction results
and the cost function decay for QBMLP and CVQNN for the test data set are
shown in Figures 3 and 4, respectively.
Table 2. Two tailed t-test for QBMLP and CVQNN
Data Set/Model

QBMLP
Statistic
India - Death Prediction
0.0572
India - Confirmed Prediction -0.0189
USA - Death Prediction -0.02261
USA - Confirmed Prediction 0.0612

6

p value
0.9545
0.9849
0.9820
0.95132

CVQNN
Statistic
0.01998
0.06372
-0.01964
0.08899

p value
0.98411
0.94939
0.98438
0.92936

Discussions and Conclusion

In this study the ability of quantum neural networks to perform regressional tasks
has been investigated, specifically in predicting the rise in COVID-19 cases. The
operational features used are the number of days passed, number of confirmed,
recovered and death cases. The performance of a Quantum Backpropagation
Multilayer Perceptron and a Continuos Variable Quantum Neural Network has
been compared for the above mentioned task on the basis of a two tailed statistical t-test and it is found to be almost similar. While the QBMLP model

8

Pranav Kairon and Siddhartha Bhattacharyya

performs better for checking the rise of confirmed cases in both the countries,
the CVQNN model outperforms the former for calculating the rise in the number
of deaths. Although the difference in p values for both the models is not that
significant, it provides an interesting insight into the nature of both the models.

References
1. A. Darwish, Y. Rahhal, A. Jafar: A comparative study on predicting influenza outbreaks using different feature spaces: application of influenza-like illness data from
early warning alert and response system in syria. BMC Research Notes, 13 (2020).
2. Y.-Y. Zheng et al.: COVID-19 and the cardiovascular system. Nature Reviews Cardiology, 17, pp. 259-260 (2020).
3. Y. Bai et al.: Presumed asymptomatic carrier transmission of COVID-19. JAMA,
323, pp. 1406 (2020).
4. F. Koike, N. Morimoto: Supervised forecasting of the range expansion of novel nonindigenous organisms. Alien pest organisms and the 2009 h1n1 flu pandemic, Global
Ecology and Biogeography, 27, pp. 991-1000 (2018).
5. A. Steane: Quantum computing. Reports on Progress in Physics, 61, pp. 117-173
(1998).
6. T. Monz, et al.: Realization of a scalable shor algorithm. Science 351, 6277, pp.
1068-1070 (2016).
7. K. Huarng, T. H.-K. Yu: The application of neural networks to forecast fuzzy
time series. Physica A: Statistical Mechanics and its Applications, 363, pp. 481491 (2006).
8. Mitrpanont, Jarernsri L., and Ananta Srisuphab : The realization of quantum
complex-valued backpropagation neural network in pattern recognition problem.
In : 9th International Conference on Neural Information Processing. ICONIPâ€™02.,
vol. 1, pp. 462-466. IEEE, (2002).
9. N. Killoran et al.: Continuous-variable quantum neural networks. Physical Review
Research, 1 (2019).
10. D. N. Diep, K. Nagata, T. Nakamura: Nonparametric regression quantum neural
networks.arXiv preprint arXiv:2002.02818 (2020).
11. S. Bhattacharyya, S. Bhattacharjee, N. K. Mondal: A quantum backpropagation
multilayer perceptron (QBMLP) for predicting iron adsorption capacity of calcareous soil from aqueous solution. Applied Soft Computing, 27, pp. 299-312 (2015).
12. V. Bergholm et al.: Pennylane: Automatic differentiation of hybrid quantumclassical computations. arXiv preprint arXiv:1811.04968 (2020).
13. N. Killoran et al.: Strawberry fields: A software platform for photonic quantum
computing. Quantum, 3, pp. 129 (2019).
14. Y. Liu et al.: J. Wu: Variational quantum circuits for quantum state tomography.
Physical Review A, 101 (2020).
15. The Humanitarian Data Exchange. https://data.humdata.org/dataset/novelcoronavirus-2019-ncov-cases

Title Suppressed Due to Excessive Length
0.9

9

0.03

0.8
0.025
0.7
0.6

0.02

Cost

0.5
0.4
0.3

0.015

0.01

0.2
0.005
0.1
0

0

0.1

0.2

0.3

0.4

0.5

0.6

0.7

0.8

0.9

0

1

0

5000

10000

15000

Iterations

(a) India : Death cases

(e) Cost function decay (a)
0.09

1
Actual
Predicted

0.9

0.08

0.8

0.07

0.7

0.06

0.6

0.05

0.5
0.04

0.4

0.03

0.3

0.02

0.2

0.01

0.1
0

0

0.1

0.2

0.3

0.4

0.5

0.6

0.7

0.8

0.9

0

1

0

(b) USA : Death cases

5000

10000

15000

(f) Cost function decay (b)

1

0.03

0.9
0.025

0.8
0.7

0.02

Cost

0.6
0.5

0.015

0.4
0.01

0.3
0.2

0.005

0.1
0

0

0.1

0.2

0.3

0.4

0.5

0.6

0.7

0.8

0.9

1

0

0

5000

10000

15000

Iterations

(c) India : Confirmed cases

(g) Cost function decay (c)

0.9

0.09
Actual
Predicted

0.8

0.08

0.7

0.07

0.6

0.06

0.5

0.05

0.4

0.04

0.3

0.03

0.2

0.02

0.1

0.01

0

0

0.1

0.2

0.3

0.4

0.5

0.6

0.7

0.8

(d) USA : Confirmed cases

0.9

1

0

0

5000

10000

15000

(h) Cost function decay (d)

Fig. 3. Results and cost function decays of QBMLP for number of deaths and confirmed
cases for COVID-19

10

Pranav Kairon and Siddhartha Bhattacharyya
0.018

1
Actual
Predicted

0.016

0.8
0.014
0.012

Cost

0.6

0.4

0.01
0.008
0.006

0.2

0.004
0
0.002
-0.2

0

0.1

0.2

0.3

0.4

0.5

0.6

0.7

0.8

0.9

0

1

0

50

100

150

Iterations

(a) India : Death cases

(e) Cost function decay (a)
0.018

1.2
Actual
Predicted

1

0.016
0.014

0.8

0.012

Cost

0.6
0.4

0.01
0.008
0.006

0.2

0.004
0
-0.2

0.002

0

0.1

0.2

0.3

0.4

0.5

0.6

0.7

0.8

0.9

0

1

0

20

40

60

80

100

120

140

160

180

200

Iterations

(b) USA : Death cases

(f) Cost function decay (b)

0.9

0.012
Actual
Predicted

0.8

0.01

0.7
0.6

0.008

Cost

0.5
0.4

0.006

0.3
0.004

0.2
0.1

0.002

0
-0.1

0

0.1

0.2

0.3

0.4

0.5

0.6

0.7

0.8

0.9

0

1

0

10

20

30

40

50

60

70

80

90

100

180

200

Iterations

(c) India : Confirmed cases

(g) Cost function decay (c)
0.07

1
Actual
Predicted

0.06

0.8

0.05

0.6

Cost

0.04
0.4

0.03
0.2

0.02

0

-0.2

0.01

0

0.1

0.2

0.3

0.4

0.5

0.6

0.7

0.8

0.9

1

0

0

20

40

60

80

100

120

140

160

Iterations

(d) USA : Confirmed cases

(h) Cost function decay (d)

Fig. 4. Results and cost function decays of CVQNN for number of deaths and confirmed
cases for COVID-19

