The HDvent Emergency Ventilator System
David Grimshandl,1 Manuel Gerken,1 Eleonora Lippi,1 Binh Tran,1 Saba Zia Hassan,1 Jan Hendrik Becher,1 Selim Jochim,1 Matthias
Weidemüller,1 Gunnar Föhner,1 Steffen Brucker,1 Frank Schumacher,1 Wolfgang Beldermann,1 Venelin Angelov,1 Stefan Hetzel,1
Stefan Hummel,1 Simon Muley,1 Bernd Windelband,1 Christoph Eisner,2 Marco Zugaj,2 Philipp Bayer,3 Dario Ernst,3
Marcel Gehrlein,3 Helmut Jacob,3 Jens Pfeifle,3 Andreas Treskatsch,3 Martin Ulmschneider,3 and Philipp M. Preiss1, ∗
1

Physics Institute, Heidelberg University, 69120 Heidelberg, Germany
2

Heidelberg University Hospital, 69120 Heidelberg, Germany

arXiv:2012.13005v1 [physics.med-ph] 23 Dec 2020

3

Rommelag iLabs GmbH, 76133 Karlsruhe, Germany
(Dated: December 25, 2020)

The pandemic caused by Severe Acute Respiratory Syndrome Coronavirus 2 (SARS-CoV-2) has affected countries
all across the world, heavily burdening the medical infrastructure with the growing number of patients affected by
the coronavirus disease (COVID-19). With ventilators in limited supply, this public health emergency highlights
the need for safe, fast, reliable, and economical alternatives to high-end commercial devices and has prompted the
development of easy-to-use and mass-producible ventilators. Here, we detail the design of the HDvent Emergency
Ventilator System. The device performs ventilation through mechanical compression of manual resuscitators and
includes control electronics, flow and pressure sensors, and an external data visualization and monitoring unit.
We demonstrate its suitability for open loop, pressure- and volume-controlled ventilation. The system has not undergone clinical testing and has not been approved for use as a medical device. The project documentation needed
to reproduce the prototype is freely available and will contribute to the development of open source ventilation
systems.

Introduction
The World Health Organization (WHO) declared a worldwide
pandemic in March 2020, due to the rapid and, to a large extent,
uncontrolled propagation of SARS-CoV-2 or COVID-19 [1]. As of
December 25, 2020, the virus has infected over 75 million people
with about 1.7 million reported deaths.
For many COVID-19 patients, suffering from severe cases of
respiratory failure, life-saving treatment can be provided by
oxygenation and mechanical ventilation [2, 3]. While previous
pandemics have already caused concerns about shortage of mechanical ventilators [4, 5], the COVID-19 pandemic shows once
more that the demand for mechanical ventilators in emergency
situations can rapidly exceed the local availability in hospitals
[6–9], possibly leading to preventable deaths and triage of patients. Shortages of ventilators can occur in developing countries, but also in nations with fully developed medical infrastructure. There, mechanical ventilators are often highly complex
devices that can only be provided by a few specialized suppliers
and at long lead times, making a dynamic response to increased
demand difficult.
The present pandemic therefore highlights the need of an additional class of ventilators beyond the high-end devices used in
typical ICU settings: Openly available designs for cost-effective,
easily mass-producible ventilators are needed for rapid emergency responses. Such devices should cover the basic medical
requirements for mechanical ventilation, but may not need the
full set of features of a high-end ventilator [8]. Intended for the
treatment of infected, but less critical cases, such ventilators
may free up resources for the treatment of critical cases and also
mitigate the burden on the medical infrastructure.

In view of the ongoing coronavirus pandemic and with the urge
to concretely contribute to the eventuality of a local emergency
situation, a group of technicians, physicists, anesthesiologists
and IT professionals came together to develop a working prototype of such a mechanical ventilator, the HDvent Emergency
Ventilator System, which we describe in this article.

The HDvent system
The key design goals of the HDvent system are:
Simplicity: The ventilator should be compatible with mass
production and require only modest machining capabilities.
Durability: The device should be suited for prolonged mechanical ventilation over two weeks or more, which may require several hundred thousand ventilation cycles.
Ease of Operation: The operation of the device should be
intuitive for medical staff or even untrained personnel. Potentially fatal user errors should be prevented by design.
Cost: For mass-scale production or deployment in developing countries, the cost of the device should not exceed several
hundred USD, a fraction of the typical price of several ten thousand dollars of commercial ventilators [8].
To meet the above criteria for an emergency ventilator system,
several approaches have been proposed [10–12]. One strategy
is to directly supply the patient with compressed air and/or
oxygen, which can yield compact devices, but requires access
to compressed air supplies and can be susceptible to dangerous
pressure spikes [13–18].

2
a)

ambubag
mechanical arms
room air/oxygen

b)

monitoring unit

Y-valve
PEEP

safety
valve

spirometer HEPA
filter
tube

~2m
P1

l

a
hanic
mec ms
ar

ent
HDv e
c
devi

HDvent device
spirometer
HEPA
tube
filter

front panel

patient
(test lung)

LCD screen
• set-up parameters
values
frequency
vol./ max pressure
inhalation/ slope time

ambubag

P2

stepper
motor
motor
control

control
electronics
Arduino
controller

settings

limits
min/max - pressure
min/max - tidal vol.
• run/stop
• accept/reject change
• clear alarms

patient
monitoring unit
data

Raspberry Pi
• visualization of the set-up parameters
• pressure and flow data
• alarms and thresholds

sensors
•
•
•
•

motor-1: home
motor-2: angle
pressure-1: P2
pressure-2: P2 - P1

FIG. 1. Overview of the HDvent system. a) Photograph showing the device housing a stepper motor as well as control electronics and sensors on
a single PC board mounted to the front panel. Air is supplied to the patient via compression of the externally mountable Ambubag and standard
hoses and valves. Ventilation parameters and alarm thresholds are accessible via the user interface on the front panel. b) Schematic of the HDvent
architecture. All components directly in contact with the patient are single-use (orange). An optional monitoring unit (red) can be attached to
the main device (blue) to display ventilation parameters, alarm thresholds and time traces.

Our chosen approach is based on manual resuscitators, e.g. Ambubags. Such resuscitators consist of an elastomer balloon of
roughly 1.5 l volume. The bag can be compressed manually to deliver tidal volumes of up to 1 l of room air or an oxygen-enriched
mixture to intubated adults. Ambubags are for single-patient
use, cheap (can be less than ten USD), and available in large
quantities in most major healthcare facilities. We follow this
approach motivated by a similar use of ambubags by teams
around the world [19–23]. Our design is inspired particularly by
the work of the MIT e-vent team and aims to improve several
aspects of the design [24].

The flow rate of in- and exhaled air is monitored with a spirometry tube. The pressure is picked up near the patient mouth piece
using two thin (2 mm ID) hoses connected to the HDvent (P1
and P2 in Fig.1b)). We measure the pressure relative to atmosphere and the differential pressure P2 − P1 across a thin mesh
in the spirometry tube, which is directly proportional to the flow.
A HEPA filter between the valve and the patient ensures that the
in- and exhaled air is free of virus material and particulate contaminants. All parts in contact with the patient or breathable
air are available commercially and approved for clinical use.

Methods
Figure 1 shows an overview of the components of the HDvent
system (see caption). The different parts of the system are
described in more detail below.

Air management
We work with the Dräger Oxylog 2000 Ventstar® breathing circuit and the Ambu SPUR II system, but other resuscitators can be
used. The bag takes in room air or optionally oxygen-enriched
room air via a reservoir. It is followed by a 40 mbar over-pressure
safety valve and 2 metres of flexible hose. Near the patient a
membrane Y-Valve separates in- from exhaled air, which is critical to reduce dead volume in the breathing circuit. The open end
of the Y-Valve is piloted with a mechanical valve from the Ambubag system to set the positive end-expiratory pressure (PEEP).

Mechanical design
Fig.2 shows a CAD drawing and photographs of the main mechanical parts of the HDvent device. The compression system
consists of two mechanical arms and is driven by a NEMA 34
stepper motor rated at 4 N m holding torque. Different from the
MIT design, where both arms are actuated by gear wheels, we
fix one arm and allow the other one to rotate on a ball bearing.
A second bearing on the end of a crank mounted on the motor
shaft runs on the flat upper surface of the pivoting arm, forcing it
to rotate. Apart from the off-the-shelf ball bearings the only part
subject to friction is the running surface of the actuated arm.
This simple design allows to manufacture both the arms and
the mounting and base plate from the same 10 mm aluminium
stock, for example with a water jet. The device is completed with
a sheet metal enclosure which provides electrical grounding and
protection from pinch hazards.

3
a) CAD design

b) stepper motor
1. stepper motor
2. primary support
plane
3. cam
4. movable arm
5. fixed arm

Microcontroller Software
The controller software is written in C++ using the standard
Arduino library for all I/O operations. It uses a state machine
architecture to control the ventilation cycle and to provide the
user interface. One execution of the main program loop takes
about 15 ms. This constitutes also the sampling rate for pressure
and flow measurements. Similarly the cycle time determines the
jitter of time based triggers in the ventilation cycle and imposes
an upper limit on the bandwidth of the PID algorithm (for closed
loop modes).

c) mechanical arms
closed
arms

Commercial ventilators support a range of different ventilation
modes which can be categorized by the following attributes [25]:
Subset of trigger methods triggering the inspiration and expiration phase

opened
arms

FIG. 2. Mechanical design of the ventilator. a) CAD model of the main
components. A stepper motor (1) mounted to the primary support
plate (2) drives a cam (3) and the movable arm (4) against the fixed
arm (5). b) Photograph showing the mounting of the stepper motor
and c) the mechanical arms in closed and open positions.

Electronics Design and Sensors
The HDvent is controlled by an ATMega2560 microcontroller
equipped on an Arduino Mega 2560 board, which handles motor control, user input, sensor readings, power management
and data flow. The microcontroller, peripheral electronics, and
sensors are mounted on a PC board. The motor is controlled
via the powerSTEP01 stepper controller chip on an evaluation
board, which supports microstepping up to 1/128, features a
sensorless stall detection and is controlled via an SPI interface.
Fig. 3 shows an overview of the implemented features and photographs of the custom-made board.
For pressure and flow measurements, we use two boardmounted differential pressure sensors from the Honeywell HSC
series. We selected a sensor with range ±100 mbar for the inspiratory pressure measurement and a second sensor with a finer
range of ±16 mbar for the spirometry. Several sensors monitor
the proper operation of the device: An optical switch defines the
home position of the stepper and an analog resistive rotation
sensor coupled to the motor shaft allows absolute measurements of the stepper position. A Hall current sensor monitors
the built-in 24 V modular power supply.

Feedback variable and setpoint profile used to calculate
the motor speed, either running the PID algorithm or applying
the setpoint curve in open loop control.
Set of control parameters matching the selected mode.
They are displayed and can be edited via the user interface.
In our implementation new ventilation modes are defined in
terms of those attributes. This high level of abstraction allows
to easily add ventilation modes without changing the core controller software. So far three ventilation modes have been implemented (using the nomenclature proposed in [25]):
OL-CMV Open loop continuous mandatory ventilation:
begin of inspiration is timer triggered, length of inspiration is
fixed, the stepper is moved at constant speed.
PC-CMV Pressure controlled continuous mandatory ventilation: pressure is controlled following a trapezoidal setpoint ramp, begin of inspiration is timer triggered, length of
inspiration is fixed.
VC-CMV Volume controlled continuous mandatory ventilation: flow is controlled following a trapezoidal setpoint
ramp, begin of inspiration is timer triggered, length of inspiration is fixed.
Special attention was also paid to the safety and reliability of the
controller unit: A watchdog timer limits the execution time and
automatically reboots the controller after program freezes. After
reboot the controller resumes the respiration without further
user input, even after a hard shut off or a power outage, using
the non-volatile EEPROM of the microcontroller to store ventilation parameters. During power-off an on-board supercapacitor
powers a buzzer for an acoustic alarm signal. The ventilation
control relies crucially on the position of the compressing arm.
We use triple modular redundancy to determine the absolute
position of the stepper motor: Values from the analog rotary position sensor, step counting by the stepper driver and an optical
switch are processed by a triple voting logic.

4
a)

Supercap

24V Heating foil for
oxygen heating

Alarm buzzer

High-Side
switch

3x Bi-color
USB to UART
status leds
converter
External
reset
button

optional

+24V
Hall
Current monitoring
current
sensor Voltage regulator +5V
+3,3V
+7,5V
+24V

b)

Front panel
Rotary encoder
switch (LCD Menus)

LC-Display 20x4

Arduino Mega 2560

Run/Stop
switch

Power supply
230V -> 2x24V/12A

3 x Push buttons:

Current monitoring

Accept
changes

+24V monitoring
Supercap

Real time clock IC

Reject
changes

Mute
alarm

I²C port expander

2x Pressure sensors to measure:
pressure
air flow

Stepper motor shield
X-Nucleo-IHM03A1
2x Temp. sensors
analog or PT1000
for ex-/ inhaled air

Stepper motor
+24V

Analog rotary
position sensor

Optical
switch
home
position

Spirometer
optional

FIG. 3. Electronics design. a) Block diagram showing the power electronics, sensors, and user controls. The device is controlled by an Arduino
Mega microcontroller. Connections for a 24 V battery or for a second, redundant power supply as well as optional features, such as temperature
monitoring and heating of the air/oxygen supply, are already implemented on the board. b) Photographs showing the front and back of the
custom-made board, which is mounted directly to the front panel of the HDvent unit.

HDvent User Interface
The device is operated using controls and a LCD on the slanted
front panel of the casing. A rotary encoder is used to scroll
through a list of user-editable entries shown on the display.
Menu items are (in this order):
ventilation mode: select from implemented modes:
PC-CMV, OL-CMV, VC-CMV
control parameters: multiple entries, depending on selected
ventilation mode, e.g. for the PC-CMV mode the operator can
set the inspiration time, the respiratory rate and the slope and
plateau value of the pressure ramp.
alarm thresholds: one entry for every diagnostic measurement eligible for alarms, e.g. minute volume or inspiratory
pressure. The operator can set lower and upper alarm thresholds for every item.

Monitoring Unit
The monitoring unit is an optional component to display information on the machine state and patient condition to HDvent
operators. A Raspberry Pi (Pi) (Model 4B, Rev.1, 4 GB) serves
as the main controller. It is connected to the ventilator controller via a USB to UART (Universal Asynchronous Receiver
Transmitter) bridge in a simplex transmission setup, establishing a unidirectional serial link that prevents any detrimental
influence on ventilation control by system failure and incorrect

or malicious operation of the monitoring unit (Fig. 4a)). The
software system is built on a customized Raspberry Pi Operating System (OS) image [26]. Unnecessary components were
removed from the OS image to reduce its size and attack surface
in networked setups. On boot the OS automatically starts up
all services and applications required to ingest incoming ventilator data and generate the dashboard view (Fig. 4b) and c)):
The service mon-receiver checks incoming serial transmissions for errors and decodes the COBS (Consistent Overhead
Byte Stuffing) encoded serial stream into named data points.
The decoded and timestamped data points are written to a timeseries database (InfluxDB) that stores one hour of historical
data.
The application mon-frontend periodically reads and aggregates data from the database, derives values such as minimum or maximum values and serves a web interface built with
Dash. The interface is rendered on the Pi in the web browser
Chromium, running in kiosk mode to output to a standard computer monitor connected to the HDMI port in full screen.
The interface combines graphical representations of user configurable ventilator controller settings, time traces of inspiratory
pressure, flow and volume and numerical indicators for the remaining diagnostics. Visual alarms display when preset thresholds are exceeded. The interface updates automatically once
per second. It is read-only by design and cannot alter database
entries or the ventilation controller settings.

a)

Raspberry Pi
mon-os-image

Arduino TX
Controller
RX

Serial
Input
via
USB
TX

RX

SD card

receive & decode data
mon-receiver
write data points
Influx DB

Data
Diode

Tidal volume (ml)

b)

a)

retains
1h of data

400

20

200

10

0
20

40

60

80

100

0

Position (%)
c)

b)
600

V (ml)

mon-frontend
http
kiosk
mode

400
200
0
30

c)

p (mbar)

HDMI

Insp. P. [mBar]

Monitor

31.4

(3)

Volume [mL]

5.66

(2)

OL-CMV
open loop; const. arm speed

100

11.53

time cycled

10.06

6

0

(4)

trigger: machine

FIG. 4. Monitoring unit hardware components and data flow. a) Data
are transferred from the Arduino controller to the Raspberry Pi via a
unidirectional serial link. b) On the Raspberry Pi, the data are processed, stored and a dashboard on an external display is generated, c).
(1) time traces (30 s) of inspiratory pressure, flow and volume, (2) ventilator controller settings, (3) numerical indicators for the remaining
diagnostics, (4) current ventilation mode with short description

Results
The full HDvent system was tested using a commercially available test lung (Dräger SelfTestLungTM , Vmax =1000 ml) which
models resistance and compliance of an average adult. We calibrated the volume flow measurement to an estimated accuracy
of ±2 % by forcing calibrated volumes of air through the spirometry tube. We first measured the mechanical characteristics of
the device in OL-CMV mode, i.e. at fixed stepper motor speeds.
Fig.5 a) shows the attained tidal volume and peak pressure versus the stepper motor angle (as a percentage of the maximum
angle) for a PEEP of 10 mbar. The tidal volume follows the stepper angle amplitude in close to linear fashion. For the chosen
combination of Ambubag, test lung and PEEP, we obtain a maximal tidal volume of 600 ml. We reach a max plateau pressure
of 40 mbar, limited by the pressure relief valve of the Ambubag.
The measured PEEP matches the pressure set on the mechanical
PEEP valve near the patient mouth piece.
The time traces in Fig.5 b) show the ventilation characteristics
in PC-CMV mode. The measured pressure tracks the setpoint
(shown as the trapezoidal dashed line in the second panel)
closely, indicating the proper performance of the feedback loop.

6

Time (s)

Time (s)

Minute Volume [L]

f [/min]

0
-20
0

565

T_in [s]

20

-40

Tidal Volume [ml]

Volume [%]

Φ (l/min)

Flow [mL/min]]

30.6

10

40

6.4

Plateau Pressure [mBar]

20

0

Insp. Pressure [mBar]

PEEP [mBar]

(1)

30

0

read periodically

Chromium

600

Peak pressure (mbar)

5

FIG. 5. Ventilation performance. a) Measurement of tidal volume (red)
and peak pressure (blue) over percentage of maximal displacement
of the moving arm in OL-CMV mode. The red line indicates a linear
dependence of the tidal volume on the arm movement. The attained
peak pressure reflects the compliance of the text lung. b) Volume V
(red), pressure p (blue) and flow Φ (orange) over time in PC-CMV
mode for three different set pressures of 25 mbar (dark blue), 20 mbar
(light blue) and 15 mbar (bright blue) shown as dashed lines. c) Ventilation in VC-CMV mode for three different set flows of 30 l min−1 (dark
orange), 24 l min−1 (light orange) and 18 l min−1 (bright orange) shown
as dashed lines. For b) and c) a PEEP of 7 mbar was set and BPM is 10.

Fig.5 c) shows similar time traces for VC-CMV mode. Here, the
measured flow follows the set point indicated by dashed lines
in the bottom panel. Table I shows the range of ventilation parameters accessible with the HDvent.
TABLE I. Accessible range of common ventilation variables.
respiratory rate
tidal volume
minute volume
peak pressure
PEEP
a
b

10–30
0–600
0–18
0–40
0–20

BPM
ml
l/min
mbara
mbarb

upper limit depends on the used
overpressure valve
range given by mechanical PEEP
valve

We performed a long-term stability measurement in OL-CMV.
Over 3 days (43k cycles), the tidal volume and pressure profiles
remained constant to ±0.5 %, while the device showed no signs
of wear. The most limiting component in terms of longevity is
the Ambubag, which we estimate should be replaced every 5
days for safety.

6

Conclusions
We have developed a complete design for a simple and economical ventilator based on the Ambubag system. The device is easy
to manufacture and relies on off-the-shelf components and open
source hard- and software. It was shown to perform volumeand pressure-controlled ventilation on a test lung within realistic parameter ranges. The architecture of the control software
allows for the easy addition of other ventilation modes, e.g. with
patient-triggered inspiration. The optional Pi based monitoring
unit provides the operator with a graphical dash board familiar
from commercial devices. Its automated build routine that forwards software changes directly to the OS image makes future
extensions, like network based remote monitoring, particularly
easy to implement and deploy.
The course of the COVID-19 pandemic beyond its first wave
stretched the capabilities of the health care systems in developed
countries locally, but fortunately did not require the widespread
use of improvised emergency equipment such as the system
presented here and elsewhere [10]. As such, our system has not
yet been tested in a clinical setting and will not be submitted
for approval as a medical device. Further testing could focus on
prolonged stress tests, emergency protocols in case of component failures, spontaneous/assisted ventilation modes and ease
of operation.
We hope that our design may inspire the development of lowcost ventilator solutions for pandemic emergencies and for regions with limited medical services. The full documentation
needed to reproduce the prototype, including drawings, step
files, and source code, is freely available [26]. We explicitly encourage interested developers to reach out for further details.

Key Findings
• We present an open-source design of a mechanical ventilator costing ∼ 500 $ in materials.
• The device meets the clinical demands for the ventilation
of patients with COVID-19.
• The strengths of our approach are: (i) a mechanical design
with low part count and generous tolerances (ii) a monitoring unit displaying all relevant data, and (iii) a flexible
software architecture and user interface to accommodate
different ventilation modes.
• We expect these advantages to contribute to the global efforts towards making open-source mechanical ventilators
available for emergency use and for developing countries.

Acknowledgments
We would like to thank the members of the mechanical and
electronic workshop, the construction and the purchasing department of the Physics Institute at Heidelberg University for
their support. We are grateful to Würth Elektronik GmbH and
WEDirekt for their generous support in realising the control
electronics.

preiss@physi.uni-heidelberg.de
[1] Dale Fisher and David Heymann. Q&A: The novel coronavirus
outbreak causing COVID-19. BMC Medicine, 18:57, 2020.
[2] Graeme Maclaren, Dale Fisher, and Daniel Brodie. Preparing for
the Most Critically Ill Patients With COVID-19. Jama, 323:1245,
2020.
[3] Megan L. Ranney, Valerie Griffeth, and Ashish K. Jha. Critical Supply Shortages — The Need for Ventilators and Personal Protective Equipment during the Covid-19 Pandemic.
New England Journal of Medicine, 382(18):e41, 2020.
[4] Paul Smetanin, David Stiff, and et al. Anand Kumar.
Potential Intensive Care unit Ventilator Demand/Capacity
Mismatch due to Novel Swine-Origin H1N1 in Canada.
Canadian Journal of Infectious Diseases and Medical Microbiology,
20(4):e115–e123, 2009.
[5] Donald G. McNeil Jr. Hospitals Short on Ventilators if Bird Flu
Hits, 2006. Available: https://www.nytimes.com/2006/03/12/
us/hospitals-short-on-ventilators-if-bird-flu-hits.html.
[6] Lewis Rubinson, Frances Vaughn, Steve Nelson, and et al. Giordano, Sam. Mechanical Ventilators in US Acute Care Hospitals.
Disaster Med Public Health Prep., 4:199–206, 2010.
[7] Patti Neighmond.
As The Pandemic Spreads, Will
There Be Enough Ventilators?, 2020.
Available: https:
//www.npr.org/sections/health-shots/2020/03/14/815675678/
as-the-pandemic-spreads-will-there-be-enough-ventilators,
[Accessed: Nov 2020].
[8] Rich Branson, Jeffrey R. Dichter, and et al. Henry Feldman. The US
Strategic National Stockpile Ventilators in Coronavirus Disease
2019: A Comparison of Functionality and Analysis Regarding the
Emergency Purchase of 200,000 Devices. Chest, 2020. S00123692(20)34505-0.
[9] J. R. Beitler, A. M. Mittel, and et al. Kallet, R. Ventilator Sharing during an Acute Shortage Caused by the COVID-19 Pandemic.
Am J Respir Crit Care Med, 202(4):600–604, 2020.
[10] J. M. Pearce. A review of open source ventilators for COVID-19
and future pandemics. F1000Research, 9:218, 2020.
[11] Matthew Harris, Yasser Bhatti, and et al. Buckley, Jim. Fast
and frugal innovations in response to the COVID-19 pandemic.
Nature Medicine, 26(6):814–817, Jun 2020.
[12] Simone Mora, Fábio Duarte, and Carlo Ratti.
Can Open
Source Hardware Mechanical Ventilator (OSH-MVs) initiatives
help cope with the COVID-19 health crisis? Taxonomy and state
of the art. HardwareX, 8:e00150, 2020.
[13] J. Buytaert, A. Abed Abud, and et al. K. Akiba. The HEV Ventilator
Proposal, 2020. Available:arXiv:2004.00534.
[14] C. Galbiati, W. Bonivento, and et al. Caravati, M. Mechanical Ventilator Milano (MVM): A Novel Mechanical Ventilator Designed for Mass Scale Production in Response to the COVID-19
Pandemics. medRxiv:2020.03.24.20042234, 2020.
∗

7
[15] California Institute of Technology. VITAL: The COVID-19 Ventilator Device, 2020. Available: https://medeng.jpl.nasa.gov/covid19/ventilator/.
[16] Américo Pereira, Luı́s Lopes, and et al. Paulo Fonte. Prototype of
an affordable pressure-controlled emergency mechanical ventilator for COVID-19. arXiv:2004.00310, 2020.
[17] Czech Technical University, MICo Group. CoroVent. Available:
https://www.micomedical.cz/.
[18] Samuel J Raymond, Trevor Wesolowski, and et al. Baker, Sam.
A low-cost, rapidly scalable, emergency use ventilator for the
COVID-19 crisis. medRxiv:2020.09.23.20199877, 2020.
[19] OxVent. Available: https://oxvent.org/product/.
[20] Rice University. ApolloBVM - Emergency Use Ventilator, 2020.
Available: http://oedk.rice.edu/apollobvm/.
[21] The Open Ventilator, 2020.
Available:
https://
www.theopenventilator.com/.
[22] Enrique Castro-Camus, Jan Ornik, and et al. Mach, Cornelius. Simple ventilators for emergency use based on Bag-

[23]

[24]

[25]
[26]

Valve pressing systems: Lessons learned and future steps.
medRxiv:2020.04.29.20084749, 2020.
Aditya Vasan, Reiley Weekes, and Acute Ventilation Rapid Response Taskforce (AVERT). MADVent: A low-cost ventilator
for patients with COVID-19. MEDICAL DEVICES & SENSORS,
3:e10106, 2020.
Albert H. Kwon, Alexander H. Slocum, and on behalf of the MIT
E-Vent Team. Rapidly scalable mechanical ventilator for the
COVID-19 pandemic. Intensive Care Medicine, 46(8):1642–1644,
Aug 2020.
Karin Deden. Ventilation Modes in Intensive Care. Drägerwerk
AG.
HDvent github repository.
Available: https://github.com/
HDventilator/.

