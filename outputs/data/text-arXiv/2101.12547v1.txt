picture(0,0)(-35,0)(1,0)30 (0,35)(0,-1)30 picture

picture(0,0)(35,0)(-1,0)30 (0,35)(0,-1)30 picture

Bioinformatics
doi.10.1093/bioinformatics/xxxxxx
Advance Access Publication Date: Day Month Year
Manuscript Category

Subject Section

BridgeDPI: A Novel Graph Neural Network for
Predicting Drug-Protein Interactions
†

†

Yifan Wu 1, 2, , Min Gao 1, , Min Zeng 2, , Feiyang Chen 1 , Min Li 2,∗ and Jie
Zhang 1,3,∗
1

SenseTime Research, Shanghai, 200233, China,
School of Computer Science and Engineering, Central South University, Changsha, 410083, China,
3
Qing yuan Research Institute, Shanghai Jiao Tong University, Shanghai, China
2

†

These authors contributed equally to this work.

arXiv:2101.12547v1 [cs.LG] 29 Jan 2021

∗ To

whom correspondence should be addressed.

Abstract
Motivation: Exploring drug-protein interactions (DPIs) work as a pivotal step in drug discovery. The fast
expansion of available biological data enables computational methods effectively assist in experimental
methods. Among them, deep learning methods extract features only from basic characteristics, such as
protein sequences, molecule structures. Others achieve significant improvement by learning from not only
sequences/molecules but the protein-protein and drug-drug associations (PPAs and DDAs). The PPAs and
DDAs are generally obtained by using computational methods. However, existing computational methods
have some limitations, resulting in low-quality PPAs and DDAs that hamper the prediction performance.
Therefore, we hope to develop a novel supervised learning method to learn the PPAs and DDAs effectively
and thereby improve the prediction performance of the specific task of DPI.
Results: In this research, we propose a novel deep learning framework, namely BridgeDPI. BridgeDPI
introduces a class of nodes named hyper-nodes, which bridge different proteins/drugs to work as PPAs
and DDAs. The hyper-nodes can be supervised learned for the specific task of DPI since the whole process
is an end-to-end learning. Consequently, such a model would improve prediction performance of DPI. In
three real-world datasets, we further demonstrate that BridgeDPI outperforms state-of-the-art methods,
achieving AUC of 0.989 (for seen proteins), 0.952 (for unseen proteins) in the customized BindingDB
dataset, 0.995 in the C.elegans dataset, 0.990 in the human dataset. Moreover, ablation studies verify the
effectiveness of the hyper-nodes. Last, in an independent verification, BridgeDPI explores the candidate
bindings among COVID-19’s proteins and various antiviral drugs. And the predictive results accord with
the statement of the World Health Organization and Food and Drug Administration, showing the validity
and reliability of BridgeDPI. Hopefully, the BridgeDPI method will facilitate and accelerate real-world drug
discovery and drug screening.
Availability: The source code of BridgeDTI can be accessed at https://github.com/DeepAAI/BridgeDPI.
Contact: limin@mail.csu.edu.cn or zhangjie1@sensetime.com

1 Introduction
The drug discovery and drug screening are complex. The typical timeline
usually takes 10-20 years and costs US$0.5-2.6 billion (Avorn et al.,
2015; Paul et al., 2010). Among them, exploring possible drug-protein
interactions (DPIs) is a crucial step. Although experimental assays

remain the most reliable approach for determining DPIs, they are timeconsuming and cost-intensive. Therefore, efficient computational methods
for predicting protein-drug interactions are significant and urgently
demanded.
Current DPI prediction methods can be summarized as three forms:
docking-based methods, machine learning-based methods, and deep
learning-based methods. Docking-based methods look for the best binding

© The Author 2015. Published by Oxford University Press. All rights reserved. For permissions, please e-mail: journals.permissions@oup.com

picture(0,0)(-35,0)(1,0)30 (0,-35)(0,1)30 picture
“main” — 2021/2/1 — page 1 — #1

1

picture(0,0)(35,0)(-1,0)30 (0,-35)(0,1)30 picture

picture(0,0)(-35,0)(1,0)30 (0,35)(0,-1)30 picture

picture(0,0)(35,0)(-1,0)30 (0,35)(0,-1)30 picture

2

Sample et al.

Fig. 1. Model architecture: protein sequences and drug molecules are the inputs of BridgeDPI; first, the k-mer/sequence features of proteins and FP/sequence features of drugs are obtained.
Then through the multilayer perceptron layers, the node embeddings are calculated and fed to the GNN; Finally, the outputs of GNN are multiplied and a full connected layer with sigmoid
activation is applied.

position inside the binding pocket of the proteins for drug molecules
(Gschwend et al., 2015; Led and Caflisch, 2017). However, it takes a
lot of time and lacks available 3D protein structures for a large-scale
dataset. Machine learning-based methods (Bleakley and Yamanishi, 2009;
Ballester and Mitchell, 2010; Faulon et al., 2008) usually use handcrafted
features. However, one needs to choose, combine and compare these
handcrafted features carefully, which require expertise and experience.
These methods usually use handcrafted features before modeling, which
require much expertise. Recently, with the plentiful accumulation of data,
deep learning-based methods have been successfully applied to various
bioinformatics tasks (Zeng et al., 2019; A et al., 2020; Min et al., 2017;
Zhang et al., 2019, 2020). It has further improved the performance of
DPI prediction by using the deep structure and vast learnable parameters.
Deep learning models such as DeepDTA (Öztürk et al., 2018), WideDTA
(Öztürk et al., 2019), DeepConv-DTI (Lee et al., 2019), PADME (Feng
et al., 2018), GraphDTA (Nguyen et al., 2019), E2E (Gao et al., 2018),
drugVQA (Zheng et al., 2020) have similar steps: 1) encode proteins and
drugs. 2) design a feature extractor modules to capture high-level features
of proteins and drugs. 3) fuse the high-level features of proteins and drugs,
and perform prediction through full connected layers. The disadvantage
of these methods is that they neglect to leverage the protein-protein
associations (PPAs) and drug-drug associations (DDAs). The magic of
PPAs and DDAs comes from the fact that proteins usually interact with
similar drugs (Chi and Hou, 2011; Baudot et al., 2017). Therefore, the
information in DDAs and PPAs would improve the DPI prediction. A large
number of conventional methods that used PPAs and DDAs convinced the
effectiveness of DDAs and PPAs in the DPI prediction (Chen et al., 2012).
Generating PPAs and DDAs mainly has three types of methods:
structure-based methods, sequence-based methods and the methods based
on known DTIs. But there are still some limitations. For structure-based
methods, although they can measure PPAs accurately, they are limited by
the availability of protein structural data. For sequence-based methods,
PPAs are generally computed by using BLAST which is based on multi
sequence alignment and homology information. The results of BLAST
depend on the scale of protein data. When researchers only have hundreds
or thousands of protein sequences in their study, using BLAST on such a
small number of protein sequences cannot find their homological proteins
for most of the sequences. Thus these sequences cannot provide useful
information to represent PPAs appropriately. For the methods based on
known DTIs, it uses negative sampling to generate negative samples

picture(0,0)(-35,0)(1,0)30 (0,-35)(0,1)30 picture
“main” — 2021/2/1 — page 2 — #2

for PPAs and DDAs without any reliable biological evidence. However,
negative sampling treat the unknown drug-protein pairs as negative.
However, the negative drug-protein pairs could be positive.
To tackle the above limitations and further improve the prediction
performance, we develop BridgeDPI, a deep learning framework for
predicting DPIs. The novelty of BridgeDPI is that we introduce the
hyper-nodes to connect different proteins/drugs. The role of hyper-nodes
is to construct bridges between proteins/drugs. The bridges implicitly
measure the associations among proteins/drugs and therefore can be used
as the networks of PPAs and DDAs. On one side, the hyper-nodes are
automatically learned for DPI prediction. The quality of the learned
PPAs and DDAs is guaranteed by the back propergation of the end-toend learning of BridgeDPI. On the other side, some unknown biological
connections may also be explored by the hyper-nodes. In brief, the hypernodes are considered as the essential elements to improve the prediction
performance.
We demonstrate the superior performance of BridgeDPI: the AUC
scores of 0.989 (for seen proteins), 0.952 (for unseen proteins) in the
customized BindingDB dataset, 0.995 in the C.elegans dataset, 0.990 in
the human dataset.

2 Methods
2.1 Overview
The overview of BridgeDPI is shown in Figure 1. BridgeDPI contains two
inputs: the protein sequence and the drug smiles. For protein sequences,
a three-layer feed-forward network is used to process the k-mer features.
In addition, a Convolutional Neural Network (CNN) is used to extract
the sequence features of proteins. We combine the two features to obtain
the final protein embeddings. For drug smiles, a two-layer feed-forward
network is used to process the molecular fingerprint features. In addition, a
CNN is used to extract the sequence features of drugs. We also combine the
two features to obtain the final drug embeddings. After that, we introduce
some hyper-nodes to construct the bridges between proteins/drugs and
use Graph Neural Network (GNN) to learn the associations between
proteins/drugs. Finally, we get element-wise products of the protein and
drug outputs after GNN, and then use a linear layer with sigmoid activation
to predict the interactions.

picture(0,0)(35,0)(-1,0)30 (0,-35)(0,1)30 picture

picture(0,0)(-35,0)(1,0)30 (0,35)(0,-1)30 picture

picture(0,0)(35,0)(-1,0)30 (0,35)(0,-1)30 picture

short Title

3

2.2 Embedding of proteins and drugs
Before feeding protein sequences and drug molecules to BridgeDTI, they
need to be encoded as numeric vectors. For a long time in the past, the
k-mer and FingerPrint (FP) features have been very effective to represent
proteins and drugs. Since the advent of deep learning techniques, people
begin to characterize proteins and drugs at the amino acid level and atomic
level by using CNN, GNN, etc. However, in fact, k-mer and FP features
cannot be replaced completely by the sequence or graph features. Thus,
we reintroduce k-mer and FP features, which are effective but ignored by
many researchers at present.
For proteins, k-mer is a classical and effective method for protein
embedding. K-mer features can describe the type and number of amino
acid functional groups, which are very important in the prediction of DPIs.
As a result, k-mer features are used to represent the proteins. In our study,
we set k as 1,2,3, and thus we got 201 + 202 + 203 = 8420 k-mer
features.
xi = (xi1 , xi2 , ..., xi8420 )
(1)
where xi1...20 , xi21...420 , xi421...8420 represent 1-mer, 2-mer, 3-mer
features of protein i, respectively. We normalize each part horizontally
to eliminate the effect of protein length, as shown in Formula (2).
normalized(xi1...20 ) =

xi1...20 − mean(xi1...20 )
std(xi1...20 )

(2)

where xi1...20 represents 1-mer feature of protein i, mean(·) and std(·)
are to calculate the mean and standard deviation. We also do the same for
the 2-mer part xi21...420 and 3-mer part xi421...8420 .
For drug molecules, FP is a very efficient technique in drug discovery
and virtual screening. In molecular FP, the topological information of
molecular structure is encoded as a vector, which can well represent
a drug molecule. Consequently, we use Morgan FP (Cereto-Massagué
et al., 2015) to represent a molecule. It can encode a drug as a vector with
dimensions of 1024.
F j = (b1 , b2 , . . ., c1024 )

(3)

where F j

represents FP features of drug j, b1...1024 are the binary values
in the fingerprint.
After getting the characterization of proteins Ai and drugs F j , their
relationship cannot be constructed directly. Because the two vectors have
different dimensions and do not belong to the same space. Therefore, they
need to be mapped into the same space through several layers of neural
networks. At the same time, we use CNN with max-pooling to extract the
sequence features of proteins and drugs, respectively, and then fuse them
together.

Fig. 2. Comparison of the effects of introducing hyper-nodes and using computed DDA,
PPA information

between protein p2 and drug d2 . Traditional methods usually computed
DDAs and PPAs to construct a heterogeneous network. And then according
to the associations between proteins/drugs, we can construct a path p2 −
p1 − d1 − d2 to infer the relationship. However, as mentioned above, it is
difficult to acquire high-quality PPAs and DDAs. Therefore, we introduce
a new kind of virtual nodes, namely hyper-nodes. These nodes connect all
proteins and drugs, which are randomly initialized and updated during the
training process.
With these hyper-nodes, we can construct some bridges between
proteins/drugs and capture the relationship between them. It makes our
model learn a higher-quality PPA and DDA information from the data
and further improve the predictive performance of DTI. As illustrated in
Figure 2, although we do not know the relationship between p1 and p2 ,
by introducing a hyper-node h1 , we can get the relationship between p1
and h1 , p2 and h1 . Therefore, the relationship between p1 and p2 can be
derived from p2 − h1 − p1 . In the same way, the relationship between
d1 and d2 can be derived from d2 − h2 − d1 . Finally, the relationship
between p2 and d2 can be inferred through p2 − h1 − p1 − d1 − h2 − d2 .

2.4 Graph neural network
Assume that the set of hyper-nodes is {n1 , n2 , . . . , nm }, where m is the
number of hyper-nodes, and hyper-nodes have the same embedding size
with ui and v j . For each protein-drug pair in dataset, we can get a graph
including nodes ui , v j , n1 , n2 , . . . , nm with edges calculated by cosine
similarity.
Ai,j =

ui = fp (Ai ) + pi
j

j

v = fd (F ) + d

j

(4)
(5)

where fp (·) and fd (·) are the nonlinear transformation layers for protein
and drug, respectively, pi and dj are the sequence features extracted by
CNNs. Finally, ui is used as the embedding of protein i. v j is used as the
embedding of drug j.

L = D−1/2 ReLU(A)D−1/2
0

picture(0,0)(-35,0)(1,0)30 (0,-35)(0,1)30 picture
“main” — 2021/2/1 — page 3 — #3

(6)

where ni and nj represent any two nodes in the graph (including u and
v), k·k2 is to compute 2-norm of a vector. In fact, Ai,j could be negative,
which are not suitable for the calculation of GNN. Thus, we need to filter
out the negative edges by ReLU(·), which means there’s no edge if cosine
similarity is less than zero. And the computational steps of GNN are as
follows:

2.3 Introduction of hyper-nodes
After getting the embedding of proteins and drugs, how can we predict
the interactions between proteins and drugs, especially those unconnected
protein-drug pairs candidates? It is the main challenge to DPI predictions
due to the lack of sufficient neighborhood information. As shown in Figure
2, given known interacted pairs, we need to infer unknown relationship

ni · nj
kni k2 knj k2

i

j

(7)
T

Z = (u , v , n1 , n2 , . . . , nm )
i

Z = ReLU(LZ

(i−1)

i

i

W +b )+Z

(8)
i−1

(9)

where A ∈ R(m+2)×(m+2)) is the similarity matrix, Z 0 ∈
R(m+2)×(d) is the embedding matrix of nodes, d is the embedding size of

picture(0,0)(35,0)(-1,0)30 (0,-35)(0,1)30 picture

picture(0,0)(-35,0)(1,0)30 (0,35)(0,-1)30 picture

picture(0,0)(35,0)(-1,0)30 (0,35)(0,-1)30 picture

4

Sample et al.

nodes, D ∈ R(m+2)×(m+2) is the degree matrix, Z i ∈ R(m+2)×d) is
the output of i-th layer of GNN, W i and bi are the parameters in i-th layer
of GNN. Additionally, residual structure (He et al., 2016) is applied in each
layer of GNN, as shown in Equation (9). It is a very effective structure in
deep networks because it guarantees that some shallower network may
exist in the model.

2.5 Prediction of protein-drug interactions
The output of GNN belongs to R(m+2)×d , and the first two rows are
the embeddings of protein nodes and drug nodes after fusing graph
information. The two embeddings are taken out to do element-wise
multiplication and then fed to a fully connected layer. Finally, the
sigmoid(·) is applied to classify whether the protein-drug pairs has
interactions.

samples, 3893 negative samples), with 1,876 protein targets and 1,767
drug molecules. For the human dataset, 6,728 binding data are included,
with 2,001 protein targets and 2,726 drug molecules. These two datasets
are randomly divided into 5 folds respectively, and each time one fold is
selected as the validation set for 5-fold cross-validation.
DUD-E dataset. DUD-E is a widely used dataset covering 102 proteins and
22,886 clustered ligands (Mysinger et al., 2012). There are 50 decoys for
each activity with similar physical and chemical properties but dissimilar
2D topology. It contains 1,429,790 protein-ligand samples in total (22,645
positive samples, 1,407,145 negative samples). Following Zheng et al.
(Zheng et al., 2020)’s work, we perform 3-fold cross-validation in this
dataset and the average evaluation metrics are reported. In addition, DUDE is used as an independent test set to evaluate the performance of models
in the real world.

3.2 Training details
i

hij = û ⊗ v̂

j

(10)

ỹij = sigmoid(fo (hij ))

(11)

where ûi and v̂ j are the first two rows of the final output matrix in GNN,
fo (·) is the fully connected layer, ỹij represents the probability of the
interaction between protein i and drug j, ⊗ means element-wise product.

2.6 Other details
Batch normalization (Ioffe and Szegedy, 2015), which standardizes each
batch of data, is a very effective method to accelerate training and improve
the performance of the deep network. Dropout (Srivastava et al., 2014),
which randomly drops part of neuron units, can greatly improve the
generalization of the model. We add batch normalization and dropout after
each layer in the model. Finally, the model is trained by minimizing the
cross-entropy loss function.

X

kθk2
(12)
where θ is the set of all model parameters, λ is the regularization
coefficient.
L(yij , ỹij | θ) = −(yij log ỹij +(1−yij )log(1−ỹij )+λ

θ∈Θ

3 Experiments
3.1 Datasets
BindingDB dataset. BindingDB is a public, web-accessible database for
measuring binding affinities, focusing on interactions between proteins
and small drug molecules. It contains a total of 2,067,981 binding data,
for 8,161 protein targets and 910,476 small molecules (Gilson et al.,
2016). Based on the raw BindingDB dataset, Gao et al. constructed a
binary classification dataset containing 39,747 positive samples and 31,218
negative samples (Gao et al., 2018). A protein-drug sample is positive if
IC50 is less than 100nm, or negative if IC50 is greater than 10,000nm.
They divided the data into training set (28,240 positive samples, 21,915
negative samples), validation set (2,831 positive samples, 2,776 negative
samples), and test set (2,706 positive samples, 2,802 negative samples)
with a guaranteed ratio of positive to negative samples. We choose this
customized BindingDB as one of our benchmark datasets for head-to-head
comparisons.
C.elegans and human dataset. Liu et al. obtained a set of highly credible
negative samples of DPI via silico screening method (Liu et al., 2015).
Combined with the known positive samples, they constructed two dataset
C.elegans and human respectively. Following Tsubaki et al. (Tsubaki et al.,
2019)’s work, we choose the balanced versions of these datasets. For
the C.elegans dataset, there are 7,786 binding samples (3,893 positive

picture(0,0)(-35,0)(1,0)30 (0,-35)(0,1)30 picture
“main” — 2021/2/1 — page 4 — #4

The proposed model is implemented with Pytorch 1.6.0 (Paszke et al.,
2019) and the parameters are initialized by default. We use Adam (Kingma
and Ba, 2019) optimizer with a learning rate of 0.001 to adjust the
parameters in the training process. In order to prevent over-fitting, L2
regularization is added to the loss function. For each step, a batch
of protein-drug pairs is randomly selected to run the gradient descent
algorithm and the batch size is set to 512. For the setting of other hyperparameters, such as the number of layers, the number of neurons, the
ratio of dropout, etc., many experiments are carried out to choose the
values according to the performances on the validation set. The maximum
number of epochs is set to 100, and the models with the best area under
ROC curve AUC in the validation set are saved. Finally, the saved models
are evaluated on a test set by metrics of accuracy (ACC) and the AUC.
Besides, our model has low computational complexity, high parallelism,
and fast training speed. The training process of the customized BindingDB
dataset will be finished in about 15 minutes on the GPU platform of GTX
1080ti.
For proteins, we introduce a 2-layers network for nonlinear
transformation, containing 1024, 128 neurons, respectively. For drug
molecules, we introduce a 3-layers network for nonlinear transformation,
containing 1024, 256, 128 neurons, respectively. The outputs are 128dimensional vectors that serve as the input of node embeddings on the
complete DPI graph. Then, we use a 3-layers GNN, which means that each
node has aggregated three layers of neighbor information. In the end, the
scores of the interactions between proteins and drugs are obtained through
a 2-layers feed forward network. Moreover, we dropout 50% neurons after
each layer. And the L2 regularization coefficient is set to 0.001 to limit the
model ability and prevent over-fitting.

3.3 Results
First of all, we conduct experiments on the customized bindingDB dataset
which is extracted from the bindingDB by Gao et al. Following their
settings, we also make the same division of the dataset to ensure that
the validation set and test set contain some unseen proteins (that are not
appear in the training set), which is closer to the real world. Based on the
prediction results in the test set, we calculate AUC and ACC (threshold is
0.5, same as below) of BridgeDPI with the best parameters. To compare
the performance with other methods, we choose Tiresias (Fokoue et al.,
2016), DBN (Wen et al., 2017), GNN (Tsubaki et al., 2019), E2E (Gao
et al., 2018) and DrugVQA (Zheng et al., 2020) as baselines. As we
know, there are a large number of unknown proteins in nature, and this
is why we should focus on predicting the new proteins, i.e., cold-start
problem. Therefore, the test set is divided into an unseen protein set (the
proteins that do not appear in the training set) and a seen protein set (the
proteins that appear in the training set). As shown in Figure 3, the existing

picture(0,0)(35,0)(-1,0)30 (0,-35)(0,1)30 picture

picture(0,0)(-35,0)(1,0)30 (0,35)(0,-1)30 picture

picture(0,0)(35,0)(-1,0)30 (0,35)(0,-1)30 picture

short Title

5

Fig. 3. Comparison of BridgeDPI with five baselines: (left) shows AUC for seen proteins and unseen proteins in the test; (right) shows ACC for seen proteins and unseen proteins in the
test. Note that the accuracy scores of Tiresias do not show in (right) because they are lower than the lower bound of the y-axis.

models generally achieve good performances in the seen protein set (AUC
exceeds 0.9, ACC exceeds 0.85), but differ greatly in the unseen protein
set. Based on a traditional relational network, Tiresias performs poorly
on the unseen proteins, with an AUC of only 0.68. Tiresias is a method
based on computed similarity information to obtain the features of proteins
and drugs, and it predicts DPIs through a logistic regression model. We
hypothesize that only based on a linear model using similarity information,
the expression of the unseen proteins may not be sufficient, resulting in
the ACC on unseen proteins is even less than 0.5. DBN, E2E, DrugVQA,
and BridgeDPI have AUC over 0.9 and ACC over 0.8 in unseen proteins,
indicating the effectiveness of deep learning techniques in solving unseen
proteins. Among them, our BridgeDPI outperforms other baselines and
achieves start-of-the-art performances, with AUC and ACC reaching 0.987
and 0.954 in seen proteins, 0.951 and 0.887 in unseen proteins. It indicates
that the introduction of hyper-nodes indeed improves the expression of
proteins/drug features, and the deep graph neural network also enables
BridgeDPI to learn the deeper interaction rules between proteins and drugs.
Furthermore, we also conduct experiments on the C.elegans dataset and
human dataset (Liu et al., 2015) which are widely used in many studies.
The results are shown in Table 1. Since Gao et al. (Gao et al., 2018) do not
provide the code of E2E, we reproduced the model and obtain experimental
results on the two datasets without using the Gene Ontology (GO) features.
Other results of baselines are from their original papers (Tsubaki et al.,
2019; Zheng et al., 2020). From Table 1, for randomly divided C.elegans
and human datasets, almost all proteins in the test set are seen, which
means models can learn all protein information better from the training
dataset, resulting in very good results. In this case, the unsupervised kNN is slightly worse than other models, with AUC 0.858 and F1 0.814
on the C.legans dataset, AUC 0.860 and F1 0.858 on the human dataset,
respectively. The supervised machine learning methods (RF, L2, SVM)
are slightly better, with AUC of the C.elegans dataset reaching around 0.9,
AUC of the human dataset exceeding 0.9. In contrast, GNN, E2E/GO,
DrugVQA, and BridgeDPI based on deep learning methods perform very
well, with AUCs over 0.97 and F1s over 0.9. Among them, BridgeDPI
achieves the best performances, with AUC, precision, recall, and F1 of
0.995, 0.980, 0.965, 0.972 on the C.elegans dataset, respectively, and
0.990, 0.963, 0.949, 0.956 on the human dataset, respectively. The results
are in line with our expectations. Because the models such as KNN, RF,
L2, and SVM, without high-quality features, are difficult to learn complex
nonlinear relationships (protein-drug interaction), while the deep learning

picture(0,0)(-35,0)(1,0)30 (0,-35)(0,1)30 picture
“main” — 2021/2/1 — page 5 — #5

models have strong feature extraction abilities to learn the interaction rules.
On this basis, BridgeDPI integrates PPA and DDA information, further
improving the results.
Table 1. Performances of BridgeDPI with other models on different dataset1

Models
k-NN
RF
L2
SVM
GNN
E2E/GO
BridgeDPI
k-NN
RF
L2
SVM
GNN
E2E/GO
DrugVQA
BridgeDPI

AUC
Precision Recall
C.elegans dataset
0.858
0.801
0.827
0.902
0.821
0.844
0.892
0.890
0.877
0.894
0.785
0.818
0.978
0.938
0.929
0.986
0.950
0.950
0.995
0.980
0.965
human dataset
0.860
0.798
0.927
0.940
0.861
0.897
0.911
0.891
0.913
0.910
0.966
0.950
0.970
0.923
0.918
0.970
0.893
0.914
0.979
0.954
0.961
0.990
0.963
0.949

F1
0.814
0.832
0.883
0.801
0.933
0.950
0.972
0.858
0.879
0.902
0.958
0.920
0.903
0.957
0.956

Although we have achieved excellent results on these benchmark
datasets, such datasets have serious data bias, which will lead to the
inflated performances (Chen et al., 2019; Yang et al., 2020). In order to
verify the realistic performances of our model, we conduct the following
experiments: train models on the customized BindingDB dataset and
test models on the DUD-E dataset. We conduct 5-fold cross-validation
1

GO feature required by E2E need to be obtained from the UniProt
database, and there are a large number of GO missing for these two data
sets. Therefore, we only reproduced the results of the E2E/GO (without GO
feature) model. The distance map feature required by DrugVQA requires
structural data from proteins. The calculation method for this part is not
provided in the their code, and there are some protein deficiencies in the
PDB database. As a result, we also don’t offer the results of DrugVQA on
the C.elegans dataset.

picture(0,0)(35,0)(-1,0)30 (0,-35)(0,1)30 picture

picture(0,0)(-35,0)(1,0)30 (0,35)(0,-1)30 picture

picture(0,0)(35,0)(-1,0)30 (0,35)(0,-1)30 picture

6

experiments on the customized BindingDB dataset to obtain 5 models, and
then predict on the DUD-E dataset to obtain 5 results, last the 5 results are
averaged to evaluate the performances. The results are shown in Figure
4. Similar to the previous reasons, the results for DrugVQA and E2E
are not obtained. Not surprisingly, the performances of these models are
greatly reduced, with AUC of the SVM even less than 0.5. Compared
with other models, the AUC (0.709) of BridgeDPI is the best, which is
9.41%, 8.58%, 29.14%, 32.03%, 46.79% higher than E2E/GO, KNN,
RF, L2, SVM, respectively. Moreover, if the whole BindingDB dataset
is used for training, the AUC of BridgeDPI and E2E/GO will reach to
0.772 and 0.748. The results show the effectiveness of hyper-nodes and
that BridgeDPI performs better even under more realistic conditions.

Fig. 4. ROC curves of BridgeDPI with other models (training on BindingDB and testing
on DUD-E)

3.4 Ablative analysis
By introducing the hyper-nodes, BridgeDPI builds many bridges between
all proteins/drugs to conduct the prediction of DPI. In order to discover
the role of the hyper-nodes, we carry out a further ablation study on
the customized BindingDB dataset about the influence of the number
of hyper-nodes in our model. We set the number of hyper-nodes to 1,1,2,4,8,16,32,64,128,256 separately to observe the results of our model
on the test set. Among them, -1 means to remove the hyper-nodes from
BridgeDTI, and the extracted feature vectors of proteins and drugs are
multiplied directly and fed to the final fully connect layer. The overall
AUC/ACC and the unseen proteins’ AUC/ACC are mainly focused, as
shown in Figure 5. We can see that the introduction of the hyper-nodes can
indeed improve the prediction performance of DTI, either in the overall
AUC and ACC or in the unseen proteins’ AUC and ACC. As the number of
hyper-nodes increases, the performances are further improved. When the
number is at about 64, the overall AUC and unseen proteins’ AUC have
reached the best values, 0.973 and 0.951 respectively. We speculate that
more hyper-nodes mean more bridges between proteins/drugs. The more
hyper-nodes measure the relationship between proteins/drugs together
and play a similar role of voting. However, too many hyper-nodes will
bring excessive costs and the risk of over-fitting. Therefore, we end up
introducing 64 hyper-nodes into BridgeDPI.

Sample et al.

Fig. 5. Performances of BridgeDPI with different number of hyper-nodes

First, we obtain the protein sequences translated from the COVID-19’s
gene fragments via NCBI database (Pruitt et al., 2007). Then, these virus
protein sequences and hydroxychloroquine, Chloroquine, etc. drugs are
fed into BridgeDPI. Finally, the prediction results are visualized by the
heat map. As can be seen from Figure 6, the main potential targets of these
drugs are concentrated in the protein products translated from COVID19 gene fragment 25393 to 29533, including protein ORF3a, envelope
protein, protein ORF6, protein ORF7a, protein ORF7b, protein ORF8,
nucleocapsid phosphoprotein. In our results, we find that Dexamethasone
and Remdesivir have the most significant effects, with the possibility of
their interactions with viral protein products ORF3a, Envelope protein,
ORF7b, and Nucleocapsid phosphoprotein exceeding 60%. In fact, many
studies and clinical trials have shown that the two drugs are very effective
in treating COVID-19: Dexamethasone can significantly reduce mortality
in COVID-19 patients (Group and Tso, 2020; Mahase, 2020; Horby et al.,
2020); Remdsivir can block the replication of COVID-19 (Gordon et al.,
2020), reduce recovery time (Beigel et al., 2020) and improve survival rate
(Grein et al., 2020) in COVID-19 patients. In contrast, unrelated drugs
such as Radix Isatidis Granule have little interaction potential with viral
protein products. These experimental results have verified the validity and
reliability of our model in predicting new drugs, indicating that BridgeDPI
has a certain guiding role in the actual research and drug discovery.

Fig. 6. Predictions of antiviral drug interactions with COVID-19 virus proteins. The rows
of the heatmap represent the names of antiviral drugs, the columns of the heatmap represent
the gene fragments

3.5 Case study
The outbreak of COVID-19 has caused untold damage to human society,
and scientists are working hard on drug discovery. The gene sequence of
COVID-19 has already been detected. In order to verify the effectiveness of
BridgeDPI in practical problems, we test a variety of interactions between
current possible antiviral drugs and the protein targets translated from
COVID-19’s viral viral gene fragments.

picture(0,0)(-35,0)(1,0)30 (0,-35)(0,1)30 picture
“main” — 2021/2/1 — page 6 — #6

4 Conclusion
In this work, we propose an end-to-end deep learning model to predict
DPIs by introducing hyper-nodes. Hyper-nodes establish a bridge between

picture(0,0)(35,0)(-1,0)30 (0,-35)(0,1)30 picture

picture(0,0)(-35,0)(1,0)30 (0,35)(0,-1)30 picture

picture(0,0)(35,0)(-1,0)30 (0,35)(0,-1)30 picture

short Title

proteins/drugs so that the information of PPA and DDA can be captured,
and then get the prediction of DTIs. The experiments show that our
approach outperforms other competing methods on the customized
BindingDB, C.elegans, Human, DUD-E datasets and achieves state-ofthe-art performances. In order to verify the realistic performances of our
model, we perform cross-validation experiments on the different datasets
(training on BindingDB dataset, testing on DUDE dataset) and achieve a
great result. Finally, the case study with concrete examples reaffirms the
usefulness of our model.

Acknowledgements
Funding
This work is supported in part by the NSFC-Zhejiang Joint Fundfor
the Integration of Industrialization and Informatization underGrant
No. U1909208, Hunan Provincial Science and TechnologyProgram
2019CB1007.

References
A, Y. W., A, M. Z., A, Z. F., A, Y. Y., B, F. X. W., and A, M. L. (2020). Kaicd:
A knowledge attention-based deep learning framework for automatic icd coding.
Neurocomputing.
Avorn, J. et al. (2015). The $2.6 billion pill–methodologic and policy considerations.
N Engl J Med, 372(20), 1877–1879.
Ballester, P. J. and Mitchell, J. B. (2010). A machine learning approach to
predicting protein–ligand binding affinity with applications to molecular docking.
Bioinformatics, 26(9), 1169–1175.
Baudot, A., Souiai, O., and Brun, C. (2017). Network analysis and protein function
prediction with the prodistin web site. Methods in Molecular Biology, 804, 313.
Beigel, J., Chung, K. K., Colombo, R., Maves, R., and Colombo, C. (2020).
Remdesivir for the treatment of covid-19 — preliminary report. New England
Journal of Medicine.
Bleakley, K. and Yamanishi, Y. (2009). Supervised prediction of drug–target
interactions using bipartite local models. Bioinformatics, 25(18), 2397–2403.
Cereto-Massagué, A., Ojeda, M. J., Valls, C., Mulero, M., Garcia-Vallvé, S., and
Pujadas, G. (2015). Molecular fingerprint similarity search in virtual screening.
Methods, 71, 58–63.
Chen, L., Cruz, A., Ramsey, S., Dickson, C. J., and Kurtzman, T. (2019). Hidden
bias in the dud-e dataset leads to misleading performance of deep learning in
structure-based virtual screening. PLoS ONE, 14(8), e0220113.
Chen, X., Liu, M.-X., and Yan, G.-Y. (2012). Drug–target interaction prediction by
random walk on the heterogeneous network. Molecular BioSystems, 8(7), 1970–
1978.
Chi, X. and Hou, J. (2011). An iterative approach of protein function prediction.
BMC Bioinformatics, 12(1), 437.
Faulon, J.-L., Misra, M., Martin, S., Sale, K., and Sapra, R. (2008). Genome scale
enzyme–metabolite and drug–target interaction predictions using the signature
molecular descriptor. Bioinformatics, 24(2), 225–233.
Feng, Q., Dueva, E., Cherkasov, A., and Ester, M. (2018). Padme: A deep
learning-based framework for drug-target interaction prediction. arXiv preprint
arXiv:1807.09741.
Fokoue, A., Sadoghi, M., Hassanzadeh, O., and Zhang, P. (2016). Predicting drugdrug interactions through large-scale similarity-based link prediction. In European
Semantic Web Conference, pages 774–789. Springer.
Gao, K. Y., Fokoue, A., Luo, H., Iyengar, A., Dey, S., and Zhang, P. (2018).
Interpretable drug target prediction using deep neural representation. In IJCAI,
volume 2018, pages 3371–3377.
Gilson, M. K., Liu, T., Baitaluk, M., Nicola, G., Hwang, L., and Chong,
J. (2016). Bindingdb in 2015: a public database for medicinal chemistry,
computational chemistry and systems pharmacology. Nucleic acids research,
44(D1), D1045–D1053.
Gordon, C. J., Tchesnokov, E. P., Woolner, E., Perry, J. K., Feng, J. Y., Porter, D. P.,
and Gotte, M. (2020). Remdesivir is a direct-acting antiviral that inhibits rnadependent rna polymerase from severe acute respiratory syndrome coronavirus 2
with high potency. Journal of Biological Chemistry.
Grein, J., Ohmagari, N., Shin, D., Diaz, G., and Flanigan, T. (2020). Compassionate
use of remdesivir for patients with severe covid-19. New England Journal of

picture(0,0)(-35,0)(1,0)30 (0,-35)(0,1)30 picture
“main” — 2021/2/1 — page 7 — #7

7

Medicine, 382(24).
Group, T. R. C. and Tso, S. (2020). Dexamethasone in hospitalized patients with
covid-19 — preliminary report. New England Journal of Medicine.
Gschwend, D. A., Good, A. C., and Kuntz, I. D. (2015). Molecular docking towards
drug discovery. Journal of Molecular Recognition, 9(2), 175–186.
He, K., Zhang, X., Ren, S., and Sun, J. (2016). Deep residual learning for image
recognition. In Proceedings of the IEEE conference on computer vision and pattern
recognition, pages 770–778.
Horby, P., Lim, W. S., Emberson, J., Mafham, M., and Landray, M. J. (2020). Effect
of dexamethasone in hospitalized patients with covid-19: Preliminary report. New
England Journal of Medicine.
Ioffe, S. and Szegedy, C. (2015). Batch normalization: Accelerating deep network
training by reducing internal covariate shift. arXiv preprint arXiv:1502.03167.
Kingma, D. P. and Ba, J. A. (2019). A method for stochastic optimization. arxiv
2014. arXiv preprint arXiv:1412.6980, 434.
Led, P. and Caflisch, A. (2017). Protein structure-based drug design: from docking
to molecular dynamics. Current Opinion in Structural Biology, 48, 93.
Lee, I., Keum, J., and Nam, H. (2019). Deepconv-dti: Prediction of drug-target
interactions via deep learning with convolution on protein sequences. PLoS
computational biology, 15(6), e1007129.
Liu, H., Sun, J., Guan, J., Zheng, J., and Zhou, S. (2015). Improving compound–
protein interaction prediction by building up highly credible negative samples.
Bioinformatics, 31(12), i221–i229.
Mahase, E. (2020). Covid-19: Low dose steroid cuts death in ventilated patients by
one third, trial finds. BMJ (online), 369, m2422.
Min, S., Lee, B., and Yoon, S. (2017). Deep learning in bioinformatics. Briefings in
bioinformatics, 18(5), 851–869.
Mysinger, M. M., Carchia, M., Irwin, J. J., and Shoichet, B. K. (2012).
Directory of useful decoys, enhanced (dud-e): better ligands and decoys for better
benchmarking. Journal of medicinal chemistry, 55(14), 6582–6594.
Nguyen, T., Le, H., and Venkatesh, S. (2019). Graphdta: prediction of drug–target
binding affinity using graph convolutional networks. BioRxiv, page 684662.
Öztürk, H., Özgür, A., and Ozkirimli, E. (2018). Deepdta: deep drug–target binding
affinity prediction. Bioinformatics, 34(17), i821–i829.
Öztürk, H., Ozkirimli, E., and Özgür, A. (2019). Widedta: prediction of drug-target
binding affinity. arXiv preprint arXiv:1902.04166.
Paszke, A., Gross, S., Massa, F., Lerer, A., Bradbury, J., Chanan, G., Killeen, T., Lin,
Z., Gimelshein, N., Antiga, L., et al. (2019). Pytorch: An imperative style, highperformance deep learning library. In Advances in neural information processing
systems, pages 8026–8037.
Paul, S. M., Mytelka, D. S., Dunwiddie, C. T., Persinger, C. C., Munos, B. H.,
Lindborg, S. R., and Schacht, A. L. (2010). How to improve r&d productivity: the
pharmaceutical industry’s grand challenge. Nature reviews Drug discovery, 9(3),
203–214.
Pruitt, K. D., Tatusova, T., and Maglott, D. R. (2007). Ncbi reference sequences
(refseq): a curated non-redundant sequence database of genomes, transcripts and
proteins. Nucleic acids research, 35(suppl_1), D61–D65.
Srivastava, N., Hinton, G., Krizhevsky, A., Sutskever, I., and Salakhutdinov, R.
(2014). Dropout: a simple way to prevent neural networks from overfitting. The
journal of machine learning research, 15(1), 1929–1958.
Tsubaki, M., Tomii, K., and Sese, J. (2019). Compound–protein interaction
prediction with end-to-end learning of neural networks for graphs and sequences.
Bioinformatics, 35(2), 309–318.
Wen, M., Zhang, Z., Niu, S., Sha, H., Yang, R., Yun, Y., and Lu, H. (2017). Deeplearning-based drug–target interaction prediction. Journal of proteome research,
16(4), 1401–1409.
Yang, J., Shen, C., and Huang, N. (2020). Predicting or pretending: artificial
intelligence for protein-ligand interactions lack of sufficiently large and unbiased
datasets. Frontiers in Pharmacology, 11, 69.
Zeng, M., Zhang, F., Wu, F. X., Li, Y., and Li, M. (2019). Protein-protein interaction
site prediction through combining local and global features with deep neural
networks. Bioinformatics, 36(4).
Zhang, F., Song, H., Zeng, M., Li, Y., Kurgan, L., and Li, M. (2019). Deepfunc: a
deep learning framework for accurate prediction of protein functions from protein
sequences and interactions. Proteomics, 19(12), 1900019.
Zhang, F., Song, H., Zeng, M., Wu, F., Li, Y., Pan, Y., and Li, M. (2020).
A deep learning framework for gene ontology annotations with sequence-and
network-based information. IEEE/ACM Transactions on Computational Biology
and Bioinformatics.
Zheng, S., Li, Y., Chen, S., Xu, J., and Yang, Y. (2020). Predicting drug–
protein interaction using quasi-visual question answering system. Nature Machine
Intelligence, 2(2), 134–140.

picture(0,0)(35,0)(-1,0)30 (0,-35)(0,1)30 picture

