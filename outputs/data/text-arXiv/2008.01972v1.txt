Trove: Ontology-driven weak supervision for
medical entity classification
Jason A. Fries1 , Ethan Steinberg1,2 , Saelig Khattar2 , Scott L. Fleming1 ,
Jose Posada1 , Alison Callahan1 , and Nigam H. Shah1

arXiv:2008.01972v1 [cs.CL] 5 Aug 2020

1

Center for Biomedical Informatics Research, Stanford University
2
Department of Computer Science, Stanford University
August 6, 2020
Abstract

Motivation: Recognizing named entities (NER) and their associated attributes like negation are core tasks
in natural language processing. However, manually labeling data for entity tasks is time consuming and
expensive, creating barriers to using machine learning in new medical applications. Weakly supervised
learning, which automatically builds imperfect training sets from low cost, less accurate labeling rules, offers
a potential solution. Medical ontologies are compelling sources for generating labels, however combining
multiple ontologies without ground truth data creates challenges due to label noise introduced by conflicting
entity definitions. Key questions remain on the extent to which weakly supervised entity classification
can be automated using ontologies, or how much additional task-specific rule engineering is required for
state-of-the-art performance. Also unclear is how pre-trained language models, such as BioBERT, improve
the ability to generalize from imperfectly labeled data.
Results: We present Trove, a framework for weakly supervised entity classification using medical ontologies.
We report state-of-the-art, weakly supervised performance on two NER benchmark datasets and establish
new baselines for two entity classification tasks in clinical text. We perform within an average of 3.5 F1 points
(4.2%) of NER classifiers trained with hand-labeled data. Automatically learning label source accuracies to
correct for label noise provided an average improvement of 3.9 F1 points. BioBERT provided an average
improvement of 0.9 F1 points. We measure the impact of combining large numbers of ontologies and present
a case study on rapidly building classifiers for COVID-19 clinical tasks. Our framework demonstrates how
a wide range of medical entity classifiers can be quickly constructed using weak supervision and without
requiring manually-labeled training data.
Availability and Implementation: All code, notebook tutorials, and pre-trained models are open source
and available at https://github.com/som-shahlab/trove
Contact: jason-fries@stanford.edu

1

Introduction

Analyzing text to identify concepts such as disease names and their associated attributes like negation are
foundational tasks in medical natural language processing (NLP). Traditionally, training classifiers for named
entity recognition (NER) and cue-based entity classification have relied on hand-labeled training data. However
annotating medical corpora requires considerable domain expertise and money, creating barriers to using
machine learning in critical applications [1, 2]. Moreover, hand-labeled datasets are static artifacts that are
expensive to change. The recent COVID-19 pandemic highlights the need for machine learning tools that enable
faster, more flexible analysis of clinical and scientific documents in response to rapidly unfolding events [3].
To address the scarcity of hand-labeled training data, machine learning practitioners increasingly turn to lower

1

cost, less accurate label sources to rapidly build classifiers. Instead of requiring hand-labeled training data,
weakly supervised learning relies on task-specific rules and other imperfect labeling strategies to programmatically
generate training data. This approach combines the benefits of rule-based systems, which are easily shared,
inspected and modified, with machine learning which typically improves performance and generalization
properties. Weakly supervised methods have demonstrated success across a range of NLP and other settings
[4, 5, 6, 7, 8] .
Knowledge bases and ontologies provide a compelling foundation for building weakly supervised entity classifiers.
Ontologies codify a vast amount of medical knowledge via taxonomies and example instances for millions of
medical concepts. However, repurposing ontologies for weak supervision creates challenges when combining label
information from multiple sources without access to ground truth labels. The hundreds of terminologies found
in the Unified Medical Language System (UMLS) Metathesaurus [9] and other sources [10] typify the highly
redundant, conflicting, and imperfect entity definitions found across medical ontologies. Naively combining such
conflicting label assignments can cause substantial performance drops in weakly supervised classification [11];
therefore, a key challenge is correcting for labeling errors made by individual ontologies when combining label
information.
In this work, we explore how ontology-driven weak supervision can be used to train medical entity classifiers
without hand-labeled training data. Prior research on weakly supervised medical NER has required complex
preprocessing to identify possible entity spans [12], generated labels from a single source rather than combining
multiple sources [13], or relied on ad hoc rule engineering [14]. High impact application areas, such as clinical
NER using weak supervision, are largely unstudied. Key questions remain about the extent to which we
can automate weak supervision using existing medical ontologies and how much additional task-specific rule
engineering is required for state-of-the-art performance. It is also unclear whether, and by how much, pre-trained
language models such as BioBERT [15] improve the ability to generalize from weakly labeled data and reduce
the need for task-specific labeling rules.
We present a Trove, a framework for training weakly supervised medical entity classifiers using off-the-shelf
ontologies. The overall pipeline is shown in Figure 1. We focus on the challenge of building classifiers without
hand-labeled training data by unifying: (1) imperfect labels generated by multiple ontologies and (2) task-specific
rules. Our main hypothesis is that ontology-only weak supervision, coupled with recent pre-trained language
models such as BioBERT, substantially reduces the engineering cost of creating entity classifiers while matching
performance of prior, more expensive, weakly supervised methods. The central intuition of this work is that
individual ontologies and task-specific rules each make systematic labeling errors. By observing the rates of
agreement and disagreement across labeling rules, and without requiring ground truth labels, we can learn each
source’s accuracy and correct for label noise to generate “denoised”, probabilistic training data [16, 17]. These
data are then used to train deep learning models to generalize beyond the concepts found in ontologies alone.
We conduct experiments on six benchmark tasks for clinical and scientific text, reporting state-of-the-art weakly
supervised performance (i.e., using no hand-labeled training data) on NER datasets for chemical/disease and
drug tagging. We further present new weakly supervised baselines for two tasks in clinical text: disorder tagging
and event temporality classification. Our study includes ablation analyses exploring the performance trade-offs
of training models with labels generated from easily automated ontology-based weak supervision vs. more
expensive, task-specific rules. Finally, we present a case study deploying Trove for COVID-19 symptom tagging
and risk factor monitoring using a near-realtime feed of Stanford Health Care emergency department notes.

2
2.1

Methods and materials
Related work

Rule-based systems for NER [18] and cue detection [19, 20] are common in clinical text processing, where
labeled corpora are difficult to share due to privacy concerns. Generating imperfect training labels from indirect
sources (e.g., patient notes) is often used in analyzing medical images [21, 22, 23, 24, 25, 26] and text processing
[27]. Recent work has explored learning the accuracies of sources to correct for label noise in rule-based systems

2

1. Define Inputs

2. Build Label Matrix

3. Train Label Model

4. Label Dataset

A. Ontology Mapping (k Classes)

Apply m Labeling
Functions to D

Learn Label Source
Accuracies

Generate Probabilistic
Sequence Labels

Class Taxonomy

B. Weak Supervision Sources
Specify s Ontology Sources
Write r Task-specific Rules
Label Sources m

=s+r

C. Unlabeled Documents
Transform Docs
into N Sentences

D = {Xi}Ni=1

D̂ = {Xi, Yî }Ni=1

s Ontology Labeling
Function Templates
UMLS

+

λ1

ChEBI

r Task-specific

Labeling Functions

Label Matrix
Λ ∈ {−1,0,...,k}n×m

…

disease or syndrome → 1
antibiotic → 0
… → k

λm

Xi

y

risk
factor
for
diabetes
type
2

P(Y, Λ)

Predict P(Y | Λ)

Yî
0.00
0.00
0.40
0.99
0.99
0.99

5. Train End Model

6. Classify Concepts
Apply Model to
Held-out Data

End Model

-

New Documents

BioBERT, BiLSTM, etc.

OR
Use Label
Model Directly

Concept Output
(Diseases, Negation, etc.)

X1 : {diabetes type 2}
…

XÑ : {DVT,…,embolism}

Figure 1: Trove pipeline for ontology-driven weak supervision for medical entity classification: dotted boxes/lines
indicate optional steps. Users specify: A) a mapping of an ontology’s class taxonomy to entity classes; B) a
set of label sources (e.g., ontologies, task-specific rules) for weak supervision; and C) a collection of unlabeled
document sentences with which to build a training set. Ontologies instantiate labeling function templates which
are applied to sentences to generate a label matrix. This matrix is used to train the label model which learns
source accuracies and corrects for label noise to predict a consensus probability per word. Consensus labels are
transformed into the probabilistic sequence label dataset which is used as training data for an end model (e.g.,
BioBERT). Alternatively, the label model can also be used as the final classifier.
for text classification [28, 29, 4, 17]. However these focus on sentence or document classification via task-specific
labeling rules and do not explore NER or automating labeling via multiple ontologies.
Weakly supervised learning is an umbrella term referring to methods for training classifiers using imperfect,
indirect, or limited labeled data and includes techniques such as distant supervision [30, 31], co-training [32]
and others [33]. Prior approaches for weakly supervised NER such as co-training use a small set of labeled
seed examples [34] which are iteratively expanded through bootstrapping or self-training [35]. Semi-supervised
methods also use some amount of labeled training data and incorporate unlabeled data by imposing constraints
on properties such as expected label distributions [36]. Distant supervision requires no labeled training data,
but typically focuses on a single source for labels [13], rather than unifying labels assigned using heterogeneous
sources of unknown quality. Crowdsourcing methods combine labels from multiple human annotators with
unknown accuracy [37]. However compared to human labelers, programmatic label assignment has different
correlation and scaling properties which create technical challenges when combining sources.
Data programming [16, 11, 17] formalizes theory for combining multiple label sources with different coverage
and unknown accuracy as well as correlation structure to correct for labeling errors. This approach is used
in SwellShark [12] where a generative model is trained using labels from multiple dictionary and rule-based
sources. However this approach required task-specific preprocessing to identify candidate entities a priori to
achieve competitive performance. Safranchik et al. [14] presented WISER, a linked hidden Markov model where
weak supervision was defined separately over tags and tag transitions using linking rules derived from language
models, ngram statistics, mined phrases and custom heuristics to train a BiLSTM-CRF.
Our work advances these prior approaches by: (1) eliminating the requirement for identifying probable entity
spans a priori by combining word-level weak supervision with contextualized word embeddings; (2) using
ontology-only supervision; and (3) quantifying the relative contributions of sources of label assignment – such as
pre-existing ontologies from the UMLS (low cost) and task-specific rule engineering (high cost) – to the achieved
performance for a task.

2.2

Datasets and tasks

We analyze two categories of medical tasks using six datasets: (1) NER; and (2) span classification where entities
are identified a priori and classified for cue-driven attributes such as negation or document relative time i.e., the
order of an event entity relative to the parent document’s timestamp. Both categories of tasks are formalized
as token classification problems, either tagging all words in a sequence (NER) or just the head words for an
entity set (span classification). Table 1 contains summary statistics for all six datasets. All documents were

3

Task
Disease
Chemical
Disorder
Drug
Negation
DocRelaTime

Domain
Literature
Literature
Clinical
Clinical
Clinical
Clinical

Name
BC5CDR [39]
BC5CDR [39]
ShARe/CLEF 2014 [40]
i2b2 2009 [41]
ShARe/CLEF 2014 [40]
THYME 2016 [42]

Type
NER
NER
NER
NER
Span
Span

k
2
2
2
2
2
4

Documents
500/500/500
500/500/500
166/133/133
100/75/75
166/133/133
293/147/151

Entities
4182/4244/4424
5203/5347/5385
5619/4449/7367
3157/2504/2819
5619/4449/7367
38937/20974/18990

Table 1: Dataset summary statistics. There are (k) classes per task. The (Documents) and (Entities) columns
indicate counts for train/validation/test splits.
preprocessed using a spaCy [38] pipeline optimized for medical tokenization and sentence boundary detection
[29].
We used 99 label sources covering a broad range of medical ontologies. We used the 2018AA release of the UMLS
Metathesaurus, removing non-English and zoonotic source terminologies as well as sources containing less than
500 terms, resulting in 92 sources. Additional sources included the 2019 SPECIALIST abbreviations [43]; Disease
Ontology [44]; Chemical Entities of Biological Interest (ChEBI) [45]; Comparative Toxicogenomics Database
(CTD) [46]; the seed vocabulary used in AutoNER [13]; ADAM abbreviations database [47]; and word sense
abbreviation dictionaries used by the clinical abbreviation system CARD [48]. We applied minimal preprocessing
to all source ontologies, filtering out English stopwords [49] and applying a letter case normalization heuristic to
preserve abbreviations.

2.3
2.3.1

Algorithm
Formulation of the labeling problem

We assume a sequence labeling problem formulation, where we are given a dataset D = {Xi }N
i=1 of N sequences
Xi = (xi,1 , ..., xi,t ) consisting of words x from a fixed vocabulary. Each sequence is mapped to a corresponding
sequence of latent class variables Yi = (yi,1 , ..., yi,t ), where y ∈ {0, ..., k} for k tag classes. Since Y is not
observable, our primary technical challenge is estimating Y from multiple, potentially conflicting label sources
of unknown quality to construct a probabilistically labeled dataset D̂ = {Xi , Ŷi }N
i=1 . This dataset can then
be used for training classification models such as deep neural networks. Such a labeling regimen is typically
low-cost, but less accurate than the hand-curated labels used in traditional supervised learning, hence this
paradigm is referred to as weakly supervised learning.
2.3.2

Unifying and denoising sources with a label model

Combining labels assigned via term-matching using multiple ontologies and task-specific rules is challenging
because the different sources have unknown, task-dependent accuracies and can disagree on the correct
(unobserved) label, introducing noise into the labeling process. To correct for such label noise, we use data
programming [16] to estimate accuracies of each source and ensemble the sources via a label model which assigns
a consensus probabilistic label per word.
To learn the label model, m different label sources are parameterized as labeling functions λ1 , ....λm . Labeling
functions assign a label given an input instance (e.g., a document or entity span) and an underlying heuristic
such as matching strings against a dictionary. The output of a labeling function is in the domain {−1, 0, ..., k}
where -1 denotes ABSTAIN, i.e., not assigning any class label. The vector of m labeling functions applied to n
instances forms the label matrix Λ ∈ {−1, 0, ..., k}m×n . A key finding of data programming is that we can use
Λ to recover the latent class-conditional accuracy of each label source without ground truth labels by observing
the rates of agreement and disagreement across all pairs of labeling functions λi , λj [16].
We use the weak supervision framework Snorkel [11] to train a probabilistic label model which captures the
relationship between the true label and label sources P (Y, Λ). Here the training input is only the label matrix
Λ, generated by applying labeling functions λ1 , ....λm to the unlabeled dataset D. Formally, P (Y, Λ) can be
4

encoded as a factor graph-based model with m accuracy factors between λ1 , ..., λm and our true (unobserved)
label y.
θjAcc (Λi , yi ) := yi Λij
Snorkel implements a matrix completion formulation of data programming which enables faster estimation of
model parameters θ using stochastic gradient descent rather than relying on Gibbs sampling-based approaches
[17]. The label model estimates P (Y |Λ) to provide “denoised” consensus label predictions Ŷ and generates our
probabilistically labeled dataset D̂.
2.3.3

Labeling function templates

In this work, a labeling function λj accepts an unlabeled sequence Xi as input and emits a vector of predicted
labels Ỹi,j = (ỹj,1 , ..., ỹj,t ), i.e., a label ỹj ∈ {−1, 0, ..., k} for each word in Xi . A typical labeling function serves
as a wrapper for an underlying, potentially task-specific labeling heuristic such as pattern matching with a
regular expression. Since these labeling functions are not easily automated and require hand coding, we refer to
them as task-specific labeling functions.
In contrast, medical ontologies are easily transformed into labeling functions by defining reusable labeling
function templates. Templates only require specifying a target entity taxonomy and providing a collection of
terminologies mapped to that taxonomy. These mappings are common in knowledge bases such as the UMLS
Metathesaurus, where the UMLS Semantic Network [50] provides a shared taxonomy for over a hundred medical
terminologies. We utilize two ontology-based labeling functions in this work.
Taxonomy labeling functions require a set of terms (single or multi-word entities) t ∈ T mapped to a taxonomy,
where a term may be mapped to multiple entity classes. This mapping is converted to a k-dimensional probability
vector where k is the number of entity classes ti → [p1 , ..., pk ]. Given input sequence Xi , use string matching
to find all longest term matches (in token length) and assign each match to its most probable entity class
ỹ = max(ti ), abstaining on ties. Using the longest match is a heuristic which helps disambiguates nested terms
(“lung” as anatomy vs “lung cancer” as disease). Matching optionally includes a set of slot-filled patterns to
capture simple compositional mentions (e.g., “{*} ({*})” → “Tylenol (Acetaminophen)”).
Synonym (synset) labeling functions require synsets (collections of synonymous terms) {t̂1 , ..., t̂n } ∈ T̂ and
terms T mapped to a taxonomy. Given input sequence Xi and it’s parent context (e.g., document) search
for >1 unique synonym matches from a target synset and label all matches ỹ = max(ti ). This is useful for
disambiguating abbreviations (e.g, “Duchenne muscular dystrophy” → “DMD”) , where a long form of an
abbreviated term appears elsewhere in a document. Matches can be unconstrained, e.g., any tuple found
anywhere in a context, or subject to matching rules e.g., using Schwartz-Hearst abbreviation disambiguation
[51] to identify out-of-dictionary abbreviations.
Our labeling functions generate word-level labels. Figure 2 shows how this provides a principled way to
synthesize a label when there is disagreement across label sources about what constitutes an entity span. Here
the disease mention “diabetes type 2” is not found in Metathesaurus Names (MTH) or SNOMED Clinical
Terms (SNOMEDCT) [52] which leads to disagreement and label errors. Using a soft majority vote of labeling
functions misses the complete entity span, while the label model learns to account for systematic errors made
by each ontology to generate a more accurate consensus label prediction.
2.3.4

Training the BioBERT end model

The output of the label model is a set of probabilistically labeled words, which we transform back into sequences
D̂ = {Xi , Ŷi }N
i=1 . While probabilistic labels may be used directly for classification, this suffers from a key
limitation: the label model cannot generalize beyond the direct output of labeling functions. Rules alone can
miss common error cases such as out-of-dictionary synonyms or misspellings. Therefore, to improve coverage
we train a discriminative end model, in this case a deep neural network, to transform the output of labeling
functions into learned feature representations. Doing so leverages the inductive bias of pre-trained language
models [53] and provides additional opportunities for injecting domain knowledge via data augmentation [54]
and multi-task learning [55] to improve classification performance.
5

λ1

Labeling Functions

Unobserved True Labels
Soft Majority Vote (SMV)
Label Model (LM)

MTH

λ2
λ3
λ4

Sequence

MTH

MTH

CHV
LNC

LNC

SNOMEDCT

MTH

MTH

CHV

CHV

LNC

LNC

SNOMEDCT

SNOMEDCT

SNOMEDCT

Xi

risk

factor

for

diabetes

type

2

Yi
Yî
Yî

0
0.0 (0/3)
0.0

0
0.0 (0/4)
0.0

0
0.0 (0/1)
0.40

1
1.0 (3/3)
0.99

1
0.50 (2/4)
0.99

1
0.50 (2/4)
0.99

Disease or Syndrome

NOT Disease or Syndrome

ABSTAIN

Figure 2: An example of labeling functions. Here four ontology labeling functions are used to label a sequence
of words Xi containing the entity “diabetes type 2”. Soft majority vote estimates Yi as a word-level sum of
positive class labels. The label model learns a latent class-conditional accuracy parameter for each ontology,
which is used to reweight the original labels to generate a more accurate consensus prediction of Yi .
We use the transformer-based BioBERT [15], a language model fine-tuned on medical text. We also evaluated
ClinicalBERT [56] for clinical tasks, and found its performance to be the same as BioBERT. BioBERT is trained
as a token-level classifier with a max sequence length of 512 tokens. We follow Devlin et al. [53] for sequence
labeling formulation, using the last BERT layer of each word’s head wordpiece token as the contextualized
embedding. Since sequence labels may be incomplete (i.e., cases where all labeling functions abstain on a word),
we mask all abstained tokens when computing the loss during training. We modified BioBERT to support a
noise-aware binary cross entropy loss function [16] which minimizes the expected value with respect to Ŷ to
take advantage of the more informative probabilistic labels.
ŵ = argminw

2.3.5

N
1 X
E
[L(w, xi , ŷ)]
N i=1 ŷ∼Ŷ

Hyperparameter tuning for the label and end models

All models were trained using weakly-labeled versions of the original training splits, i.e., no hand-labeled
instances. We used a hand-labeled validation and test set for hyperparameter tuning and model evaluation,
respectively. Result metrics are reported using the test set. The label model was tuned for learning rate, training
epochs, L2 regularization, and a uniform accuracy prior used to initialize labeling function accuracies. BioBERT
weights were fine-tuned, and end models were tuned for learning rate and training epochs. We used a linear
decay learning rate schedule with a 10% warmup period.
2.3.6

Metrics

We report precision, recall, and F1-score for all tasks. DocRelaTime is reported using micro-averaging. NER
metrics are computed using exact span matching [57]. Each NER task is trained separately as a binary classifier
using IO (inside, outside) tagging to simplify labeling function design, with predicted tags converted to BIO
(beginning, inside, outside) to properly count errors detecting head words. Span task metrics are calculated
assuming access to gold test set spans, as per the evaluation protocol of the original challenges. Label model
and BioBERT scores are reported as the mean and standard deviation of five runs with different random seeds.
2.3.7

Code availability

Trove is written in Python v3.6. Snorkel v0.9.5 was used for training the label model. BioBERT-Base v1.1,
Transformers v2.8 [58], and PyTorch v1.1.0 were used to train all discriminative models. All code is open source
6

and publicly available at https://github.com/som-shahlab/trove.

3

Results

3.1

Experiment overview

After quantifying the performance of ontology-driven weak supervision in all our tasks, we performed four
experiments. First, we examined performance differences by label source ablations, which compared ontologybased labeling functions against those incorporating task-specific rules. Second, we compared Trove to existing
weakly supervised tagging methods. Third, we examined learning source accuracies for UMLS terminologies.
Finally we report on a case study that used Trove to monitor emergency department notes for symptoms and
risk factors associated with patients tested for COVID-19. Expanded experimental details, tuning experiments,
and performance measures are provided in supplemental materials.

3.2

Performance of Trove in medical entity classification tasks

Table 2 reports F1 performance for weak supervision using ontology-based labeling functions and those
incorporating additional, task-specific rules. For NER tasks, adding task-specific rules performed within 1.4 4.8 F1 points (4.1%) of models trained on hand-labeled data and for span tasks within 3.4 - 13.3 F1 points. The
total number of task-specific labeling functions used ranged from 9 to 27. For ontology-based supervision, the
label model improved performance over SMV by 4.4 F1 points on average. BioBERT provided an additional
average increase of 0.4 F1 points.
Ontologies
(Guidelines+UMLS+Other)
Task

LFs SMV

Chemical
Disease
Disorder
Drug
Negation
DocRelaTime

22
16
16
25
-

78.4
74.7
67.5
75.3
-

LM
88.1
78.9
68.0
78.6

±0.2
±0.1
±0.1
±0.1
-

+ Tasks-specific Rules

WS
88.6
78.3
69.0
79.1

LFs SMV

±0.0
±0.3
±0.1
±0.0
-

+9
+6
+11
+11
17
27

81.2
76.4
71.2
82.2
92.5
67.8

LM
89.2
79.7
75.2
85.9
93.0
69.2

±0.2
±0.2
±0.1
±0.4
±0.0
±0.0

WS
91.0
80.1
76.3
88.4
92.7
72.9

±0.1
±0.1
±0.2
±0.2
±0.6
±0.5

FS
92.4
84.5
79.6
93.2
96.1
86.2

±0.2
±0.2
±0.3
±0.3
±0.2
±0.1

Table 2: F1 scores for ontology and task-specific rule-based weak supervision categories. Models are soft
majority vote (SMV); label model (LM); weakly supervised BioBERT (WS); and fully supervised BioBERT (FS).
LFs denote labeling function counts or total added task-specific rules. Bold indicates the best weakly supervised
score for each approach and task. Scores are the mean and ±1 SD of five random weight initializations.

3.3

Labeling source ablations

For NER tasks, we examined five ablations, ordered by increasing cost of labeling effort.
1. Guidelines: A dictionary of all positive and negative examples explicitly provided in annotation guidelines,
including dictionaries for punctuation, numbers, and English stopwords.
2. + UMLS: All terminologies available in the UMLS.
3. + Other: Additional ontologies or existing dictionaries not included in the UMLS.
4. + Rules: Task-specific rules including regular expressions, small dictionaries, and other heuristics.
5. Hand-labeled: Supervised learning using the expert-labeled training split.

7

Tiers 1-4 are additive and include all prior levels. We initialized labeling function templates as follows:
Ontology-based Labeling Functions: We used the UMLS Semantic Network as our entity taxonomy and
defined a mapping of semantic types (STYs) to target class labels y ∈ {0, 1}. Non-UMLS ontologies that did not
provide semantic type assignments (e.g., ChEBI) were mapped to a single class label. All UMLS terminologies
v were ranked by term coverage on the unlabeled training set, defined as each term’s document frequency
summed by terminology, and the top s terminologies were used to initialize templates, where s was tuned with
a validation set. The remaining (vs+1 , ..., v92 ) UMLS terminologies were merged into a single labeling function
to ensure all term in the UMLS were included. UMLS synsets were constructed using concept unique identifiers
(CUIs) and templates were initialized with the union of all terminologies and fixed across all NER tasks.
Task-specific Labeling Functions: All task-specific labeling functions were developed by inspecting unlabeled
training set documents. For NER, we used three general rule types to label concepts: regular expressions
to detect out-of-ontology mentions; small dictionaries of related terms (e.g., illegal drugs); and bigram word
co-occurrence graphs from ontologies to support fuzzy span matching. For negation, we built on NegEx [19]
which uses regular expressions to search left and right context windows for negation cues. For DocRelaTime we
used a heuristic based on the nearest explicit datetime mention (in token distance) to an event mention [59].
Additional regular expression-based rules were added to detect other cues of event temporality.

Soft Majority Vote (SMV)

Weakly Supervised BioBERT

Fully Supervised BioBERT

Figure 3: Soft majority vote (SMV) vs. weakly supervised BioBERT (WS-BioBERT) for all labeling source
ablations, showing the absolute F1-score for all labeling tiers.
Figure 3 reports F1 scores across all ablation tiers. In all settings, the weakly supervised BioBERT models
outperformed SMV. Gains of 6.3 to 33.4 F1 points are seen in the guideline-only tier and 1.5 to 9.9 points in
other tiers. Incorporating source accuracies into BioBERT training provided significant benefits when combining
high precision sources with low precision/high recall sources. In the case of chemical tagging with SMV, the
UMLS tier (light green bar) outperformed UMLS+Other (pink bar) by 3.2 F1 points (81.6 vs. 78.4). This was
due to adding the ChEBI ontology which increased recall but only had 65% word-level precision. Soft majority
vote cannot learn or utilize this information, so naively adding ChEBI labels hurt performance. However the
label model learned ChEBI’s accuracy to take advantage of the noisier, but higher coverage signal, thus the WS
BioBERT UMLS+Other (red bar) outperformed UMLS (green bar) by 2.4 F1 points (88.2 vs 85.8).
3.3.1

Comparing Trove with existing weakly supervised methods

We compared Trove to three existing weakly supervised methods for NER and sequence labeling: SwellShark
[12], AutoNER [13], and WISER [14]. We compared performance on BC5CDR (the combination of disease
8

and chemical tasks) against all methods and on the i2b2 drug task for SwellShark. Table 3 compares Trove
with these existing weakly supervised methods. Our ontology-based approach outperformed AutoNER by 1.7
F1 points. For models incorporating task-specific rules, we outperformed the best weakly supervised model
SwellShark by 1.9 F1 points. SwellShark reported F1 scores on the i2b2 drug task of 78.3 for dictionaries and
83.4 for task-specific rules. Our best models achieved 79.1 and 88.4 F1 respectively.
Supervision Method

Label Source

#Train Docs

End Model

P

R

F1

Fully Supervised
Fully Supervised

Hand-labeled
Hand-labeled

500
500

BioBERT
BiLSTM-CRF

87.6
87.2

89.3
87.9

88.7
87.5

SwellShark
AutoNER
Ours (Trove+Snorkel)

Dictionaries
Dictionaries
Dictionaries

25,500
500
500

BiLSTM-CRF
BiLSTM-CRF
BioBERT

84.6
83.2
81.6

74.1
81.1
86.1

79.0
82.1
83.7

SwellShark
WISER
Ours (Trove+Snorkel)

Custom Rules
Custom Rules
Custom Rules

25,500
500
500

BiLSTM-CRF
BiLSTM-CRF
BioBERT

86.1
82.7
85.5

82.4
83.3
86.8

84.2
83.0
86.1

Table 3: Precision (P), recall (R), and F1 scores for the BC5CDR task using state-of-the-art weakly supervised
NER methods. Underlined numbers indicates the best weakly supervised score using only dictionaries/ontologies
and bold indicates the best score using custom rules.

3.3.2

Learning source accuracies for UMLS terminologies

Estimating accuracies with the label model requires observing agreement and disagreement among multiple
label sources. However it is non-obvious how to partition the UMLS, which contains many terminologies, into
labeling functions. The naive extremes are to either create a single labeling function from the union of all
terminologies or include all terminologies as individual labeling functions. To explore how partitioning choices
impact label model performance, we held all non-UMLS labeling functions fixed across all ablation tiers and
computed performance across s = (1, ..., 92) partitions of the UMLS by terminology. All scores were normalized
to the best global soft majority vote (SMV) score per tier to assess the impact of correcting for label noise.
Figure 4 shows the impact of partitioning the UMLS into s different labeling functions. Modeling source
accuracy consistently outperformed SMV across all tiers, in some cases by 2-8 F1 points. The best performing
partition size s ranged from 1-10 by task. Two naive baseline approaches – collapsing the UMLS into a single
labeling function or treating all terminologies as individual labeling functions – generally did not perform best
overall.

9

Chemical

Disease

Method

Ablation Tier
Disorder

Drug

UMLS Partition Size s

Figure 4: Modeling UMLS terminology source accuracy with the label model. The UMLS is partitioned into s
terminologies (x-axis) ordered by term coverage on the unlabeled training set. Red (SMV) and blue (LM) lines
are the mean F1 performance (y-axis) of five random weight initializations with shaded regions representing ±1
S.D. The grey region indicates performance worse than the best possible SMV.

3.3.3

Case study in rapidly building clinical classifiers

We deployed Trove to monitor emergency departments for patients undergoing COVID-19 testing, analyzing
clinical notes for presenting symptoms and risk factors [60]. This required identifying disorders and defining
a novel classification task for exposure to a confirmed COVID-19 positive individual, a risk factor informing
patient contact tracing. The dataset consisted of hourly dumps of emergency department notes from Stanford
Health Care (SHC), beginning in March 2020. We manually annotated a gold test set of 20 notes for all
mentions of disorders and 776 notes for mentions of a positive COVID exposure. Two clinical experts generated
gold annotations which were adjudicated for disagreements by authors AC and JF. As a baseline for disorder
tagging, we used the fully supervised ShARe/CLEF disorder tagger. This reflects a readily available, but
out-of-distribution training set (MIMIC-II [61] vs. SHC). We used the same disorder labeling function set as
our prior experiments, adding one additional dictionary of COVID terms [62]. BioBERT was trained using
2482 weakly-labeled documents. Custom labeling functions were written for the exposure task and models were
trained on 14k sentences.
Table 4 contains our COVID case study results. The label model provided up to 5.2 F1 points improvement
and performed best overall for disorder tagging. Our best weakly supervised model outperformed the disorder
tagger trained on hand-labeled MIMIC-II data by 2.3 F1 points. For exposure classification, the label model
provided no benefit, but the weakly supervised end model provided a 6.9% improvement (+5.2 F1 points) over
the rules alone.

10

P

SMV
R

F1

P

LM
R

P

FS
R

F1

68.0

74.5

71.1

Hand-labeled

Disorder

Ontologies
+Task-specific

Disorder
Disorder

64.4
69.1

66.4
70.4

65.3
69.8

69.3
73.0

71.7
73.9

70.5
73.4

67.1
70.5

72.3
74.8

69.6
72.6

-

Task-specific

Exposure

82.6

69.1

75.2

82.6

69.1

75.2

87.2

74.5

80.4

-

-

F1

P

Task

-

F1

WS
R

Supervision

-

Table 4: COVID-19 presenting symptoms and risk factors evaluated on Stanford Health Care emergency
department notes. Bold and underlined scores indicate the best score in symptom/disorder tagging and COVID
exposure classification respectively.

4

Discussion

Our experiments demonstrate the effectiveness of using weakly supervised methods to train entity classifiers
using off-the-shelf ontologies and without requiring hand-labeled training data. medical ontologies are freely
available sources of weak supervision for NLP applications [63] and in several NER tasks, our ontology-only
weakly supervised models matched or outperformed more complex weak supervision methods in the literature.
Our work also highlights how domain-aware language models, such as BioBERT, can be combined with weak
supervision to build low-cost and highly performant medical NLP classifiers.
Rule-based approaches are common tools in scientific literature analysis and clinical text processing [64, 65, 66, 67]
Our results suggest that engineering task-specific rules in addition to labels provided by ontologies provides
strong performance for several NER tasks – in some cases approaching the performance of systems built using
hand-labeled data. We further demonstrated how leveraging the structure inherent in knowledge bases such as
the UMLS to estimate source accuracies and correct for label noise provides substantial performance benefits.
We find that the classification performance of the label model alone is strong, with BioBERT providing modest
gains of 0.9 F1 points on average. Since the label model is orders-of-magnitude more computationally efficient
to train than BERT-based models, in many settings (e.g., limited access to high-end GPU hardware) the label
model alone may suffice.
Our tasks reflect a wide range of difficulty. Clinical tasks required more task-specific rules to address the
increased complexity of entity definitions and other non-grammatical, sub-language phenomena [68]. Here
custom rules improved clinical tasks an average of 9.1 F1 points vs. 2.3 points for scientific literature. Moreover,
adding non-UMLS ontologies to PubMed tasks consistently improved overall performance while providing
little-to-no benefit for our clinical tasks. Annotation guidelines for our clinical tasks also increased complexity.
The i2b2 drug task combines several underlying classification problems (e.g., filtering out negated medications,
patient allergies, and historical medications) into a single tagging formulation. This extends beyond entity
typing and requires more complex, cue-driven rule design.
Manually labeling training data is time consuming and expensive, creating barriers to using machine learning for
new medical classification tasks. Sometimes, there is a critical need to rapidly analyze both scientific literature
and unstructured electronic health record data – as in the case of the COVID-19 pandemic when we need to
understand the full repertoire of symptoms, outcomes, and risk factors at short notice [60, 69, 70]. However,
sharing patient notes and constructing labeled training sets presents logistical challenges, both in terms of
patient privacy and in developing infrastructure to aggregate patient records [71]. In contrast, labeling functions
can be easily shared, edited, and applied to data across sites in a privacy preserving manner to rapidly construct
classifiers for symptom tagging and risk factor monitoring.
This work has several limitations. Our task-specific labeling functions were not exhaustive and only reflect lowcost rules easily generated by domain experts. Additional rule development could lead to improved performance.
In addition, we did not explore data augmentation or multi-task learning in the BioBERT model, which may
further mitigate the need to engineer task-specific rules. There is considerable prior work developing machine
learning models for tagging disease, drug, and chemical entities [72, 13] that could be incorporated as labeling
functions. However, our goal was to explore performance tradeoffs in settings where existing machine learning
11

models are not available. Our framework leverages the wide range of medical ontologies available for English
language settings, which provides considerable advantages for weakly supervised methods. Additional work is
needed to characterize the extent to which the framework can benefit tasks in non-English settings [73].
Combining labels from multiple ontology sources violates an independence assumption of data programming
as used in this work, because for any pair of source ontologies we may have correlated noise. This restriction
applies to all label sources, but is more prevalent in cases with extremely similar label sources, as can occur
with ontologies. In our experiments, for a small number of sources, the impact was minor, however performance
tended to decrease after including more than 20 ontologies. Additional research into unsupervised methods
for structure learning [74, 75], i.e., learning dependencies among sources from unlabeled data, could further
improve performance or mitigate the need to limit the number of included ontologies.

5

Conclusion

Identifying named entities and attributes such as negation are critical tasks in medical natural language
processing. Manually labeling training data for these tasks is time consuming and expensive, creating a barrier
to building classifiers for new tasks. The Trove framework provides ontology-driven weak supervision for medical
entity classification and achieves state-of-the-art weakly supervised performance in the NER tasks of recognizing
chemicals, diseases, and drugs. We further establish weakly supervised baselines for disorder tagging and
classifying the temporal order of an event entity relative to its document timestamp. The weakly supervised
NER classifiers perform within 1.4 - 4.8 F1 points of classifiers trained with hand-labeled data. Modeling the
accuracies of individual ontologies and rules to correct for label noise improved performance in all of our entity
classification tasks. Combining pre-trained language models such as BioBERT with weak supervision results in
an additional improvement in most tasks.
The Trove framework demonstrates how classifiers for a wide range of medical NLP tasks can be quickly
constructed by leveraging medical ontologies and weak supervision without requiring manually labeled training
data. Weakly supervised learning provides a mechanism for combining the generalization capabilities of
state-of-the-art machine learning with the flexibility and inspectability of rule-based approaches.

6

Acknowledgements

This work was funded under NLM R01-LM011369-05. Thank you to Birju Patel and Keith Morse who did our
COVID-19 clinical annotations and to Daisy Ding and Adrien Coulet who helped refine experimental hypotheses
during the early stages of this project. Computational resources were provided by Nero, a shared big data
computing platform made possible by the Stanford School of Medicine Research Office and Stanford Research
Computing Center. Additional thanks to reader feedback from Stephen Pfohl, Erin Craig, Conor Corbin, and
Jennifer Wilson.

References
[1] D. Ravı̀, C. Wong, F. Deligianni, M. Berthelot, J. Andreu-Perez, B. Lo, and G. Yang, “Deep learning for
health informatics,” IEEE Journal of Biomedical and Health Informatics, vol. 21, pp. 4–21, Jan. 2017.
[2] A. Esteva, A. Robicquet, B. Ramsundar, V. Kuleshov, M. DePristo, K. Chou, C. Cui, G. Corrado, S. Thrun,
and J. Dean, “A guide to deep learning in healthcare,” Nat. Med., vol. 25, pp. 24–29, Jan. 2019.
[3] L. Lu Wang, K. Lo, Y. Chandrasekhar, R. Reas, J. Yang, D. Eide, K. Funk, R. Kinney, Z. Liu, W. Merrill,
P. Mooney, D. Murdick, D. Rishi, J. Sheehan, Z. Shen, B. Stilson, A. D. Wade, K. Wang, C. Wilhelm,
B. Xie, D. Raymond, D. S. Weld, O. Etzioni, and S. Kohlmeier, “CORD-19: The covid-19 open research
dataset,” ArXiv, Apr. 2020.

12

[4] V. Kuleshov, J. Ding, C. Vo, B. Hancock, A. Ratner, Y. Li, C. Ré, S. Batzoglou, and M. Snyder, “A
machine-compiled database of genome-wide association studies,” Nat. Commun., vol. 10, p. 3341, July
2019.
[5] J. A. Fries, P. Varma, V. S. Chen, K. Xiao, H. Tejeda, P. Saha, J. Dunnmon, H. Chubb, S. Maskatia,
M. Fiterau, S. Delp, E. Ashley, C. Ré, and J. R. Priest, “Weakly supervised classification of aortic valve
malformations using unlabeled cardiac MRI sequences,” Nat. Commun., vol. 10, p. 3111, July 2019.
[6] S. Khattar, H. O’Day, P. Varma, J. Fries, J. Hicks, S. Delp, H. Bronte-Stewart, and C. Re, “Multi-frame
weak supervision to label wearable sensor data,” in Proceedings of the Time Series Workshop at ICML
2019.
[7] P. Varma, F. Sala, S. Sagawa, J. A. Fries, D. Y. Fu, S. Khattar, A. Ramamoorthy, K. Xiao, K. Fatahalian,
J. Priest, and C. Ré, “Multi-resolution weak supervision for sequential data,” in Advances in Neural
Information Processing Systems 32: Annual Conference on Neural Information Processing Systems 2019,
NeurIPS 2019, 8-14 December 2019, Vancouver, BC, Canada (H. M. Wallach, H. Larochelle, A. Beygelzimer,
F. d’Alché-Buc, E. B. Fox, and R. Garnett, eds.), pp. 192–203, 2019.
[8] J. A. Dunnmon, A. J. Ratner, K. Saab, N. Khandwala, M. Markert, H. Sagreiya, R. Goldman, C. Lee-Messer,
M. P. Lungren, D. L. Rubin, and C. Ré, “Cross-Modal data programming enables rapid medical machine
learning,” Patterns, vol. 1, p. 100019, May 2020.
[9] O. Bodenreider, “The unified medical language system (UMLS): integrating biomedical terminology,”
Nucleic Acids Res., vol. 32, pp. D267–70, Jan. 2004.
[10] C. Jonquet, N. H. Shah, and M. A. Musen, “The open biomedical annotator,” Summit Transl Bioinform,
vol. 2009, pp. 56–60, Mar. 2009.
[11] A. Ratner, S. H. Bach, H. Ehrenberg, J. Fries, S. Wu, and C. Ré, “Snorkel: Rapid training data creation
with weak supervision,” Proceedings VLDB Endowment, vol. 11, pp. 269–282, Nov. 2017.
[12] J. Fries, S. Wu, A. Ratner, and C. Ré, “SwellShark: A generative model for biomedical named entity
recognition without labeled data,” Apr. 2017.
[13] J. Shang, L. Liu, X. Ren, X. Gu, T. Ren, and J. Han, “Learning named entity tagger using Domain-Specific
dictionary,” Sept. 2018.
[14] E. Safranchik, S. Luo, S. H. Bach, E. Raisi, S. H. Bach, S. H. Bach, D. Rodriguez, Y. Liu, C. Luo, H. Shao,
and Others, “Weakly supervised sequence tagging from noisy rules,” in Thirty-Fourth AAAI Conference on
Artificial Intelligence, 2020.
[15] J. Lee, W. Yoon, S. Kim, D. Kim, S. Kim, C. H. So, and J. Kang, “BioBERT: a pre-trained biomedical
language representation model for biomedical text mining,” Bioinformatics, Sept. 2019.
[16] A. Ratner, C. De Sa, S. Wu, D. Selsam, and C. Ré, “Data programming: Creating large training sets,
quickly,” Adv. Neural Inf. Process. Syst., vol. 29, pp. 3567–3575, Dec. 2016.
[17] A. Ratner, B. Hancock, J. Dunnmon, F. Sala, S. Pandey, and C. Ré, “Training complex models with
Multi-Task weak supervision,” Proc. Conf. AAAI Artif. Intell., vol. 33, pp. 4763–4771, Jan. 2019.
[18] H. Liu, S. J. Bielinski, S. Sohn, S. Murphy, K. B. Wagholikar, S. R. Jonnalagadda, K. E. Ravikumar, S. T.
Wu, I. J. Kullo, and C. G. Chute, “An information extraction framework for cohort identification using
electronic health records,” AMIA Jt Summits Transl Sci Proc, vol. 2013, pp. 149–153, Mar. 2013.
[19] W. W. Chapman, W. Bridewell, P. Hanbury, G. F. Cooper, and B. G. Buchanan, “A simple algorithm for
identifying negated findings and diseases in discharge summaries,” J. Biomed. Inform., vol. 34, pp. 301–310,
Oct. 2001.
[20] Y. Peng, X. Wang, L. Lu, M. Bagheri, R. Summers, and Z. Lu, “NegBio: a high-performance tool for
negation and uncertainty detection in radiology reports,” AMIA Jt Summits Transl Sci Proc, vol. 2017,
pp. 188–196, May 2018.
13

[21] X. Wang, Y. Peng, L. Lu, Z. Lu, M. Bagheri, and R. M. Summers, “ChestX-ray8: Hospital-scale chest
x-ray database and benchmarks on Weakly-Supervised classification and localization of common thorax
diseases,” May 2017.
[22] X. Wang, L. Lu, H. Shin, L. Kim, M. Bagheri, I. Nogues, J. Yao, and R. M. Summers, “Unsupervised
joint mining of deep features and image labels for Large-Scale radiology image categorization and scene
recognition,” in 2017 IEEE Winter Conference on Applications of Computer Vision (WACV), pp. 998–1007,
Mar. 2017.
[23] W. Gale, L. Oakden-Rayner, G. Carneiro, A. P. Bradley, and L. J. Palmer, “Detecting hip fractures with
radiologist-level performance using deep neural networks,” Nov. 2017.
[24] M. R. Arbabshirani, B. K. Fornwalt, G. J. Mongelluzzo, J. D. Suever, B. D. Geise, A. A. Patel, and G. J.
Moore, “Advanced machine learning in action: identification of intracranial hemorrhage on computed
tomography scans of the head with clinical workflow integration,” 2018.
[25] P. Rajpurkar, J. Irvin, R. L. Ball, K. Zhu, B. Yang, H. Mehta, T. Duan, D. Ding, A. Bagul, C. P. Langlotz,
B. N. Patel, K. W. Yeom, K. Shpanskaya, F. G. Blankenberg, J. Seekins, T. J. Amrhein, D. A. Mong,
S. S. Halabi, E. J. Zucker, A. Y. Ng, and M. P. Lungren, “Deep learning for chest radiograph diagnosis:
A retrospective comparison of the CheXNeXt algorithm to practicing radiologists,” PLoS Med., vol. 15,
p. e1002686, Nov. 2018.
[26] R. L. Draelos, D. Dov, M. A. Mazurowski, J. Y. Lo, R. Henao, G. D. Rubin, and L. Carin, “MachineLearning-Based multiple abnormality prediction with Large-Scale chest computed tomography volumes,”
Feb. 2020.
[27] D. Rebholz-Schuhmann, A. Jimeno Yepes, C. Li, S. Kafkas, I. Lewin, N. Kang, P. Corbett, D. Milward,
E. Buyko, E. Beisswanger, K. Hornbostel, A. Kouznetsov, R. Witte, J. B. Laurila, C. J. Baker, C.-J.
Kuo, S. Clematide, F. Rinaldi, R. Farkas, G. Móra, K. Hara, L. I. Furlong, M. Rautschka, M. L. Neves,
A. Pascual-Montano, Q. Wei, N. Collier, M. F. M. Chowdhury, A. Lavelli, R. Berlanga, R. Morante,
V. Van Asch, W. Daelemans, J. L. Marina, E. van Mulligen, J. Kors, and U. Hahn, “Assessment of NER
solutions against the first and second CALBC silver standard corpus,” J. Biomed. Semantics, vol. 2 Suppl
5, p. S11, Oct. 2011.
[28] Y. Wang, S. Sohn, S. Liu, F. Shen, L. Wang, E. J. Atkinson, S. Amin, and H. Liu, “A clinical text
classification paradigm using weak supervision and deep representation,” BMC Med. Inform. Decis. Mak.,
vol. 19, p. 1, Jan. 2019.
[29] A. Callahan, J. A. Fries, C. Ré, J. I. Huddleston, 3rd, N. J. Giori, S. Delp, and N. H. Shah, “Medical
device surveillance with electronic health records,” NPJ Digit Med, vol. 2, p. 94, Sept. 2019.
[30] M. Craven and J. Kumlien, “Constructing biological knowledge bases by extracting information from text
sources,” Proc. Int. Conf. Intell. Syst. Mol. Biol., pp. 77–86, 1999.
[31] M. Mintz, S. Bills, R. Snow, and D. Jurafsky, “Distant supervision for relation extraction without labeled
data,” in Proceedings of the Joint Conference of the 47th Annual Meeting of the ACL and the 4th
International Joint Conference on Natural Language Processing of the AFNLP, pp. 1003–1011, 2009.
[32] A. Blum and T. Mitchell, “Combining labeled and unlabeled data with co-training,” in Proceedings of the
eleventh annual conference on Computational learning theory, COLT’ 98, (New York, NY, USA), pp. 92–100,
Association for Computing Machinery, July 1998.
[33] Y. Ma, E. Cambria, and S. Gao, “Label embedding for zero-shot fine-grained named entity typing,” in
Proceedings of COLING 2016, the 26th International Conference on Computational Linguistics: Technical
Papers, pp. 171–180, 2016.
[34] M. Collins and Y. Singer, “Unsupervised models for named entity classification,” in 1999 Joint SIGDAT
Conference on Empirical Methods in Natural Language Processing and Very Large Corpora, 1999.

14

[35] B. Medlock and T. Briscoe, “Weakly supervised learning for hedge classification in scientific literature,” in
Proceedings of the 45th annual meeting of the association of computational linguistics, pp. 992–999, 2007.
[36] G. S. Mann and A. McCallum, “Generalized expectation criteria for Semi-Supervised learning with weakly
labeled data,” J. Mach. Learn. Res., vol. 11, no. 2, 2010.
[37] A. Khetan, Z. C. Lipton, and A. Anandkumar, “Learning from noisy singly-labeled data,” Dec. 2017.
[38] M. Honnibal and I. Montani, “spacy 2: Natural language understanding with bloom embeddings, convolutional neural networks and incremental parsing,” To appear, vol. 7, no. 1, 2017.
[39] C. H. Wei, Y. Peng, R. Leaman, A. P. Davis, and others, “Overview of the BioCreative V chemical disease
relation (CDR) task,” of the fifth BioCreative , 2015.
[40] D. L. Mowery, S. Velupillai, B. R. South, L. Christensen, and others, “Task 2: ShARe/CLEF ehealth
evaluation lab 2014,” 2014.
[41] O. Uzuner, I. Solti, and E. Cadag, “Extracting medication information from clinical text,” J. Am. Med.
Inform. Assoc., vol. 17, pp. 514–518, Sept. 2010.
[42] S. Bethard, G. Savova, W.-T. Chen, L. Derczynski, J. Pustejovsky, and M. Verhagen, “SemEval-2016
task 12: Clinical TempEval,” in Proceedings of the 10th International Workshop on Semantic Evaluation
(SemEval-2016), (Stroudsburg, PA, USA), pp. 1052–1062, Association for Computational Linguistics, 2016.
[43] SPECIALIST Lexicon and Lexical Tools. National Library of Medicine (US), Sept. 2009.
[44] L. M. Schriml, C. Arze, S. Nadendla, Y.-W. W. Chang, M. Mazaitis, V. Felix, G. Feng, and W. A. Kibbe,
“Disease ontology: a backbone for disease semantic integration,” Nucleic Acids Res., vol. 40, pp. D940–6,
Jan. 2012.
[45] K. Degtyarenko, P. de Matos, M. Ennis, J. Hastings, M. Zbinden, A. McNaught, R. Alcántara, M. Darsow,
M. Guedj, and M. Ashburner, “ChEBI: a database and ontology for chemical entities of biological interest,”
Nucleic Acids Res., vol. 36, pp. D344–50, Jan. 2008.
[46] A. P. Davis, C. J. Grondin, K. Lennon-Hopkins, C. Saraceni-Richards, D. Sciaky, B. L. King, T. C. Wiegers,
and C. J. Mattingly, “The comparative toxicogenomics database’s 10th year anniversary: update 2015,”
Nucleic Acids Res., vol. 43, pp. D914–20, Jan. 2015.
[47] W. Zhou, V. I. Torvik, and N. R. Smalheiser, “ADAM: another database of abbreviations in MEDLINE,”
Bioinformatics, vol. 22, pp. 2813–2818, Nov. 2006.
[48] Y. Wu, J. C. Denny, S. Trent Rosenbloom, R. A. Miller, D. A. Giuse, L. Wang, C. Blanquicett, E. Soysal,
J. Xu, and H. Xu, “A long journey to short abbreviations: developing an open-source framework for clinical
abbreviation recognition and disambiguation (CARD),” J. Am. Med. Inform. Assoc., vol. 24, pp. e79–e86,
Apr. 2017.
[49] S. Bird, E. Klein, and E. Loper, Natural Language Processing with Python. O’Reilly Media, Inc., 1st ed.,
2009.
[50] A. T. McCray, A. Burgun, and O. Bodenreider, “Aggregating UMLS semantic types for reducing conceptual
complexity,” Stud. Health Technol. Inform., vol. 84, no. Pt 1, pp. 216–220, 2001.
[51] A. S. Schwartz and M. A. Hearst, “A simple algorithm for identifying abbreviation definitions in biomedical
text,” pp. 451–462, 2003.
[52] K. Donnelly, “SNOMED-CT: The advanced terminology and coding system for ehealth,” Stud. Health
Technol. Inform., vol. 121, pp. 279–290, 2006.
[53] J. Devlin, M.-W. Chang, K. Lee, and K. Toutanova, “BERT: pre-training of deep bidirectional transformers
for language understanding,” in Proceedings of the 2019 Conference of the North American Chapter
of the Association for Computational Linguistics: Human Language Technologies, NAACL-HLT 2019,
Minneapolis, MN, USA, June 2-7, 2019, Volume 1 (Long and Short Papers) (J. Burstein, C. Doran, and
T. Solorio, eds.), pp. 4171–4186, Association for Computational Linguistics, 2019.
15

[54] J. Wei and K. Zou, “EDA: Easy data augmentation techniques for boosting performance on text classification
tasks,” Jan. 2019.
[55] Y. Zhang and Q. Yang, “A survey on Multi-Task learning,” July 2017.
[56] E. Alsentzer, J. R. Murphy, W. Boag, W.-H. Weng, D. Jin, T. Naumann, and M. B. A. McDermott,
“Publicly available clinical BERT embeddings,” Apr. 2019.
[57] E. Tjong Kim and S. Buchholz, “Introduction to the CONLL-2000 shared task: Chunking,” in Proceedings of
the Fourth Conference on Computational Natural Language Learning and of the Second Learning Language
in Logic Workshop (CONLL/LLL 2000). Lissabon, Portugal, 13-14 september 2000, pp. 127–132, ACL,
2000.
[58] T. Wolf, L. Debut, V. Sanh, J. Chaumond, C. Delangue, A. Moi, P. Cistac, T. Rault, R. Louf, M. Funtowicz,
and J. Brew, “HuggingFace’s transformers: State-of-the-art natural language processing,” arXiv e-prints,
p. arXiv:1910.03771, Oct. 2019.
[59] J. A. Fries, “Brundlefly at SemEval-2016 task 12: Recurrent neural networks vs. joint inference for clinical
temporal information extraction,” June 2016.
[60] A. Callahan, E. Steinberg, J. A. Fries, S. Gombar, B. Patel, C. K. Corbin, and N. H. Shah, “Estimating
the efficacy of symptom-based screening for COVID-19,” npj Digital Medicine, vol. 3, p. 95, July 2020.
[61] M. Saeed, M. Villarroel, A. T. Reisner, G. Clifford, L.-W. Lehman, G. Moody, T. Heldt, T. H. Kyaw,
B. Moody, and R. G. Mark, “Multiparameter intelligent monitoring in intensive care ii (mimic-ii): a
public-access intensive care unit database,” Critical care medicine, vol. 39, no. 5, p. 952, 2011.
[62] “Covid-19 synonyms.”
[63] D. L. Rubin, N. H. Shah, and N. F. Noy, “Biomedical ontologies: a functional perspective,” Brief. Bioinform.,
vol. 9, pp. 75–90, Jan. 2008.
[64] J. Patrick and M. Li, “High accuracy information extraction of medication information from clinical notes:
2009 i2b2 medication extraction challenge,” J. Am. Med. Inform. Assoc., vol. 17, pp. 524–527, Sept. 2010.
[65] Y. Xu, K. Hong, J. Tsujii, and E. I.-C. Chang, “Feature engineering combined with machine learning and
rule-based methods for structured information extraction from narrative clinical discharge summaries,” J.
Am. Med. Inform. Assoc., vol. 19, pp. 824–832, Sept. 2012.
[66] Z. Z. Hu, M. Narayanaswamy, K. E. Ravikumar, K. Vijay-Shanker, and C. H. Wu, “Literature mining
and database annotation of protein phosphorylation using a rule-based system,” Bioinformatics, vol. 21,
pp. 2759–2765, June 2005.
[67] J. Saric, L. J. Jensen, R. Ouzounova, I. Rojas, and P. Bork, “Extraction of regulatory gene/protein networks
from medline,” Bioinformatics, vol. 22, pp. 645–650, Mar. 2006.
[68] C. Friedman, P. Kra, and A. Rzhetsky, “Two biomedical sublanguages: a description based on the theories
of zellig harris,” J. Biomed. Inform., vol. 35, pp. 222–235, Aug. 2002.
[69] F. N. U. Shweta, K. Murugadoss, S. Awasthi, A. J. Venkatakrishnan, A. Puranik, M. Kang, B. W. Pickering,
J. C. O’Horo, P. R. Bauer, R. R. Razonable, P. Vergidis, Z. Temesgen, S. Rizza, M. Mahmood, W. R.
Wilson, D. Challener, P. Anand, M. Liebers, Z. Doctor, E. Silvert, H. Solomon, T. Wagner, G. J. Gores,
A. W. Williams, J. Halamka, V. Soundararajan, and A. D. Badley, “Augmented curation of unstructured
clinical notes from a massive EHR system reveals specific phenotypic signature of impending COVID-19
diagnosis,” Apr. 2020.
[70] J. Wang, H. A. Pham, F. Manion, M. Rouhizadeh, and Y. Zhang, “COVID-19 SignSym: A fast adaptation
of general clinical NLP tools to identify and normalize COVID-19 signs and symptoms to OMOP common
data model,” July 2020.

16

[71] “National COVID cohort collaborative (N3C).” https://ncats.nih.gov/n3c, May 2020. Accessed:
2020-7-9.
[72] M. Krallinger, O. Rabal, F. Leitner, M. Vazquez, D. Salgado, Z. Lu, R. Leaman, Y. Lu, D. Ji, D. M.
Lowe, R. A. Sayle, R. T. Batista-Navarro, R. Rak, T. Huber, T. Rocktäschel, S. Matos, D. Campos,
B. Tang, H. Xu, T. Munkhdalai, K. H. Ryu, S. V. Ramanan, S. Nathan, S. Žitnik, M. Bajec, L. Weber,
M. Irmer, S. A. Akhondi, J. A. Kors, S. Xu, X. An, U. K. Sikdar, A. Ekbal, M. Yoshioka, T. M. Dieb,
M. Choi, K. Verspoor, M. Khabsa, C. L. Giles, H. Liu, K. E. Ravikumar, A. Lamurias, F. M. Couto,
H.-J. Dai, R. T.-H. Tsai, C. Ata, T. Can, A. Usié, R. Alves, I. Segura-Bedmar, P. Martı́nez, J. Oyarzabal,
and A. Valencia, “The CHEMDNER corpus of chemicals and drugs and its annotation principles,” J.
Cheminform., vol. 7, p. S2, Jan. 2015.
[73] E. M. Bender, “The #benderrule: On naming the languages we study and why it matters.” https:
//thegradient.pub/the-benderrule-on-naming-the-languages-we-study-and-why-it-matters/,
Sept. 2019. Accessed: 2020-7-3.
[74] S. H. Bach, B. He, A. Ratner, and C. Ré, “Learning the structure of generative models without labeled
data,” Mar. 2017.
[75] P. Varma, F. Sala, A. He, A. Ratner, and C. Ré, “Learning dependency structures for weak supervision
models,” Mar. 2019.

17

7
7.1

Supplemental materials
Expanded experimental results
Task

Method

Ablation Tier

Precision

Recall

F1

Chemical
Chemical
Chemical
Chemical

SMV
SMV
SMV
SMV

Guidelines
Guidelines+UMLS
Guidelines+UMLS+Other
Guidelines+UMLS+Other+Rules

90.7
87.0
74.1
78.3

±0.0
±0.0
±0.0
±0.0

3.1 ±0.0
76.8 ±0.0
83.1 ±0.0
84.2 ±0.0

6.0 ±0.0
81.6 ±0.0
78.3 ±0.0
81.2 ±0.0

Chemical
Chemical
Chemical
Chemical

LM
LM
LM
LM

Guidelines
Guidelines+UMLS
Guidelines+UMLS+Other
Guidelines+UMLS+Other+Rules

90.7
89.0
88.7
90.6

±0.0
±0.2
±0.1
±0.4

3.1 ±0.0
82.3 ±0.2
87.4 ±0.3
87.9 ±0.1

6.0 ±0.0
85.5 ±0.1
88.1 ±0.2
89.2 ±0.2

Chemical
Chemical
Chemical
Chemical

WS
WS
WS
WS

Guidelines
Guidelines+UMLS
Guidelines+UMLS+Other
Guidelines+UMLS+Other+Rules

74.5
87.0
85.8
91.4

±3.4
±0.1
±0.1
±0.1

6.7 ±0.7
84.6 ±0.2
91.5 ±0.2
90.7 ±0.3

12.3
85.8
88.6
91.0

Chemical

FS

Supervised

92.0 ±0.2

92.6 ±0.2

92.3 ±0.1

±1.2
±0.1
±0.1
±0.1

Table 5: Chemical tagging (literature).

Task

Method

Ablation Tier

Precision

Recall

F1

Disease
Disease
Disease
Disease

SMV
SMV
SMV
SMV

Guidelines
Guidelines+UMLS
Guidelines+UMLS+Other
Guidelines+UMLS+Other+Rules

58.5
67.8
71.9
74.2

±0.0
±0.0
±0.0
±0.0

6.8 ±0.0
65.2 ±0.0
77.8 ±0.0
78.7 ±0.0

12.3
66.5
74.7
76.4

±0.0
±0.0
±0.0
±0.0

Disease
Disease
Disease
Disease

LM
LM
LM
LM

Guidelines
Guidelines+UMLS
Guidelines+UMLS+Other
Guidelines+UMLS+Other+Rules

58.5
70.8
80.6
81.2

±0.0
±0.9
±0.1
±0.4

6.8 ±0.0
71.3 ±0.1
77.2 ±0.1
78.3 ±0.1

12.3
71.0
78.9
79.7

±0.0
±0.4
±0.1
±0.2

Disease
Disease
Disease
Disease

WS
WS
WS
WS

Guidelines
Guidelines+UMLS
Guidelines+UMLS+Other
Guidelines+UMLS+Other+Rules

41.1
69.4
76.9
78.3

±6.6
±0.4
±0.4
±0.3

51.2
75.2
79.8
82.0

±5.4
±0.4
±0.3
±0.1

45.0
72.1
78.3
80.1

±2.7
±0.4
±0.3
±0.2

Disease

FS

Supervised

82.2 ±0.6

Table 6: Disease tagging (literature).

18

86.0 ±0.2

84.1 ±0.3

Task

Method

Ablation Tier

Precision

Recall

F1

Disorder
Disorder
Disorder
Disorder

SMV
SMV
SMV
SMV

Guidelines
Guidelines+UMLS
Guidelines+UMLS+Other
Guidelines+UMLS+Other+Rules

69.2
76.1
74.7
77.0

±0.0
±0.0
±0.0
±0.0

3.8 ±0.0
57.8 ±0.0
61.5 ±0.0
66.3 ±0.0

7.2 ±0.0
65.7 ±0.0
67.5 ±0.0
71.2 ±0.0

Disorder
Disorder
Disorder
Disorder

LM
LM
LM
LM

Guidelines
Guidelines+UMLS
Guidelines+UMLS+Other
Guidelines+UMLS+Other+Rules

69.2
73.2
70.1
79.8

±0.0
±0.0
±0.1
±0.2

3.8 ±0.0
61.6 ±0.0
65.9 ±0.1
71.0 ±0.0

7.2 ±0.0
66.9 ±0.0
68.0 ±0.1
75.2 ±0.1

Disorder
Disorder
Disorder
Disorder

WS
WS
WS
WS

Guidelines
Guidelines+UMLS
Guidelines+UMLS+Other
Guidelines+UMLS+Other+Rules

31.8
74.1
70.7
79.5

±4.0
±0.3
±0.2
±0.3

57.4
64.8
67.4
73.3

Disorder

FS

Supervised

76.4 ±0.6

±5.1
±0.5
±0.2
±0.4

81.7 ±0.4

40.6
69.1
69.0
76.3

±2.3
±0.3
±0.1
±0.2

79.0 ±0.3

Table 7: Disorder tagging (clinical).

Task

Method

Ablation Tier

Precision

Drug
Drug
Drug
Drug

SMV
SMV
SMV
SMV

Guidelines
Guidelines+UMLS
Guidelines+UMLS+Other
Guidelines+UMLS+Other+Rules

76.2
70.1
69.6
81.6

±0.0
±0.0
±0.0
±0.0

14.8
81.9
82.0
82.9

±0.0
±0.0
±0.0
±0.0

24.8
75.5
75.3
82.2

±0.0
±0.0
±0.0
±0.0

Drug
Drug
Drug
Drug

LM
LM
LM
LM

Guidelines
Guidelines+UMLS
Guidelines+UMLS+Other
Guidelines+UMLS+Other+Rules

77.5
75.5
75.9
86.4

±0.0
±0.1
±0.1
±0.3

15.0
79.7
81.5
85.4

±0.0
±0.0
±0.2
±0.6

25.2
77.5
78.6
85.9

±0.0
±0.1
±0.1
±0.4

Drug
Drug
Drug
Drug

WS
WS
WS
WS

Guidelines
Guidelines+UMLS
Guidelines+UMLS+Other
Guidelines+UMLS+Other+Rules

26.7
72.6
75.8
88.2

±4.7
±0.3
±0.1
±0.2

82.7
83.5
82.6
88.6

±0.9
±0.1
±0.1
±0.1

40.1
77.7
79.1
88.4

±5.2
±0.2
±0.1
±0.1

Drug

FS

Supervised

93.7 ±0.4

Table 8: Drug tagging (clinical).

19

Recall

92.7 ±0.5

F1

93.2 ±0.4

7.2
7.2.1

Labeling function examples
Ontology-based labeling functions

Taxonomy and synset labeling functions do not require any manual inspection of data, only that users specify
a target taxonomy which maps to the entity labels used to train the target machine learning model. These
examples initialize labeling functions for a simple definition of “drug” using the SNOMEDCT US terminology
from the UMLS.
# load semantic types and specify entity mapping
enti ty_class es = {
" Antibiotic "
:1 ,
" Clinical Drug " :1
}
# define taxonomy with classes y \ in {0 ,1}
taxonomy = {
name :0 if name not in en tity_cl asses else en tity_cla sses [ name ]
for name in umls . sema ntic_ty pes ()
}
# build ontology ( t \ rightarrow [ p_1 ,... , p_k ]) and synsets ({\ hat { t } _1 ,... ,\ hat { t } _n })
ontology = b u i l d _ e n t i t y _ m a p ( umls [ " SNOMEDCT_US " ] , taxonomy )
synsets = b u i l d _ s y n s e t _ m a p ( umls [ " SNOMEDCT_US " ] , taxonomy )
# labeling functions
lfs = [
T a x o n o m y L a b e l i n g F u n c t i o n ( name = " LF_SNOMED " , ontology ) ,
S y n S e t L a b e l i n g F u n c t i o n ( name = " L F _ S N O M E D _ s y n s e t s " , synsets )
]

7.2.2

Task-specific labeling functions

These labeling functions are developed by manually inspecting unlabeled data and identifying common patterns
for the entity of interest. These examples are for chemical tagging in B5CDR.
rgxs = [
r " ( ACEi | ACE inhibitor [ s ]*) " ,
r " ([ l ][ - ]( glutathione | arginine ) ) " ,
r " ([ A - Z ]) {2}[0 -9]{3 ,} " ,
r " (( alpha | beta | gamma ) [ -][ T ]) "
]
lf = R e g e x L a b e l i n g F u n c t i o n ( name = " L F _ c h e m i ca l s _ r g x " , rgxs = rgxs , label =1) )

rgxs = [
r " \ b ([ A - Za - z0 -9]+?[ rlntd ] ase [ s ]*) \ b " ,
r " [A - Za - z0 -9]+ factor [ s ]* " ,
r " \ b ( anti [a - z ]+) \ b "
]
lf = R e g e x L a b e l i n g F u n c t i o n ( name = " L F _ n o t _ c h e m i c a l s _ r g x " , rgxs = rgxs , label =0) )

20

7.3

Task and dataset overview

• Document Relative Time (DocRelaTime): This task predicts the order of a clinical event relative to the
parent document’s creation timestamp, binned into four classes {BEFORE, BEFORE_OVERLAPS, OVERLAPS,
AFTER} .

21

7.4

Guideline annotation examples

These examples are provided directly in annotation guideline documents.
7.4.1

Chemical & Disease

BioCreative V CDR Task - Data Annotation Guidelines
• Chemical
– Positive [ATP, Ca, DCE, Fe, K, Li, NO, O2, amino acid, angiotensin II, angiotensin ii, antidepressant,
antidepressant drug, antidepressive agent, cAMP, carbidopa, estrogen, estrogen receptor agonist,
estrogenic agent, estrogenic compound, estrogenic effect, ethanolic extract of daucus carota seed,
fatty acid, glucose, grape seed proanthocyanidin extract, levodopa, low-dose oral contraceptive, nitric
oxide, oral contraceptive, phasic oral contraceptive, polyethylene glycol, saturated fatty acid, steroid,
sucrose, thymoanaleptics, thymoleptics]
– Negative [DNA, adrenergic, anti-HIV agent, anticholinesterase drug, anticoagulant, anticonvulsant,
antipsychotic, atom, cellulose, collagen, glucagon, glucocorticoid, glycogen, gold standard, insulin, ion,
juice, lipid, lipopolysaccharide, mRNA, molecular, muscarinic, nucleic acid polymer, oligosaccharide,
opiate, opioid, opioid alkaloids, opium poppy plant, papaver somniferum, polypeptide, polysaccharide,
prolactin, protein, purinergic, saline, starch, water]
• Disease
– Positive [akathisis, auditory toxicity, bone marrow oedema, cancer, cardiac toxicity, death, dyskinesia,
erythroblastocytopenia, hepatitis, hypertension, hypertensive, liver toxicity, ototoxicity, ovarian and
peritoneal cancer, pain, partial seizures, peritoneal cancer, toxicity, tumor, visual toxicity]
– Negative [cancerogenesis, complication, deficiencies, deficiency, disease, syndrome, tumorigenesis]
7.4.2

Disorder

ShARe/CLEF eHealth 2013 Shared Task: Guidelines for the Annotation of Disorders in Clinical Notes
• Positive [bowel obstruction, chest pain, chronic gingivitis, colon cancer, crohn, facial droop, lower
extremity DVT, lupus, numbness, pain, rash, schizophrenia, severe pre-eclampsia, small bowel obstruction,
stroke, tumor, tumor of the skin, watering of the eye]
• Negative NONE
7.4.3

Drug

i2b2 Medication Extraction Challenge Preliminary Annotation Guidelines
• Positive [CITALOPRAM HYDROBROMIDE, CZI, ECASA, ECASA ( ASPIRIN ENTERIC COATED ),
IV fluid, KCL IMMEDIATE REL, LISINOPRIL, NIFEREX TABLET, NITROGLYCERIN 1/150, NTG,
POTASSIUM CHLORIDE, TPN, TYLENOL ( ACETAMINOPHEN ), TYLENOL ( ACETAMINOPHEN
), acetaminophen, asa, aspirin, atenolol, avapro, bb, caltrate plus D, caltrate plus D, novolog, diuretic,
diuretics, fasting lipids sent, fluocinonide 0.5% cream, furosemide, glucophage, lasix, lasix, lasix, long
acting nitrate, nephrotoxic meds, plavix, red blood cells, saline, saline solution, this medication, total
parenteral nutrition, tylenol, tylenol 3, nitroglycerin 1/150, vitamin A, vitamin C, vitamin D, vitamin E,
vitamin E, vitamins, vitamins A, vitamins C, vitamins D, vitamins E]
• Negative NONE

22

7.5

Hyperparameter search grid
Parameter

Values

learning rate
l2
epochs
precision init

[0.01, 0.005, 0.001, 0.0001]
[0.001, 0.0001]
[50, 100, 200, 600, 700, 1000]
[0.6, 0.7, 0.8, 0.9]

Table 9: Label model hyperparameter grid

Parameter

Values

learning rate
epochs

[1e-5, 1e-3]
[5, 50, 100]

Table 10: BioBERT hyperparameter grid

23

