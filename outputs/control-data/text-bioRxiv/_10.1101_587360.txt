bioRxiv preprint doi: https://doi.org/10.1101/587360; this version posted April 4, 2019. The copyright holder for this preprint (which was not
certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made available
under aCC-BY-NC-ND 4.0 International license.

1

Cell BLAST: Searching large-scale scRNA-seq databases via

2

unbiased cell embedding

3

Zhi-Jie Cao1, Lin Wei1,2, Shen Lu1, De-Chang Yang1, Ge Gao1,*

4
5
6
7

1

8

* To whom correspondence should be addressed. Tel: +86-010-62755206; Email: gaog@mail.cbi.pku.edu.cn

Biomedical Pioneering Innovation Center (BIOPIC), Beijing Advanced Innovation Center for
Genomics (ICG), Center for Bioinformatics (CBI), and State Key Laboratory of Protein and Plant Gene
Research at School of Life Sciences, Peking University, Beijing, 100871, China
2
College of Life Sciences, Beijing Normal University, Beijing, 100875, China

bioRxiv preprint doi: https://doi.org/10.1101/587360; this version posted April 4, 2019. The copyright holder for this preprint (which was not
certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made available
under aCC-BY-NC-ND 4.0 International license.

9

Abstract

10

An effective and efficient cell-querying method is critical for integrating existing scRNA-seq

11

data and annotating new data. Herein, we present Cell BLAST, an accurate and robust cell-

12

querying method. Powered by a well-curated reference database and a user-friendly Web

13

server, Cell BLAST (http://cblast.gao-lab.org) provides a one-stop solution for real-world

14

scRNA-seq cell querying and annotation.

bioRxiv preprint doi: https://doi.org/10.1101/587360; this version posted April 4, 2019. The copyright holder for this preprint (which was not
certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made available
under aCC-BY-NC-ND 4.0 International license.

15

Main Text

16

Technological advances during the past decade have led to rapid accumulation of large-scale

17

single-cell RNA sequencing (scRNA-seq) data. Analogous to biological sequence analysis1,

18

identifying expression similarity to well-curated references via a cell-querying algorithm is

19

becoming the first step of annotating newly sequenced cells. Tools have been developed to

20

identify similar cells using approximate cosine distance2 or LSH Hamming distance3, 4

21

calculated from a subset of carefully selected genes. Such an intuitive approach is efficient,

22

especially for large-scale data, but may suffer from nonbiological variation across datasets

23

(batch effect5, 6). Meanwhile, multiple data harmonization methods have been proposed to

24

remove such confounding factors during alignment, for example, via warping canonical

25

correlation vectors7 or matching mutual nearest neighbors across batches6. While these

26

methods can be applied to align multiple reference datasets, computation-intensive

27

realignment is required to map query cells to the (pre-)aligned reference data space.

28
29

To address these challenges, we introduce a new customized deep generative model together

30

with a novel cell-to-cell similarity metric specifically designed for cell querying (Fig. 1a,

31

Method). Differing from canonical variational autoencoder (VAE) models8-11, adversarial

32

batch alignment is applied to correct batch effect during low-dimensional embedding of

33

reference datasets. Such a design also enables a special “online tuning” mode that can handle

34

batch effect between query and reference data when necessary. Moreover, by exploiting the

35

model’s universal approximator posterior to model uncertainty in latent space, we implement

36

a distribution-based metric to measure cell-to-cell similarity. Finally, we also provide a well-

37

curated multispecies single-cell transcriptomics database (ACA) and an easy-to-use Web

38

interface for convenient exploratory analysis.

39
40

To assess our model’s capability of capturing biological similarity in the low-dimensional

41

latent space, we first benchmarked against several popular dimension reduction tools8, 12, 13

42

using real-world data (Supplementary Table 1) and found that our model is overall among

43

the best performing methods (Supplementary Fig. 1-2). We further compared batch effect

44

correction performance using combinations of multiple datasets with overlapping cell types

45

profiled (Supplementary Table 1). Our model achieves significantly better dataset mixing

46

(Fig. 1b) while maintaining comparable cell type resolution (Fig. 1c). Latent space

bioRxiv preprint doi: https://doi.org/10.1101/587360; this version posted April 4, 2019. The copyright holder for this preprint (which was not
certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made available
under aCC-BY-NC-ND 4.0 International license.

47

visualization also demonstrates that our model can effectively remove batch effect for

48

multiple datasets with a considerable difference in cell type distribution (Supplementary

49

Fig. 3). Notably, we found that the correction of inter-dataset batch effect does not

50

automatically generalize to that within each dataset, which is most evident in the pancreatic

51

datasets (Supplementary Fig. 3c-d, Supplementary Fig. 4a-c). For such complex scenarios,

52

our model is effective in removing multiple levels of batch effect simultaneously

53

(Supplementary Fig. 4d-h).

54
55

While the unbiased latent space embedding derived by the nonlinear deep neural network

56

effectively removes confounding factors, the network’s random components and nonconvex

57

optimization procedure also lead to serious challenges, especially false-positive hits when

58

cells outside reference types are provided as query. Thus, we propose a novel posterior

59

distribution-based cell-to-cell similarity metric in the latent space, which we term

60

“normalized projection distance” (NPD). Distance metric ROC analysis (Method) shows that

61

our posterior NPD metric is more accurate and robust than Euclidean distance which is

62

commonly used in other neural network-based embedding tools (Fig. 1d, Supplementary

63

Fig. 4k). Additionally, we exploit the stability of query-hit distance across multiple models to

64

improve specificity (Method, Supplementary Fig. 4l). An empirical p-value is computed for

65

each query hit as a measure of “confidence” by comparing the posterior distance to the

66

empirical NULL distribution obtained from randomly selected pairs of cells in the queried

67

data.

68
69

The high specificity of Cell BLAST is especially important for discovering novel cell types.

70

Two recent studies (“Montoro”14 and “Plasschaert”15) independently reported a rare tracheal

71

cell type named pulmonary ionocyte. We artificially removed ionocytes from the “Montoro”

72

dataset and used it as a reference to annotate query cells from the “Plasschaert” dataset. In

73

addition to accurately annotating 95.9% of query cells, Cell BLAST correctly rejected 12 of

74

19 “Plasschaert” ionocytes (Fig. 1e). Moreover, it highlights the existence of a putative novel

75

cell type as a well-defined cluster with large p-values among all 156 rejected cells (Fig. 1f-g).

76

Further examination shows that this cluster actually corresponds to ionocytes

77

(Supplementary Fig. 6a; also see Supplementary Fig. 5 for more detailed analysis on the

78

remaining 7 ionocytes). By contrast, scmap-cell2 only rejected 7 “Plasschaert” ionocytes

79

despite the higher overall rejection number of 401 (i.e., more false negatives;

80

Supplementary Fig. 6b-e).

bioRxiv preprint doi: https://doi.org/10.1101/587360; this version posted April 4, 2019. The copyright holder for this preprint (which was not
certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made available
under aCC-BY-NC-ND 4.0 International license.

81
82

We further systematically compared the performance of query-based cell typing with scmap-

83

cell2 and CellFishing.jl4 (Method) using four groups of datasets, each including both positive

84

control and negative control queries (first 4 groups in Supplementary Table 2). Of interest,

85

while Cell BLAST shows superior performance than scmap-cell and CellFishing.jl under the

86

default setting (Supplementary Fig. 7a-c, 8-10), detailed ROC analysis reveals that the

87

performance of scmap-cell could be further improved to a level comparable to Cell BLAST

88

by employing higher thresholds, while ROC and optimal thresholds of CellFishing.jl show

89

large variation across different datasets (Supplementary Fig. 7d). Cell BLAST presents the

90

most robust performance with a default threshold (p-value < 0.05) across different datasets,

91

which will significantly benefit real-world application. Additionally, we assessed their

92

scalability using reference data varying from 1,000 to 1,000,000 cells. Both Cell BLAST and

93

CellFishing.jl scale well with increasing reference size, while scmap-cell’s querying time

94

rises dramatically for larger reference datasets with more than 10,000 cells (Supplementary

95

Fig. 7e).

96
97

Moreover, our deep generative model combined with posterior-based latent-space similarity

98

metric enables Cell BLAST to model the continuous spectrum of cell states accurately. We

99

demonstrate this using a study profiling mouse hematopoietic progenitor cells (“Tusi”16) in

100

which computationally inferred cell fate distributions are available. For the purpose of

101

evaluation, cell fate distributions inferred by the authors are recognized as ground truth. We

102

selected cells from one sequencing run as query and the other as reference to test whether we

103

can accurately transfer continuous cell fate between experimental batches (Fig. 2a-b).

104

Jensen-Shannon divergence between predicted cell fate distributions and ground truth shows

105

that our prediction is again more accurate than scmap (Fig. 2c).

106
107

Besides batch effect among different reference datasets, bona fide biological similarity could

108

also be confounded by large, undesirable bias between query and reference data. Exploiting

109

the dedicated adversarial batch alignment, we implemented a particular "online tuning" mode

110

to handle such an often-neglected confounding factor. Briefly, the combination of reference

111

and query data is used to fine-tune the existing reference-based model, with the query-

112

reference batch effect added as an additional component to be removed by adversarial batch

113

alignment (Method). Using this strategy, we successfully transferred cell fate from the above

114

“Tusi” dataset to an independent human hematopoietic progenitor dataset (“Velten”17) (Fig.

bioRxiv preprint doi: https://doi.org/10.1101/587360; this version posted April 4, 2019. The copyright holder for this preprint (which was not
certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made available
under aCC-BY-NC-ND 4.0 International license.

115

2d). The expression of known cell lineage markers validates the rationality of transferred cell

116

fates (Supplementary Fig. 11a-f). By contrast, scmap-cell incorrectly assigned most cells to

117

monocyte and granulocyte lineages (Supplementary Fig. 11g). As another example, we

118

applied “online tuning” to Tabula Muris18 spleen data, which exhibit significant batch effect

119

between 10x- and Smart-seq2-processed cells. The ROC of Cell BLAST improved

120

significantly after “online tuning”, achieving high specificity, sensitivity and Cohen’s κ (a

121

measure of prediction accuracy corrected for chance, see Methods for more details)2 at the

122

default cutoff (Supplementary Fig. 11h, last group in Supplementary Table 2).

123
124

A comprehensive and well-curated reference database is crucial for the practical application

125

of Cell BLAST. Based on public scRNA-seq datasets, we curated ACA, a high-quality

126

reference database. With 986,305 cells in total, ACA currently covers 27 distinct organs

127

across 8 species, offering the most comprehensive compendium for diverse species and

128

organs (Fig. 2e, Supplementary Fig. 12a-b, Supplementary Table 3). To ensure a unified

129

and high-resolution cell type description, all records in ACA are collected and annotated

130

using a standard procedure (Method), with 98.9% of datasets manually curated with Cell

131

Ontology, a structured controlled vocabulary for cell types. We trained our model on all ACA

132

datasets. Notably, we found that the model works well in most cases with minimal

133

hyperparameter tuning (latent space visualizations, self-projection coverage and accuracy

134

available on our website, Supplementary Fig. 12e).

135
136

A user-friendly Web server is publicly accessible at http://cblast.gao-lab.org, with all curated

137

datasets and pretrained models available. Based on the wealth of resources, our website

138

provides “off-the-shelf” querying service. Users can obtain querying hits and visualize cell

139

type predictions with minimal effort (Supplementary Fig. 12c-d). For advanced users, a

140

well-documented Python package implementing the Cell BLAST toolkit is also available,

141

which enables model training on custom references and diverse downstream analyses.

142
143

By explicitly modeling multilevel batch effect as well as uncertainty in cell-to-cell similarity

144

estimation, Cell BLAST is an accurate and robust querying algorithm for heterogeneous

145

single-cell transcriptome datasets. In combination with a comprehensive, well-annotated

146

database and an easy-to-use Web interface, Cell BLAST provides a one-stop solution for

147

both bench biologists and bioinformaticians.

bioRxiv preprint doi: https://doi.org/10.1101/587360; this version posted April 4, 2019. The copyright holder for this preprint (which was not
certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made available
under aCC-BY-NC-ND 4.0 International license.

148

Software availability

149

The full package of Cell BLAST is available at http://cblast.gao-lab.org. Code necessary to

150

reproduce results in the paper is deposited at https://github.com/gao-lab/Cell_BLAST and

151

https://github.com/gao-lab/Cell_BLAST-notebooks.

152

Acknowledgments

153

The authors thank Drs. Zemin Zhang, Cheng Li, Letian Tao, Jian Lu and Liping Wei at

154

Peking University for their helpful comments and suggestions during the study.

155

This work was supported by funds from the National Key Research and Development

156

Program (2016YFC0901603), the China 863 Program (2015AA020108), as well as the State

157

Key Laboratory of Protein and Plant Gene Research and the Beijing Advanced Innovation

158

Center for Genomics (ICG) at Peking University. The research of G.G. was supported in part

159

by the National Program for Support of Top-notch Young Professionals.

160

Part of the analysis was performed on the Computing Platform of the Center for Life

161

Sciences of Peking University and supported by the High-performance Computing Platform

162

of Peking University.

163

Author contributions

164

G.G. conceived the study and supervised the research; Z.J.C. and L.W. contributed to the

165

computational framework and data curation; S. L., Z.J.C., and D.C.Y designed, implemented

166

and deployed the website; Z.J.C. and G.G. wrote the manuscript with comments and inputs

167

from all coauthors.

bioRxiv preprint doi: https://doi.org/10.1101/587360; this version posted April 4, 2019. The copyright holder for this preprint (which was not
certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made available
under aCC-BY-NC-ND 4.0 International license.

168

Figure. 1 Cell BLAST benchmarking and application to trachea datasets.

169
170
171
172
173
174
175
176
177
178
179
180

(a) Overall Cell BLAST workflow. (b) Extent of dataset mixing after batch effect correction in four groups of
datasets, quantified by the Seurat alignment score. A high Seurat alignment score indicates that local
neighborhoods consist of cells from different datasets uniformly rather than from the same dataset only. Error
bars indicate mean ± s.d. Methods that did not finish under the 2-hour time limit are marked as N.A. (c) Cell
type resolution after batch effect correction, quantified by cell type mean average precision (MAP). MAP can be
thought of as a generalization to nearest neighbor accuracy, with larger values indicating higher cell type
resolution, thus more suitable for cell querying. Error bars indicate mean ± s.d. Methods that did not finish
under the 2-hour time limit are marked as N.A. (d) ROC curve of different distance metrics in discriminating
cell pairs with the same cell type from cell pairs with different cell types. (e) Sankey plot comparing Cell
BLAST predictions and original cell type annotations for the “Plasschaert” dataset. (f) t-SNE visualization of
Cell BLAST-rejected cells, colored by unsupervised clustering. (g) Average p-value distribution of each cluster
in (f).

bioRxiv preprint doi: https://doi.org/10.1101/587360; this version posted April 4, 2019. The copyright holder for this preprint (which was not
certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made available
under aCC-BY-NC-ND 4.0 International license.

181

Figure. 2 Application to hematopoietic progenitor datasets.

182
183
184
185
186
187
188
189
190
191

(a, b) UMAP visualization of latent space learned on the “Tusi” dataset, colored by sequencing run (a) and cell
fate (b). The model is trained solely on cells from run 2 and used to project cells from run 1. Each of the seven
terminal cell fates (E, erythroid; Ba, basophilic or mast; Meg, megakaryocytic; Ly, lymphocytic; D, dendritic;
M, monocytic; G, granulocytic neutrophil) is assigned a distinct color. The color of each single cell is then
determined by the linear combination of these seven colors in hue space, weighed by the cell fate distribution
among these terminal fates. (c) Distribution of Jensen-Shannon divergence between predicted cell fate
distributions and author-provided “ground truth”. (d) UMAP visualization of the “Velten” dataset, colored by
Cell BLAST-predicted cell fates. (e) Number of organs covered in each species for different single-cell
transcriptomics databases, including the Single Cell Portal (https://portals.broadinstitute.org/single_cell),
Hemberg collection2, SCPortalen19, and scRNASeqDB20.

bioRxiv preprint doi: https://doi.org/10.1101/587360; this version posted April 4, 2019. The copyright holder for this preprint (which was not
certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made available
under aCC-BY-NC-ND 4.0 International license.

192

Methods

193

The deep generative model

194

The model we used is based on the adversarial autoencoder (AAE)21. Below, we denote the

195

gene expression profile of a cell as 𝒙 ∈ ℝ$ , where 𝐺 is the number of genes. The data

196

generative process is modeled by a continuous latent variable 𝒛 ∈ ℝ' (𝐷 ≪ 𝐺) with standard

197

Gaussian prior 𝒛 ∼ 𝑁(𝟎, 𝐼' ) which models continuous cell states, as well as a one-hot latent

198

variable 𝒄 ∈ {0,1}7 , 𝒄8 𝒄 = 1 with categorical prior 𝒄 ∼ 𝐶𝑎𝑡(𝐾) which aims to model cell

199

type clusters. A unified latent vector is then determined by 𝒍 = 𝒛 + 𝐻𝒄, where 𝐻 ∈ ℝ'×7 . A

200

neural network (decoder, denoted by Dec below) maps the cell embedding vector 𝒍 to two

201

parameters of the negative binomial distribution 𝝁, 𝜽 = Dec(𝒍) that models the distribution of

202

expression profile 𝒙:
$

𝑝(𝒙|𝒛, 𝒄; Dec, 𝐻 ) = 𝑝(𝒙|𝝁, 𝜽) = J 𝑝K𝑥M N𝜇M , 𝜃M Q

(1)

MRS

𝑝K𝑥M N𝜇M , 𝜃M Q =
W

X
ΓK𝑥M + 𝜃M Q
𝜇M
𝜃M
U
V U
V
𝜃M + 𝜇M
ΓK𝜃M QΓK𝑥M + 1Q 𝜃M + 𝜇M

YX

(2)

203

where 𝝁 and 𝜽 are the mean and dispersion of the negative binomial distribution,

204

respectively. Theoretically, the negative binomial model should be fitted on raw count data8,

205

13, 22

206

the influence of capture efficiency and sequencing depth. We empirically found that, using

207

normalized data, the negative binomial model still produced better results than alternative

208

distributions like the log-normal distribution. To prevent numerical instability during training

209

caused by normalization that breaks the mean-variance relationship of the negative binomial

210

model, we additionally included the variance of the dispersion parameter as a regularization

211

term.

212

Training objectives for the adversarial autoencoder are:

. However, for the purpose of cell querying, datasets have to be normalized to minimize

min

]^_,`a_,b

−𝔼𝒙∼efghg(𝒙) i𝔼𝒛∼j(𝒛|𝒙;`a_),𝒄∼j(𝒄|𝒙;`a_) log 𝑝(𝒙|𝒛, 𝒄; Dec, 𝐻 ) + 𝜆o

(3)

⋅ 𝔼𝒛∼j(𝒛|𝒙;`a_) log Do (𝒛) + 𝜆q ⋅ 𝔼𝒄∼j(𝒄|𝒙;`a_) log Dq (𝒄)r
max 𝜆o ⋅ K𝔼𝒛∼e(𝒛) log Do (𝒛) + 𝔼𝒙∼efghg(𝒙) 𝔼𝒛∼j(𝒛|𝒙;`a_) logK1 − Do (𝒛)QQ

(4)

max 𝜆q ⋅ K𝔼𝒄∼e(𝒄) log Dq (𝒄) + 𝔼𝒙∼efghg(𝒙) 𝔼𝒄∼j(𝒄|𝒙;`a_) logK1 − Dq (𝒄)QQ

(5)

]u

]v

bioRxiv preprint doi: https://doi.org/10.1101/587360; this version posted April 4, 2019. The copyright holder for this preprint (which was not
certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made available
under aCC-BY-NC-ND 4.0 International license.

213

𝑞(𝒛|𝒙; Enc) and 𝑞(𝒄|𝒙; Enc) are “universal approximator posteriors” parameterized by

214

another neural network (encoder, denoted by Enc). Expectations with regard to 𝑞(𝒛|𝒙; Enc)

215

and 𝑞(𝒄|𝒙; Enc) are approximated by sampling 𝒙’ ∼ 𝑃𝑜𝑖𝑠𝑠𝑜𝑛(𝒙) and feeding to the

216

deterministic encoder network. The choice of Poisson noise is arbitrary as the encoder learns

217

to map this arbitrary noise distribution to an appropriate posterior distribution during training.

218

Do and Dq are discriminator networks for 𝒛 and 𝒄, respectively, which output the probability

219

that a latent sample is from the prior rather than from the posterior. Effectively, adversarial

220

training between the encoder (Enc) and discriminators (Do and Dq ) drives the encoder output

221

to match prior distributions of latent variables 𝑝(𝒛) and 𝑝(𝒄). 𝜆o and 𝜆q are hyperparameters

222

that control prior matching strength. The model is much easier and more stable to train than

223

canonical GANs because of the low dimensionality and simple distribution of 𝒛 and 𝒄.

224

At convergence, the encoder learns to map the data distribution to latent variables that follow

225

their respective prior distributions, and the decoder learns to map latent variables from prior

226

distributions back to the data distribution. The key element we use for cell querying is vector

227

𝒍 on the decoding path because it defines a unified latent space in which biological

228

similarities are well captured. The model also works if no categorical latent variable is used,

229

in which case 𝒍 = 𝒛 directly.

230

Some architectural designs are learned from scVI8, including logarithm transformation before

231

encoder input, and softmax output scaled by the library size when computing 𝝁. Stochastic

232

gradient descent with minibatches is applied to optimize the loss functions. Specifically, we

233

use the “RMSProp” optimization algorithm with no momentum term to ensure stability of

234

adversarial training. The model is implemented using the Tensorflow23 Python library.

235

Adversarial batch alignment

236

As a natural extension to the prior matching adversarial training strategy described in the

237

previous section, and following recent work in domain adaptation24-26, we propose the

238

adversarial batch alignment strategy to align the latent space distribution of different batches.

239

We denote the batch membership of each cell as 𝒃 ∈ {0,1}€ , 𝒃8 𝒃 = 1. The distribution 𝑝(𝒃)

240

is categorical:
€

𝑝(𝑏‚ = 1) = 𝑤‚ ,

„ 𝑤‚ = 1

(6)

‚RS

241

Adversarial batch alignment introduces an additional loss:
min

]^_,`a_,b

𝔼𝒃∼e(𝒃),𝒙∼e(𝒙|𝒃) 𝔼𝒛∼j(𝒛|𝒙;`a_),𝒄∼j(𝒄|𝒙;`a_) [ℒ‡ˆ‰Š + 𝜆‡ ⋅ 𝒃8 log D‡ (𝒍)]

(7)

bioRxiv preprint doi: https://doi.org/10.1101/587360; this version posted April 4, 2019. The copyright holder for this preprint (which was not
certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made available
under aCC-BY-NC-ND 4.0 International license.

max 𝔼𝒃∼e(𝒃),𝒙∼e(𝒙|𝒃) 𝔼𝒛∼j(𝒛|𝒙;`a_),𝒄∼j(𝒄|𝒙;`a_) [𝜆‡ ⋅ 𝒃8 log D‡ (𝒍)]
]Œ

(8)

242

ℒ ‡ˆ‰Š denotes the loss function in (3). D‡ is a multiclass batch discriminator network that

243

outputs the probability distribution of batch membership based on the embedding vector 𝒍. 𝜆‡

244

is a hyperparameter controlling batch alignment strength. Additionally, the generative

245

distribution is extended to condition on 𝒃 as well:
𝑝(𝒙|𝒛, 𝒄, 𝒃; Dec) = 𝑝(𝒙|𝝁, 𝜽)
𝝁, 𝜽 = Dec(𝒍, 𝒃)

(9)

𝒍 = 𝒛 + 𝐻𝒄
246

Below, we focus on batch alignment and discard the first ℒ ‡ˆ‰Š term and scaling parameter

247

𝜆‡ . We extend the derivation in the original GAN paper27 to show that adversarial batch

248

alignment converges when embedding space distributions of different batches are aligned.

249

To simplify notation, we fuse the data distribution and encoder transformation and replace

250

the minimization over encoder to minimization over batch-embedding distributions:
€

min „ 𝑤‚ 𝔼𝒍∼e• (𝒍) log D‡ ‚ (𝒍)
e(𝒍)

(10)

‚RS
€

max „ 𝑤‚ 𝔼𝒍∼e•(𝒍) log D‡ ‚ (𝒍)
]Ž

(11)

‚RS

251

Here D‡• (𝒍) denotes the ith dimension of the discriminator output, i.e., the probability that the

252

discriminator “thinks” a cell is from the ith batch. D‡ is assumed to have sufficient capacity,

253

which is generally reasonable in the case of neural networks. The global optimum of (11) is

254

reached when D‡ outputs optimal batch membership distribution at every 𝒍:
€

max 𝑤‚ 𝑝‚ (𝒍) log D‡ ‚ (𝒍) ,

]Ž • (𝒍)

255

(12)

‚RS

The solution to the above maximization is given by:
D‡ ∗ ‚ (𝒍) =

256

𝑠. 𝑡. „ D‡ ‚ (𝒍) = 1

Substituting D‡ ∗ (𝑙) back into (10), we obtain:

𝑤‚ 𝑝‚ (𝒍)
€
∑‚RS 𝑤‚ 𝑝‚ (𝒍)

(13)

bioRxiv preprint doi: https://doi.org/10.1101/587360; this version posted April 4, 2019. The copyright holder for this preprint (which was not
certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made available
under aCC-BY-NC-ND 4.0 International license.

€

„ 𝑤‚ 𝔼𝒍∼e•(𝒍) log
‚RS

𝑤‚ 𝑝‚ (𝒍)
∑€‚RS 𝑤‚ 𝑝‚ (𝒍)
€

€

‚RS

‚RS

𝑝‚ (𝒍)
= „ 𝑤‚ 𝔼𝒍∼e•(𝒍) log €
+ „ 𝑤‚ 𝔼𝒍∼e•(𝒍) log 𝑤‚
∑‚RS 𝑤‚ 𝑝‚ (𝒍)
€

€

€

(14)

= „ 𝑤‚ ⋅ KL •𝑝‚ (𝒍) ∥ „ 𝑤‚ 𝑝‚ (𝒍)— + „ 𝑤‚ log 𝑤‚
‚RS

‚RS

‚RS

€

≥ „ 𝑤‚ log 𝑤‚
‚RS

257

Thus, ∑€‚RS 𝑤‚ log 𝑤‚ is the global minimum, reached if and only if 𝑝‚ (𝒍) = 𝑝M (𝒍), ∀𝑖, 𝑗. The

258

minimization of (10) is equivalent to minimizing a form of generalized Jensen-Shannon

259

divergence among multiple batch-embedding distributions.

260

Note that in practice, model training balances between ℒ ‡ˆ‰Š and pure batch alignment.

261

Aligning cells of the same type induces a minimal cost in ℒ ‡ˆ‰Š , while improperly aligning

262

cells of different types could cause ℒ‡ˆ‰Š to rise dramatically. During training, the gradient

263

from both batch discriminators and decoder provide fine-grain guidance to align different

264

batches, leading to better results than “hand-crafted” alignment strategies like CCA7 and

265

MNN6. Empirically, given proper values for 𝜆‡ , the adversarial approach correctly handles

266

difference in cell type distribution among batches. If multiple levels of batch effect exist, e.g.,

267

within-dataset and cross-dataset, we use an independent batch discriminator for each

268

component, providing extra flexibility.

269

Data preprocessing for benchmarks

270

Most informative genes were selected using the Seurat7 function “FindVariableGenes”. We

271

set the argument “binning.method” to “equal_frequency” and left other arguments as default.

272

If within-dataset batch effect exists, genes are selected independently for each batch and then

273

pooled together. By default, a gene is retained if it is selected in at least 50% of batches.

274

Downstream benchmarks were all performed using this gene set, except for scmap and

275

CellFishing.jl, which provide their own gene selection method. GNU parallel28 was used to

276

parallelize and manage jobs throughout the benchmarking and data processing pipeline.

bioRxiv preprint doi: https://doi.org/10.1101/587360; this version posted April 4, 2019. The copyright holder for this preprint (which was not
certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made available
under aCC-BY-NC-ND 4.0 International license.

277

Benchmarking dimension reduction

278

PCA was performed using the R package irlba29 (v2.3.2). ZIFA12 was downloaded from its

279

Github repository, and hard coded random seeds were removed to reveal actual stability.

280

ZINB-WaVE13 (v1.0.0) was performed using the R package zinbwave. scVI8 (v0.2.3) was

281

downloaded from its Github repository, and minor changes were made to the original code to

282

address PyTorch30 compatibility issues. Our modified versions of ZIFA and scVI are

283

available upon request.

284

For PCA and ZIFA, data were logarithm transformed after normalization and adding a

285

pseudocount of 1. Hyperparameters of all methods above were left as default. For our model,

286

we used the same set of hyperparameters throughout all benchmarks. 𝜆o and 𝜆q were both set

287

to 0.001. All neural networks (encoder, decoder and discriminators) used a single layer of

288

128 hidden units. Learning rate of the RMSProp optimizer is set to 0.001, and minibatches of

289

size 128 were used. For comparability, the target dimensionality of each method was set to

290

10. All benchmarked methods were repeated multiple times with different random seeds. 4

291

random seeds were used for PCA, ZIFA and ZINB-WaVE, while 16 random seeds were used

292

for scVI and our model, since neural network-based models are typically considered less

293

stable. Run time was limited to 2 hours, after which the jobs were terminated.

294

Cell type nearest neighbor mean average precision (MAP) was computed with K nearest

295

neighbors of each cell based on low-dimensional space Euclidean distance. If we denote the

296

cell type of a cell as 𝑦, and the cell types of its ordered nearest neighbors as 𝑦S , 𝑦œ , … 𝑦ž . The

297

average precision (AP) for that cell is defined as:
AP =

298

∑žž £ RS 1¡R¡¢£
𝑘
∑7
1
žRS ¡R¡¢

∑7
žRS 1¡R¡¢ ⋅

(15)

Mean average precision is then given by:
¦

1
MAP = „ AP‚
𝑁

(16)

‚RS

299

Note that when 𝐾 = 1, MAP reduces to the nearest neighbor accuracy. We set 𝐾 to 1% of the

300

total cell number throughout all benchmarks.

301

Benchmarking batch effect correction

302

We merged multiple datasets according to shared gene names. If datasets to be merged are

303

from different species, Ensembl ortholog31 information was used to map genes to ortholog

bioRxiv preprint doi: https://doi.org/10.1101/587360; this version posted April 4, 2019. The copyright holder for this preprint (which was not
certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made available
under aCC-BY-NC-ND 4.0 International license.

304

groups before merging. To obtain informative genes in merged datasets, we take the union of

305

informative genes from each dataset, and then intersect the union with the intersection of

306

detected genes from each dataset.

307

CCA7 and MNN6 alignments were performed using the R packages Seurat7 (v2.3.3) and

308

scran32 (v1.6.9), respectively. Hard-coded random seeds in Seurat were removed to reveal

309

actual stability. The modified version of Seurat is available upon request. For comparability,

310

we evaluated cell type resolution and batch mixing in a 10-dimensional latent space. For

311

MNN alignment, we set the argument “cos.norm.out” to false and left other arguments as

312

default. PCA was applied to reduce the dimensionality to 10 after obtaining the MNN-

313

corrected expression matrix. For CCA alignment, we used the first 10 canonical correlation

314

vectors. Run time was limited to 2 hours, after which the jobs were terminated. Seurat

315

alignment score was computed exactly as described in the CCA alignment paper7. For our

316

own model, we consistently used 𝜆‡ = 0.01, and all other hyperparameters remain the same

317

as in dimension reduction benchmarks. 4 random seeds were used for PCA, CCA and MNN,

318

while 16 random seeds were used for scVI and our model, since neural network-based

319

models are typically considered less stable.

320

Cell querying based on posterior distributions

321

We evaluated cell-to-cell similarity based on the posterior distribution distance. Similar to the

322

training phase, we obtained samples from the “universal approximator posterior” by sampling

323

𝒙’ ∼ 𝑃𝑜𝑖𝑠𝑠𝑜𝑛(𝒙) and feeding to the encoder network. To obtain a robust estimation of the

324

distribution distance with a small number of posterior samples, we project the posterior

325

samples of two cells onto the line connecting their posterior point estimates in the latent

326

space and use the projected scalar distribution distance to approximate the true distribution

327

distance. Wasserstein distance is computed on normalized projections to account for

328

nonuniform density across the embedding space:
𝑁𝑃𝐷(𝑝, 𝑞 ) =

329

1
⋅ ¨𝑊S ª𝑧e (𝑝), 𝑧e (𝑞 )¬ + 𝑊S ª𝑧j (𝑝), 𝑧j (𝑞 )¬2

(17)

Where
𝑊S (𝑢, 𝑣) =

inf

±∈²(³,´)

𝑧³ (𝑣) =

µ|𝑥 − 𝑦|𝑑𝜋(𝑥, 𝑦)

𝑣 − 𝔼( 𝑢 )
¸𝑣𝑎𝑟(𝑢)

(18)

bioRxiv preprint doi: https://doi.org/10.1101/587360; this version posted April 4, 2019. The copyright holder for this preprint (which was not
certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made available
under aCC-BY-NC-ND 4.0 International license.

330

We term this distance metric normalized projection distance (NPD). By default, 50 samples

331

from the posterior are used to compute NPD, which produces sufficiently accurate results

332

(Supplementary Fig. 4i-j). The definition of posterior NPD does not imply an efficient

333

nearest neighbor searching algorithm. To increase speed, we first use Euclidean distance-

334

based nearest neighbor searching, which is highly efficient in the low-dimensional latent

335

space, and then compute posterior distances only for these nearest neighbors. The empirical

336

distribution of posterior NPD for a dataset is obtained by computing posterior NPD on

337

randomly selected pairs of cells in the reference dataset. Empirical p-values of query hits are

338

computed by comparing the posterior NPD of a query hit to this empirical distribution.

339

We note that even with the querying strategy described above, querying with single models

340

still occasionally leads to many false-positive hits when cell types on which the model has

341

not been trained are provided as query. This is because embeddings of such untrained cell

342

types are mostly random, and they could localize close to reference cells by chance. We

343

reason that embedding randomness of untrained cell types could be utilized to identify and

344

correctly reject them. Practically, we train multiple models with different starting points (as

345

determined by random seeds) and compute query hit significance for each model. A query hit

346

is considered significant only if it is consistently significant across multiple models. To

347

acquire predictions based on significant hits, we use majority voting for discrete variables,

348

e.g., cell type, or averaging for continuous variables, e.g., cell fate distribution.

349

Distance metric ROC analysis

350

Our model and scVI8 were fitted on reference datasets and applied to positive and negative

351

control query datasets in the pancreas group of Supplementary Table 2. We then randomly

352

selected 10,000 query-reference cell pairs. A query-reference pair is defined as “positive” if

353

the query cell and reference cell are of the same cell type, and “negative” otherwise. Each

354

benchmarked similarity metric was then computed on all sampled query-reference pairs and

355

used as predictors for “positive”/“negative” pairs. AUROC values were computed for each

356

benchmarked similarity metric. In addition to the Euclidean distance, we also computed

357

posterior distribution distances for scVI (Supplementary Fig. 4k). NPD was computed as

358

described in (17), based on samples from the posterior Gaussian. JSD was computed in the

359

original latent space without projection.

bioRxiv preprint doi: https://doi.org/10.1101/587360; this version posted April 4, 2019. The copyright holder for this preprint (which was not
certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made available
under aCC-BY-NC-ND 4.0 International license.

360

Benchmarking query-based cell typing

361

Cell ontology annotations in ACA were used as ground truth. Cells without cell ontology

362

annotations were excluded in the analysis. For each querying method, cell type predictions

363

for query cells were obtained based on query hits with a minimal similarity cutoff, i.e., query

364

cells with no significant hits are rejected, while cells not rejected are further assigned cell

365

type predictions. Sensitivity, specificity and Cohen’s κ are computed as follows:
𝑠𝑒𝑛𝑠𝑖𝑡𝑖𝑣𝑖𝑡𝑦 = 1 −
𝑠𝑝𝑒𝑐𝑖𝑓𝑖𝑐𝑖𝑡𝑦 =
𝐶𝑜ℎ𝑒𝑛À 𝑠 𝜅 = 1 −

# 𝑟𝑒𝑗𝑒𝑐𝑡𝑒𝑑 𝑞𝑢𝑒𝑟𝑦 𝑐𝑒𝑙𝑙𝑠
# 𝑞𝑢𝑒𝑟𝑦 𝑐𝑒𝑙𝑙𝑠 𝑡ℎ𝑎𝑡 𝑚𝑎𝑡𝑐ℎ 𝑟𝑒𝑓𝑒𝑟𝑒𝑛𝑐𝑒 𝑐𝑒𝑙𝑙 𝑡𝑦𝑝𝑒𝑠

(19)

# 𝑟𝑒𝑗𝑒𝑐𝑡𝑒𝑑 𝑞𝑢𝑒𝑟𝑦 𝑐𝑒𝑙𝑙𝑠
# 𝑞𝑢𝑒𝑟𝑦 𝑐𝑒𝑙𝑙𝑠 𝑡ℎ𝑎𝑡 𝑑𝑜 𝑛𝑜𝑡 𝑚𝑎𝑡𝑐ℎ 𝑟𝑒𝑓𝑒𝑟𝑒𝑛𝑐𝑒 𝑐𝑒𝑙𝑙 𝑡𝑦𝑝𝑒𝑠

(20)

1 − # 𝑐𝑜𝑟𝑟𝑒𝑐𝑡 𝑐𝑒𝑙𝑙 𝑡𝑦𝑝𝑒 𝑝𝑟𝑒𝑑𝑖𝑐𝑡𝑖𝑜𝑛𝑠
1 − # 𝑐𝑜𝑟𝑟𝑒𝑐𝑡 𝑐𝑒𝑙𝑙 𝑡𝑦𝑝𝑒 𝑝𝑟𝑒𝑑𝑖𝑐𝑡𝑖𝑜𝑛𝑠 𝑒𝑥𝑝𝑒𝑐𝑡𝑒𝑑 𝑏𝑦 𝑐ℎ𝑎𝑛𝑐𝑒

(21)

366

Predictions are considered correct if they exactly match the ground truth, i.e., no flexibility

367

based on cell type similarity. This prevents unnecessary bias introduced in the selection of

368

cell type similarity measure. Cells were inversely weighed by the size of the corresponding

369

dataset when computing average sensitivity, specificity and Cohen’s κ. AUROC was

370

computed using linear interpolation. For scmap2, we varied the minimal cosine similarity

371

requirement for nearest neighbors. For Cell BLAST, we varied the maximal p-value cutoff

372

used in filtering hits. For CellFishing.jl4, the original implementation does not include a

373

dedicated cell type prediction function, so we used the same strategy as that for our own

374

method (majority voting after distance filtering) to acquire final predictions, in which we

375

varied the Hamming distance cutoff used in distance filtering. Finally, 4 random seeds were

376

tested for each cutoff and each method to reflect stability. Several other cell querying tools

377

(CellAtlasSearch3, scQuery33, scMCA34) were not included in our benchmark because they

378

do not support custom reference datasets.

379

Benchmarking querying speed

380

To evaluate the scalability of querying methods, we constructed reference datasets of varying

381

sizes by subsampling from the 1M mouse brain dataset35. For query data, the “Marques”

382

dataset36 was used. Benchmarking was performed on a workstation with 40 CPU cores,

383

100GB RAM and GeForce GTX 1080Ti GPU. For all methods, only the querying time was

384

recorded, not including the time consumed to build reference indices.

bioRxiv preprint doi: https://doi.org/10.1101/587360; this version posted April 4, 2019. The copyright holder for this preprint (which was not
certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made available
under aCC-BY-NC-ND 4.0 International license.

385

Application to trachea datasets

386

We first removed cells labeled as “ionocytes” in the “Montoro_10x”14 dataset and used

387

“FindVariableGenes” from Seurat to select informative genes in the remaining cells. Four

388

models with different starting points were trained on the tampered “Montoro_10x” dataset.

389

We used a cutoff of empirical p-value > 0.1 to reject query cells from the “Plasschaert”15

390

dataset as potential novel cell types. We clustered rejected cells using spectral clustering

391

(Scikit-learn37 v0.20.1) after applying t-SNE38 to latent space coordinates. The average p-

392

value for a query cell was computed as the geometric mean of p-values across all hits.

393

Online tuning

394

When significant batch effect exists between reference and query, we support further aligning

395

query data with the reference data in an online-learning manner. All components in the

396

pretrained model, including the encoder, decoder, prior discriminators and batch

397

discriminators, are retained. The reference-query batch effect is added as an extra component

398

to be removed using adversarial batch alignment. Specifically, a new discriminator dedicated

399

to the reference-query batch effect is added, and the decoder is expanded to accept an extra

400

one-hot indicator for reference and query. The expanded model is then fine-tuned using the

401

combination of reference and query data. Two precautions are taken to prevent a decrease in

402

specificity caused by over-alignment. First, adversarial alignment loss is constrained to cells

403

that have mutual nearest neighbors6 between reference and query data in each SGD

404

minibatch. Second, we penalize the deviation of tuned model weights from the original

405

weights.

406

Application to hematopoietic progenitor datasets

407

For the within- “Tusi”16 query, we trained four models using only cells from sequencing run

408

2, and cells from sequencing run 1 were used as query cells. PBA inferred cell fate

409

distributions provided by the authors, which are 7-dimensional categorical distributions

410

across 7 terminal cell fates, were used as the ground truth. We took the average cell fate

411

distributions of significant querying hits (p-value < 0.05) as predictions for query cells.

412

Regarding scmap-cell, we filtered nearest neighbors according to a default cosine similarity

413

cutoff of 0.5. Jensen-Shannon divergence (JSD) between true and predicted cell fate

414

distributions was computed as below:

bioRxiv preprint doi: https://doi.org/10.1101/587360; this version posted April 4, 2019. The copyright holder for this preprint (which was not
certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made available
under aCC-BY-NC-ND 4.0 International license.

𝐽𝑆𝐷 (𝒑 ∥ 𝒒) =

1
⋅
2

𝑝‚
𝑞‚
𝑝‚ log 𝑝 + 𝑞 + 𝑞‚ log 𝑝 + 𝑞
‚
‚
‚
‚
‚∈{Æ,€ˆ,ÇŠÈ,É¡,',Ç,$}
2
2
„

415

For cross-species querying between “Tusi” and “Velten”17, we mapped both mouse and

416

human genes to ortholog groups. Online tuning with 200 epochs was used to increase

417

sensitivity and accuracy. Latent space visualization was performed using UMAP39, 40.

418

ACA database construction

419

We searched Gene Expression Omnibus (GEO)41 using the following search term:

420
421
422
423
424
425
426
427
428
429
430
431

(22)

(
"expression profiling by high throughput sequencing"[DataSet Type] OR
"expression profiling by high throughput sequencing"[Filter] OR
"high throughput sequencing"[Platform Technology Type]
) AND
"gse"[Entry Type] AND
(
"single cell"[Title] OR
"single-cell"[Title]
) AND
("2013"[Publication Date] : "3000"[Publication Date]) AND
"supplementary"[Filter]

432

Datasets in the Hemberg collection (https://hemberg-lab.github.io/scRNA.seq.datasets/) were

433

merged into this list. Only animal single-cell transcriptomic datasets profiling samples of

434

normal conditions were selected. We also manually filtered small-scale or low-quality data.

435

Additionally, several other high-quality datasets missing in the previous list were included for

436

comprehensiveness.

437

The expression matrices and metadata of selected datasets were retrieved from GEO,

438

supplementary files of the publication or by directly contacting the authors. Metadata were

439

further manually curated by adding additional descriptions in the paper to acquire the most

440

detailed information of each cell. We unified raw cell type annotation by Cell Ontology42, a

441

structured controlled vocabulary for cell types. Closest Cell Ontology terms were manually

442

assigned based on the Cell Ontology description and context of the study.

443

Building reference panels for the ACA database

444

Two types of searchable reference panels are built for the ACA database. The first consists of

445

individual datasets with dedicated models trained on each, while the second consists of

bioRxiv preprint doi: https://doi.org/10.1101/587360; this version posted April 4, 2019. The copyright holder for this preprint (which was not
certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made available
under aCC-BY-NC-ND 4.0 International license.

446

datasets grouped by organ and species, with models trained to align multiple datasets

447

profiling the same species and same organ.

448

Data preprocessing follows the same procedure as in previous benchmarks. Both cross-

449

dataset batch effect and within-dataset batch effect are manually examined and removed

450

when necessary. For the first type of reference panels, datasets too small (typically < 1,000

451

cells sequenced) are excluded because of insufficient training data. These datasets are still

452

included in the second type of panels, where they are trained jointly with other datasets

453

profiling the same organ in the same species. For each reference panel, four models with

454

different starting points are trained.

455

Web interface

456

For conveniently performing and visualizing Cell BLAST analysis, we built a one-stop Web

457

interface. The client-side was made from Vue.js, a single-page application Javascript

458

framework, and D3.js for cell ontology visualization. We used Koa2, a web framework for

459

Node.js, as the server side. The Cell BLAST Web portal with all accessible curated datasets

460

is deployed on Huawei Cloud.

bioRxiv preprint doi: https://doi.org/10.1101/587360; this version posted April 4, 2019. The copyright holder for this preprint (which was not
certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made available
under aCC-BY-NC-ND 4.0 International license.

461
462

Supplementary Fig. 1 Comparing low-dimensional space cell type resolutions of different dimension
reduction methods.

463
464
465
466

Nearest neighbor cell type mean average precision (MAP) is used to evaluate how well biological similarity is
captured. MAP can be thought of as a generalization to nearest neighbor accuracy, with larger values indicating
higher cell type resolution and, thus, more suitable for cell querying. Error bars indicate mean ± s.d. Methods
that did not finish under the 2-hour time limit are marked as N.A.

bioRxiv preprint doi: https://doi.org/10.1101/587360; this version posted April 4, 2019. The copyright holder for this preprint (which was not
certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made available
under aCC-BY-NC-ND 4.0 International license.

467

Supplementary Fig. 2 t-SNE visualization of latent spaces learned by our model.

468
469

(a) “Muraro”43, (b) “Adam”44, (c) “Guo”45, (d) “Plasschaert”15, (e) “Baron_human”46, (f) “Bach”47, (g)
“Macosko”48.

bioRxiv preprint doi: https://doi.org/10.1101/587360; this version posted April 4, 2019. The copyright holder for this preprint (which was not
certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made available
under aCC-BY-NC-ND 4.0 International license.

470
471

Supplementary Fig. 3 t-SNE visualization of latent spaces learned by our model on combinations of
multiple datasets, with batch effect corrected.

472
473
474
475

Figures in the left column color cells by cell type, while figures in the right column color cells by dataset. (a-b)
“Baron_human”46 and “Baron_mouse”46; (c-d) “Baron_human”46, “Muraro”43, “Enge”49, “Segerstolpe”50,
“Xin_2016”51 and “Lawlor”52; (e-f) “Montoro_10x”14 and “Plasschaert”15; (g-h) “Quake_Smart-seq2”18 and
“Quake_10x”18.

bioRxiv preprint doi: https://doi.org/10.1101/587360; this version posted April 4, 2019. The copyright holder for this preprint (which was not
certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made available
under aCC-BY-NC-ND 4.0 International license.

476

Supplementary Fig. 4 Multilevel batch effect correction and Cell BLAST strategy optimization.

477
478
479
480
481
482
483
484
485
486
487
488
489
490

(a-c) Latent space learned with only cross-dataset batch effect correction, colored by (a) donor in
“Baron_human”46, (b) donor in “Enge”49, (c) donor in “Muraro”43. (d-h) Latent space learned with both crossdataset and within-dataset batch effect correction, colored by (d) donor in “Baron_human”46, (e) donor in
“Enge”49, (f) donor in “Muraro”43, (g) cell type, (h) dataset. (i) Standard deviation decreases as the number of
samples from the posterior increases. (j) Relationship between Euclidean distance and NPD in
“Baron_human”46 data. The orange points represent cell pairs that are of the same cell type (“positive pairs”),
while the blue points represent cell pairs of different cell types (“negative pairs”). (k) AUROC of different
distance metrics in discriminating cell pairs with the same cell type from cell pairs with different cell types. Box
plots indicate the median (center lines), interquantile range (hinges), and 1.5 times the interquantile range
(whiskers). Note that the posterior distribution distances for scVI only lead to a decrease in performance,
possibly due to improper Gaussian assumption in the posterior. (l) Accuracy, Cohen’s κ (a measure of
prediction accuracy corrected for chance, see Methods for more details)2, specificity and sensitivity all increase
as the number of models used for cell querying increases, among which the improvement of specificity is the
most significant. Error bars indicate mean ± s.d.

bioRxiv preprint doi: https://doi.org/10.1101/587360; this version posted April 4, 2019. The copyright holder for this preprint (which was not
certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made available
under aCC-BY-NC-ND 4.0 International license.

491
492

Supplementary Fig. 5 Ionocytes predicted to be club cells are potentially doublets or of an intermediate
cell state.

493
494
495
496

(a) Cell-cell correlation heatmap for several cell types of interest. Cells labeled as “<X>” are reference cells in
the “Montoro”14 dataset. Cells labeled as “X->Y” are cells annotated as “X” in the original “Plasschaert”15
dataset but predicted to be “Y”. (b-d) Expression levels of several club cell markers in the cell groups of
interest. (e-g) Expression levels of several ionocyte markers in the cell groups of interest.

bioRxiv preprint doi: https://doi.org/10.1101/587360; this version posted April 4, 2019. The copyright holder for this preprint (which was not
certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made available
under aCC-BY-NC-ND 4.0 International license.

497

Supplementary Fig. 6 Rejected cells in the “Montoro” - “Plasschaert” query.

498
499
500
501

(a) t-SNE visualization of Cell BLAST-rejected cells, colored by cell type. (b) Sankey plot of scmap prediction.
(c, d) t-SNE visualization of scmap-rejected cells, colored by unsupervised clustering (c) and cell type (d). (e)
scmap similarity distribution in each cluster of scmap-rejected cells. The rejected ionocytes do not have the
lowest cosine similarity scores to draw sufficient attention.

bioRxiv preprint doi: https://doi.org/10.1101/587360; this version posted April 4, 2019. The copyright holder for this preprint (which was not
certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made available
under aCC-BY-NC-ND 4.0 International license.

502

Supplementary Fig. 7 Benchmarking query-based cell typing.

503
504
505
506
507
508
509
510

(a-c) Querying specificity (a), sensitivity (b) and Cohen’s κ (c) for different methods under the default setting.
Error bars indicate mean ± s.d. (d) ROC curve of cell querying in four different groups of test datasets. Cohen’s
κ values in the bottom left of each subpanel correspond to the optimal point on the ROC curve. Points
corresponding to each method’s default cutoff (scmap: cosine distance = 0.5, CellFishing.jl: Hamming distance
= 110, Cell BLAST: p-value = 0.05) are marked as triangles. Note that CellFishing.jl does not provide a default
cutoff, so we chose a Hamming distance of 110, which is the closest to balancing sensitivity and specificity, but
it is still far from being stable across different datasets. (e) Querying speed on reference datasets of different
sizes subsampled from the 1M mouse brain dataset35. Error bars indicate mean ± s.d.

bioRxiv preprint doi: https://doi.org/10.1101/587360; this version posted April 4, 2019. The copyright holder for this preprint (which was not
certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made available
under aCC-BY-NC-ND 4.0 International license.

511

Supplementary Fig. 8 Sankey plots for Cell BLAST in the cell-querying benchmark.

bioRxiv preprint doi: https://doi.org/10.1101/587360; this version posted April 4, 2019. The copyright holder for this preprint (which was not
certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made available
under aCC-BY-NC-ND 4.0 International license.

512

Supplementary Fig. 9 Sankey plots for scmap in the cell-querying benchmark.

bioRxiv preprint doi: https://doi.org/10.1101/587360; this version posted April 4, 2019. The copyright holder for this preprint (which was not
certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made available
under aCC-BY-NC-ND 4.0 International license.

513

Supplementary Fig. 10 Sankey plots for CellFishing.jl in the cell-querying benchmark.

bioRxiv preprint doi: https://doi.org/10.1101/587360; this version posted April 4, 2019. The copyright holder for this preprint (which was not
certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made available
under aCC-BY-NC-ND 4.0 International license.

514
515

Supplementary Fig. 11 Using “online tuning” in hematopoietic progenitor and Tabula Muris18 spleen
data.

516
517
518
519
520
521
522

UMAP visualization of the “Velten”17 dataset, colored by the expression of known lineage markers, including
CA1 for the erythrocyte lineage (a), GP1BB for the megakaryocyte lineage (b), DNTT for the B-cell lineage (c),
TGFBI for monocyte and dendritic cell lineages (d), CLC for eosinophil, basophil, and mast cell lineages (e),
MPO for the neutrophil lineage (f), and scmap predicted cell fate distribution (g). (h) ROC curve of cell
querying in Tabula Muris18 spleen data. Cohen’s κ values in the bottom left of each subpanel correspond to the
optimal point on the ROC curve. Points corresponding to each method’s default cutoff (scmap: cosine distance
= 0.5, CellFishing.jl: Hamming distance = 110, Cell BLAST: p-value = 0.05) are marked as triangles.

bioRxiv preprint doi: https://doi.org/10.1101/587360; this version posted April 4, 2019. The copyright holder for this preprint (which was not
certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made available
under aCC-BY-NC-ND 4.0 International license.

523

Supplementary Fig. 12 ACA database and Cell BLAST Web portal.

524
525
526

(a) Comparison of cell numbers in different single-cell transcriptomics databases. (b) Composition of different
single-cell sequencing platforms in ACA. (c) Home page of the Cell BLAST Web interface. (d) Web interface
showing the results of a sample query. (e) A full list of ACA reference panels available in our Web interface.

bioRxiv preprint doi: https://doi.org/10.1101/587360; this version posted April 4, 2019. The copyright holder for this preprint (which was not
certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made available
under aCC-BY-NC-ND 4.0 International license.

Organ Profiled

Experimental
Platform

Used In

Testis

10x53

DR

Muraro43

CEL-Seq254

DR, BC

Xin_201651

SMARTer55

BC

SMARTer55

BC

Smart-seq256

BC

Enge49

Smart-seq256

BC

Baron_human46

inDrop57

DR, BC

Baron_mouse46

inDrop57

BC

Drop-seq48

DR

inDrop57

DR, BC

10x53

BC

Dataset Name

Organism

Guo45

Lawlor52

Human

Segerstolpe50

Pancreas

Adam44

Kidney

Plasschaert15
Trachea
Montoro_10x14
Mouse
Macosko48

Retina

Drop-seq48

DR

Bach47

Mammary Gland

10x53

DR

Quake_Smartseq218

20 Organs

Smart-seq256

BC

Quake_10x18

12 Organs

10x53

BC

527
528

Supplementary Table 1. Datasets used in dimensionality reduction and batch effect

529

correction benchmarking.

530

DR, dimension reduction benchmarking; BC, batch effect correction benchmarking.

bioRxiv preprint doi: https://doi.org/10.1101/587360; this version posted April 4, 2019. The copyright holder for this preprint (which was not
certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made available
under aCC-BY-NC-ND 4.0 International license.

Group

Role

Reference

Dataset Name

Organism

Organ Profiled

Experimental
Platform

Baron_human46

inDrop57

Xin_201651

SMARTer55

Lawlor52

SMARTer55
Pancreas

Muraro43
Pancreas

Positive
control
query

CEL-Seq254

Segerstolpe50

Smart-seq256

Human

Enge49

Negative
control
query

Reference
Positive
control
query

Smart-seq256

Wu_human58

Kidney

10x53

Zheng53

PBMC

10x53

Philippeos59

Skin

Smart-seq256

Montoro_10x14
Trachea
15

Negative
control
query

Reference

inDrop57

Plasschaert

Baron_mouse46

Trachea

10x53

Pancreas

inDrop57

Park60

Kidney

10x53

Bach47

Mammary
Gland

10x53

Macosko48

Retina

Drop-seq48

Mouse

Bach47

10x53

Giraddi_10x61
Positive
control
query
Mammary
Gland

Negative
control
query

Mammary
Gland

Quake_Smart-seq2_
Mammary_Gland18
Quake_10x_
Mammary_Gland18

10x53
Smart-seq256
10x53

Mouse

Baron_mouse46

Pancreas

inDrop57

Park60

Kidney

10x53

Plasschaert15

Trachea

inDrop57

Macosko48

Retina

Drop-seq48

bioRxiv preprint doi: https://doi.org/10.1101/587360; this version posted April 4, 2019. The copyright holder for this preprint (which was not
certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made available
under aCC-BY-NC-ND 4.0 International license.

Reference

Quake_10x_
Lung18

Positive
control
query

Quake-Smart-seq2_
Lung18
Baron_mouse46

Lung
Negative
control
query

Smart-seq256
inDrop57

Park60

Kidney

10x53

Bach47

Mammary
Gland

10x53

Plasschaert15

Trachea

inDrop57

Quake_10x_
Spleen18

Positive
control
query

Quake_Smart-seq2_
Spleen18
Baron_mouse46

Negative
control
query

Lung

Pancreas

Reference

Spleen

10x53

Mouse

10x53
Spleen
Smart-seq256
Pancreas

inDrop57

Park60

Kidney

10x53

Macosko48

Retina

Drop-seq48

Bach47

Mammary
Gland

10x53

Mouse

531
532

Supplementary Table 2. Datasets used in cell query benchmarking.

533
534
535

Supplementary Table 3. Raw data of benchmarking results.

536

Supplementary Table 4. Datasets in ACA.

bioRxiv preprint doi: https://doi.org/10.1101/587360; this version posted April 4, 2019. The copyright holder for this preprint (which was not
certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made available
under aCC-BY-NC-ND 4.0 International license.

537

Main text references

538
539
540
541
542
543
544
545
546
547
548
549
550
551
552
553
554
555
556
557
558
559
560
561
562
563
564
565
566
567
568
569
570
571
572
573
574
575
576
577
578
579
580
581
582

1.

583

Supplementary references

Altschul, S.F., Gish, W., Miller, W., Myers, E.W. & Lipman, D.J. Basic local
alignment search tool. J Mol Biol 215, 403-410 (1990).
2.
Kiselev, V.Y., Yiu, A. & Hemberg, M. scmap: projection of single-cell RNA-seq data
across data sets. Nat Methods 15, 359-362 (2018).
3.
Srivastava, D., Iyer, A., Kumar, V. & Sengupta, D. CellAtlasSearch: a scalable search
engine for single cells. Nucleic Acids Res 46, W141-W147 (2018).
4.
Sato, K., Tsuyuzaki, K., Shimizu, K. & Nikaido, I. CellFishing.jl: an ultrafast and
scalable cell search method for single-cell RNA sequencing. Genome Biol 20, 31
(2019).
5.
Tung, P.Y. et al. Batch effects and the effective design of single-cell gene expression
studies. Sci Rep 7, 39921 (2017).
6.
Haghverdi, L., Lun, A.T.L., Morgan, M.D. & Marioni, J.C. Batch effects in singlecell RNA-sequencing data are corrected by matching mutual nearest neighbors. Nat
Biotechnol 36, 421-427 (2018).
7.
Butler, A., Hoffman, P., Smibert, P., Papalexi, E. & Satija, R. Integrating single-cell
transcriptomic data across different conditions, technologies, and species. Nat
Biotechnol 36, 411-420 (2018).
8.
Lopez, R., Regier, J., Cole, M.B., Jordan, M.I. & Yosef, N. Deep generative modeling
for single-cell transcriptomics. Nat Methods 15, 1053-1058 (2018).
9.
Ding, J., Condon, A. & Shah, S.P. Interpretable dimensionality reduction of single
cell transcriptome data with deep generative models. Nat Commun 9, 2002 (2018).
10.
Grønbech, C.H. et al. scVAE: Variational auto-encoders for single-cell gene
expression data. bioRxiv preprint, 318295 (2019).
11.
Wang, D. & Gu, J. VASC: Dimension Reduction and Visualization of Single-cell
RNA-seq Data by Deep Variational Autoencoder. Genomics, proteomics
bioinformatics (2018).
12.
Pierson, E. & Yau, C. ZIFA: Dimensionality reduction for zero-inflated single-cell
gene expression analysis. Genome Biol 16, 241 (2015).
13.
Risso, D., Perraudeau, F., Gribkova, S., Dudoit, S. & Vert, J.P. A general and flexible
method for signal extraction from single-cell RNA-seq data. Nat Commun 9, 284
(2018).
14.
Montoro, D.T. et al. A revised airway epithelial hierarchy includes CFTR-expressing
ionocytes. Nature 560, 319-324 (2018).
15.
Plasschaert, L.W. et al. A single-cell atlas of the airway epithelium reveals the CFTRrich pulmonary ionocyte. Nature 560, 377-381 (2018).
16.
Tusi, B.K. et al. Population snapshots predict early haematopoietic and erythroid
hierarchies. Nature 555, 54-60 (2018).
17.
Velten, L. et al. Human haematopoietic stem cell lineage commitment is a continuous
process. Nat Cell Biol 19, 271-281 (2017).
18.
Tabula Muris, C. et al. Single-cell transcriptomics of 20 mouse organs creates a
Tabula Muris. Nature 562, 367-372 (2018).
19.
Abugessaisa, I. et al. SCPortalen: human and mouse single-cell centric database.
Nucleic Acids Res 46, D781-D787 (2018).
20.
Cao, Y., Zhu, J., Jia, P. & Zhao, Z. scRNASeqDB: A Database for RNA-Seq Based
Gene Expression Profiles in Human Single Cells. Genes (Basel) 8 (2017).

bioRxiv preprint doi: https://doi.org/10.1101/587360; this version posted April 4, 2019. The copyright holder for this preprint (which was not
certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made available
under aCC-BY-NC-ND 4.0 International license.

584
585
586
587
588
589
590
591
592
593
594
595
596
597
598
599
600
601
602
603
604
605
606
607
608
609
610
611
612
613
614
615
616
617
618
619
620
621
622
623
624
625
626
627
628
629
630
631

21.
22.
23.
24.
25.
26.
27.
28.
29.
30.
31.
32.
33.
34.
35.
36.
37.
38.
39.
40.
41.
42.
43.
44.
45.

Makhzani, A., Shlens, J., Jaitly, N., Goodfellow, I. & Frey, B. Adversarial
autoencoders. arXiv preprint (2015).
Love, M.I., Huber, W. & Anders, S. Moderated estimation of fold change and
dispersion for RNA-seq data with DESeq2. Genome Biol 15, 550 (2014).
Abadi, M. et al. in 12th USENIX Symposium on Operating Systems Design and
Implementation 265-283 (2016).
Ganin, Y. & Lempitsky, V. Unsupervised domain adaptation by backpropagation.
arXiv preprint (2014).
Xie, Q., Dai, Z., Du, Y., Hovy, E. & Neubig, G. in Advances in Neural Information
Processing Systems 585-596 (2017).
Tzeng, E., Hoffman, J., Saenko, K. & Darrell, T. in Proceedings of the IEEE
Conference on Computer Vision and Pattern Recognition 7167-7176 (2017).
Goodfellow, I. et al. in Advances in neural information processing systems 2672-2680
(2014).
Tange, O. Gnu parallel 2018. (2018).
Baglama, J., Reichel, L. & Lewis, B.J.R.p.v. irlba: Fast truncated singular value
decomposition and principal components analysis for large dense and sparse matrices.
2 (2017).
Paszke, A. et al. Automatic differentiation in pytorch. (2017).
Herrero, J. et al. Ensembl comparative genomics resources. Database (Oxford) 2016
(2016).
Lun, A.T., McCarthy, D.J. & Marioni, J.C. A step-by-step workflow for low-level
analysis of single-cell RNA-seq data with Bioconductor. F1000Res 5, 2122 (2016).
Alavi, A., Ruffalo, M., Parvangada, A., Huang, Z. & Bar-Joseph, Z. A web server for
comparative analysis of single-cell RNA-seq data. Nat Commun 9, 4768 (2018).
Han, X. et al. Mapping the Mouse Cell Atlas by Microwell-Seq. Cell 172, 1091-1107
e1017 (2018).
10x Genomics in 1.3 Million Brain Cells from E18 Mice (2017).
Marques, S. et al. Oligodendrocyte heterogeneity in the mouse juvenile and adult
central nervous system. Science 352, 1326-1329 (2016).
Pedregosa, F. et al. Scikit-learn: Machine learning in Python. 12, 2825-2830 (2011).
Maaten, L.v.d. & Hinton, G. Visualizing data using t-SNE. Journal of machine
learning research 9, 2579-2605 (2008).
McInnes, L., Healy, J. & Melville, J. Umap: Uniform manifold approximation and
projection for dimension reduction. arXiv preprint (2018).
Becht, E. et al. Dimensionality reduction for visualizing single-cell data using UMAP.
Nat Biotechnol (2018).
Barrett, T. et al. NCBI GEO: archive for functional genomics data sets--update.
Nucleic Acids Res 41, D991-995 (2013).
Diehl, A.D. et al. The Cell Ontology 2016: enhanced content, modularization, and
ontology interoperability. J Biomed Semantics 7, 44 (2016).
Muraro, M.J. et al. A Single-Cell Transcriptome Atlas of the Human Pancreas. Cell
Syst 3, 385-394 e383 (2016).
Adam, M., Potter, A.S. & Potter, S.S. Psychrophilic proteases dramatically reduce
single-cell RNA-seq artifacts: a molecular atlas of kidney development. Development
144, 3625-3632 (2017).
Guo, J. et al. The adult human testis transcriptional cell atlas. Cell Res 28, 1141-1157
(2018).

bioRxiv preprint doi: https://doi.org/10.1101/587360; this version posted April 4, 2019. The copyright holder for this preprint (which was not
certified by peer review) is the author/funder, who has granted bioRxiv a license to display the preprint in perpetuity. It is made available
under aCC-BY-NC-ND 4.0 International license.

632
633
634
635
636
637
638
639
640
641
642
643
644
645
646
647
648
649
650
651
652
653
654
655
656
657
658
659
660
661
662
663
664
665
666
667
668
669

46.
47.
48.
49.
50.
51.
52.
53.
54.
55.
56.
57.
58.
59.
60.
61.

Baron, M. et al. A Single-Cell Transcriptomic Map of the Human and Mouse
Pancreas Reveals Inter- and Intra-cell Population Structure. Cell Syst 3, 346-360 e344
(2016).
Bach, K. et al. Differentiation dynamics of mammary epithelial cells revealed by
single-cell RNA sequencing. Nat Commun 8, 2128 (2017).
Macosko, E.Z. et al. Highly Parallel Genome-wide Expression Profiling of Individual
Cells Using Nanoliter Droplets. Cell 161, 1202-1214 (2015).
Enge, M. et al. Single-Cell Analysis of Human Pancreas Reveals Transcriptional
Signatures of Aging and Somatic Mutation Patterns. Cell 171, 321-330 e314 (2017).
Segerstolpe, A. et al. Single-Cell Transcriptome Profiling of Human Pancreatic Islets
in Health and Type 2 Diabetes. Cell Metab 24, 593-607 (2016).
Xin, Y. et al. RNA Sequencing of Single Human Islet Cells Reveals Type 2 Diabetes
Genes. Cell Metab 24, 608-615 (2016).
Lawlor, N. et al. Single-cell transcriptomes identify human islet cell signatures and
reveal cell-type-specific expression changes in type 2 diabetes. Genome Res 27, 208222 (2017).
Zheng, G.X. et al. Massively parallel digital transcriptional profiling of single cells.
Nat Commun 8, 14049 (2017).
Hashimshony, T. et al. CEL-Seq2: sensitive highly-multiplexed single-cell RNA-Seq.
Genome Biol 17, 77 (2016).
Verboom, K. et al. SMARTer single cell total RNA sequencing. bioRxiv preprint,
430090 (2018).
Picelli, S. et al. Full-length RNA-seq from single cells using Smart-seq2. Nat Protoc
9, 171-181 (2014).
Klein, A.M. et al. Droplet barcoding for single-cell transcriptomics applied to
embryonic stem cells. Cell 161, 1187-1201 (2015).
Wu, H. et al. Comparative Analysis and Refinement of Human PSC-Derived Kidney
Organoid Differentiation with Single-Cell Transcriptomics. Cell Stem Cell 23, 869881 e868 (2018).
Philippeos, C. et al. Spatial and Single-Cell Transcriptional Profiling Identifies
Functionally Distinct Human Dermal Fibroblast Subpopulations. J Invest Dermatol
138, 811-825 (2018).
Park, J. et al. Single-cell transcriptomics of the mouse kidney reveals potential
cellular targets of kidney disease. Science 360, 758-763 (2018).
Giraddi, R.R. et al. Single-Cell Transcriptomes Distinguish Stem Cell State Changes
and Lineage Specification Programs in Early Mammary Gland Development. Cell
Rep 24, 1653-1666 e1657 (2018).

