arXiv:1910.08805v2 [cs.LG] 6 Dec 2019

On Adaptivity in Information-constrained
Online Learning
Siddharth Mitra
Chennai Mathematical Institute
smitra@cmi.ac.in

Aditya Gopalan
Indian Institute of Science
aditya@iisc.ac.in

Abstract
We study how to adapt to smoothly-varying (‘easy’) environments in well-known online
learning problems where acquiring information is expensive. For the problem of label efficient
prediction, which is a budgeted version of prediction with expert advice, we present an online algorithm whose regret depends optimally on the number of labels allowed and Q∗ (the
quadratic variation of the losses of the best action in hindsight), along with a parameter-free
counterpart whose regret depends optimally on Q (the quadratic variation of the losses of all
the actions). These quantities can be significantly smaller than T (the total time horizon),
yielding an improvement over existing, variation-independent results for the problem. We then
extend our analysis to handle label efficient prediction with bandit feedback, i.e., label efficient
bandits. Our work builds upon the framework of optimistic online mirror descent, and leverages second order corrections along with a carefully designed hybrid regularizer that encodes
the constrained information structure of the problem. We then consider revealing action partial monitoring games – a version of label efficient prediction with additive information costs,
which in general are known to lie in the hard class of games having minimax regret of order
T 2/3 . We provide a strategy with an O((Q∗ T )1/3 ) bound for revealing action games, along with
1
one with a O((QT ) /3 ) bound for the full class of hard partial monitoring games, both being
strict improvements over current bounds.

1

Introduction

Online learning is a branch of machine learning that is concerned with the problem of dynamically
optimizing utility (or loss) over time in the face of uncertainty, and gives valuable principles to
reason about acting under uncertainty. The study of online learning has developed along two
concrete lines insofar as modeling the uncertain environment is concerned. On one hand, there is a
rich body of work on learning in stochastic environments from an average-case point of view, such
as i.i.d. multi-armed bandits (see for example the survey of Bubeck et al. [2012]), online learning
in Markov decision processes [Jaksch et al., 2010, Azar et al., 2017], stochastic partial monitoring
[Bartók et al., 2011], etc., which often yields performance guarantees that are strong but can closely
depend on the stochastic models at hand. On the other hand, much work has been devoted to
studying non-stochastic (or arbitrary or adversarial) models of environments from a worst-case
point of view– prediction with experts, bandits and partial monitoring problems to name a few
[Cesa-Bianchi and Lugosi, 2006] – which naturally yields rather pessimistic guarantees.

1

Recent efforts have focused on bridging this spectrum of modeling structure in online learning
problems as arising from non-stochastic environments with loss function sequences exhibiting adequate temporal regularity. These include the derivation of first-order regret bounds or adapting to
loss sequences with low loss of the best action [Allenberg et al., 2006], second-order bounds or adapting to loss sequences with low variation in prediction with experts [Rakhlin and Sridharan, 2012,
Steinhardt and Liang, 2014] and ‘benign’ multi-armed bandits [Hazan and Kale, 2011, Bubeck et al.,
2019, 2017, Wei and Luo, 2018].
In this regard, this paper is an attempt to extend our understanding of adaptivity to low
variation in several standard online learning problems where information comes at a cost, namely
label efficient prediction [Cesa-Bianchi et al., 2005], label efficient bandits and classes of partial
monitoring problems [Bartók et al., 2014]. In the process, we uncover new ways of using existing
online learning techniques within the Online Mirror Descent (OMD) family, and partially make
progress towards a program of studying the impact of ‘easy’ (i.e., slowly-varying) environments in
information-constrained online learning and partial monitoring problems. Our specific contributions
are:
1. For the label efficient p
prediction game
 with expert advice, we give a learning algorithm with
∗
a regret bound of O Q T (log K)/n where Q∗ is the quadratic variation of the best expert,
T is the time horizon of the game, K is the number of experts and n is the bound on label
∗
e 2 ). We follow this up
queries; the bound holds for all regimes except when nQ /T = p
O(K
with an algorithm with an unconditional regret guarantee of O( QT (log K)/n) that holds for
any label query budget n and total quadratic variation Q. Our algorithms are based on
the optimistic OMD framework, but with new combinations of the negative entropy and logbarrier regularization that are best suited to the label efficient game’s information structure.
2. We generalize the results to label efficient bandits where one receives banditp
(i.e., for only
the

∗
chosen expert) feedback at only up to n chosen time instants, and obtain O Q T K/n regret.
We also show that our upper bounds on regret for label efficient prediction and label efficient
bandits are tight in their dependence on Q and n by demonstrating variation-dependent
fundamental lower bounds on regret.
3. We show that adapting to low variation is also possible in the class of hard partial monitoring
games as per the taxonomy of partial monitoring problems by Bartók et al. [2014], where we
1
show an algorithm that achieves O((QT K) /3 ) regret. To the best of our knowledge, this is
the first algorithm exhibiting instance-dependent bounds for partial monitoring.
Problem Setup and Notation A label efficient prediction game proceeds for T rounds with
K ≤ T arms or ‘experts’. In each round (time instant) t, the learner selects an arm it ∈ [K] :=
1, 2, . . . , K. Simultaneously, the adversary chooses a loss vector ℓt ∈ [0, 1]K where ℓt,i is the loss of
arm i at time t. At each round, the learner can additionally choose to observe the full loss vector ℓt ,
provided the number of times it has done so in the past has not exceeded a given positive integer
n ≤ T that represents an information budget or constraint. We work in the oblivious adversarial
setting where ℓt does not depend on the previous actions of the learner i1 , i2 , . . . , it−1 ; this is akin
to the adversary fixing the (worst-possible) sequence of loss vectors in advance. The learner’s goal
is to minimize its expected regret defined as
#
" T
T
X
X
max
E
ℓt,i∗ ,
ℓt,it −
∗
i ∈[K]

t=1

t=1

2

where the expectation is taken with respect to the learner’s randomness. Given a convex function R
over Ω, we denote by DR the Bregman divergence with respect to R defined as DR (x, y) , R(x) −
K
R(y) − h∇R(y), x
p− yi ∀x, y ∈ Ω. For any point u ∈ R , we define the local norm
p at x with respect
⊤
2
to R as kukx = u ∇ R(x)u and the corresponding dual norm as kukx,∗ = u⊤ ∇−2 R(x)u. We
denote by ǫ, the fraction of time we are allowed the full loss vector i.e. ǫ = n/T . The ǫ can be seen as
a way to model the constraint on information defined
The quadratic
variation for a
PT by the problem.
2
1 Ps
ℓ
.
Additionally,
loss vector sequence l1 , . . . , lT is defined by Q = t=1
kℓ
−
µ
k
with
µ
=
s
t
T
s
t=1
2
s
P
P
the quadratic variation of the best arm(s) is Q∗ = Tt=1 (ℓt,i∗ − µT,i∗ )2 where µs,i = 1s st=1 ℓs,i and
PT
i∗ = argmini∈[K] t=1 ℓt,i .

2

Key Ideas and Algorithms

Optimistic OMD The underlying framework behind our algorithms is that of Online Mirror
Descent (OMD)(see, for example Hazan [2016]). The vanilla update rule of (active) mirror descent
can be written as xt = argminx∈Ω {hx, ℓ̃t−1 i + DR (x, xt−1 )}. On the other hand, our updates are:
xt = argmin{hx, ǫmt i + DR (x, x′t )}

(1)

x∈Ω

x′t+1 = argmin{hx, ǫℓ̃t + at i + DR (x, x′t )}

(2)

x∈Ω

where ǫ = n/T , mt corresponds to optimistic 1 estimates of the loss vectors (which we will also
refer to as messages), and at denotes a second order correction that we explicitly define later.
Throughout the paper, ℓ̃t is used to denote an (unbiased) estimate of ℓt that the learner constructs at time t. Optimistic OMD with second order corrections was first studied in Wei and Luo
[2018], whereas its Follow-the-Regularized-Leader (FTRL) counterpart was introduced earlier by
Steinhardt and Liang [2014]. Both of these approaches build upon the general optimistic OMD
framework of Rakhlin and Sridharan [2012] and Chiang et al. [2012]. We define our updates with
scaled losses and messages, where we reiterate that the scaling factor ǫ reflects the limitation on
information. This scaling also impacts our second order corrections which are ≈ ηǫ2 (ℓ̃t − mt )2 . It
is worthwhile to note that this is explicitly different from the ηǫ(ℓ̃t − mt )2 that one may expect
in light of the analysis done in Wei and Luo [2018], or the η(ℓ̃t − mt )2 one would anticipate when
following Steinhardt and Liang [2014]. One may argue that our update rules are equivalent to dividing throughout by ǫ, or put differently, by merging an ǫ into the step size, and this indeed true.
However, the point we would like to emphasize is that no matter how one defines the updates, the
second order correction at can be seen to incorporate the problem dependent parameter ǫ. This
tuning of the second order correction based on ǫ is different from what one observes for the full
information problem [Steinhardt and Liang, 2014] or for bandits [Wei and Luo, 2018]. The second
order corrections represent a further penalty on arms which are deviating from their respective
messages, and these corrections are what enable us to furnish best arm dependent bounds. As
usual, the arm we play is still sampled from the distribution xt given by equation (1).
Challenges & Our Choice of Regularization We briefly discuss the challenges posed by label
efficient prediction and how our choice of regularizer addresses these. When shifting away from the
1 ‘Optimistic’ is used to denote the fact that we would be best off if these estimates were exactly the upcoming
loss. Indeed, if mt were ℓt , it would be equivalent to 1-step lookahead, known to yield low regret.

3

Negentropy:Log-barrier
Regularizer Ratio Used

Reference

Feedback

Bubeck et al. [2017]

Bandit

1 : 2η

Wei and Luo [2018]

Bandit

0:1

Bubeck et al. [2019]

Bandit

Steinhardt and Liang [2014]

Full Information

This work

Label Efficient– Full
Information

This work

Label Efficient– Bandit
Feedback

K/η

: 1/η = K : 1
1:0

1/η

: 1/ηK = K : 1
0:1

Table 1: Choice of regularization (negative entropy vs. logarithmic barrier) in OMD for exploiting
regularity
classical prediction with expert advice problem to any limited feedback (i.e., over experts or arms)
information structure, one usually works with importance-weighted estimates of the loss vectors
constructed using the observed (limited) feedback (called inverse propensity weighting estimation).
This is indeed the case with label efficient prediction, however, the probabilities in the denominator
remain fixed at ǫ, unlike in bandits where the xt,i in the denominator can be arbitrarily small.
Consequently, one may be led to believe that the standard negative entropic regularizer, as is
typically used for full information [Steinhardt and Liang, 2014], will suffice for the more general but
related label efficient prediction. However, maintaining the |η ℓ̃t | ≤ 1 inequality which is standard in
analyses similar to Exp3 imposes a strict bound of η ≤ ǫ. Since the low quadratic variation, on the
other hand, would encourage one to set an aggressive learning rate η, this makes the applicability
of the algorithm rather limited, and even then, with marginal gain. Put crisply, it is desirable
that low quadratic variation should lead an algorithm to choose an aggressive learning rate, and
negative entropy fails to maintain a ‘stability’ property (in the sense of Lemma 14), key in obtaining
OMD regret bounds, in such situations. The log-barrier regularizer, used by Wei and Luo [2018]
√
for bandit feedback certainly guarantees this, however using log-barrier blindly translates to a K
dependence on the number of arms K.
These challenges place label efficient prediction with slowly varying losses in a unique position,
as one requires enough curvature to ensure stability, yet not let this added curvature significantly
hinder exploration. Our solution is to use a hybrid regularizer, that is, a weighted sum of the
negative entropic regularizer and the log-barrier regularizer:
R = 1/η

K
X
i=1

xi log xi − 1/ηK

K
X

log xi

i=1

This regularizer has been of recent interest due to the work of Bubeck et al. [2019], and Bubeck et al.
[2017], but the weights chosen for both components is highly application-specific and tends to reflect
the nature of the problem. As reported above, we only require the log-barrier to guarantee stability,
and therefore associate a small (roughly 1/Kη) weight to it and a dominant mass of 1/η to negative
entropy. This fact is revealed in the analysis where we use the log-barrier component solely to
4

satisfy Lemmas 13 and 14, following which it is essentially dispensed. The additional 1/K factor
part of the log-barrier weight is carefully chosen to exactly cancel the K in
√ the leading K log T
term generated by the log-barrier component, and consequently, not have a K dependence on K
in the final regret bound.
Reservoir Sampling When considering quadratic variation as a measure of adaptivity,
a natural
P
message to pass is the mean of the previous loss history, that is mt = µt−1 = 1/t−1 t−1
ℓ
.
s=1 s However,
the constraint on information prohibits us from having the full history, and we therefore have to
settle for some estimate of the mean. Reservoir sampling, first used in Hazan and Kale [2011], solves
this very problem. Specifically, by allocating roughly k(1 + log T ) rounds for reservoir sampling
(where we choose k to be log T ), reservoir sampling gives us estimates µ̃t such that E[µ̃t ] = µt , and
Var[µ̃t ] = Q/kt. It does so by maintaining a carefully constructed reservoir of size k, the elements
from which are then averaged to output the estimate of the mean. Our message mt at any time t
is the average of the vectors contained in the reservoir S.

2.1

Main Algorithm

Algorithm 1 Adaptive Label Efficient Prediction
PK
PK
1
1: Input: R = 1/η
i=1 xi log xi − /ηK
i=1 log xi ,
2: η , ǫ
3: Initialize: x′1 = argminx∈Ω R(x)
4: for t = 1, 2, . . . , T do
5:
dt ∼ Bern(ǫ)
6:
xt = argminx∈Ω {hx, ǫmt i + DR (x, x′t )}
7:
Play it ∼ xt , and if dt = 1, observe ℓt
t)
8:
Construct ℓ̃t = (ℓt −m
1{dt =1} + mt
ǫ
9:
Let at = 6ηǫ2 (ℓ̃t − mt )2
10:
Update:
E
o
nD
11:
x′t+1 = argminx∈Ω x, ǫℓ̃t + at + DR (x, x′t )
12: end for
Algorithm 1 builds upon the ideas presented above and as stated, is specifically for the label efficient
prediction problem discussed thus far. The algorithms required for the extensions we provide in
section 4 are based upon algorithm 1, although with a few minor differences. We specify those
differences as and when required. Also, in the interest of brevity, we have excluded the explicit
mentioning of the reservoir sampling steps. Before we proceed, we would like to cleanly state our
choice of messages, loss estimates, and second order corrections used and this is done in Table
2. Our messages, for all the sections will be mt,i = µ̃t−1,i . Note that throughout the paper, the
random variable dt = 1 signifies that we ask for feedback at time t, and is 0 otherwise. Additionally,
note that we consider not exceeding the budget of n in expectation, however, there is a standard
reduction to get a high probability guarantee which can be found in Cesa-Bianchi and Lugosi [2006].

5

ℓ̃t,i − mt,i

Problem

Section

Label Efficient
Prediction

2.1, 3

Label Efficient
Bandits

4.1

Revealing Action
Games

4.2.1

(ℓt,i −mt,i )1{dt =1}
α

Hard
Partial Monitoring

4.2.2

(ℓt,i −mt,i )
xt,j

1{dt =1}

6ηǫ2 (ℓ̃t − mt )2

1{dt =1,it =i}

6ηǫ2 xt,i (ℓ̃t − mt )2

(ℓt,i −mt,i )
ǫ
(ℓt,i −mt,i )
ǫxt,i

at

1{dt =1}

6ηα2 (ℓ̃t − mt )2

1{it =j}

0

Regret Bound
e
O

e
O

p



Q∗ T/n

p



Q∗ T K/n

e (Q∗ T )1/3
O



O (QT K)1/3



Table 2: Overview of loss estimates, second order corrections, and the corresponding upper bounds
on regret

3

Results and Analysis

We now give a general regret result for the OMD updates (1) and (2). It spells out the condition
we must maintain to ultimately enable best arm dependent bounds while also demonstrating the
price of limited information on regret, which is the additional 1/ǫ factor. The proofs for all results
in this section appear in the supplementary material.
Lemma 1. For the update rules (1) and (2), if:
hxt − x′t+1 , ǫ(ℓ̃t − mt ) + at i − hxt , at i ≤ 0
then, for all u ∈ Ω, we have:
hxt − u, ℓ̃t i ≤


1
DR (u, x′t ) − DR (u, x′t+1 ) + hu, at i − Pt ,
ǫ

(3)

(4)

where Pt , DR (x′t+1 , xt ) + DR (xt , x′t ) ≥ 0

Note that when at = 0 is employed in the updates (1)-(2), i.e., no second order corrections, the first
term in (3) can directly be handled using Hölder’s inequality (in some norm where R is strongly
convex). Doing so allows us to cancel the unwanted kxt − x′t+1 k2 term using the DR (x′t+1 , xt ) term
in Pt (which follows by strong convexity) while retaining the crucial k(ℓ̃t − mt )k2 variance term.
However, with general second order corrections (at ≥ 0), the key variance term is hu, at i as it
corresponds to the best arm’s second moment under a suitably chosen u and the responsibility of
cancelling the entire first term of (3) now falls upon hxt , at i. Under limited information, negative
entropy is unable to maintain this and we therefore have to incorporate the log barrier function
(also see Lemma 1 in Wei and Luo [2018]). We now state our main result for adaptive label efficient
prediction which bounds the regret of Algorithm 1.
t)
1{dt =1} + mt , ǫ = n/T and η ≤ 1/162K where the
Theorem 2. For at = 6ηǫ2 (ℓ̃t − mt )2 , ℓ̃t = (ℓt −m
ǫ
sequence of messages mt are generated using the reservoir sampling scheme, the expected regret of
algorithm 1 satisfies the following:

E [RT ] ≤

log K + log T
+ 18ηQ∗ .
ǫη
6

∗

2

Furthermore, if ǫQ ≥ 1458K log KT , then E [RT ] = O
η.

q

Q∗ T log K
n



with an optimal choice of

√
∗
Consider
√ a concrete example of a game played for time T , where we anticipate Q ≈ T and
n ≈ T . In this scenario, if we were to run the standard label efficient prediction
algorithm as

given in Cesa-Bianchi et al. [2005], we would get a regret bound of O T 3/4 ; following an FTRL
with negative entropy2 -based strategy would be inapplicable
√ in this setting due to the constraint we
highlight in section 2, however, Algorithm 1 would incur T regret – a marked improvement. Also,
note that because of the full vector feedback, it is not required to allocate any rounds exclusively for
reservoir sampling. This fact is reflected in not having to incur any additive penalty for reservoir
sampling.
Theorem 2 is slightly restricted in scope, due to the lower bound required on ǫQ∗ , in its ability
to attain the optimal regret scaling with quadratic variation. We now proceed to discuss what
canpbe said without any constraint on ǫQ∗ . Specifically, we will provide an algorithm obtaining
O( QT log K/n) regret under all scenarios, the trade-off however being that we will be penalized by
Q instead of Q∗ . In settings where the ǫQ∗ condition does not hold and incurring regret in terms of
Q is not unfavourable (as an extreme example, consider constant variation on all arms, with very
limited feedback) the strategy below will certainly be of use. The algorithm, again based on OMD,
foregoes second order corrections and has updates defined by:
xt = argmin{hx, ǫmt i + DR (x, x′t )}

(5)

x∈Ω

x′t+1 = argmin{hx, ǫℓ̃t i + DR (x, x′t )}

(6)

x∈Ω

Without second order corrections, the ǫ term can be folded into the regularizer and the updates
reduce to the ones studied in Rakhlin and Sridharan [2012]. For updates (5) and (6), we have
the following analogue of Lemma 1, and then consequently, the analogue of Theorem 2. We
include these here in the interest of completeness, but equivalent statements can be found in
Rakhlin and Sridharan [2012].
Lemma 3. For any u ∈ Ω, updates (5) and (6) guarantee that:

1
DR (u, x′t ) − DR (u, x′t+1 )
hxt − u, ℓ̃t i ≤
ǫ


+ hxt − x′t+1 , ǫℓ̃t − ǫmt i − DR (x′t+1 , xt ) − DR (xt , x′t ) .

P
(ℓt −mt )
Theorem 4. For R = η1 K
1{dt =1} + mt , ǫ = n/T and η > 0, where the
i=1 xi log xi , ℓ̃t =
ǫ
sequence of messages are generated using the reservoir sampling scheme, Algorithm 1 with at = 0
yields:
ηQ
log K
+
.
E[RT ] ≤
ηǫ
2

p
QT log K/n bound.
Optimally tuning η yields a O
Trying to deeper understand how the constraint of Theorem 2 can be sidestepped to yield a universal
algorithm dependent on Q∗ remains a direction of future interest.
2 As

done in Steinhardt and Liang [2014] for prediction with experts

7

Parameter-Free Algorithms Note that we have assumed knowledge of T , Q and Q∗ when
optimising for the fixed step size η in the above discussion. This is often not possible and we
now briefly discuss the extent to which we can obtain parameter-free algorithms. In Theorem 5
we claim that we can choose η adaptively for the Q dependent bound we present in Theorem 4
and discuss this in Appendix B3 . It remains open whether a Q∗ dependent bound (or in general,
any non-monotone dependent bound) can be made parameter free for even the standard prediction
with expert advice problem. The challenge is essentially that our primary tool to sidestep prior
knowledge of a parameter, the doubling trick, is inapplicable for non-monotone quantities.
Even freeing algorithms from prior knowledge of non-decreasing arm dependent quantities, such
as maxi Qi remains open for limited information setups (i.e. anything outside prediction with expert
advice) due to the lack of a clear auxiliary term one can observe. In Algorithm 2, we proceed in
epochs (or rounds) such that η remains fixed per epoch. Denote by ηα the value of η in epoch α.
We will write Tα for the first time instance in epoch α.
Theorem 5. For the conditions mentioned in Theorem 4, Algorithm 2 (a parameter free algorithm)
achieves:
p

p
QT log K/n +
E[RT ] ≤ O
log K .
Algorithm 2 Parameter Free Adaptive Label Efficient Prediction
1:
2:
3:
4:
5:
6:
7:
8:

√

K
Initialize: η = 2 log
, T1 = 1, t = 1.
ǫ
for α = 1, 2, . . . do
x′t = argminx∈Ω R(x)
while t ≤ T do
Draw dt ∼ Bern(ǫ), update xt according to (5)
Play it ∼ xt and if dt = 1, observe ℓt
Update x′t+1 according to (6)
PK
Pt
K
then
if s=Tα i=1 (ℓ̃s,i − ms,i )2 ≥ ǫ22log
η2
α−1

9:
10:
11:
12:
13:
14:

4

η ← η/2, Tα+1 ← t, t ← t + 1
break
end if
t←t+1
end while
end for

Adapting to Slowly Varying Losses in Other InformationConstrained Games

We will now investigate exploiting the regularity of losses in a variety of other settings with implicit/explicit information constraints. We will first focus on bandit feedback, following which we
will briefly discuss partial monitoring. The proofs for this section can be found in the supplementary
material.
3 Note that similarly to Hazan and Kale [2011] we still assume knowledge of T , but this can be circumvented using
standard tricks.

8

4.1

Label Efficient Bandits

The change here is in the feedback information the learner receives when asking for information.
Instead of receiving the full loss vector, the learner now only receives the loss of the played arm it ,
i.e. the it th coordinate of ℓt . We will continue to use the same update rules (1) and (2) here. What
will change
PK most importantly is the regularizer which will now solely be the log barrier regularizer
R = η1 i=1 log x1i . Note that the coefficient of log barrier is also 1/η instead of the earlier 1/ηK . The
loss estimates and second order corrections will also change and these are all mentioned in Table 2.
We will now state the main theorem for label efficient bandits. Most of the analysis is similar to
Theorem 2, but we do highlight the differences in Appendix C.1 in the supplementary material.
t
1{dt =1,it =i} + mt,i , ǫ = n/T and η ≤ 1/162K
Theorem 6. For at,i = 6ηǫ2 xt,i (ℓ̃t − mt )2 , ℓ̃t = ℓtǫx−m
t,i
where the sequence of messages mt are given by reservoir sampling, the regret of algorithm 1 modified
for label efficient bandits satisfies:

E [RT ] ≤

K log T
+ 18ηQ∗ + K(log T )2 .
ǫη

Note that since we are in the bandit feedback setting, we now reserve certain rounds solely for
reservoir sampling. This is reflected in the additive K(log T )2 term in regret. There are now
(log T )2 rounds allotted to each of the K arms, hence the term. There will also be a few minor
changes in the algorithm primarily corresponding to the appropriate execution of reservoir sampling
for bandit feedback.

4.2

Partial Monitoring

We will now discuss adaptivity in partial monitoring games. A partial monitoring game G = (L, H)
is defined by a pair L and H of K × N matrices. Both matrices are visible to the learner and the
adversary. At each time t, the learner selects a row (or arm, action) it ∈ [K] and the opponent
chooses a column yt ∈ [N ]. The learner then incurs a loss of ℓ(it , yt ) and observes feedback h(it , yt ) 4 .
When clear from context, we will denote by ℓ(i, t) the loss of arm i at time t and by h(i, t) the
feedback of arm i at time t. The expected regret here is:
" T
#
T
X
X
max
E
ℓ(it , yt ) −
ℓ(i∗ , yt )
∗
i ∈[K]

4.2.1

t=1

t=1

Revealing Action Partial Monitoring

First consider the class of partial monitoring games with a revealing action– that is, suppose H
has a row with N distinct elements. It is clear that if the learner plays this row, they can receive
full information regarding which column the adversary has chosen. The cost of playing this row
very well defines which class this game falls into (see for example the spam game discussed in
Lattimore and Szepesvári [2019]), but in general, the minimax regret of these games scales as T 2/3
and these games therefore fall in the hard class of games. Revealing action games and label efficient
prediction differ in the way they charge the learner for information. For label efficient prediction,
4 We are considering oblivious adversarial opponents as before and further take entries of H to be in [0, 1]. The
assumption on the entries is not major since the learner can always appropriately encode the original entries by
numbers.

9

we have seen that there is a fixed number of times (budget) one can obtain information, but there
is no additional cost of doing so. In revealing action games however, there is a loss associated to
each time the learner asks for information. We will now show a reduction from this class of games
to the standard label efficient prediction we discussed in sections 2 and 3.
Let the cost of playing the revealing action be c = maxb∈[N ] L(a, b) where a ∈ [K] is the revealing
action row of L. Suppose α is the probability with which we play the revealing action at each round.
α here corresponds to the ǫ from earlier sections, however α is now a free parameter5 . We will still
run reservoir sampling in the background as before to obtain the optimistic messages mt . Now, in
this light, the following theorem can be seen to follow from Theorem 2.
t)
Theorem 7. For at = 6ηα2 (ℓ̃t − mt )2 , ℓ̃t = (ℓt −m
1{dt =1} + mt , α ≤ 1 and η ≤ 1/162K where the
α
sequence of messages mt are generated using reservoir sampling, the expected regret of algorithm
1 modified for revealing action partial monitoring games with loss entries in [0, 1] satisfies the
following:
log K + log T
+ 18ηQ∗ + αT c + (log T )2 .
E [RT ] ≤
αη


1/3
.
Optimising the parameters η and γ yields a bound of O (Q∗ T log K)

Note that now, we will again have to allocate rounds specifically for reservoir sampling as was the
case with bandits, hence the additive (log T )2 term. The added αT c corresponds to the cost paid
for playing the revealing action.
4.2.2

Hard Partial Monitoring Games

We now turn to the hard class of partial monitoring games. As mentioned in Piccolboni and Schindelhauer
[2008] and Cesa-Bianchi and Lugosi [2006], we will assume that there exists a matrix W such that
L = W H. This is not an unreasonable assumption, as if this does not hold for the given L and H,
one can suitably modify (see Piccolboni and Schindelhauer [2008]) L and H to ensure L′ = W ′ H ′ ,
and if this condition continues to fail after appropriate modifications, Piccolboni and Schindelhauer
[2008] show that sublinear regret
P is not possible for the original G = (L, H). Observe that L = W H
will allow us to write ℓ(i, t) = j∈[K] w(i, j)h(j, t). Therefore:

P
1{it =j}
w(i,
j)h(j,
t)
−
m
t,i
j∈[K]
+ mt,i
ℓ̃(i, t) =
xt,j
is now an unbiased estimate of ℓ(i, t). mt is still the optimistic messages where mt,i corresponds
to an estimate of the average loss incurred by arm i till time t. These will still be obtained using
reservoirP
sampling and we will maintain a separate reservoir for each arm i ∈ [K]. Note that since
ℓ(i, t) = j∈[K] w(i, j)h(j, t) and the matrices L, W , and H are all visible to the learner, playing
action r at time t for example will allow the learner to observe the rth component w(i, r)h(r, t)
of the loss for each action i ∈ [K]. Therefore, by maintaining an estimate (reservoir) for each
component, we will be able to maintain an estimate for each arm.
Now, for these games we will use optimistic OMD without second order corrections [Rakhlin and Sridharan,
2012, Chiang et al., 2012]. The update rules are the same as equations (5) and (6) without the ǫ
term. Additionally, the arm we play will be sampled from wt where wt = (1 − γ)xt + γ1. The forced
5 Note

that the update rules (1) and (2) will now also have α in place of ǫ

10

exploration
P is necessary to allow a minimum mass on all arms. Note that the structure defined by
ℓ(i, t) = j∈[K] w(i, j)h(j, t) says that we potentially have to play all arms to maintain unbiased
estimates of any arm. This forced exploration is unavoidable (see Cesa-Bianchi and Lugosi [2006]).
Theorem 8. Given G = (L, H) with loss entries in [0, 1], a matrix W such that L = W H, η > 0
PK
and R = 1/η i=1 xi log xi , the update rules (5) and (6) (omitting the ǫ) mixed with γ forced
exploration satisfies: E[RT ] ≤ logη K + KQη
2γ + γT . Optimising for η and γ gives us a regret of
O((QT K) /3 ) .
1

Note here the strong dependence on K which is an outcome of each ℓ(i, t) being dependent on
potentially all (K) other actions.

5

Lower Bounds

We now prove explicit quadratic variation-based lower bounds for (standard) label efficient prediction and label efficient bandits. By capturing both the constraint on information as well as the
quadratic variation of the loss sequence, our lower bounds generalize and improve upon existing
lower bounds. We extend the lower bounds for label efficient prediction to further incorporate
the quadratic variation of the loss sequence and enhance the quadratic variation dependent lower
bounds for multi-armed bandits to also include the constraint on information by bringing in the
number of labels the learner can observe (n).
Our bounds will be proven in a 2-step manner similar to that in Gerchinovitz and Lattimore
[2016]. The main feature of step 1 (the Lemma step) is that of centering the Bernoulli random
variables around a parameter α instead of 1/2, which leads the regret bound to involve the α(1 − α)
term corresponding to the variance of the Bernoulli distribution. Step 2 (the Theorem step) builds
upon step 1 and shows the existence of a loss sequence belonging to an α-variation ball (defined
below) which also incurs
PT regret of 2the same order. Recall the quadratic variation for a given
loss sequence: Q = t=1 kℓt − µT k2 ≤ T K/4. Now, for α ∈ [0, 1/4] define an α-variation ball as:
Vα , {{ℓt }Tt=1 : Q/T K ≤ α}. All of the proofs for this section have been postponed to Appendix D
in the supplementary material.
p
/Kn)
Theorems
10 and 12, after incorporating Q ≤ αT K give us lowerp
bounds of Ω( QT log(K−1)
p
p
and Ω( QT/n) respectively. Our corresponding upper bounds are O( QT log K/n) and O( QT K/n) .6
Comparing the two tells us that our strategies are optimal in their√dependence on Q and on the
constraint in information indicated by n. There is however a gap of K . This gap was mentioned
in Gerchinovitz and Lattimore [2016] for the specific case of the multi-armed
bandit problem, and
p
was closed recently in Bubeck et al. [2017]. Barring the easy to see Q log K/K lower bound for
prediction with expert advice (which is also what Theorem 10 translates to for n = T ), we are
unaware of other fundamental Q based lower bounds for prediction
with expert advice. The upper
√
bounds for prediction with expert advice however are of O( √Q log K) ([Hazan and Kale, 2010],
[Steinhardt and Liang, 2014] etc.), and this again suggests the K gap. Closing this for prediction
with expert advice, label efficient prediction and for label efficient bandits remains open, as does
the question of finding Q∗ dependent lower bounds.
6 We upper bound all of our Q∗ dependent upper bounds by Q so as to consistently compare with the lower bounds.
Note that Q∗ and Q are in general incomparable and all that be said is that Q∗ ≤ Q.

11

Label Efficient Prediction (Full Information) As mentioned previously, the main difference
here from the standard label efficient prediction lower bound proof [Cesa-Bianchi et al., 2005] is
that of centering the Bernoulli random variables around a parameter α which is responsible for
ultimately bringing out the quadratic variation of the sequence. Our main statements for label
efficient prediction are as follows.
2

Lemma 9. Let α ∈ (0, 1), K ≥ 2, T ≥ n ≥ c log(K−1)
. Then, for any randomized strat1−α
egyqfor the label efficient prediction problem, there exists a loss sequence under which E[RT ] ≥
√ √
for c = e/ 5(1+e) where expectation is taken with respect to the internal
cT α(1−α) log(K−1)
n
randomization available to the algorithm and the random loss sequence.
h
n
o i
T 8 log(K−1)
Theorem 10. Let K ≥ 2, T ≥ n ≥ max{32 log(K−1), 256 log T } and α ∈ max 32 log
, 41 .
,
n
n
Then, for any randomized strategy for the label efficient prediction problem, max{ℓt }∈vα E[RT ] ≥
q
where expectation is taken with respect to the internal randomization available to
0.36T α log(K−1)
n
the algorithm.
Label Efficient Bandits The main difference here from standard bandit proofs is that now, the
totalPnumber of revealed labels (each label is now a single loss vector entry) cannot exceed n. Hence,
the i∈[K] Ni (t − 1) term which appears in the analysis is upper bounded by n (where Ni (t − 1)
denotes the pulls of arm i up till time t − 1).
Lemma 11. Let α ∈ (0, 1), K ≥ 2, T ≥ n ≥ K/(4(1 − α)). Then, for any randomized
p strategy for
the label efficient bandit problem, there exists a loss sequence under which E[RT ] ≥ T8 α(1 − α)K/n
where expectation is taken with respect to the internal randomization available to the algorithm and
the random loss sequence.
h
n
o i
T 8K
,
Theorem 12. Let K ≥ 2, T ≥ n ≥ max{32K, 384 log T } and α ∈ max 2c log
, 41
n
n
√
with c = (4/9)2 (3 5 + 1)2 ≤ 12. Then,
q for any randomized strategy for the label efficient bandit
problem, max{ℓt }∈vα E[RT ] ≥ 0.04T αK
n where expectation is taken with respect to the internal
randomization available to the algorithm.

6

Conclusion

We consider problems lying at the intersection of 2 relevant questions in online learning—how does
one adapt to slowly varying data, and what best can be done with a constraint on information. As
far as we know, the proposed algorithms are the first to jointly address both of these questions.
There remain plenty of open problems in the area. Seeing to what extent universal Q∗ dependent
algorithms can be obtained in starved information settings is a direction of future interest, as is
closing the gap in K highlighted in Section 5. Moreover, extending the notion of adaptivity to
partial monitoring games to consider locally observable games and even more interestingly, locally
observable sub-games within hard games also remains open. Higher order lower bounds for partial
monitoring games have also not been studied and one wonders to what extent adaptivity can help
in partial monitoring.

12

References
Chamy Allenberg, Peter Auer, László Györfi, and György Ottucsák. Hannan consistency in on-line
learning in case of unbounded losses under partial monitoring. In International Conference on
Algorithmic Learning Theory, pages 229–243. Springer, 2006.
Mohammad Gheshlaghi Azar, Ian Osband, and Rémi Munos. Minimax regret bounds for reinforcement learning. In Proceedings of the 34th International Conference on Machine Learning-Volume
70, pages 263–272. JMLR. org, 2017.
Gábor Bartók, Dávid Pál, and Csaba Szepesvári. Minimax regret of finite partial-monitoring games
in stochastic environments. In Proceedings of the 24th Annual Conference on Learning Theory,
pages 133–154, 2011.
Gábor Bartók, Dean P. Foster, Dávid Pál, Alexander Rakhlin, and Csaba Szepesvári. Partial
monitoring—classification, regret bounds, and algorithms. Mathematics of Operations Research,
39(4):967–997, 2014.
Amir Beck and Marc Teboulle. Mirror descent and nonlinear projected subgradient methods for
convex optimization. Oper. Res. Lett., 31(3):167–175, 2003.
Stéphane Boucheron, Gábor Lugosi, and Pascal Massart. Concentration inequalities: A nonasymptotic theory of independence. 01 2013.
Sébastien Bubeck, Nicolo Cesa-Bianchi, et al. Regret analysis of stochastic and nonstochastic multiarmed bandit problems. Foundations and Trends® in Machine Learning, 5(1):1–122, 2012.
Sébastien Bubeck, Michael B. Cohen, and Yuanzhi Li. Sparsity, variance and curvature in multiarmed bandits. In ALT, 2017.
Sébastien Bubeck, Yuanzhi Li, Haipeng Luo, and Chen-Yu Wei. Improved path-length regret
bounds for bandits. CoRR, abs/1901.10604, 2019.
Nicolo Cesa-Bianchi and Gabor Lugosi. Prediction, Learning, and Games. Cambridge University
Press, New York, NY, USA, 2006. ISBN 0521841089.
Nicolo Cesa-Bianchi, Gábor Lugosi, and Gilles Stoltz. Minimizing regret with label efficient prediction. IEEE Transactions on Information Theory, 51(6):2152–2162, 2005.
Chao-Kai Chiang, Tianbao Yang, Chia-Jung Lee, Mehrdad Mahdavi, Chi-Jen Lu, Rong Jin, and
Shenghuo Zhu. Online optimization with gradual variations. In COLT, volume 23 of JMLR
Proceedings, pages 6.1–6.20. JMLR.org, 2012.
Yuan-Shih Chow and Henry Teicher. Probability theory : independence, interchangeability martingales / yuan shih chow, henry teicher. SERBIULA (sistema Librum 2.0), 01 1980.
Sébastien Gerchinovitz and Tor Lattimore. Refined lower bounds for adversarial bandits. In NIPS,
pages 1190–1198, 2016.
Elad Hazan. Introduction to online convex optimization. Foundations and Trends in Optimization,
2:157–325, 01 2016. doi: 10.1561/2400000013.
13

Elad Hazan and Satyen Kale. Extracting certainty from uncertainty: regret bounded by variation
in costs. Machine Learning, 80(2):165–188, Sep 2010.
Elad Hazan and Satyen Kale. Better algorithms for benign bandits. J. Mach. Learn. Res., 12:
1287–1311, July 2011. ISSN 1532-4435.
Thomas Jaksch, Ronald Ortner, and Peter Auer. Near-optimal regret bounds for reinforcement
learning. Journal of Machine Learning Research, 11(Apr):1563–1600, 2010.
Tor Lattimore and Csaba Szepesvári. Cleaning up the neighborhood: A full classification for
adversarial partial monitoring. In ALT, volume 98 of Proceedings of Machine Learning Research,
pages 529–556. PMLR, 2019.
Antonio Piccolboni and Christian Schindelhauer. Discrete prediction games with arbitrary feedback
and loss (extended abstract). pages 208–223, 01 2008. doi: 10.1007/3-540-44581-1_14.
Alexander Rakhlin and Karthik Sridharan. Online learning with predictable sequences. arXiv
preprint arXiv:1208.3728, 2012.
Jacob Steinhardt and Percy S. Liang. Adaptivity and optimism: An improved exponentiated
gradient algorithm. In ICML, 2014.
Chen-Yu Wei and Haipeng Luo. More adaptive algorithms for adversarial bandits. In Conference
On Learning Theory, COLT 2018, 2018.

14

A

Label Efficient Prediction Main Proofs

In this section, we will prove Lemma 1 and Theorem 2.
Proof of Lemma 1. Let Ω be a convex compact set in RK , R be a convex function on Ω, x′ be
an arbitrary point in Ω, c be any point in RK , and x∗ = argminx∈Ω {hx, ci + DR (x, x′ )}. Then, for
any u ∈ Ω, we have (see for example [Beck and Teboulle, 2003]) :
hx∗ − u, ci ≤ DR (u, x′ ) − DR (u, x∗ ) − DR (x∗ , x′ )
Applying this on our update rules (1) and (2) gives us:
hxt − x′t+1 , ǫmt i ≤ DR (x′t+1 , x′t ) − DR (x′t+1 , xt ) − DR (xt , x′t ).

(7)

hx′t+1 − u, ǫℓ̃t + at i ≤ DR (u, x′t ) − DR (u, x′t+1 ) − DR (x′t+1 , x′t );

(8)

and

where we chose u = x′t+1 when applying it to update rule (1). Now observe that:
hxt − u, ǫℓ̃t i

= hxt − u, ǫℓ̃t + at i − hxt , at i + hu, at i

= hxt − x′t+1 , ǫℓ̃t + at i − hxt , at i + hx′t+1 − u, ǫℓ̃t + at i + hu, at i

= hxt − x′t+1 , ǫℓ̃t + at − ǫmt i − hxt , at i + hx′t+1 − u, ǫℓ̃t + at i + hxt − x′t+1 , ǫmt i + hu, at i

(9)

Combining the above inequalities with equation (3) gives us
hxt − u, ℓ̃t i ≤


1
DR (u, x′t ) − DR (u, x′t+1 ) + hu, at i − Pt ,
ǫ

(10)

where Pt , DR (x′t+1 , xt ) + DR (xt , x′t ) ≥ 0 (by non-negativity of Bregman divergence).
We will now proceed to prove a series of lemmas which will build towards the proof of Theorem 2
(see also Appendix B in Wei and Luo [2018])

Lemma 13. For some radius r > 0, define the ellipsoid Ex (r) = u ∈ RK : ku − xkx ≤ r . If
x′ ∈ Ex (1), η ≤
all u ∈ RK .

1
81K

, then, for all i ∈ [K], we have

x′i
xi

≤

10/9.

Additionally, kukx′ ≥

9
10

kukx for



P
1
1
1
′
2
(x
−
x
)
+
≤ 1 which
Proof of Lemma 13. As x′ ∈ Ex (1), we can say that K
2
i
i
i=1 η
xi
Kxi
PK 1 (x′i −xi )2
√
|x′i −xi |
1
≤ 1. Hence, we have xi ≤ ηK ∀i. Now, since η ≤ 81K
further implies i=1 ηK x2
, the
i
r


P
K
first part of the lemma follows. Further observe kukx′ = η1 i=1 u2i x1′ + Kx1 ′2 ≥ 101/9 kukx =
i

9
10

kukx .

15

i

Lemma 14. Let xt and x′t correspond to our update rules (1) and (2) and suppose η ≤

if ǫ(ℓ̃t − mt ) + at

xt ,∗

≤

1
3,

1
81K .

Then,

′

we have x ∈ Ex (1).

Proof of Lemma 14. Let us rewrite our update rules (1) and (2) in the following way:

x′t+1

xt = argmin Ft (x) where Ft (x) = {hx, ǫmt i + DR (x, x′t )}
x∈Ω
n
o
′
′
= argmin Ft+1
(x) where Ft+1
(x) = hx, ǫℓ̃t + at i + DR (x, x′t )
x∈Ω

′
′
Because of the convexity of Ft′ , to prove our claim, it is sufficient to show that Ft+1
(u) ≥ Ft+1
(xt )
for all points u on the boundary of the ellipsoid. By Taylor’s theorem, we know that ∃ ξ on the line
segment between u and xt such that:

1
′
′
′
′
Ft+1
(u) = Ft+1
(xt ) + h∇Ft+1
(xt ), u − xt i + (u − xt )⊤ ∇2 Ft+1
(ξ)(u − xt )
2
′
= Ft+1
(xt ) + hǫ(ℓ̃t − mt ) + at , u − xt i + h∇Ft (xt ), u − xt i
1
+ (u − xt )⊤ ∇2 R(ξ)(u − xt )
2
1
2
′
≥ Ft+1 (xt ) + hǫ(ℓ̃t − mt ) + at , u − xt i + ku − xt kξ
2
81
2
′
≥ Ft+1
(xt ) + hǫ(ℓ̃t − mt ) + at , u − xt i +
ku − xt kxt
200
1
′
≥ Ft+1
(xt ) − ǫ(ℓ̃t − mt ) + at
ku − xt kxt + ku − xt k2xt
3
xt ,∗
1
′
(as ku − xt kxt = 1)
+
= Ft+1 (xt ) − ǫ(ℓ̃t − mt ) + at
3
xt ,∗
′
≥ Ft+1
(xt ).
Where the first inequality follows from the optimality of xt , the second from Lemma (13), the third
from Hölder’s inequality, and the last by the assumption of this lemma.

Lemma 15. Let xt and x′t be defined as in our update rules (1) and (2). Additionally, suppose
η≤

1
81K .

Then, if ǫ(ℓ̃t − mt ) + at

xt ,∗

≤ 31 , we have that x′t+1 − xt

xt

≤ 3 ǫ(ℓ̃t − mt ) + at

xt ,∗

.

′
Proof of Lemma 15. We will begin by defining Ft (x) and Ft+1
(x) as above. Then we have that:

′
′
Ft+1
(xt ) − Ft+1
(x′t+1 ) = hxt − x′t+1 , ǫ(ℓ̃t − mt ) + at i + Ft (xt ) − Ft (x′t+1 )

≤ hxt − x′t+1 , ǫ(ℓ̃t − mt ) + at i
≤ xt − x′t+1

xt

16

ǫ(ℓ̃t − mt ) + at

xt ,∗

(11)

By Taylor’s theorem and the optimality of x′t+1 , we again have that,
1
′
′
′
′
(ξ)(xt − x′t+1 )
Ft+1
(xt ) − Ft+1
(x′t+1 ) = h∇Ft+1
(x′t+1 ), xt − x′t+1 i + (xt − x′t+1 )⊤ ∇2 Ft+1
2
1
2
≥
xt − x′t+1 ξ
2
1
2
xt − x′t+1 x
≥
(12)
t
3
where the last inequality again follows using the same arguments as done in Lemma (14). Combining
(11) and (12) proves the claimed result.

Lemma 16. For at = 6ηǫ2 (ℓ̃t − mt )2 ,
ǫ(ℓ̃t − mt ) + at

xt ,∗

≤

ℓ̃t =

(ℓt −mt )
ǫ

1
3.

1{dt =1} + mt , η ≤

1
162K

we have that

Proof of Lemma 16.

ǫ(ℓ̃t − mt ) + at

2
xt ,∗

=

K
X

1
i=1 xi

2

η
ǫ(ℓ̃t,i − mt,i ) + 6ηǫ2 (ℓ̃t,i − mt,i )2
1
+ Kx2
i

K
i
X
ǫ2 (ℓ̃t,i − mt,i )2 h
1 + 12ηǫ(ℓ̃t,i − mt,i ) + 36η 2 ǫ2 (ℓ̃t,i − mt,i )2
=η
1
1
xi + Kx2
i=1
i

≤ 2ηǫ2
≤ 2η
1
≤
9

K
X
i=1

(ℓ̃t,i − mt,i )2 xi

The above inequalities follow by observing that |ǫ(ℓ̃t,i − mt,i )| = |(ℓt − mt )1{dt =1} | ≤ 1 along with
the assumption on η.

We are now in a position to prove Theorem 2.
Proof of Theorem 2. We will first show that our choices of loss vectors, messages, and corrections
obey the condition of Lemma 1. To this end, observe that:

17

hxt − x′t+1 , ǫ(ℓ̃t − mt ) + at i ≤ xt − x′t+1

xt

ǫ(ℓ̃t − mt ) + at

≤ 3 ǫ(ℓ̃t − mt ) + at
≤ 3η

K
X
i=1

≤ 6ηǫ2

xt ,∗

2
xt ,∗

i
ǫ2 (ℓ̃t − mt )2 h
2 2
2
1
+
12ηǫ(
ℓ̃
−
m
)
+
36η
ǫ
(
ℓ̃
−
m
)
t
t
t
t
1
1
xi + Kx2
i

K
X
i=1

xt,i (ℓ̃t,i − mt,i )2 = hxt , at i

where the first inequality follows from Hölder’s inequality, the second from Lemma (15), and the
last 2 are as done in the proof of Lemma 16. We can therefore proceed to sum both sides of the
result of Lemma 1 over t to get:
" T
#
T
X

1X 
E
hxt − u, ℓ̃t i ≤
E DR (u, x′t ) − DR (u, x′t+1 ) + hu, at i
ǫ
t=1
t=1
Now we can see that the first 2 terms on the right hand side will telescope to yield a remaining
1
1 instead of simply ei∗ so as to ensure that
term of DR (u, x′1 ). We will pick u = (1 − T1 )ei∗ + KT
the log barrier component is well defined. Hence we will have:
" T
" T
#!
#
X
X
1
′
DR (u, x1 ) + E
E
hu, at i
(13)
hxt − u, ℓ̃t i ≤
ǫ
t=1
t=1
DR (u, x′1 ) = R(u) − R(x′1 ) − h∇R(x′1 ), u − x′1 i
log T
log K
log K + log T
= R(u) − R(x′1 ) ≤
+
=
η
η
η
PT
This choice of u will also introduce an additional term in regret of E T1 t=1 hx′1 − ei∗ , ℓ̃t + at i, but
as can be seen in Wei and Luo [2018], this term is O(1) .
#
" T
#
" T
X
X (ℓt,i∗ − mt,i∗ )2
1{dt =1}
(14)
E
hu, at i = 6ηǫ2 E
ǫ2
t=1
t=1
" T
##
" T
T
X
X
X
2
2
2
≤ 18ηǫ
(15)
(µt,i∗ − µt−1,i∗ ) + E
(ℓt,i∗ − µt,i∗ ) +
(µt−1,i∗ − µ̃t−1,i∗ )
t=1

t=1

t=1

The first and third terms of (15) can be bounded using Lemmas 10 and 11 from [Hazan and Kale,
2011] and are order O(QT,i∗ + 1). The middle term above is O(1) from Lemma 18 in [Wei and Luo,
2018]. Therefore, substituting everything back into (13), we have that:
E [RT ] ≤

log K + log T
+ 18ηQ∗
ǫη
18

(16)

Proof of Lemma 3. We will proceed similarly to the proof of Lemma 2 and rewrite (9) with
at = 0 :
hxt − u, ǫℓ̃t i = hxt − x′t+1 , ǫℓ̃t − ǫmt i + hx′t+1 − u, ǫℓ̃t i + hxt − x′t+1 , ǫmt i
We will again use the inequalities (7) and (8) (with at = 0) to get:
hxt − u, ǫℓ̃t i ≤ hxt − x′t+1 , ǫℓ̃t − ǫmt i + DR (u, x′t ) − DR (u, x′t+1 ) − DR (x′t+1 , xt ) − DR (xt , x′t )
which proves the lemma after rearranging the ǫ .
Proof of Theorem 4.
ǫhxt − u, ℓ̃t i ≤ DR (u, x′t ) − DR (u, x′t+1 ) + hxt − x′t+1 , ǫℓ̃t − ǫmt i − DR (x′t+1 , xt ) − DR (xt , x′t )
1
η
≤ DR (u, x′t ) − DR (u, x′t+1 ) + kxt − x′t+1 k22 + kǫℓ̃t − ǫmt k22 − DR (x′t+1 , xt )
2η
2
2
ηǫ
≤ DR (u, x′t ) − DR (u, x′t+1 ) +
kℓ̃t − mt k22
2
where the first inequality follows from Lemma 3, the second one follows from Hölder’s inequality
and the non-negativity of the Bregman divergence, and the final one from the strong convexity of
negative entropy in the ℓ2 norm. We therefore have that hxt − u, ℓ̃t i ≤ 1ǫ DR (u, x′t ) − DR (u, x′t+1 ) +

ηǫ2
2
2 kℓ̃t − mt k2 . Now summing both sides over t will yield:
T
X
t=1

T

hxt − u, ℓ̃t i ≤

DR (u, x′1 ) ηǫ X
+
kℓ̃t − mt k22
ǫ
2 t=1
T

≤

(17)

K

ηǫ X X
log K
(ℓ̃t,i − mt,i )2
+
ηǫ
2 t=1 i=1

(18)

Now, substituting the stated estimators, unravelling the right hand side similar to the analysis of
(15) and taking expectation will yield the logηǫK + ηQ
2 upper bound.

B

Parameter-Free Algorithms

We will proceed similarly to Wei and Luo [2018] in epochs where η remains fixed per epoch. Let
ηα be the value of η in epoch α. We write Tα for the first time instance in epoch α. To simplify
things, we still assume knowledge of T , however this assumption can be sidestepped.
Proof of Theorem 5. We start from (18) and get the following for some epoch α:
"
#
Tα+1 −1
T
K
X
ηα ǫ2 X X
1 log K
2
(ℓ̃t,i − mt,i )
+
hxt − u, ℓ̃t i ≤
ǫ
ηα
2 t=1 i=1
t=Tα


log K
=O
ǫηα
19

We can consequently write:
T
X
t=1

∗

hxt − u, ℓ̃t i ≤

α
X

α=0

O



log K
ǫηα




 ∗p
≤ O 2α log K

where α∗ is the epoch at T . Now we also know that epoch α∗ − 1 has completed, hence:
Tα
∗ −1
X

K
X

t=Tα∗ −1 i=1

(ℓ̃t,i − mt,i )2 ≥

 ∗
2 log K
= Ω 22α
2
2
ǫ ηα∗ −1

So, we can write the entire bound as
T
X
t=1

v
u

p
u
α

log K ≤ O tlog K
hxt − u, ℓ̃t i ≤ O 2


∗

Tα∗
X

K
X

t=Tα∗ −1 i=1



(ℓ̃t,i − mt,i )2 


v
u
T X
K
u
X
(ℓ̃t,i − mt,i )2 
≤ Otlog K
t=1 i=1

P
√
Also consider the case when α∗ = 0, where Tt=1 hxt − u, ℓ̃t i ≤ log K . Combining the above 2
cases, we get:
v

u
K
T X
T
u
X
X
p
(ℓ̃t,i − mt,i )2 + log K 
hxt − u, ℓ̃t i ≤ Otlog K
t=1 i=1

t=1

Taking expectation and using Jensen’s inequality gives us:

v
u
T X
K
u
X
p
(ℓ̃t,i − mt,i )2 + log K 
E[RT ] ≤ Otlog K E
t=1 i=1

We can now plug in the usual ℓ̃t,i = t,i ǫ t,i 1{dt =1} + mt,i , and choose messages corresponding
to the quadratic variation based bound (i.e. mt = µ̃t via reservoir sampling) to give us:
p

p
QT log K/n +
E[RT ] ≤ O
log K
(ℓ

−m

)

Note that once again, taking expectation for the above estimates and messages will have to be done
carefully similarly to as it is done for (15).

C
C.1

Proofs for Section 4
Label Efficient Bandits

The sequence of lemmas for proving Theorem 12 will be very similar as that done above for Theorem
2. As mentioned previously, the key difference in the label efficient bandit setting is that we will have
20

just the log barrier regularizer (instead of the hybrid regularizer). Additionally, our second order
corrections are also at = 6ηǫ2 xt (ℓ̃t − mt )2 . Lemmas 13, 14, and 15 will follow almost identically.
We provide the analogue to Lemma 16 below and then prove Theorem 6.
Lemma 17. For at = 6ηǫ2 xt,i (ℓ̃t,i − mt,i )2 , ℓ̃t,i =
that ǫ(ℓ̃t − mt ) + at

xt ,∗

(ℓt,i −mt,i )
ǫxt,i

≤ 31 .

1{dt =1,it =i} + mt,i , η ≤

1
162K

we have

Proof of Lemma 17.

ǫ(ℓ̃t − mt ) + at

2
xt ,∗

=

K
X
i=1

=η


2
ηx2i ǫ(ℓ̃t,i − mt,i ) + 6ηǫ2 xi (ℓ̃t,i − mt,i )2

K
X
i=1

h

x2i ǫ2 (ℓ̃t,i − mt,i )2 ×

1 + 12ηǫxi (ℓ̃t,i − mt,i ) + 36η 2 ǫ2 x2i (ℓ̃t,i − mt,i )2

≤ 2ηǫ2
≤ 2η
1
≤
9

K
X
i=1

i

(ℓ̃t,i − mt,i )2 x2i

The above inequalities again follow by observing that |ǫxt,i (ℓ̃t,i − mt,i )| = |(ℓt − mt )1{dt =1,it =1} | ≤ 1
along with the assumption on η.
Proof of Theorem 6. As before, we will again show that our choices of loss estimates, messages,
and corrections guarantee Lemma 1.
hxt − x′t+1 , ǫ(ℓ̃t − mt ) + at i ≤ xt − x′t+1

xt

ǫ(ℓ̃t − mt ) + at

≤ 3 ǫ(ℓ̃t − mt ) + at
≤ 3η

K
X
i=1

xt ,∗

2
xt ,∗

ǫ2 (ℓ̃t,i − mt,i )2 x2i ×

i
h
1 + 12ηǫxi (ℓ̃t,i − mt,i ) + 36η 2 ǫ2 x2i (ℓ̃t,i − mt,i )2
≤ 6ηǫ2

K
X
i=1

x2t,i (ℓ̃t,i − mt,i )2 = hxt , at i

Therefore we can again proceed to take summation over t on both sides of the result of Lemma 1.

E

"

T
X
t=1

#

hxt − u, ℓ̃t i ≤

T

1X 
E DR (u, x′t ) − DR (u, x′t+1 ) + hu, at i
ǫ t=1

21

The first 2 terms on the right hand side will again telescope to yield a remaining DR (u, x′1 ), therefore
giving us:
" T
" T
#!
#
X
X
1
′
DR (u, x1 ) + E
E
hu, at i
hxt − u, ℓ̃t i ≤
ǫ
t=1
t=1
DR (u, x′1 ) = R(u) − R(x′1 ) − h∇R(x′1 ), u − x′1 i
K log T
= R(u) − R(x′1 ) ≤
η
Note that this time, we will not have the cancellation of K as we did for Theorem 2. We will
1
1 as before. The rest of the proof will follow similarly to Theorem 2 to
pick u = (1 − T1 )ei∗ + KT
ultimately give us:
" T
#


X
K log T
E
hxt − u, ℓ̃t i = O
(19)
+ 18ηQ∗ + K(log T )2
ǫη
t=1
Also note that now, we will have an added reservoir sampling cost in the final regret bound which
is the K(log T )2 term.

C.2

Partial Monitoring

Proof of Theorem 8. Following Lemma 2 from [Rakhlin and Sridharan, 2012] with R being
standard negative entropy, gives us:
" P
#
T
K
( j∈[K] w(i, j)h(j, t) − mt,i )2 1{it =j}
log K
η XX
E[RT ] ≤
E
+ γT
+
η
2 t=1 i=1
x2t,j
2
T
K  K
log K
Kη X X X
KQη
log K
w(i, j)h(j, t) − mt,i + γT ≤
+
+
+ γT
≤
η
2γ t=1 i=1 j=1
η
2γ
1/3

We can therefore see that tuning η and γ gives us a bound of O((QT K) ). The second inequality
follows by cancelling one xt,j with the indicator in expectation and bounding the remaining xt,j
by the forced exploration. The last inequality follows from the definition of ℓ(i, t) and quadratic
variation Q.

D

Lower Bound Proofs

Proof of Lemma 9. Our proof for this lemma closely follows the proof of Cesa-Bianchi et al.
[2005] with a few changes:
• Our Bernoulli random variables are centred at α instead of at 1/2.
• We define our random variables a little differently to make the calculations easier. Namely, Z ∗
is a Bernoull(α) random variable instead of Bernoulli (α − ǫ) as is done in Cesa-Bianchi et al.
[2005] (for α = 1/2) and Zj is Bernoulli (α + ǫ) instead of Bernoulli (α) (again for α = 1/2).
22

Given y t ∈ [0, 1], consider the first K coefficients of its unique dyadic expansion and denote these
t
as y1t , y2t , . . . , yK
. We will then define ℓt,i = yit for all i ∈ [K] = {1, 2, . . . , K}. We will construct
a random outcome sequence Y1 , . . . , YT , where each random variable is supported on [0, 1]. The
realizations of these random variables will then define an associated loss sequence as explained
above. We will show that the expected regret of any randomized algorithm is bounded below by
the claimed quantity, where we will take expectation with respect to the random outcome sequence
as well as the internal/auxiliary randomness available to the algorithm. Denote by A1 , A2 , . . . AT
the internal randomization available to the strategy (associated distribution is PA ), which we will
take to be an i.i.d. sequence of uniform random variables supported on [0, 1]. Now define K(no. of
arms) joint distributions Pi ⊗ PA where P1 , . . . , PK are probability distributions over the outcome
sequence which we define below. For i ∈ [K], define by Qi the distribution of:
X
Z ∗ 2−i +
Zj 2−j + 2−(K+1) A
j=1,...,K, j6=i

∗

A, Z , Z1 , . . . ZK are all independent random variables. A is distributed uniformly over [0, 1], Z ∗ is
a Bernoulli (α) random variable, and Zj is distributed Bernoulli (α + ε) (we specify ǫ later). Now,
under Pi , the outcome sequence Y1 , . . . , YT is i.i.d. from Qi . Hence, under Pi , for all j ∈ [K] and
t ∈ [T ], ℓt,j are i.i.d. Bernoulli random variables. ℓt,i is Bernoulli (α), and ℓt,j , for j 6= i is Bernoulli
PT
(α + ε). Denote the cumulative loss of the strategy by L̂T = t=1 ℓt,it and the cumulative loss of
arm i by LT,i . Let Ei be the expectation with respect to Pi and EA the expectation with respect
to PA . We then have that:




EA L̂T − LT,i
max
max EA L̂T − min LT,i =
{ℓs }T
s=1

{ℓs }T
s=1 , i∈[K]

i∈[K]

h
i
≥ max Ei EA L̂T − LT,i
i∈[K]


 PD
Using Lemma 18, we have that PA it = i|{ℓs }t−1
is
t−1 where 1 d
s=1 =
d=1 βd 1[id
[it =i|{ℓs }t−1
t =i|{ℓs }s=1 ]
s=1 ]
an indicator for the d-th deterministic algorithm choosing i. We therefore rewrite the regret as:
" T D
#
K
i
h
XX X
βd
max Ei EA L̂T − LT,i = max Ei
ℓt,k − LT,i
1[idt =i|{ℓs }t−1
s=1 ]
i∈[K]
i∈[K]
t=1 d=1
k=1
" T K
#
D
X
XX
= max
1[idt =i|{ℓs }t−1
βd Ei
ℓt,k − LT,i
s=1 ]
i∈[K]
t=1 k=1

d=1

= E max

i∈[K]

= ET

D
X

βd

d=1

T
X
t=1

1 − min

i∈[K]



Pi idt 6= i

D X
T
X
βd
d=1 t=1

T



Pi idt

=i

!


where the third equality uses the fact that the regret grows by E under Pi whenever it 6= i. Now
for the d-th deterministic algorithm, let 1 ≤ T1d ≤ · · · ≤ Tnd ≤ T be the times when the strategy
asks for the n labels. Then T1d, . . . , Tnd correspond to the finite stopping times with respect to
the i.i.d. process Y1 , . . . YT . Hence, the revealed outcomes YT1d , . . . , YTnd are i.i.d. from Y1 (see
23

Chow and Teicher [1980]). Denote by Rtd the number of revealed labels at time t. Now, as the
subalgorithms are deterministic, Rtd is fully determined by YT1d , . . . , YTnd . Hence, in general, idt
can be thought to be a function of YT1d , . . . , YTnd instead of the revealed labels just till time t,
which are YT1d , . . . , YT d d . As the joint distribution of YT1d , . . . , YTnd under Pi is Qni , we have that
Rt

Pi [idt = i] = Qni [idt = i]. Hence the regret becomes:
h
i
max Ei EA L̂T − LT,i = ET

i∈[K]

1 − min

i∈[K]

D X
T
X
βd
d=1 t=1

By the generalized Fano’s inequality, we know that mini∈[K]
PK
1
n
n
where S̄ = K−1
i=2 KL(Qi , Q1 ).
Now observe that:

T

Qi idt

PD PT
d=1



=i

βd
t=1 T Qi

!


o
n
d

S̄
e
it = i ≤ max 1+e
, log(K−1)

KL(Qni , Qn1 ) = nKL(Qi , Q1 )
≤ n(KL(Bern(α), Bern(α + E)) + KL(Bern (α + E), Bern(α)))

≤ n χ2 (α, α + ε) + χ2 (α + ε, α)


ε2
ε2
=n
+
(α + ε)(1 − α − ε) α(1 − α)
5nε2
≤
α(1 − α)
h
i
where we upper bound KL divergence by χ2 divergence and restrict ε to 0, 3(1−α)
(our proposed
4
ε below doesn’t exceed 3(1 − α)/4 as n ≥ log K/(1 − α)). Therefore, we have that



h
i
e
5nE 2
max Ei EA L̂T − LT,i ≥ ET 1 − max
,
1 + e log(K − 1)α(1 − α)
i∈[K]
q
log(K−1)
Choosing ε = eα(1−α)
reveals the claimed bound.
5n(1+e)
Lemma 18 (Lemma 3 from Cesa-Bianchi et al. [2005]). For any randomized strategy, there exists
D deterministic strategies and a probability vector β = (β1 , . . . , βD ) such that for every t and every
possible outcome sequence {ℓs }t−1
s=1 ,
D

 X
=
βd 1[id =i|{ℓs }t−1 ]
PA it = i|{ℓs }t−1
s=1
t

s=1

d=1

Proof of Theorem 10. We will begin by applying the above Lemma 9 with α/2 and with the
constant c = 0.36 (out of convenience) which is indeed lesser than the one we have proven the above
lemma for. Note that there is some j ∈ [K], for which
r
r
α
T
α
T
Ej [RT ] ≥ 0.36
(1 − )T log K ≥ 0.09 7αT log K (as α ≤ 1/4)
(20)
2
2
n
n

9
. Recall that
We will now show that under Pj , the probability that Q ≥ αT K is less than 100T
P
P
P
P
T
T
2
K
T
1
2
µT = T t=1 ℓt and Q = t=1 kℓt − µT k2 = i=1 vα,i where vα,i = t=1 (ℓt,i −µT,i ) . Noting that

24

PT
ℓt,i ∈ {0, 1}, we have vα,i = T µT,i (1 − µT,i ) ≤ T µT,i = t=1 ℓt,i . Applying Bernstein’s inequality
(refer to Theorem 2.10 in Boucheron et al. [2013] with b = 1, v = T (α/2)(1 − α/2), c = b/3 = 1/3)
along with a union bound gives us that for all δ ∈ (0, 1), under Pj , with probability at least 1 − δ,
we have:
T
 r α

α
X
K
1
K
+ ǫ + 2T
+ ǫ log
+ log
.
(21)
ℓt,i ≤ T
2
2
δ
3
δ
t=1
p
for all i ∈ {1, . . . , K}. Now note that by definition of ǫ = 0.36 (α/2)(1 − α/2) log(K − 1)/n and
by the assumption n ≥ 8 log(K − 1)/α,
r
α  log(K − 1)
α
α
α
1−
+ ǫ = + 0.36
≤ 0.59α
2
2
2
2
n
Substituting this in (21) above, we get:
T
X
t=1

ℓt,i ≤ 0.59T α +

r

2T (0.59α) log

1
K
K
+ log
δ
3
δ

(22)

9
Now we claim that T α ≥ 16 log K
that
δ holds for δ = 100T . This follows from our assumptions
PT
32 log T
100
and T ≥ 9 K . Substituting this back into (22), we can see that t=1 ℓt,i ≤ T α .
α≥
T
Hence, this gives us that Q ≤ αT K.
q

Now we will show that there exists a sequence of losses with Q ≤ αT K and E[RT ] ≥ 0.045 7αT log K Tn
where the expectation is taken with respect to the internal randomisation of the
q strategy. Suppose
this were not true, then we would have that 1{Q≤αT K} Ej [RT |{ℓt }Tt=1 ] ≤ 0.045 7αT log K Tn (since
Pj is independent of the internal randomisation). Then we would consequently have:





Ej [RT ] = Ej RT 1{Q≤αT K} + Ej RT 1{Q>αT K}
r
T
≤ 0.045 7αT log K + T · Pj (Q > αT K)
n
r
r
T
T
≤ 0.045 7αT log K + 0.09 < 0.09 7αT log K
n
n
q
which contradicts equation (20). Hence, E[RT ] ≥ 0.09 7αT log K Tn .
Proof of Lemma 11.
P As mentioned in the main text, the key difference here from standard bandit
lower bounds is that i∈[K] Ni (t− 1) (the sum of all revealed labels till time t− 1) is upper bounded
by n. Barring this, the proof follows almost identically as that done in Gerchinovitz and Lattimore
[2016] but we mention it here for completeness. Consider the following K probability distributions
used to construct the stochastic losses. For i ∈ [K], let Qi be a distributions such that under
Qi , ℓt,i is drawn Bernoulli (α) for all t ∈ {1, 2, . . . , T }, and ℓt,j is drawn Bernoulli (α + ε) for all
t ∈ {1, 2, . . . , T }, j ∈ [K], j 6= i (we specify ε later). Additionally, let Q0 be the joint distribution
under which all ℓt,i are i.i.d Bernoulli (α + ε) random variables for t ∈ {1, 2, . . . , T } and i ∈ [K].
25

1 PK
Also define Q̄ = K
i=1 Qi , the distribution our losses will finally be drawn from. As before, let
Ei denote the expectation taken with respect to Qi . Under (each) Qi we have the following:



Ei L̂T − min LT,j
j∈[K]



" T
" T
#
#
h i
X
X
ℓt,it − min Ei
ℓt,j
≥ Ei L̂T − min Ei [LT,j ] = Ei
j∈[K]

=

T
X
t=1

t=1

j∈[K]

t=1



Ei α + ε − ε1{it =i} − T α

!
T
1 X
= Tε 1 −
Qi (it = i) ,
T t=1

(23)

Now, we can further lower bound the above expression by appealing to Pinsker’s inequality which
tells us that Qi (it = i) ≤ Q0 (it = i) + (KL(Qi0t , Qiit )/2)1/2 7 for all t ∈ {1, 2, . . . , T } and all i ∈ [K].
We substitute this in (23), average over i ∈ [K] in order to bound the regret under Q̄, and use the
concavity of the square root to yield:
v


u


T
K
u 1 X
X

1
1
KL Qi0t , Qiit 
(24)
−t
EQ̄ L̂T − min LT,j ≥ T ε 1 −
K
2T t=1 K i=1
j∈[K]
Now we will upper bound the KL divergence terms:






(h ,i )
(h ,i )
KL Qi0t , Qiit ≤ KL Q0 t t , Qi t t = EQ0 Ni (t − 1) KL Bern(α + ǫ), Bern(α)


≤ EQ0 Ni (t − 1)

ε2
,
α(1 − α)

where the first inequality follows from the Data Processing Inequality and second by upper bounding
the KL divergence by the χ2 divergence. ht denotes the history available at time t and Ni (t − 1)
refers to the number of pulls of arm i till time t − 1. We now average the above quantity over
i ∈ [K] and t ∈ {1, 2, . . . , T } to yield:
T
K
T

nε2
1X
nε2
1 X 1 X
KL Qi0t , Qiit ≤
≤
.
T t=1 K j=1
T t=1 Kα(1 − α)
Kα(1 − α)
P
The above equation incorporates the strict restriction on the revealed labels as i∈[K] Ni (t−1) is up√ p
per bounded by n. Plugging the above inequality into (24) and substituting ε = (1/2 2) α(1 − α)K/n
gives us the claimed bound.

Proof of Theorem 12. The proof follows almost identically as Theorem 10.

7 Qit
i

denotes the probability measure of it under Qi

26

