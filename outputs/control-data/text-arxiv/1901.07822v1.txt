arXiv:1901.07822v1 [cs.LG] 23 Jan 2019

Predicting Parkinson’s Disease using Latent
Information extracted from Deep Neural Networks
Ilianna Kollia

Andreas-Georgios Stafylopatis

Stefanos Kollias

Big Data & Analytics Center
IBM Hellas
Athens, Greece
ikollia@gr.ibm.com

School of Electrical & Computer Engineering
National Technical University of Athens
Athens, Greece
andreas@cs.ntua.gr

School of Computer Science
University of Lincoln
Lincoln, United Kingdom
skollias@lincoln.ac.uk

Abstract—This paper presents a new method for medical
diagnosis of neurodegenerative diseases, such as Parkinson’s, by
extracting and using latent information from trained Deep convolutional, or convolutional-recurrent Neural Networks (DNNs).
In particular, our approach adopts a combination of transfer
learning, k-means clustering and k-Nearest Neighbour classification of deep neural network learned representations to provide
enriched prediction of the disease based on MRI and/or DaT Scan
data. A new loss function is introduced and used in the training
of the DNNs, so as to perform adaptation of the generated
learned representations between data from different medical
environments. Results are presented using a recently published
database of Parkinson’s related information, which was generated
and evaluated in a hospital environment.
Index Terms—latent variable information, deep convolutional
and recurrent neural networks, transfer learning and domain
adaptation, modified loss function, prediction, Parkinson’s disease, MRI, DaT Scan data.

I. I NTRODUCTION
Machine learning techniques have been largely used in medical signal and image analysis for prediction of neurodegenerative disorders, such as Alzheimer’s and Parkinson’s, which
significantly affect elderly people, especially in developed
countries [1], [2], [3].
In the last few years, the development of deep learning
technologies has boosted the investigation of using deep neural
networks for early prediction of the above-mentioned neurodegenerative disorders. In [4], stacked auto-encoders have been
used for diagnosis of Alzheimer’s disease.3-D Convolutional
Neural Networks (CNNs) have been used in [5] to analyze
imaging data for Alzheimer’s diagnosis. Both methods were
based on the Alzheimer’s disease neuroimaging initiative
dataset, including medical images and assessments of several
hundred subjects. Recently, CNNs and convolutional-recurrent
neural network (CNN-RNN) architectures have been developed for prediction of Parkinson’s disease [6], based on a new
database including Magnetic Resonance Imaging (MRI) data
and Dopamine Transporters (DaT) Scans from patients with
Parkinson’s and non patients [7].
In this paper we focus on the early prediction of Parkinson’s.
It is the above two types of medical image data, i.e. MRI
and DaT Scans that we explore for predicting an asymptomatic (healthy) status, or the stage of Parkinson’s at which

a subject appears to be. In particular, MRI data show the
internal structure of the brain, using magnetic fields and radio
waves. An atrophy of the Lentiform and Caudate Nucleus
can be detected in MRI data of patients with Parkinson’s.
DaT Scans are a specific form of single-photon emission
computed tomography, using Ioflupane Iodide-123 to detect
lack of dopamine in patients’ brain.
In the paper we base our developments on the deep neural
network (DNN) structures (CNNs, CNN-RNNs) developed
in [6] for predicting Parkinson’s using MRI, or DaT Scan,
or MRI & DaT Scan data from the recently developed
Parkinson’s database [7]. We extend these developments by
extracting latent variable information from the DNNs trained
with MRI & DaT Scan data and generate clusters of this
information; these are evaluated by medical experts with
reference to the corresponding status/stage of Parkinson’s. The
generated and medically annotated cluster centroids are used
next in three different scenarios of major medical significance:
1) Transparently predicting a new subject’s status/stage of
Parkinson’s; this is performed using nearest neighbor classification of new subjects’ MRI and DaT scan data with reference
to the cluster centroids and the respective medical annotations.
2) Retraining the DNNs with the new subjects’ data, without forgetting the current medical cluster annotations; this
is performed by considering the retraining as a constrained
optimization problem and using a gradient projection training
algorithm instead of the usual gradient descent method.
3) Transferring the learning achieved by DNNs fed with
MRI & DaT scan data, to medical centers that only possess MRI information about subjects, thus improving their
prediction capabilities; this is performed through a domain
adaptation methodology, in which a new error criterion is
introduced that includes the above-derived cluster centroids
as desired outputs during training.
Section II describes related work where machine learning
techniques have been applied to MRI and DaT Scan data for
detecting Parkinson’s. The new Parkinson’s database we are
using in this paper is also described in this section. Section
III first describes the extraction of latent variable information
from trained deep neural networks and then presents the
proposed approach in the framework of the three considered
testing, transfer learning and domain adaptation scenarios.

Section IV provides the experimental evaluation which illustrates the performance of the proposed approach using an
augmented version of the Parkinson’s database, which we
also make publicly available. Conclusions and future work are
presented in Section V.
II. R ELATED W ORK
Medical image data constitute a rich source of information
regarding cell degeneration in the human nervous system of
Parkinson’s patients. MRI and DaT Scan data have been the
focus of related research; in [8], principal component analysis
and support vector machines were applied to MRI data, while
the same techniques and empirical mode decomposition were
applied to DaT Scans in [9].
A Parkinson’s database comprising MRI and DaT Scan data
from 78 subjects, 55 patients with Parkinson’s and 23 non
patients, has been recently released [7]; it includes, in total
41528 MRI data (31147 from patients and 10381 from non
patients) and 925 DaT scans (595 and 330 respectively). Our
developments next are based on this database.
CNN architectures [10], [11] include convolutional, pooling and fully connected layers, in which convolutional kernel and fully connected layer weights are usually learned
through gradient descent, while pooling layers reduce the
input sizes through averaging operations. CNN-RNN architectures [11], [12] are capable of effectively analyzing temporal
variations of the inputs, by permitting intra layer connections
and using appropriate gating operations.
Recent
advances
in
deep
neural
networks [11], [13], [14], [15] have been explored in [6],
where convolutional (CNN) and convolutional-recurrent
(CNN-RNN) neural networks were developed and trained to
classify the information in the above Parkinson’s database in
two categories, i.e., patients and non patients, based on either
MRI inputs, or DaT Scan inputs, or together MRI and DaT
Scan inputs.
DaT Scans, which are a specific examination for Parkinson’s, generally convey more information than MRI; however,
using both inputs can provide better prediction performances.
The developed networks included: transfer learning of the
ResNet-50 network [16] as far as the convolutional part of the
networks was concerned, with retraining of the fully connected
network layers; adding on top of this and training a recurrent
network using Gated Recurrent Units (GRU) [17] in an endto-end manner.
In this paper we focus first on the analysis of the combined
MRI and DaT Scan dataset. It should be mentioned that the
target in Parkinson’s disease detection through MRI data is
on estimation of the volume of the lentiform and of the
capita of the caudate nucleus. To deal with volume estimation,
we analyse MRIs in triplets of consecutive frames. Thus, an
MRI triplet of (gray-scale) images and a DaT Scan (colour)
image constitute the input to the CNN and/or CNN-RNN
architectures that we use in our developments. Fig. 1 shows
such a triplet of consecutive frames from an MRI sequence
and a corresponding DaT Scan image.

Fig. 1: An MRI triplet of consecutive frames and a corresponding DaT Scan

Section III.A presents the methodology used to extract latent
variables from the trained DNNs and to achieve diagnosis of
Parkinson’s. Section III.B describes the approach for retraining
the DNNs with new information, while preserving the already
extracted information. In Section III.C we examine DNNbased analysis of only MRI input triplets and show how this
analysis can be improved by adaptation of the latent variable
information extracted from the DNNs trained with both MRI
and DaT Scan data.
III. T HE P ROPOSED A PPROACH
A. Extracting Latent Variables from Trained Deep Neural
Networks
The proposed approach begins with training a CNN, or a
CNN-RNN architecture, on the (train) dataset of MRI and DaT
Scan data. The CNN networks include a convolutional part and
one or more Fully Connected (FC) layers, using neurons with
a ReLU activation function. In the CNN-RNN case, these are
followed by a recurrent part, including one ore more hidden
layers, composed of GRU neurons.
We then focus on the neuron outputs in the last FC layer
(CNN case), or in the last RNN hidden layer (CNN-RNN
case). These latent variables, extracted from the trained DNNs,
represent the higher level information through which the
networks produce their predictions, i.e., whether the input
information indicates that the subject is patient, or not.
In particular, let us consider the following dataset for
training the DNN to predict Parkinson’s:

P = (x(j), d(j)); j = 1, . . . , n
(1)

B. Retraining of Deep Neural Networks with Annotated
Latent Variables

and the corresponding test dataset:

e
Q = (e
x(j), d(j));
j = 1, . . . , m

(2)

where: x(j) and d(j) represent the n network training inputs
(each of which consists of an MRI triplet and a DaT Scan)
and respective desired outputs (with a binary value 0/1, where
0 represents a non patient and 1 represents a patient case);
e similarly represent the m network test inputs
e
x(j) and d(j)
and respective desired outputs.
After training the Deep Neural Network using dataset P, its
l neurons’ outputs in the final FC, or hidden layer, {r(j)} and
{er(j)}, both ∈ Rl , are extracted as latent variables, obtained
through forward-propagation of each image, in train set Rp
and test set Rq respectively:

Rp = (r(j), j = 1, . . . , n
(3)
and

Rq = (er(j), j = 1, . . . , m

(4)

The following clustering procedure is then implemented on
the {r(j)} in Rp :
We generate a set of clusters T = {t1 , . . . , tk } by minimizing the within-cluster L2 norms of the function
Tbk-means = arg min
T

k X
X

r − µj

2

(5)

j=1 r∈Rp

where µj is the mean value of the data in cluster j.
This is done using the k-means++ [18] algorithm, with the
first cluster centroid u(1) being selected at random from T .
The class label of a given cluster is simply the mode class of
the data points within it.
As a consequence, we generate a set of cluster centroids,
representing the different types of input data included in our
train set P:

U = (u(j), j = 1, . . . , k
(6)
Through medical evaluation of the MRI and DaT Scan
images corresponding to the cluster centroids, we can annotate
each cluster according to the stage of Parkinson’s that its
centroid represents.
By computing the euclidean distances between the test data
in Rq and the cluster centroids in U and by then using the
nearest neighbor criterion, we can assign each one of test data
to a specific cluster and evaluate the obtained classification disease prediction - performance. This is an alternative way to
the prediction accomplished when the trained DNN is applied
to the test data.
This alternative prediction is, however, of great significance:
in the case of non-annotated new subject’s data, selecting the
nearest cluster centroid in U can be a transparent way for
diagnosis of the subject’s Parkinson’s stage; the available MRI
and DaT Scan data and related medical annotations of the
cluster centroids being compared to the new subject’s data.

Whenever new data, either from patients, or from non
patients, are collected, they should be used to extend the
knowledge already acquired by the DNN, by adapting its
weights to the new data. In such a case, let us assume that
a new train dataset, say P1 , usually of small size, say s, is
generated and an updated DNN should be created based on
this dataset as well.
There are different methods developed in the framework of
transfer learning [19], for training a new DNN on P1 using the
structure and weights of the above-described DNN. However,
a major problem is that of catastrophic forgetting, i.e., the fact
that the DNN forgets some formerly learned information when
fine-tuning to the new data. This can lead to loss of annotations
related to the latent variables extracted from the formerly
trained DNN. To avoid this, we propose the following DNN
adaptation method, which preserves annotated latent variables.
For simplicity of presentation, let us consider a CNN architecture, in which we keep the convolutional and pooling layers
fixed and retrain the FC and output layers. Let W be a vector
including the weights of the FC and output network layers of
the original network, before retraining, and W0 denote the new
(updated) weight vector, obtained through retraining. Let us
also denote by, w and w0 , respectively, the weights connecting
the outputs of the last FC, defined as r in Eq. (3), to the
network outputs, y.
During retraining, the new network weights, W0 , are computed by minimizing the following error criterion:
E = EP1 + λ · EP

(7)

where EP1 represents the misclassifications done in P1 , which
includes the new data and EP represents the misclassifications
in P, which includes the old information. λ is used to differentiate the focus between the new and old data. In the following
we make the hypothesis that a small change of the weights W
is enough to achieve good classification performance in the
current conditions. Consequently, we get:
W0 = W + ∆W

(8)

and in the output layer case:
w0 = w + ∆w

(9)

in which ∆W and ∆w denote small weight increments. Under
this formulation, we can apply a first-order Taylor series
expansion to make neurons’ activation linear.
Let us now give more attention to the new data in P1 . We
can do this, by expressing EP1 in Eq. (7) in terms of the
following constraint:
y 0 (j) = d(j); j = 1, . . . , s

(10)

which requests that the new network outputs and the desired
outputs are identical.

Moreover, to preserve the formerly extracted latent variables, we move the input data corresponding to the annotated
cluster centroids in U from dataset P to P1 . Consequently,
Eq. (10) includes these inputs as well; the size of P1 becomes:
s0 = s + k

(11)

where k is the number of clusters in U.
Let the difference of the retrained network output y 0 from
the original one y be:
∆y(j) = y 0 (j) − y(j)

(12)

0

Expressing the output y as a weighted average of the last
FC layer outputs r0 with the w0 weights, we get [6]
y 0 (j) = y(j) + f h · w · ∆r(j) + ∆w · r(j)

(13)

h

where f denotes the derivative of the former DNN output
layer’s neurons’ activation function. Inserting Eq. (10) into
Eq. (13) results in:
d(j) − y(j) = f h · w · ∆r(j) + ∆w · r(j)

(15)

where matrix V includes weights of the original DNN and
vector v is defined as follows:
v(j) = d(j) − y(j); j = 1, . . . , s0

In the two previous subsections we have focused on generation, based on extraction of latent variables from a trained
DNN, and use of cluster centroids for prediction and adaptation of a Parkinson’s diagnosis system. To do this, we have
considered all available imaging information, consisting of
MRI and DaT Scan data.
However, in many cases, especially in general purpose
medical centers, DaT Scan equipment may not be available,
whilst having access to MRI technology. In the following we
present a domain adaptation methodology, using the annotated
latent variables extracted from the originally trained DNN, to
improve prediction of Parkinson’s achieved when using only
MRI input data. A new DNN training loss function is used to
achieve this target.
Let us consider the following train and test datasets, similar
to P and Q in Eq. (1) and Eq. (2) respectively, in which the
input consists only of triplets of MRI data:

(14)

All terms in Eq. (14) are known, except of the differences in
weights ∆w and last FC neuron outputs ∆r. As a consequence,
Eq. (14) can be used to compute the new DNN weights of the
output layer in terms of the neuron outputs of the last FC
layer.
If there are more than one FC layers, we apply the same
procedure, i.e., linearize the difference of the r0 , iteratively
through the previous FC layers and express the ∆r in terms
of the weight differences in these layers. When reaching the
convolutional/pooling layers, where no retraining is to be
performed, the procedure ends, since the respective ∆r is zero.
It can be shown, similarly to [6] that the weight updates ∆W
are finally estimated through the solution of a set of linear
equations defined on P1 :
v = V · ∆W

C. Domain Adaptation of Deep Neural Networks through
Annotated Latent Variables

(16)

with y(j) denoting the output of the original DNN applied to
the data in P1 .
Similarly to [6], the size of v is lower than the size of ∆W;
many methods exist, therefore, for solving Eq. (16). Following
the assumption made in the beginning of this section, we
choose the solution that provides minimal modification of
the original DNN weight. This is the one that provides the
minimum change in the value of E in Eq. (7).
Summarizing, the targeted adaptation can be solved as
a nonlinear constrained optimization problem, minimizing
Eq. (7), subject to Eq. (10) and the selection of minimal
weight increments. In our implementation, we use the gradient
projection method [20] for computing the network weight
updates and consequently the adapted DNN architecture.


P 0 = (x0 (j), d0 (j)); j = 1, . . . , n0

(17)


Q0 = (xe0 (j), de0 (j)); j = 1, . . . , m0

(18)

and
where: x0 (j) and d0 (j) represent the n0 network training inputs
(each of which consists of only an MRI triplet) and respective
desired outputs (with a binary value 0/1, where 0 represents
a non patient and 1 represents a patient case); xe0 (j) and de0 (j)
similarly represent the m0 network test inputs and respective
desired outputs.
Using P 0 , we train a similar DNN structure - as in the full
MRI and DaT Scan case -, producing the following vector of
l neuron outputs in its last FC or hidden layer:

R0p = (r0 (j), j = 1, . . . , n0

(19)

with the dimension of each r0 vector being l, as in the original
DNN last FC, or hidden, layer.
A far as the r0 outputs are concerned, it would be desirable
that these latent variables being closer, e.g., according to the
mean squared error criterion, to one of the cluster centroids in
Eq. (6) that belongs to the same category(patient/non patient)
with them.
In this way, training of the DNN with only MRI inputs,
would also bring its output y 0 closer to the one generated
by the original DNN; this would potentially improve the
network’s performance, towards the much better one produced
by the original DNN (trained with both MRI and DaT Scan
data).
Let us compute the euclidean distances between the latent
variables in R0p and the cluster centroids in U as defined in
Eq. (6). Using the nearest neighbor criterion we can define a
set of desired vector values for the r0 latent variables, with
respect to the k cluster centroids, as follows:

Zp = (z(i, j), i = 1, . . . , k; j = 1, . . . , n0

(20)

where z(i, j) is equal to, either 1 in the case of the cluster
centroid u(i) that was selected, as closest to r0 (j) during the
above-described procedure, or equal to 0 in the case of the
rest cluster centroids.
In the following, we introduce the z(i, j) values in a modified Error Criterion to be used in DNN learning to correctly
classify the MRI inputs.
Normally, the DNN (CNN, or CNN-RNN) training is performed through minimization of the error criterion in Eq. (21)
in terms of the DNN weights:
0

n
1 X 0
(d (j) − y 0 (j))2
E1 = 0
n j=1

(21)

where y 0 and d0 denote the actual and desired network
outputs and n0 is equal to the number of all MRI input triplets.
We propose a modified Error Criterion, introducing an
additional term, using the following definitions:

A. The Parkinson’s Dataset
The data that are used in our experiments come from the
Parkinson’s database described in Section II. For training
the CNN and CNN-RNN networks, we performed an augmentation procedure in the train dataset, as follows. After
forming all triplets of consecutive MRI frames, we generated
combinations of these image triplets with each one of the DaT
Scans in each category (patients, non patients).
Consequently, we created a dataset of 66,176 training inputs,
each of them consisting of 3 MRI and 1 DaT Scan images.
In the test dataset, which referred to different subjects than
the train dataset, we made this combination per subject; this
created 1130 test inputs.
For possible reproduction of our experiments, both the
training and test datasets, each being split in two folders patients and non patients - are available upon request from
the mlearn.lincoln.ac.uk web site.
B. Testing the proposed Approach for Parkinson’s Prediction

g(i, j) = u(i) − r0 (j), i = 1, . . . , k; j = 1, . . . , n0

(22)

and
G(i, j) = g(i, j) ∗ (g(i, j))T

(23)

with T indicating the transpose operator.
It is desirable that the G(i, j) term - with a respective
value of z(i, j) equal to one - is minimized, whilst the G(i, j)
values - corresponding to the rest of the z(i, j) values, which
are equal to zero - are maximized. Similarly to [21], we
pass G(i, j) through a softmax f function and subtract its
output from 1, so as to obtain the above-described respective
minimum and maximum values.
The generated Loss Function is expressed in terms of
the differences of the transformed G(i, j) values from the
corresponding desired responses z(i, j), as follows:
0

k n
1 XX
(z(i, j) − [1 − f (G(i, j)])2
E2 =
kn0 i=1 j=1

(24)

calculated on the n0 data and the k cluster centroids.
In general, our target is to minimize together Eq. (21)
and Eq. (24). We can achieve this using the following Loss
Function:
Enew = ηE1 + (1 − η)E2
(25)
where η is chosen in the interval [0, 1].
Using a value of η towards zero provides more importance
to the introduced centroids of the clusters of the latent variables extracted from the best performing DNN, trained with
both MRI and DaT Scan data. On the contrary, using a value
towards one leads to normal error criterion minimization.
IV. E XPERIMENTAL E VALUATION
In this section we present a variety of experiments for
evaluating the proposed approach. The implementation of all
algorithms described in the former Section has been performed
in Python using the Tensorflow library.

We used the DNN structures described in [6], including
both CNN and CNN-RNN architectures to perform Parkinson’s diagnosis, using the train and test data of the abovedescribed database. The convolutional and pooling part of the
architectures was based on the ResNet-50 structure; GRU units
were used in the RNN part of the CNN-RNN architecture.
The best performing CNN and CNN-RNN structures, when
trained with both MRI and DaT Scan data, are presented in
Table I.
It is evident that the CNN-RNN architecture was able to
provide excellent prediction results on the database test set.
We, therefore, focus on this architecture for extracting latent
variables. For comparison purposes, it can be mentioned that
the performance of a similar CNN-RNN architecture when
trained only with MRI inputs was about 70%.
It can be seen, from Table I, that the number l of neurons
in the last FC layer of the CNN-RNN architecture was 128.
This is, therefore, the dimension of the vectors r extracted
as in Eq. (3) and used in the cluster generation procedure of
Eq. (5).
We then implemented this cluster generation procedure,
as described in the former Section. The k-means algorithm
provided five clusters of the data in the 128-dimensional space.
Fig. 2 depicts a 3-D visualization of the five cluster centroids;
stars in blue color denote the two centroids corresponding to
non patient data, while squares in red color represent the three
cluster centroids corresponding to patient data.
With the aid of medical experts, we generated annotations
of the images (3 MRI and 1 DaT Scan) corresponding to
the 5 cluster centroids. It was very interesting to discover
that these centroids represent different levels of Parkinson’s
evolution. Since the DaT Scans conveyed the major part of this
discrimination, we show in Fig.3 the DaT Scans corresponding
to each one of the cluster centroids.
According to the provided medical annotation, the 1st
centroid (t1 ) corresponds to a typical non patient case. The
2nd centroid (t2 ) represents a non patient case as well, but

TABLE I: DNN best performing structures on DaT Scan and MRI data
Structure
CNN
CNN-RNN

No FC layers
2
1

No Hidden Layers
2

No Units in FC Layer(s)
2622-1500
1500

No Units in Hidden Layers
128-128

Accuracy (%)
94%
98%

TABLE III: Classification of 6 subjects’ data in clusters t1 -t5
Test case
Non Patient 1
Non Patient 2
Patient 1
Patient 2
Patient 3
Patient 4

Fig. 2: The five cluster centroids in 3-D; 2 of them (stars, blue
color) depict non patients and 3 of them (squares, red color)
represent patients
TABLE II: Training data in each generated cluster
Cluster
t1
t2
t3
t4
t5

No of Data (%)
4,3
38,4
27,6
2,3
27,4

with some findings that seem to be pathological. Moving to
the patient cases, the 3rd centroid (t3 ) shows an early step of
Parkinson’s - in stage 1 to stage 2, while the 4th centroid (t4 )
denotes a typical Parkinson’s case - in stage 2. Finally, the 5th
centroid (t5 ) represents an advanced step of Parkinson’s - in
stage 3.
It is interesting to note here that, although the DNN was
trained to classify input data in two categories - patients
and non patients -, by extracting and clustering the latent
variables, we were able to generate a richer representation
of the diagnosis problem in five categories. It should be
mentioned that the purity of each generated cluster was almost
perfect.
Table II shows the percentages of training data included in
each one of the five generated clusters. It should be mentioned
that almost two thirds of the data belong in clusters 2 and 3,
i.e., in the categories which are close to the borderline between
patients and non patients. These cases require major attention
by the medical experts and the proposed procedure can be very
helpful for diagnosis of such subjects’ cases.
We tested this procedure on the Parkinson’s test dataset,
by computing the euclidean distances of the corresponding
extracted latent variables from the 5 cluster centroids and by
classifying them to the closest centroid.

t1
44
10
3
1
3
0

t2
398
90
7
7
0
0

t3
0
0
94
139
145
0

t4
0
0
8
17
18
8

t5
0
0
8
20
38
72

Table III shows the number of test data referring to six
different subjects that were classified to each cluster. All non
patient cases were correctly classified. In the patient cases,
the great majority of the data of each patient were correctly
classified to one of the respective centroids. In the small
number of misclassifications, the disease symptoms were not
so evident. However, based on the large majority of correct
classifications, the subject would certainly attract the necessary
interest from the medical expert.
We next examined the ability of the above-described DNN
to be retrained using the procedure described in Subsection III.B.
In the developed scenario, we split the above test data in
two parts: we included 3 of them (Non Patient 2, Patient 2
and Patient 3) in the retraining dataset P1 and let the other 3
subjects in the new test dataset. The size s0 of P1 was equal to
493 inputs, including the five inputs corresponding to cluster
centroids in U; the size of the new test set was equal to 642
inputs.
We applied the proposed procedure to minimize the error
over all train data in P and P1 , focusing more on the latter,
as described by Eq. (10).
The network managed to learn and correctly classify all 493
P1 inputs, including the inputs corresponding to the cluster
centroids, with a minimal degradation of its performance over
P input data. We then applied the trained network to the test
dataset consisting of three subjects. In this case, there was
also a slight improvement, since the performance was raised
to 98,91%, compared to the corresponding performance on
the same three subjects’ data, shown in Table III, which was
98,44%.
Table IV shows the clusters to which the new extracted
latent variables er were classified. A comparison with the corresponding results in Table III shows the differences produced
through retraining.
We finally examined the performance of the domain adaptation approach that was presented in Subsection III.C.
We started by training the CNN-RNN network with only
the MRI triplets in P 0 as inputs. The obtained performance
when the trained network was applied to the test set Q0 was
only 70,6%. For illustration of the proposed developments

(b) Centroid t2

(a) Centroid t1

(d) Centroid t4

(c) Centroid t3

(e) Centroid t5

Fig. 3: The DaT Scans corresponding to the five cluster centroids t1 - t5
TABLE IV: Classification of 3 subjects’ data, after retraining,
in clusters t1 -t5
Test case
Non Patient 1
Patient 1
Patient 4

t1
41
2
0

t2
401
5
0

t3
0
99
0

t4
0
7
7

t5
0
7
73

TABLE V: MRI-based Classification of 6 subjects’ data in
clusters t1 -t5
Test case
Non Patient 1
Non Patient 2
Patient 1
Patient 2
Patient 3
Patient 4

t1
181
14
16
6
26
12

t2
74
4
0
0
3
0

t3
179
44
53
83
130
51

t4
8
33
49
80
35
11

t5
0
5
2
15
10
6

we extracted the r0 latent variables from this trained network
and classified them to a set of respectively extracted cluster
centroids. Table V presents the results of this classification
task, which is consistent with the acquired DNN performance.
It can be seen that the MRI information leads DNN prediction
towards the patient class, which indeed contained more samples in the train dataset. Most errors were made in the non
patient class (subjects 1 and 2).
We then examined the ability of the proposed approach,
to train the CNN-RNN network using the modified Loss
Function, using various values of η; here we present the case

TABLE VI: MRI-based Classification of 6 subjects’ data, after
domain adaptation, in clusters t1 -t5
Test case
Non Patient 1
Non Patient 2
Patient 1
Patient 2
Patient 3
Patient 4

t1
176
13
13
5
20
9

t2
147
41
0
0
2
0

t3
114
25
70
116
140
31

t4
5
18
35
54
34
5

t5
0
3
2
9
8
35

when using a value equal to 0.5.
The obtained performance when the trained network was
applied to the test set Q0 was raised to 81,1%. For illustrating
this improvement we also extracted the r0 latent variables from
this trained network and classified them to one of the five
annotated original cluster centroids U.
Table VI presents the results of this classification task. It
is evident that minimization of the modified Loss Function
managed to force the extracted latent variables get closer
to cluster centroids which belonged in the correct class for
Parkinson’s diagnosis.
V. C ONCLUSIONS AND F UTURE W ORK
The paper proposed a new approach for extracting latent
variables from trained DNNs, in particular CNN and CNNRNN architectures, and using them in a clustering and nearest
neighbor classification method for achieving high performance
and transparency in Parkinson’s diagnosis. We have used

augmentation of the MRI and DaT Scan data in a recent
Parkinson’s database and provide the resulting datasets upon
request from mlearn.lincoln.ac.uk.
A DNN retraining procedure was presented, which is able
to preserve the knowledge provided by annotated formerly
extracted clustered latent variables. Moreover, a domain adaptation approach has been developed, which is able to use the
extracted clustered latent variable information for improving
the performance of the DNN architecture when presented with
less input (only MRI) data.
An experimental study has been developed, using the above
datasets, which illustrates the ability of the proposed approach
to achieve high perfomance.
Future work will be based on a close collaboration of
National Technical University of Athens and University of
Lincoln with IBM, particularly relating the presented research
to the IBM Watson Health initiative. The target will be
generation of novel performance-aware and transparent systems for better diagnosis of neurodegenerative diseases like
Parkinson’s, based on a combination of MRI and other images,
epidemiological data, historical data of treatments and clinical
data.
ACKNOWLEDGMENT
The authors wish to thank the Department of Neurology
of the Georgios Gennimatas General Hospital in Athens,
Greece, and particularly Dr Georgios Tagaris, for the creation
and provision of the main Parkinson’s dataset and for his
collaboration in the evaluation of the results of the performed
analysis.
R EFERENCES
[1] P. Sadja, “Machine learning for detection and diagnosis of disease,”
Annu. Rev. Biomed. Eng, pp. 537–565, 2006.
[2] R. Cuinget, E. Gerardin, J. Tessieras, G. Auzias, and et al., “Automatic
classification of patients with alzheimer’s disease, via mri: a comparison
of ten methods using the admi database,” Neuroimage, vol. 56, no. 2,
pp. 766–781, 2011.
[3] R. Das, “A comparison of multiple classification methods for diagnosis
of parkinson disease,” Expert Systems with Applications, vol. 37, no. 2,
pp. 1568–1572, 2010.
[4] S. Liu, W. Cai, S. Pujol, and et al., “Early diagnosis of alzheimer’s
disease with deep learning,” 11th IEEE International Symposium on
Biomedical Imaging, pp. 1015–1018, 2014.
[5] R. Li, W. Zhang, H. Suk, and et al., “Deep learning based imaging data
completion for improved brain disease diagnosis,” International Conference on Medical Image Computing and Computer-assisted Intervention,
pp. 305–312, 2014.
[6] D. Kollias, A. Tagaris, A. Stafylopatis, S. Kollias, and G. Tagaris, “Deep
neural architectures for prediction in healthcare,” Complex & Intelligent
Systems, vol. 4, no. 2, pp. 119–131, 2018.
[7] A. Tagaris, D. Kollias, A. Stafylopatis, G. Tagaris, and S. Kollias,
“Machine learning for neurodegenerative disorder diagnosis - survey
of practices and launch of benchmark dataset,” International Journal on
Artificial Intelligent Tools, vol. 27, no. 3, 2018.
[8] C. Salvatore, A. Cerasa, I. Castiglioni, and et al., “Machine learning on
brain mri data for differential diagnosis of parkinson’s disease,” Journal
of Neuroscience Methods, vol. 222, pp. 230–237, 2014.
[9] A. Rojas, J. Gorriz, J. Ramirez, and et al., “Application of empirical
mode decomposition on datscan spect images to explore parkinson
disease,” Expert Systems with Applications, vol. 40, no. 7, pp. 2756–
2766, 2013.

[10] Y. LeCun, L. Bottou, Y. Bengio, and P. Haffner, “Gradient-based learning
applied to document recognition,” Proceedings of the IEEE, vol. 86,
no. 11, pp. 2278–2324, 1998.
[11] I. Goodfellow, Y. Bengio, and A. Courville, Deep Learning. MIT Press,
2016, http://www.deeplearningbook.org.
[12] K. Cho, B. V. Merrienboer, D. Bahdanau, and Y. Bengio, “On the
properties of neural machine translation: Encoder-decoder approaches,”
arXiv:1409.1259, 2014.
[13] D. Kollias, M. A. Nicolaou, I. Kotsia, G. Zhao, and S. Zafeiriou, “Recognition of affect in the wild using deep neural networks,” 2017 IEEE
Conference on Computer Vision and Pattern Recognition Workshops
(CVPRW), pp. 1972–1979, 2017.
[14] D. Kollias, M. Yu, A. Tagaris, G. Leontidis, A. Stafylopatis, and
S. Kollias, “Adaptation and contextualization of deep neural network
models,” in 2017 IEEE Symposium Series on Computational Intelligence
(SSCI), Nov 2017.
[15] F. Caliva, F. D. S. Ribeiro, A. Mylonakis, C. Demaziere, P.Vinai,
G. Leontidis, and S. Kollias, “A deep learning approach to anomaly
detection in nuclear reactors,” in 2018 International Joint Conference
on Neural Networks (IJCNN), July 2018.
[16] K. He, X. Zhang, S. Ren, and J. Sun, “Deep residual learning for
image recognition,” Proceedings of IEEE CVPR Conference, pp. 770–
778, 2016.
[17] J. Chung, C. Gulcehre, K. Cho, and Y. Bengio, “Empirical evaluation of
gated recurrent neural networks on sequence modeling,” in NIPS 2014
Workshop on Deep Learning, December 2014, 2014.
[18] D. Arthur and S. Vassilvitskii, “K-means++: The advantages of careful
seeding,” in In Proceedings of the 18th Annual ACM-SIAM Symposium
on Discrete Algorithms, 2007.
[19] H. Ng, V. D. Nguyen, V. Vonikakis, and S. Winkler, “Deep learning for
emotion recognition on small datasets using transfer learning,” in ICMI,
2015.
[20] J. Rosen, “The gradient projection method for nonlinear programming,”
Journal of the Society of Industrial and Applied Mathematics, vol. 8,
no. 1, pp. 181–217, 1960.
[21] D. Kollias and S. P. Zafeiriou, “Training deep neural networks with
different datasets in-the-wild: The emotion recognition paradigm,” 2018
International Joint Conference on Neural Networks (IJCNN), 2018.

