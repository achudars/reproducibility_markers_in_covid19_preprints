The information-theoretic value of unlabeled data in
semi-supervised learning

arXiv:1901.05515v2 [cs.LG] 13 May 2019

Alexander Golovnev‚àó

DaÃÅvid PaÃÅl‚Ä†

BalaÃÅzs SzoÃàreÃÅnyi‚Ä†

May 15, 2019

Abstract
We quantify the separation between the numbers of labeled examples required to learn in
two settings: Settings with and without the knowledge of the distribution of the unlabeled
data. More specifically, we prove a separation by Œò(log n) multiplicative factor for the class of
projections over the Boolean hypercube of dimension n. We prove that there is no separation
for the class of all functions on domain of any size.
Learning with the knowledge of the distribution (a.k.a. fixed-distribution learning) can be
viewed as an idealized scenario of semi-supervised learning where the number of unlabeled data
points is so great that the unlabeled distribution is known exactly. For this reason, we call the
separation the value of unlabeled data.

1

Introduction

Hanneke [2016] showed that for any class C of Vapnik-Chervonenkis dimension d there

 exists an
algorithm that -learns any target function from C under any distribution from O d+log(1/Œ¥)

labeled examples with probability at least 1 ‚àí Œ¥. For this paper, it is important to stress that
Hanneke‚Äôs algorithm does not receive the distribution of unlabeled data as input. On the other
hand, Benedek and Itai [1991] showed that for any class C and any
 distribution there exists an
log N/2 +log(1/Œ¥)
algorithm that -learns any target from C from O
labeled examples with prob

ability at least 1 ‚àí Œ¥ where N/2 is the size of an 2 -cover of C with respect to the disagreement
metric d(f, g) = Pr[f (x) 6= g(x)]. Here, it is important to note that Benedek and Itai construct
for each distribution a separate algorithm. In other words, they construct a family of algorithms
indexed by the (uncountably many) distributions over the domain. Alternatively, we can think of
Benedek-Itai‚Äôs family of algorithms as a single algorithm that receives the distribution as an input.
It is known that N = O(1/)O(d) ; see Dudley [1978]. Thus, ignoring log(1/) factor, Benedek-Itai
bound is never worse than Hanneke‚Äôs bound.
As we already mentioned, Benedek-Itai‚Äôs algorithm receives as input the distribution of unlabeled data. The algorithm uses it to construct an 2 -cover. Unsurprisingly, there exist distributions
which have a small 2 -cover and thus sample complexity of Benedek-Itai‚Äôs algorithm on such distributions is significantly lower then the Hanneke‚Äôs bound. For instance, a distribution concentrated
on a single point has an 2 -cover of size 2 for any positive .
‚àó
‚Ä†

Harvard University, Cambridge, MA, USA. Supported by a Rabin Postdoctoral Fellowship.
Yahoo Research, New York, NY, USA

1

However, an algorithm does not need to receive the unlabeled distribution in order to enjoy
low sample complexity. For example, empirical risk minimization (ERM) algorithm needs significantly less labeled examples to learn any target under some unlabeled distributions. For instance,
if the distribution is concentrated on a single point, ERM needs only one labeled example to learn
any target. One could be lead to believe that there exists an algorithm that does not receive
the unlabeled distribution as input and achieves Benedek-Itai bound (or a slightly worse bound)
for every distribution. In fact, one could think that ERM or Hanneke‚Äôs algorithm could be such
algorithms. If ERM, Hanneke‚Äôs algorithm, or some other distribution-independent algorithm had
sample complexity that matches (or nearly matches) the optimal distribution-specific sample complexity for every distribution, we could conclude that the knowledge of unlabeled data distribution
is completely useless.
As DarnstaÃàdt et al. [2013] showed this is not the case. They showed that any algorithm for learning projections over {0, 1}n that does not receive the unlabeled distribution as input, requires, for
some data unlabeled distributions, more labeled examples than the Benedek-Itai bound. However,
they did not quantify this gap beside stating that it grows without bound as n goes to infinity.
In this paper, we quantify the gap by showing that any distribution-independent algorithm for
learning the class of projections over {0, 1}n requires, for some unlabeled distributions, ‚Ñ¶(log n)
times as many labeled examples as Benedek-Itai bound. DarnstaÃàdt et al. [2013] showed the gap for
any class with Vapnik-Chervonenkis dimension d is at most O(d). It is well known that VapnikChervonenkis dimensions of projections over {0, 1}n is Œò(log n). Thus our lower bound matches
the upper bound O(d). To better understand the relationship of the upper and lower bounds, we
illustrate the situation for the class of projections over {0, 1}n in Figure 1.
In contrast, we show that for the class of all functions (on any domain) there is no gap between
the two settings. In other words, for learning a target from the class of all functions, unlabeled
data are in fact useless. This illustrates the point that the gap depends in a non-trivial way on
the combinatorial structure of the function class rather than just on the Vapnik-Chervonenkis
dimension.
The paper is organized as follows. In Section 2 we review prior work. Section 3 gives the
necessary definitions and basic probabilistic tools. In Section 4 we give the proof of the separation
result for projections. In Section 5 we prove that there is no gap for the class of all functions. For
O(d) on the size of the
completeness, in Appendix A we give a proof of a simple upper bound O(1/)


log N/2 +log(1/Œ¥)
minimum -cover, and in Appendix B we give a proof of Benedek-Itai‚Äôs O
sample

complexity upper bound.

2

Related work

The question of whether knowledge of unlabeled data distribution helps was proposed and initially
studied by Ben-David et al. [2008]; see also Lu [2009]. However, they considered only classes with
Vapnik-Chervonenkis dimension at most 1, or classes with Vapnik-Chervonenkis dimension d but
only distributions for which the size of the -cover is Œò(1/)Œò(d) , i.e. the -cover is as large as it
can be.1 In these settings, for constant  and Œ¥, the separation of labeled sample complexities is
at most a constant factor, which is exactly what Ben-David et al. [2008] proved. In these settings,
1
For any concept class with Vapnik-Chervonenkis dimension d and any distribution, the size of the smallest -cover
is at most O(1/)O(d) .

2

labeled sample complexity

distribution on a shattered set
Œò (log(n))

an algorithm that does not ‚Äúknow‚Äù the distribution
fixed-distribution learning
distributions over {0, 1}n

Figure 1: The graph shows sample complexity bounds of learning a class of projections over the domain
1
{0, 1}n under various unlabeled distributions. We assume that  and Œ¥ are constant, say,  = Œ¥ = 100
. The
graph shows three lines. The red horizontal line is Hanneke‚Äôs bound for the class of projections, which is
Œò(VC(Cn )) = Œò(log n). The green line is the Benedek-Itai bound. The green line touches the red line for
certain distributions, but is lower for other distributions. In particular, for certain distributions the green
line is O(1). The dashed line corresponds to a particular distribution on a shattered set. This is where the
green line and red line touch. Furthermore, here the upper bound coincides with the lower bound for that
particular distribution. The black line is the sample complexity of an arbitrary distribution-independent
algorithm. For example, the reader can think of the ERM or Hanneke‚Äôs algorithm. We prove that there exist
a distribution where the black line is ‚Ñ¶(log n) times higher than the green line. This separation is indicated
by the double arrow.

unlabeled data are indeed useless. However, these results say nothing about distributions with
-cover of small size and it ignores the dependency on the Vapnik-Chervonenkis dimension.
The question was studied in earnest by DarnstaÃàdt et al. [2013] who showed two major results.
First, they show that for any non-trivial concept class C and for every distribution, the ratio
of the labeled sample complexities between distribution-independent and distribution-dependent
algorithms is bounded by the Vapnik-Chervonenkis dimension. Second, they show that for the
class of projections over {0, 1}n , there are distributions where the ratio grows to infinity as a
function of n.
In learning theory, the disagreement metric and -cover were introduced by Benedek and Itai
[1991] but the ideas are much older; see e.g. Dudley [1978, 1984]. The O(1/)O(d) upper bound on
size of the smallest -cover is by Dudley [1978, Lemma 7.13]; see also Devroye and Lugosi [2000,
Chapter 4] and Haussler [1995]. We present a proof of O(1/)O(d) upper bound in Appendix A.
For any distribution-independent algorithm and any class C of Vapnik-Chervonenkis dimension
d ‚â• 2 and any  ‚àà (0, 1) and
 Œ¥ ‚àà (0,1), there exists a distribution over the domain and a concept
which requires at least ‚Ñ¶ d+log(1/Œ¥)
labeled examples to -learn with probability at least 1 ‚àí Œ¥;

see Anthony and Bartlett [1999, Theorem 5.3] and Blumer et al. [1989], Ehrenfeucht et al. [1989].
The proof of the lower bound constructs a distribution that does not depend on the algorithm.
The distribution is a particular distribution
over a fixed set shattered by C. So even an algorithm

d+log(1/Œ¥)
that knows the distribution requires ‚Ñ¶
labeled examples.


3

3

Preliminaries

Let X be a non-empty set. We denote by {0, 1}X the class of all functions from X to {0, 1}.
A concept class over a domain X is a subset C ‚äÜ {0, 1}X . A labeled example is a pair (x, y) ‚àà
X √ó {0, 1}.
S
m
X
A distribution-independent learning algorithm is a function A : ‚àû
m=0 (X √ó {0, 1}) ‚Üí {0, 1} .
In other words, the algorithm gets as input a sequence of labeled examples (x1 , y1 ), (x2 , y2 ), . . . , (xm , ym )
and outputs a function from X to {0, 1}. We allow the algorithm to output a function that does not
belong to C, i.e., the algorithm can be improper. A distribution-dependent algorithm is a function
that maps any probability distribution over X to a distribution-independent algorithm.
Let P be a probability distribution over a domain X . For any two functions f : X ‚Üí {0, 1},
g : X ‚Üí {0, 1} we define the disagreement pseudo-metric
dP (f, g) = Pr [f (X) 6= g(X)] .
X‚àºP

Let C be a concept class over X , let c ‚àà C, let , Œ¥ ‚àà (0, 1). Let X1 , X2 , . . . , Xm be an i.i.d. sample
from P . We define the corresponding labeled sample T = ((X1 , c(X1 )), (X2 , c(X2 )), . . . , (Xm , c(Xm ))).
We say that an algorithm A, -learns target c from m samples with probability at least 1 ‚àí Œ¥ if
Pr [dP (c, A(T )) ‚â§ ] ‚â• 1 ‚àí Œ¥ .
The smallest non-negative integer m such that for any target c ‚àà C, the algorithm A, -learns the
target c from m samples with probability at least 1 ‚àí Œ¥ is denoted by m(A, C, P, , Œ¥).
We recall the standard definitions from learning theory. For any concept c : X ‚Üí {0, 1} and
any S ‚äÜ X we define œÄ(c, S) = {x ‚àà S : c(x) = 1}. In other words, œÄ(c, S) is the set of examples
in S which c labels 1. A set S ‚äÜ X is shattered by a concept class C if for any subset S 0 ‚äÜ S there
exists a classifier c ‚àà C such that œÄ(c, S) = S 0 . Vapnik-Chervonenkis dimension of a concept class
C is the size of the largest set S ‚äÜ X shattered by C. A subset C 0 of a concept class C is an -cover
of C for a probability distribution P if for any c ‚àà C there exists c0 ‚àà C 0 such that dP (c, c0 ) ‚â§ .
To prove our lower bounds we need three general probabilistic results. The first one is the standard Hoeffding bound. The other two are simple and intuitive propositions. The first proposition
says that if average error dP (c, A(T )) is high, the algorithm fails to -learn with high probability. The second proposition says that the best algorithm for predicting a bit based on some side
information, is to compute conditional expectation of the bit and thresholds it at 1/2.
Theorem 1 (Hoeffding bound). Let XP
1 , X2 , . . . , Xn be i.i.d. random variables that lie in interval
1
[a, b] with probability one and let p = n ni=1 E[Xi ]. Then, for any t ‚â• 0,
" n
#
1X
2
2
Pr
Xi ‚â• p + t ‚â§ e‚àí2nt /(a‚àíb) ,
n
i=1
#
" n
1X
2
2
Xi ‚â§ p ‚àí t ‚â§ e‚àí2nt /(a‚àíb) .
Pr
n
i=1

Proposition 2 (Error probability vs. Expected error). Let Z be a random variable such that Z ‚â§ 1
with probability one. Then,
Pr[Z > t] ‚â•

E[Z] ‚àí t
1‚àít

for any t ‚àà [0, 1).
4

Proof. We have
E[Z] ‚â§ t ¬∑ Pr[Z ‚â§ t] + 1 ¬∑ Pr[Z > t] = t ¬∑ (1 ‚àí Pr[Z > t]) + Pr[Z > t] .
Solving for Pr[Z > t] finishes the proof.
Proposition 3 (Predicting Single Bit). Let U be a finite non-empty set. Let U, V be random
variables (possibly correlated) such that U ‚àà U and V ‚àà {0, 1} with probability one. Let f : U ‚Üí
{0, 1} be a predictor. Then,

X 1
1
Pr [f (U ) 6= V ] ‚â•
‚àí ‚àí E [V | U = u] ¬∑ Pr[U = u] .
2
2
u‚ààU

Proof. We have
Pr [f (U ) 6= V ] =

X

Pr [f (U ) 6= V | U = u] ¬∑ Pr[U = u] .

u‚ààU

It remains to show that
Pr [f (U ) 6= V | U = u] ‚â•

1
1
‚àí ‚àí E [V | U = u] .
2
2

Since if U = u, the value f (U ) = f (u) is fixed, and hence
Pr [f (U ) 6= V | U = u] ‚â• min {Pr [V = 1 | U = u] , Pr [V = 0 | U = u]}
= min {E [V | U = u] , 1 ‚àí E [V | U = u]}
=

1
1
‚àí ‚àí E [V | U = u]
2
2

We used the fact that min{x, 1 ‚àí x} = 12 ‚àí
considering two cases: x ‚â• 21 and x < 12 .

4

1
2

‚àí x for all x ‚àà R which can be easily verified by

Projections

In this section, we denote by Cn the class of projections over the domain X = {0, 1}n . The class
Cn consists of n functions c1 , c2 , . . . , cn from {0, 1}n to {0, 1}. For any i ‚àà {1, 2, . . . , n}, for any
x ‚àà {0, 1}n , the function ci is defined as ci ((x[1], x[2], . . . , x[n])) = x[i].
For any  ‚àà (0, 12 ) and n ‚â• 2, we consider a family Pn, consisting of n probability distributions
P1 , P2 , . . . , Pn over the Boolean hypercube {0, 1}n . In order to describe the distribution Pi , for
some i, consider a random vector X = (X[1],
QnX[2], . . . , X[n]) drawn from Pi . Then distribution Pi
is a product distribution, i.e., Pr[X = x] = j=1 Pr[X[j] = x[j]] for any x ‚àà {0, 1} . The marginal
distributions of the coordinates are
(
1
if j = i,
Pr[X[j] = 1] = 2
for j = 1, 2, . . . , n.
 if j 6= i,
The reader should think of  as a constant that does not depend on n, say,  =
The following result is folklore. We include its proof for completeness.
5

1
100 .

Proposition 4. Vapnik-Chervonenkis dimension of Cn is blog2 nc.
Proof. Let us denote the Vapnik-Chervonenkis dimension by d. Recall that d is the size of the
largest shattered set. Let S be any shattered set of size d. Then, there must be at least 2d distinct
functions in Cn . Hence, d ‚â§ log2 |Cn | = log2 n. Since d is an integer, we conclude that d ‚â§ blog2 nc.
On the other hand, we construct a shattered set of size blog2 nc. The set will consists of points
x1 , x2 , . . . , xblog2 nc ‚àà {0, 1}n . For any i ‚àà {1, 2, . . . , blog2 nc} and any j ‚àà {0, 1, 2, . . . , n ‚àí 1}, we
define xi [j] to be the i-th bit in the binary representation of the number j. (The bit at position
i = 1 is the least significant bit.) It is not hard to see that for any v ‚àà {0, 1}blog2 nc , there exists
c ‚àà Cn such that v = (c(x1 ), c(x2 ), . . . , c(xblog2 nc )). Indeed, given v, let k ‚àà {0, 1, . . . , 2blog2 nc ‚àí 1}
be the number with binary representation v, then we can take c = ck+1 .
Lemma 5 (Small cover). Let n ‚â• 2 and  ‚àà (0, 12 ). Any distribution in Pn, has 2-cover of size 2.
Proof. Consider a distribution Pi ‚àà Pn, for some i ‚àà {1, 2, . . . , n}. Let j be an arbitrary index in
{1, 2, . . . , n} \ {i}. Consider the projections ci , cj ‚àà Cn . We claim that C 0 = {ci , cj } is a 2-cover of
Cn .
To see that C 0 is a 2-cover of Cn , consider any ck ‚àà Cn . We need to show that dPi (ci , ck ) ‚â§ 2
or dPi (cj , ck ) ‚â§ 2. If k = i or k = j, the condition is trivially satisfied. Consider k ‚àà {1, 2, . . . , n} \
{i, j}. Let X ‚àº Pi . Then,
dPi (cj , ck ) = Pr[cj (X) 6= ck (X)]
= Pr[cj (X) = 1 ‚àß ck (X) = 0] + Pr[cj (X) = 0 ‚àß ck (X) = 1]
= Pr[X[j] = 1 ‚àß X[k] = 0] + Pr[X[j] = 0 ‚àß X[k] = 1]
= Pr[X[j] = 1] Pr[X[k] = 0] + Pr[X[j] = 0] Pr[X[k] = 1]
= 2 (1 ‚àí )
< 2 .

Using Benedek-Itai bound (Theorem 12 in Appendix B) we obtain the corollary below. The
corollary states that the distribution-dependent sample complexity of learning target in Cn under
any distribution from Pn, does not depend on n.
Corollary 6 (Learning with knowledge of the distribution). Let n ‚â• 2 and  ‚àà (0, 12 ). There exists
a distribution-dependent algorithm such that for any distribution from Pn, , any Œ¥ ‚àà (0, 1), any
target function c ‚àà Cn , if the algorithm gets
m‚â•

12 ln(2/Œ¥)


labeled examples, with probability at least 1 ‚àí Œ¥, it 4-learns the target.
The next theorem states that without knowing the distribution, learning a target under a
distribution from Pn, requires at least ‚Ñ¶(log n) labeled examples. It is important to note that  in
this bound is the parameter of the distribution, and not the accuracy of the PAC learning model.

6

Theorem 7 (Learning without knowledge of the distribution). For any distribution-independent
algorithm, any  ‚àà (0, 14 ) and any n ‚â• 600/3 there exists a distribution P ‚àà Pn, and a target
concept c ‚àà Cn such that if the algorithm gets
ln n
m‚â§
3 ln(1/)
labeled examples, it fails to

1
16 -learn

the target concept with probability more than

1
16 .

The main idea of the proof is the following. Assume that the learner is restricted to output some
function that belongs to Cn (i.e., the learner is proper ). Then with high probability, the number
of coordinates that coincide with the target on a random sample is ‚Ñ¶(n), and, thus, the number
of projections that output the same value on each of the m random samples is ‚Ñ¶(m n). Therefore,
with high probability, at least one other projection produces the exact same output as the target.
In this case, the learner has to choose randomly, and the probability of choosing a wrong answer is
ln n
at least 1/2. This implies that the learner must see at least m ‚â• ‚Ñ¶( ln(1/)
) samples. In the proof
below we make this intuition formal, and generalize it to the case of improper learners, too.
Proof of Theorem 7. Let A be any learning algorithm. For ease of notation, we formalize it is a
function
‚àû
[

n
A:
{0, 1}m√ón √ó {0, 1}m ‚Üí {0, 1}{0,1} .
m=0

The algorithm receives an m √ó n matrix and a binary vector of length m. The rows of the matrix
corresponds to unlabeled examples and the vector encodes the labels. The output of A is any
function from {0, 1}n ‚Üí {0, 1}.
We demonstrate the existence of a pair (P, c) ‚àà Pn, √ó Cn which cannot be learned with m
samples by the probabilistic method. Let I be chosen uniformly at random from {1, 2, . . . , n}. We
consider the distribution PI ‚àà Pn, and target cI ‚àà Cn . Let X1 , X2 , . . . , Xm be an i.i.d. sample
from PI and let Y1 = cI (X1 ), Y2 = cI (X2 ), . . . , Ym = cI (Xm ) be the target labels. Let X be the
m √ó n matrix with entries Xi [j] and let Y = (Y1 , Y2 , . . . , Ym ) be the vector of labels. The output
of the algorithm is A(X, Y ). We will show that
1
E [dPI (cI , A(X, Y ))] ‚â• .
(1)
8
This means that there exists i ‚àà {1, 2, . . . , n} such that
1
E [dPi (ci , A(X, Y )) | I = i] ‚â• .
8
By Proposition 2,


1
‚àí 1
1
1
Pr dPi (ci , A(X, Y )) >
I = i ‚â• 8 16
>
.
1
16
16
1 ‚àí 16
It remains to prove (1). Let Z be a test sample drawn from PI . That is, conditioned on I, the
sequence X1 , X2 , . . . , Xm , Z is i.i.d. drawn from PI . Then, by Proposition 3,
E [dPI (cI , A(X, Y ))] = Pr [A(X, Y )(Z) 6= cI (Z)]


X
1
1
‚â•
‚àí ‚àí E [cI (Z) | X = x, Y = y, Z = z] ¬∑ Pr [X = x, Y = y, Z = z] . (2)
2
2
m√ón
x‚àà{0,1}
y‚àà{0,1}m
z‚àà{0,1}n

7

We need to compute E [cI (Z) | X = x, Y = y, Z = z]. For that we need some additional notation.
For any matrix x ‚àà {0, 1}m√ón , let x[1], x[2], . . . , x[n] be its columns. For any matrix x ‚àà {0, 1}m√ón
and vector y ‚àà {0, 1}m let
k(x, y) = {i ‚àà {1, 2, . . . , n} : x[i] = y}
be the set of indices of columns of x equal to the vector y. Also, we define k¬∑k to be the sum of
absolute values of entries of a vector or a matrix. (Since we use k¬∑k only for binary matrices and
binary vectors, it will be just the number of ones.)
For any i ‚àà {1, 2, . . . , n},
(

1 1 m kxk‚àíkyk

(1 ‚àí )mn‚àíkxk+kyk if i ‚àà k(x, y),
n
2
Pr [I = i, X = x, Y = y] =
0
if i 6‚àà k(x, y).
Therefore, for any i ‚àà {1, 2, . . . , n},
Pr [I = i, X = x, Y = y]
Pr [X = x, Y = y]
Pr [I = i, X = x, Y = y]
=P
j‚ààk(x,y) Pr [I = j, X = x, Y = y]
(
1
if i ‚àà k(x, y),
= |k(x,y)|
0
if i 6‚àà k(x, y).

Pr [I = i | X = x, Y = y] =

Conditioned on I, the variables Z and (X, Y ) are independent. Thus, for any x ‚àà {0, 1}n , and
i = 1, 2, . . . , n,
Pr [Z = z | I = i, X = x, Y = y] = Pr [Z = z | I = i]
(
1 kzk‚àí1

(1 ‚àí )n‚àíkzk
= 12 kzk
(1 ‚àí )n‚àí1‚àíkzk
2

if z[i] = 1,
if z[i] = 0.

This allows us to compute the conditional probability
Pr [I = i, Z = z | X = x, Y = y]
= Pr [Z = z | I = i, X = x, Y = y] ¬∑ Pr [I = i | X = x, Y = y]
Ô£±
1
kzk‚àí1 (1 ‚àí )n‚àíkzk if i ‚àà k(x, y) and z[i] = 1,
Ô£¥
Ô£¥
Ô£≤ 2|k(x,y)| 
1
= 2|k(x,y)|
kzk (1 ‚àí )n‚àí1‚àíkzk if i ‚àà k(x, y) and z[i] = 0,
Ô£¥
Ô£¥
Ô£≥0
if i 6‚àà k(x, y).
For any z ‚àà {0, 1}n , let
s(x, y, z) = {i ‚àà k(x, y) : z[i] = 1} ,

8

and note that s(x, y, z) ‚äÜ k(x, y). Then,
Pr [Z = z | X = x, Y = y]
n
X
=
Pr [Z = z, I = i | X = x, Y = y]
i=1

X

=

Pr [Z = z, I = i | X = x, Y = y]

i‚ààk(x,y)

X

=

X

Pr [Z = z, I = i | X = x, Y = y] +

Pr [Z = z, I = i | X = x, Y = y]

i‚ààk(x,y)\s(x,y,z)

i‚ààs(x,y,x)

1
1
=
¬∑ |s(x, y, z)| ¬∑ kzk‚àí1 (1 ‚àí )n‚àíkzk +
¬∑ (|k(x, y)| ‚àí |s(x, y, z)|) ¬∑ kzk (1 ‚àí )n‚àí1‚àíkzk
2|k(x, y)|
2|k(x, y)|
=

kzk‚àí1 (1 ‚àí )n‚àí1‚àíkzk
¬∑ (|s(x, y, z)| ¬∑ (1 ‚àí 2) + |k(x, y)| ¬∑ ) .
2|k(x, y)|

Hence,
E [cI (Z) | X = x, Y = y, Z = z]
= Pr [Z[I] = 1 | X = x, Y = y, Z = z]
Pr [Z[I] = 1, Z = z | X = x, Y = y]
=
Pr [Z = z | X = x, Y = y]
n
X
Pr [I = i, Z[i] = 1, Z = z | X = x, Y = y]
=

i=1

Pr [Z = z | X = x, Y = y]
|s(x, y, z)| kzk‚àí1
¬∑
(1 ‚àí )n‚àíkzk
2|k(x, y)|
= kzk‚àí1

(1 ‚àí )n‚àí1‚àíkzk
¬∑ (|s(x, y, z)| ¬∑ (1 ‚àí 2) + |k(x, y, z)| ¬∑ )
2|k(x, y)|
|s(x, y, z)| ¬∑ (1 ‚àí )
=
|s(x, y, z)| ¬∑ (1 ‚àí 2) + |k(x, y)| ¬∑ 
1‚àí
=
|k(x, y)| ¬∑ 
1 ‚àí 2 +
|s(x, y, z)|

We now show that the last expression is close to 1/2. It is easy to check that




|k(x, y)| ¬∑ 
5
1‚àí
1 3
‚àà
,2
=‚áí
‚àà
,
.
|k(x, y)| ¬∑ 
|s(x, y, z)|
6
4 4
1 ‚àí 2 +
|s(x, y, z)|
Indeed, since  ‚àà (0, 14 ),
1‚àí
1‚àí
1 ‚àí 1/4
1
‚â•
‚â•
=
|k(x, y)| ¬∑ 
1 ‚àí 2 + 2
1+2
4
1 ‚àí 2 +
|s(x, y, z)|
9

and
1‚àí
1‚àí
1
3
‚â§
‚â§
= .
|k(x, y)| ¬∑ 
1 ‚àí 2 + 5/6
1 ‚àí 1/2 + 5/6
4
1 ‚àí 2 +
|s(x, y, z)|
We now substitute this into the (2). We have


X
1
1
‚àí ‚àí E [cI (Z) | X = x, Y = y, Z = z] ¬∑ Pr [X = x, Y = y, Z = z]
2
2
m√ón
x‚àà{0,1}
y‚àà{0,1}m
z‚àà{0,1}n

Ô£´

Ô£∂

Ô£¨1
Ô£¨ ‚àí 1‚àí
Ô£≠2
2
m√ón

Ô£∑
1‚àí
Ô£∑ ¬∑ Pr [X = x, Y = y, Z = z]
|k(x, y)| ¬∑  Ô£∏
1 ‚àí 2 +
|s(x, y, z)|

Ô£´

Ô£∂

X

=

x‚àà{0,1}
y‚àà{0,1}m
z‚àà{0,1}n

X

‚â•

x‚àà{0,1}m√ón
y‚àà{0,1}m
z‚àà{0,1}n
|k(x,y,z)|
‚àà[ 56 ,2]
|s(x,y,z)|

X

‚â•

x‚àà{0,1}m√ón
y‚àà{0,1}m
z‚àà{0,1}n
|k(x,y,z)|
‚àà[ 56 ,2]
|s(x,y,z)|

Ô£¨1
Ô£¨ ‚àí 1‚àí
Ô£≠2
2



1 1
‚àí
2 4

Ô£∑
1‚àí
Ô£∑ ¬∑ Pr [X = x, Y = y, Z = z]
|k(x, y)| ¬∑  Ô£∏
1 ‚àí 2 +
|s(x, y, z)|


¬∑ Pr [X = x, Y = y, Z = z]




|k(X, Y )| ¬∑ 
5
1
‚àà
,2 .
= Pr
4
|s(X, Y, Z)|
6
|k(X,Y )|¬∑
In order to prove (1), we need to show that |s(X,Y,Z)|
‚àà
end, we define two additional random variables

The condition

|k(X,Y )|¬∑
|s(X,Y,Z)|

K = |k(X, Y )|
and


‚àà 65 , 2 is equivalent to

5



6, 2

with probability at least 1/2. To that

S = |s(X, Y, Z)| .

1
S
6
‚â§
‚â§ .
2
K
5

(3)

First, we lower bound K. For any y ‚àà {0, 1}m and any i, j ‚àà {1, 2, . . . , n},
(
1
if j = i,
Pr [j ‚àà k(X, Y ) | Y = y, I = i] = kyk
m‚àíkyk
 (1 ‚àí )
if j 6= j.
Conditioned on Y = y and I = i, the random variable K ‚àí 1 = |k(X, Y ) \ {I}| is a sum of n ‚àí 1
Bernoulli variables with parameter kyk (1 ‚àí )m‚àíkyk , one for each column except for column i.
10

Hoeffding bound with t = m /2 and the loose lower bound kyk (1 ‚àí )m‚àíkyk ‚â• m gives




K ‚àí1
K ‚àí1
m
Pr
Y = y, I = i = Pr
>
> m ‚àí t Y = y, I = i
n‚àí1
2
n‚àí1


K ‚àí1
kyk
m‚àíkyk
>  (1 ‚àí )
‚àí t Y = y, I = i
‚â• Pr
n‚àí1
2

‚â• 1 ‚àí e‚àí2(n‚àí1)t .
Since m ‚â§

ln n
3 ln(1/) ,

we lower bound t =

m
2

as

1 ln n
1
.
t = m /2 >  3 ln(1/) = ‚àö
2
23n
Since the lower bound is uniform for all choices of y and i, we can remove the conditioning and
conclude that




(n ‚àí 1)
(n ‚àí 1)
‚àö
Pr K > 1 +
‚â• 1 ‚àí exp ‚àí
.
23n
2n2/3
For n ‚â• 25, we can simplify it further to
"
#
n2/3
3
Pr K ‚â•
‚â• .
2
4
Second, conditioned on K = r, the random variable S is a sum of r ‚àí 1 Bernoulli random
variables with parameter  and one Bernoulli random variable with parameter 1/2. Hoeffding
bound for any t ‚â• 0 gives that


(K ‚àí 1) + 1/2
S
2
‚àí
< t K = r ‚â• 1 ‚àí 2e‚àí2rt .
Pr
K
K
Thus,
"

#
S
(K ‚àí 1) + 1/2
n2/3
Pr
‚àí
< t and K ‚â•
K
K
2


n
X
(K ‚àí 1) + 1/2
S
Pr
‚àí
‚â•
< t K = r ¬∑ Pr[K = r]
K
K
2/3
‚â•

r=dn /2e
n

X

1 ‚àí 2e‚àí2rt

2



¬∑ Pr[K = r]

"

#

r=dn2/3 /2e



‚àín2/3 t2 /2

‚â• 1 ‚àí 2e



n2/3
¬∑ Pr K ‚â•
2
2/3 2

.

We choose t = /4. Since n ‚â• 600/3 , we have e‚àín t /2 < 81 and thus
"
#
"
#


S
(K ‚àí 1) + 1/2
n2/3
n2/3
‚àín2/3 t2 /2
Pr
‚àí
< t and K ‚â•
‚â• 1 ‚àí 2e
¬∑ Pr K ‚â•
K
K
2
2

3
2/3 2
‚â•
1 ‚àí 2e‚àín t /2
4

1
3
1
9
>
1‚àí
=
> .
4
4
16
2
11

We claim that t = /4,
S
K

‚àí

(K‚àí1)+1/2
K

S
K

‚àí

(K‚àí1)+1/2
K

< t and K ‚â•

n2/3
2

imply (3). To see that, note that

< t is equivalent to
(K ‚àí 1) + 1/2
S
(K ‚àí 1) + 1/2
‚àít<
<
+t
K
K
K

which implies that




S
1
1
1
‚àít<
+
p 1‚àí
< 1‚àí
+t.
K
K
K
2K
Since K ‚â•

n2/3
2

and n ‚â• 25 we have K > 4, which implies that
S
3
1
3
‚àít<
< +
+t.
4
K
4
2K

Since K ‚â•

n2/3
2

and n ‚â•

12
3/2

we have K >

5
2 ,

which implies that

3
S
3

‚àít<
< + +t.
4
K
4
5
Since t = /4, the condition (3) follows.

5

All functions

Let X be some finite domain. We say a sample T = ((x1 , y1 ), . . . , (xm , ym )) ‚àà (X √ó {0, 1})m
of size m is self-consistent if for any i, j ‚àà {1, 2, . . . , m}, xi = xj implies that yi = yj . A
distribution independent algorithm A is said to be consistent if for any self-consistent sample
T = ((x1 , y1 ), . . . , (xm , ym )) ‚àà (X √ó {0, 1})m , A(T )(xi ) = yi holds for any i = 1, 2, . . . , m.
In this section we show that for Call = {0, 1}X , any consistent distribution independent learner
is almost as powerful as any distribution independent learner. Note that, in particular, the ERM
algorithm for Call is consistent. In other words, for the class Call unlabeled data do not have any
information theoretic value.
Theorem 8 (No Gap). Let X be some finite domain, Call = {0, 1}X and A be any consistent
learning algorithm. Then, for any distribution P over X , any (possibly distribution dependent)
learning algorithm B and any , Œ¥ ‚àà (0, 1),
m(A, Call , P, 2, 2Œ¥) ‚â§ m(B, Call , P, , Œ¥) .
Proof. Fix any integer m ‚â• 0 and any distribution P over X . Let X, X1 , X2 , . . . , Xm be an i.i.d.
sample from P . Define the random variable
Z = Pr[X 6‚àà {X1 , X2 , . . . , Xm } | X1 , X2 , . . . , Xm ] .
In other words, Z is the probability mass not covered by X1 , X2 , . . . , Xm . For any c ‚àà Call , let
Tc = ((X1 , c(X1 )), (X2 , c(X2 )), . . . , (Xm , c(Xm ))) be the sample labeled according to c. Since A is
consistent, with probability one, for any c ‚àà Call ,
dP (A(Tc ), c) ‚â§ Z .
12

(4)

Let e
c be chosen uniformly at random from Call , independently of X, X1 , X2 , . . . , Xm . Additionally,
define b
c ‚àà Call as
(
e
c(x)
if x ‚àà {X1 , X2 , . . . , Xm },
b
c(x) =
1‚àíe
c(x) otherwise.
and note that b
c and e
c are distributed identically and Tec = Tbc , and thus
E [1 [dP (B (Tec ) , e
c) ‚â• ] | Tec ] = E [1 [dP (B (Tbc ) , b
c) ‚â• ] | Tec ]

(5)

We have
sup Pr[dP (B(Tc ), c) ‚â• ] = sup E [1 [dP (B (Tc ) , c) ‚â• ]]
c‚ààCall

c‚ààCall

‚â• E [1 [dP (B (Tec ) , e
c) ‚â• ]]
= E [E [1 [dP (B (Tec ) , e
c) ‚â• ] | Tec ]]
 
1
1
= E E 1 [dP (B (Tec ) , e
c) ‚â• ] + 1 [dP (B (Tbc ) , b
c) ‚â• ]
2
2
 

1
‚â• E E 1 [Z ‚â• 2] Tec
2
1
= E [1 [Z ‚â• 2]]
2
1
= Pr [Z ‚â• 2]
2
1
= sup Pr [Z ‚â• 2]
2 c‚ààC
1
‚â• sup Pr [dP (A(Tc ), c) ‚â• 2] .
2 c‚ààC


Tec

(6)
(7)

(8)

Equation (6) follows from (5). To justify inequality (7), note that since the classifiers e
c and b
c
disagree on the missing mass, if Z ‚â• 2 then dP (B(Tec ), e
c) ‚â•  or dP (B(Tbc ), b
c) ‚â•  or both. By
symmetry between e
c and b
c, if Z ‚â• 2 then with probability at least 1/2, dP (B(Tec ), e
c) ‚â• . Inequality
(8) follows from (4).
Since the inequality
sup Pr[dP (B(Tc ), c) ‚â• ] ‚â•
c‚ààCall

1
sup Pr [dP (A(Tc ), c) ‚â• 2]
2 c‚ààC

holds for arbitrary m, it implies m(A, Call , P, 2, 2Œ¥) ‚â§ m(B, Call , P, , Œ¥) for any , Œ¥ ‚àà (0, 1).

6

Conclusion and open problems

DarnstaÃàdt et al. [2013] showed that the gap between the number of samples needed to learn a class
of functions of Vapnik-Chervonenkis dimension d with and without knowledge of the distribution
is upper-bounded by O(d). We show that this bound is tight for the class of Boolean projections.
On the other hand, for the class of all functions, this gap is only constant. These observations lead
to the following research directions.
13

First, it will be interesting to understand the value of the gap for larger classes of functions.
For example, one might consider the classes of (monotone) disjunctions over {0, 1}n , (monotone)
conjuctions over {0, 1}n , parities over {0, 1}n , and halfspaces over Rn . The Vapnik-Chervonenkis
dimension of these classes is Œò(n) thus the gap for these classes is at least ‚Ñ¶(1) and at most O(n).
Other than these crude bounds, the question of what is the gap for these classes is wide open.
Second, as the example with class of all functions shows, the gap is not characterized by the
Vapnik-Chervonenkis dimension. It will be interesting to study other parameters which determine
this gap. In particular, it will be interesting to obtain upper bounds on the gap in terms of other
quantities.
Finally, we believe that studying this question in the agnostic extension of the PAC model
[Anthony and Bartlett, 1999, Chapter 2] will be of great interest, too.

Acknowledgements
We thank the anonymous reviewers for their valuable comments.

References
Martin Anthony and Peter L. Bartlett. Neural Network Learning: Theoretical Foundations. Cambridge University Press, 1999.
Shai Ben-David, Tyler Lu, and DaÃÅvid PaÃÅl. Does unlabeled data provably help? Worst-case analysis of the sample complexity of semi-supervised learning. In Proceedings of the 21st Annual
Conference on Learning Theory, Helsinki, Finland, 9‚Äì12, July 2008, pages 33‚Äì44. Omnipress,
2008.
Gyora M. Benedek and Alon Itai. Learnability with respect to fixed distributions. Theoretical
Computer Science, 86(2):377‚Äì389, 1991.
Anselm Blumer, Andrzej Ehrenfeucht, David Haussler, and Manfred K. Warmuth. Learnability
and the Vapnik-Chervonenkis dimension. Journal of the ACM (JACM), 36(4):929‚Äì965, 1989.
Malte DarnstaÃàdt, Hans Ulrich Simon, and BalaÃÅzs SzoÃàreÃÅnyi. Unlabeled data does provably help.
In 30th International Symposium on Theoretical Aspects of Computer Science, STACS 2013,
February 27 - March 2, 2013, Kiel, Germany, pages 185‚Äì196, 2013.
Luc Devroye and GaÃÅbor Lugosi. Combinatorial Methods in Density Estimation. Springer, 2000.
Richard M. Dudley. Central limit theorems for empirical measures. The Annals of Probability,
pages 899‚Äì929, 1978.
Richard M. Dudley. A course on empirical processes, pages 1‚Äì142. Springer, 1984.
Andrzej Ehrenfeucht, David Haussler, Michael Kearns, and Leslie Valiant. A general lower bound
on the number of examples needed for learning. Information and Computation, 82(3):247‚Äì261,
1989.

14

Steve Hanneke. The optimal sample complexity of PAC learning. Journal of Machine Learning
Research, 17(38):1‚Äì15, 2016.
David Haussler. Sphere packing numbers for subsets of the Boolean n-cube with bounded VapnikChervonenkis dimension. Journal of Combinatorial Theory, Series A, 69(2):217‚Äì232, 1995.
Wassily Hoeffding. Probability inequalities for sums of bounded random variables. Journal of the
American Statistical Association, 58(301):13‚Äì30, 1963.
Tyler Lu. Fundamental limitations of semi-supervised learning. Master‚Äôs thesis, David R. Cheriton School of Computer Science, University of Waterloo, Waterloo, Ontario, Canada N2L
3G1, 2009. Available at https://uwspace.uwaterloo.ca/bitstream/handle/10012/4387/
lumastersthesis_electronic.pdf.

A

Size of -cover

In this section, we present (4e/)d/(1‚àí1/e) upper bound on the size of the -cover of any concept
class of Vapnik-Chervonenkis dimension d. To prove our result, we need Sauer‚Äôs lemma. Its proof
can be found, for example, in Anthony and Bartlett [1999, Chapter 3].
Lemma 9 (Sauer‚Äôs lemma). Let X be a non-empty domain and let C ‚äÜ {0, 1}X be a concept class
with Vapnik-Chervonenkis dimension d. Then, for any S ‚äÜ X ,
|{œÄ(c, S) : c ‚àà C}| ‚â§


d 
X
|S|
i=0

i

.

We remark that if n ‚â• d ‚â• 1 then
d  
X
n
i=0

i

‚â§

 ne d
d

(9)

where e = 2.71828 . . . is the base of the natural logarithm. This follows from the following calculation
 d X
d  
d    i
X
n
d
d
n
¬∑
‚â§
i
i
n
n
i=0
i=0




n
X
n
d i
‚â§
i
n
i=0

n
d
= 1+
‚â§ ed
n
where we used in the last step that 1 + x ‚â§ ex for any x ‚àà R.

15

Theorem 10 (Size of -cover). Let X be a non-empty domain and let C ‚äÜ {0, 1}X be a concept
class with Vapnik-Chervonenkis dimension d. Let P be any distribution over X . For any  ‚àà (0, 1],
there exists a set C 0 ‚äÜ C such that


0

|C | ‚â§

4e


d/(1‚àí1/e)
(10)

and for any c ‚àà C there exists c0 ‚àà C 0 such that dP (c, c0 ) ‚â§ .
Proof. We say that a set B ‚äÜ C is an -packing if
‚àÄc, c0 ‚àà B

c 6= c0

=‚áí

dP (c, c0 ) > 

We claim that there exists a maximal -packing. In order to show that a maximal set exists we
to appeal to Zorn‚Äôs lemma. Consider the collection of all -packings. We impose partial order on
them by set inclusion.
Notice that any totally ordered collection
has
S
S {Bi : i ‚àà I} of -packings
0
0
an upper bound i‚ààI Bi that is an -packing. Indeed, if c, c ‚àà i‚ààI Bi such that c 6= c then there
exists i ‚àà I such that c, c0 ‚àà BiSsince {Bi : i ‚àà I} is totally ordered. Since Bi is an -packing,
dP (c, c0 ) > . We conclude that i‚ààI Bi is an -packing. By Zorn‚Äôs lemma, there exists a maximal
-packing.
Let C 0 be a maximal -packing. We claim that C 0 is also an -cover of C. Indeed, for any c ‚àà C
there exists c0 ‚àà C 0 such that dP (c, c0 ) ‚â§  since otherwise C 0 ‚à™ {c} would be an -packing, which
would contradict maximality of C 0 .
It remains to upper bound |C 0 |. Consider any finite subset C 00 ‚äÜ C 0 . It suffices to show an
upper bound on |C 00 | and since C 00 is arbitrary, the same upper bound holds for |C 0 |. Let M = |C 00 |
and let c1 , c2 , . . . , cM be concepts in C 00 . For any i, j ‚àà {1, 2, . . . , M }, i < j, let
Ai,j = {x ‚àà X : ci (x) 6= cj (x)} .
Let X1 , X2 , . . . , XK be an i.i.d. sample from P . We will choose K later. Since dP (ci , cj ) > ,
Pr[Xk ‚àà Ai,j ] > 
Since there are

M
2



for k = 1, 2, . . . , K.

subsets Ai,j , we have
Pr [‚àÄi, j, i < j, ‚àÉk, Xk ‚àà Ai,j ]
= 1 ‚àí Pr [‚àÉi, j, i < j, ‚àÄk, Xk 6‚àà Ai,j ]
X
‚â•1‚àí
Pr [‚àÄk, Xk 6‚àà Ai,j ]
1‚â§i<j‚â§M

‚â•1‚àí

X

(1 ‚àí )K

1‚â§i<j‚â§M

 
M
=1‚àí
(1 ‚àí )K .
2

For K =

ln (M
2)



+ 1, the above probability is strictly positive. This means there exists a set

S = {x1 , x2 , . . . , xK } ‚äÜ X such that Ai,j ‚à© S is non-empty for every i < j. This means that for
16

every for every i 6= j, ci (S) 6= cj (S) and hence M = |C 00 | = |{œÄ(c, S) : c ‚àà C}|. Thus by Sauer‚Äôs
lemma
d  
X
K
M‚â§
.
i
i=0

We now show that this inequality implies that M ‚â§ (4e/)d/(1‚àí1/e) . We consider several cases.
Case 1: d = ‚àí‚àû. That is, no set is shattered, and C = ‚àÖ. Then, M = 0 and inequality trivially
follows.
Case 2: d = 0. Then, M ‚â§ 1 and the inequality trivially follows.
Case 3a: d ‚â• 1 and M ‚â§ ed . Clearly, M ‚â§ ed ‚â§ (4e/)d/(1‚àí1/e) .
Case 3b: d ‚â• 1 and M > ed . Then, K ‚â• ln M ‚â• d and hence by (9),


d  
X
K
Ke d
M‚â§
‚â§
.
i
d
i=0

Thus,



Ke
ln M ‚â§ d ln
d
Ô£∂
Ô£´  M 
ln ( 2 )
+1 Ô£∑

Ô£¨e
Ô£∑
‚â§ d ln Ô£¨
Ô£≠
Ô£∏
d
Ô£∂
Ô£´  M
ln ( 2 )
+2 Ô£∑

Ô£¨e
Ô£∑
Ô£¨
‚â§ d ln Ô£≠
Ô£∏
d
Ô£∂
Ô£´  M
ln ( 2 )+2

Ô£¨e
Ô£∑
Ô£∑
‚â§ d ln Ô£¨
Ô£≠
Ô£∏
d

‚â§ d ln
‚â§ d ln

e

2 ln M +2


!

d
e

4 ln M


!

d
  


4e
ln M
= d ln
+ ln

d
 
1
4e
‚â§ d ln
+ ln M .

e
where in the last step we used that ln x ‚â§ x/e for any x > 0. Hence,
 
4e
(1 ‚àí 1/e) ln M ‚â§ d ln

which implies the lemma.
17

B

Fixed distribution learning

Theorem 11 (Chernoff‚ÄìHoeffding bound, Hoeffding [1963]). Let X1 , X2 , . . . , Xn be i.i.d. Bernoulli
random variables with E[Xi ] = p. Then, for any  ‚àà [0, min{p, 1 ‚àí p}),
" n
#
1X
Pr
Xi ‚â• p +  ‚â§ e‚àínD(p+kp) ,
n
i=1
" n
#
1X
Pr
Xi ‚â§ p ‚àí  ‚â§ e‚àínD(p‚àíkp) .
n
i=1

where



 
1‚àíx
x
+ (1 ‚àí x) ln
D (xky) = x ln
y
1‚àíy

is the Kullback-Leibler divergence between Bernoulli distributions with parameters x, y ‚àà [0, 1].
We further use the following inequality
D (xky) ‚â•

(x ‚àí y)2
2 max{x, y}

Theorem 12 (Benedek-Itai). Let C ‚äÜ {0, 1}X be a concept class over a non-empty domain X .
Let P be a distribution over X . Let  ‚àà (0, 1] and assume that C has an 2 -cover of size at most N .
Then, there exists an algorithm, such that for any Œ¥ ‚àà (0, 1), any target c ‚àà C, if it gets


ln N + ln(1/Œ¥)
m ‚â• 48

labeled samples then with probability at least 1 ‚àí Œ¥, it -learns the target.
Proof. Given a labeled sample T = ((x1 , y1 ), . . . , (xm , ym )), for any c ‚àà C, we define
m

errT (c) =

1 X
1 [c(xi ) 6= yi ] .
m
i=1

Let C 0 ‚äÜ C be an (/2)-cover of size at most N . Consider the algorithm A that given a labeled
sample T outputs
b
c = argmin errT (c0 )
c0 ‚ààC 0

breaking ties arbitrarily. We prove that A, with probability at least 1 ‚àí Œ¥, -learns any target c ‚àà C
under the distribution P .
Consider any target c ‚àà C. Then there exists e
c ‚àà C 0 such that dP (c, e
c) ‚â§ /2. Let C 00 =
{c0 : dP (c, c0 ) > }. We claim that with probability at least 1 ‚àí Œ¥, for all c0 ‚àà C 00 , errT (c0 ) > 32 
and errT (e
c) < 23  and hence A outputs b
c ‚àà C 0 \ C 00 .

18

Consider any c0 ‚àà C 00 and note that errT (c0 ) is an average of Bernoulli random variables with
mean dP (c, c0 ) > . Thus, by Chernoff bound,





2
2
0
0
Pr errT (c ) >  > 1 ‚àí exp ‚àímD
 dP (c, c )
3
3
!
( 32  ‚àí dP (c, c0 ))2
> 1 ‚àí exp ‚àím
2dP (c, c0 )
> 1 ‚àí exp (‚àím/18)
where the last inequality follows from the inequality


2
‚àíx
3

2

1
‚â• x
9

valid for any x ‚â•  > 0. Similarly, errT (e
c) is an average of Bernoulli random variables with mean
dP (c, e
c) < /2. Thus, by Chernoff bound,





2
2
Pr errT (e
c) <  > 1 ‚àí exp ‚àímD
 dP (c, e
c)
3
3
!
( 32  ‚àí dP (c, e
c))2
> 1 ‚àí exp ‚àím
4
3
> 1 ‚àí exp (‚àím/48) .
Since |C 00 | ‚â§ N ‚àí 1, by union bound, with probability at least 1 ‚àí (N ‚àí 1) exp(‚àím/48), for all
c0 ‚àà C 00 , errT (c0 ) > 23 . Finally, with probability at least 1 ‚àí N exp(‚àím/48) ‚â• 1 ‚àí Œ¥, errT (e
c) < 32 
2
0
00
0
and for all c ‚àà C , errT (c ) > 3 .

19

