arXiv:1911.09640v3 [math.CO] 29 Jun 2020

A RANDOMIZED CONSTRUCTION OF HIGH GIRTH REGULAR
GRAPHS
NATI LINIAL AND MICHAEL SIMKIN
Abstract. We describe a new random greedy algorithm for generating regular
graphs of high girth: Let k ≥ 3 and c ∈ (0, 1) be fixed. Let n ∈ N be even and
set g = c logk−1 (n). Begin with a Hamilton cycle G on n vertices. As long as the
smallest degree δ(G) < k, choose, uniformly at random, two vertices u, v ∈ V (G) of
degree δ(G) whose distance is at least g − 1. If there are no such vertex pairs, abort.
Otherwise, add the edge uv to E(G).
We show that with high probability this algorithm yields a k-regular graph with
girth at least g. Our analysis also implies that there are (Ω(n))kn/2 labeled k-regular
n-vertex graphs with girth at least g.

1. Introduction
The girth of a graph is the length of its shortest cycle. It is a classical challenge to
determine g(k, n), the largest possible girth of k-regular graphs with n vertices. Here
we only concern ourselves with fixed k ≥ 3 and large n. Moore’s bound says that
g(k, n) ≤ (1 ± o (1)) · 2 logk−1 (n). Although the argument is very simple, this remains
our best asymptotic upper bound.
The study of high-girth graphs has a long history. Using a combinatorial argument,
Erdős and Sachs [12] proved in 1963 that g(k, n) ≥ (1 ± o (1)) logk−1 (n). Twenty
years later, Biggs and Hoare [3] gave an algebraic construction of a family of cubic
graphs later shown [36] to have girth at least (1 − o (1)) 43 log2 (n). Then, for k an
odd prime plus one, Lubotzky, Phillips, and Sarnak [27] constructed their celebrated
Ramanujan graphs, with girth (1 ± o (1)) 43 logk−1 (n). As observed in [21, Introduction],
this implies that g(k, n) ≥ (1 − o(1))c(k) log k−1 (n), where c(k) > 1 for every k ≥ 3,
and limk→∞ c(k) = 4/3. Cayley graphs attaining this bound were found by Dahan [11].
Along the way, advances by Chiu [10], Morgenstern [29], and Lazebnik, Ustimenko, and
Woldar [26] broadened the range of degrees for which similar constructions are known.
We further refer the reader to Biggs’s survey [4] of the best known constructions for
cubic graphs.
In contrast, and notwithstanding considerable research efforts, the Erdős-Sachs bound
remains the best asymptotic lower bound on g(k, n) that is derived by combinatorial
and probabilistic techniques. This is one of very few examples where explicit algebraic
constructions beat the probabilistic method. We believe that the road to constructing
high-girth graphs using such methods goes via better understanding of the large-scale
geometry of graphs. In our open problem section we mention several additional mysteries in this domain.
Supported by Israel Science Foundation grant 659/18.
1

Here we describe a random greedy algorithm to construct regular high-girth graphs.
In recent years, random greedy algorithms have become a powerful tool for constructing
constrained combinatorial structures. Thus, Glock, Kühn, Lo, and Osthus [19], and
independently Bohman and Warnke [6], used this method to prove the existence of
approximate Steiner triple systems that are locally sparse. This methodology has also
played prominent roles in the proofs by Keevash [22] and Glock, Kühn, Lo, and Osthus
[18] of the existence of combinatorial designs.
Random greedy algorithms have also been studied in their own right. For example,
in the “triangle-free” graph process (e.g., [13, 5]), edges are randomly added to a graph
one by one and subject to the constraint that no triangle is created. Similarly, various
authors studied “H-free” processes for other fixed graphs H, including stars [33] and
cycles [30, 7, 31, 34, 32]. In another relevant paper Krivelevich, Kwan, Loh, and
Sudakov [24] studied the process where edges are randomly added to a graph as long
as the matching number remains below a fixed value which may depend on the number
of vertices. This is indeed just a tiny sample of a rich and beautiful body of literature.
Here is a simple method to generate random k-regular graphs on n vertices: Start
with a Hamilton cycle, and repeatedly add perfect matchings uniformly at random
until the desired degree is attained. Since the present paragraph is intended only as
background, we do not go into detail, and do not dwell on how to avoid double edges.
We consider here a sequential variant of this algorithm, which produces graphs of girth
at least g. Let G = (V, E) be a graph on n vertices with all vertex degrees at most
k (in our main application, G is a Hamilton cycle, and k ≥ 3). Let g ≤ n. Set
G0 = G = (V, E0 ). We obtain Gt+1 = (V, Et+1 ) from Gt as follows:
• If Gt is k-regular, set Gt+1 = Gt .
• Otherwise:
– Let d < k be the smallest vertex degree in Gt , and let Wt be the set of
unsaturated vertices in Gt , i.e., those with degree d.
– We say that u, v ∈ Wt is an available pair of vertices if their distance in
Gt is at least g − 1. Let At be the set of available pairs, and let Ht be the
graph (Wt , At ).
– If At = ∅, set Gt+1 = Gt .
– Otherwise, choose et+1 ∈ At uniformly at random, and set Et+1 = Et ∪
{et+1 }.
We call this the (G, g, k)-high-girth-process. We say that the process saturates
if for some t, Gt is k-regular. We note that in this case girth(Gt ) ≥ min {g, girth(G)}.
Our main result is that with proper choice of parameters, this algorithm yields highgirth regular graphs.
Theorem 1.1. Let 1 > c > 0, k ≥ 3 an integer, and n an even integer. Let g = g(n) ≤
c logk−1 (n), and G be a Hamilton cycle on n vertices. Then, w.h.p.1, the (G, g, k)-highgirth-process saturates.
A byproduct of the analysis of this algorithm is a lower bound on the number of
high-girth regular graphs.
1We say that a sequence of events occurs with high probability (w.h.p.) if the probabilities of
their occurrence tend to 1.
2

Theorem 1.2. Let 1 > c > 0, k ≥ 3 an integer, and n an even integer. There are at
least (Ω(n))kn/2 labeled k-regular graphs G on n vertices with girth(G) ≥ c logk−1 (n).
Remark 1.3. We do not give Theorem 1.2 in the best form known to us, since we believe
this is in any rate far from the truth.
We also mention that for c < 1/2, a remarkably accurate enumeration is given by
McKay, Wormald, and Wysocka [28, Corollary 2] who studied the distribution of the
number of cycles in random regular graphs. However, they do not give a construction,
and their method applies only when c < 1/2.
Theorem 1.2 illustrates one advantage of probabilistic constructions over algebraic
ones: While the latter achieve higher girth, they are sporadic and provide only a
small supply of examples. Similarly, purely deterministic constructions (such as Erdős
and Sachs’s) tend to be restrictive and difficult to analyze. In contrast, probabilistic
techniques provide a viewpoint from which to study a very large family of high-girth
graphs.
In comparison with other results in the literature, ours is the first probabilistic
algorithm that constructs graphs with unbounded girth that are also regular. For
constant g, Osthus and Taraz [30, Corollary 4] determined (up to polylog factors) the
final number of edges in the H-free process, where H is the collection of all cycles shorter
than g. Bayati, Montanari, and Saberi [1] studied a similar sequential process which
samples uniformly from
 the family of girth-g graphs with m edges, where g is a constant
1+α(g)
and m = O n
, for some non-negative function α. Chandran [9] considered a
(deterministic) greedy algorithm to construct graphs with girth (1 + o (1)) logk (n) and
average degree k. However, none of these constructions produce regular graphs. Closer
to the algebraic end of the spectrum, Gamburd, Hoory, Shahshahani, Shalev, and Virág
[16] showed that for various families of groups, random k-regular Cayley graphs have
unbounded girth that in some cases is as high as (1 − o(1)) log k−1 (n).
The rest of this paper is organized as follows. The remainder of this section introduces some notations. In Section 2 we prove Theorem 1.1, modulo two technical claims
which are proved in Sections 3 and 4. We prove Theorem 1.2 in Section 5. We close
with some remarks and open problems in Section 6.
1.1. Notation. The vertex and edge sets of a graph G are denoted by V (G), resp.
E(G). We write e(G) = |E(G)|. The neighbor set of vertex v ∈ V (G) is denoted
ΓG (v). The distance between u, v ∈ V (G) is denoted δG (u, v). The graph of G induced
by U ⊆ V (G) is denoted G[U ].
The set {1, 2, . . . , a} is denoted by [a]. Also, [a]0 := {0, 1, 2, . . . , a}, and N0 :=
N ∪ {0}. For x, y ∈ R, we write x ± y to indicate an unspecified number in the interval
[x − |y|, x + |y|].
2. Constructing high-girth graphs: proof of Theorem 1.1
Let G′0 , G′1 , . . . be a (G′ , g, k)-high-girth-process, where G′ is a Hamilton cycle, and
c, k, n and g ≤ c logk−1 (n) are as in the theorem. We argue by induction on k,
starting with k = 3. Now, suppose Theorem 1.1 holds for k − 1 ≥ 3. Then, since
3

g ≤ c logk−1 (n) < c logk−2 (n), it follows by induction that w.h.p. G′(k−2)n/2 is (k − 1)regular. It is thus sufficient to prove the following proposition (which covers both the
base case and the inductive step).
Proposition 2.1. Let G be a (k − 1)-regular graph on n vertices, with n even and
k ≥ 3. Let c < 1 and let g ≤ c logk−1 (n). Then, w.h.p., the (G, g, k)-high-girth-process
saturates.
Let G0 , G1 , . . . be a (G, g, k)-high-girth-process, and let e1 , e2 , . . . be the edges added
to the graph at each step. Clearly, a necessary and sufficient condition for the process
to saturate is that |Et | = (k − 1)n/2 + t for every 0 ≤ t ≤ n/2. We say that the process
freezes at time t if t is the smallest integer such that Et = Et+1 . We denote this
time by Tf reeze (so that the process saturates if and only if Tf reeze = n/2).
Our proof deals separately with two phases of the process. In Section 2.1 we show
that in the first phase it holds with certainty that almost all vertices saturate, and Ht
is almost complete.
We begin Section 2.2 by observing that in the special case where c < 1/3, the analysis
in Section 2.1 suffices to conclude that the process saturates w.h.p. The remainder of
Section 2.2 is devoted to the more involved, “nibbling”-based analysis of the second
phase. We divide the remainder of the process into a bounded number of steps. We
show that in each step, the number of unsaturated vertices is reduced by a polynomial
factor, and that certain pseudorandomness conditions are preserved from step to step.
We then argue that w.h.p. the graph obtained at the end of the penultimate step has
a combinatorial property that implies the process saturates with certainty.
2.1. The early evolution of the process. Let 0 < ε < 1 − c, and let

1
n − nc+ε .
T =
2
The following observation follows from the Moore bound.
Observation 2.2. Let H be a graph with maximal degree at most k, and let ℓ ∈ N. For
every v ∈ V (H) there are at most k · (k − 1)ℓ−1 vertices at distance ℓ from v, and at
most 2k · (k − 1)ℓ vertices at distance at most ℓ from v.
We next use this observation to show that for n sufficiently large Tf reeze ≥ T with
certainty, and for every t ≤ T , the graph Ht is nearly complete.
Lemma 2.3. There exists an integer n0 = n0 (c, ε) such that for all n ≥ n0 and every
t ≤ T it holds with certainty that:
(a)
(b)
(c)
(d)

All vertex degrees in Ht = (Wt , At ) are at least |Wt | − O(nc ).
|At | = 12 |Wt |2 (1 − O(nc /|Wt |)).
|Wt | = n − 2t, and hence
Tf reeze ≥ T .

Proof. The two vertices of every edge in Et \ E0 have degree k, and every vertex of
degree k is in exactly one edge from Et \ E0 . Therefore: |Wt | = n − 2|Et \ E0 | ≥ n − 2t,
with equality if and only if t ≤ Tf reeze .
4

Let v ∈ Wt . By Observation 2.2, there are O(nc ) vertices in Gt with distance at
most g − 2 to v. In Ht , v is adjacent to all other vertices in Wt . Therefore dHt (v) ≥
|Wt | − O(nc ), as claimed. Hence,
1
1 X
dHt (v) = (1 − O(nc /|Wt |)) |Wt |2 ,
|At | =
2
2
v∈Wt

as desired.
Finally, Tf reeze ≥ T as long as AT 6= ∅. As observed:
|WT | ≥ n − 2T = nc+ε .

Hence, by (b):

 c 


1
n
2
|AT | = |WT | 1 − O
= Ω n2(c+ε) .
2
|WT |

Thus, if n is large enough, then AT is nonempty with certainty, implying (c), (d).



The set Bt of forbidden edges is comprised of those pairs u, v ∈ Wt with uv ∈
/ At .
We will show that for t ≥ T w.h.p. the number of forbidden edges in Gt does not exceed
the bound given by the following heuristic argument. Let u ∈ Wt . By Observation 2.2,
at most nc vertices v ∈ V satisfy δGt (u, v) ≤ g − 2. So, if v is chosen randomly
from V , then P[v ∈ Wt ] = |Wt |/n and P[δGt (u, v) ≤ g − 2] ≤ nc /n. Had these events
been independent, we expect there to p
be at most |Wt |2 nc /n pairs u, v ∈ Wt with
δH (u, v) ≤ g − 2. Hence, when |Wt | ≪ n/nc , we expect that Bt = ∅. We now show
that the latter condition implies that the process saturates with certainty.
Definition 2.4. Let G = (V, E) be a graph with all degrees either k − 1 or k. We say
that G is safe if every two vertices of degree k − 1 are at distance ≥ g − 1.
Clearly Gt is safe if and only if Bt = ∅.
Lemma 2.5. If for some t, Gt is safe, then the process saturates with certainty.
Proof. We first observe that if Gt is safe then Ht is the complete graph on Wt . Thus,
it is enough to show that if t < n/2, then At 6= ∅ and Gt+1 is also safe. Suppose, for a
contradiction, that et+1 = uv for some u, v ∈ Wt , and that Gt+1 is not safe. Namely,
there exist two vertices a, b ∈ Wt+1 such that δGt+1 (a, b) ≤ g − 2. Let P be a shortest
ab-path in Gt+1 . By assumption, its length is at most g − 2. But Gt is safe, whence
δGt (a, b) ≥ g − 1, so that necessarily uv ∈ P . It follows that in Gt there is a path of
length ≤ g − 2 from one of the vertices a, b to one of u, v contrary to the assumption
that Gt is safe.

Here is the main technical ingredient in the analysis of the first T steps in the process.
An edge uv is a chord if it is not in the initial graph G. E.g., all edges chosen by the
process are chords.
Claim 2.6. Let a, b ≤ log2 (n). Let s1 , s2 , . . . , sa be distinct chords and let U ⊆ V be a
set of b vertices. Let 0 ≤ t1 , t2 , . . . , ta < T . Let A be the event that for every 1 ≤ i ≤ a,
the process chooses chord si at step ti (i.e., eti = si ), and that U ⊆ WT . Then

 a 
2T b
2
.
1−
P[A] ≤ (1 ± o (1))
n2
n
5

It is easy to see where this expression comes from. Since |WT | = n−2T , it is plausible
that P[v ∈ WT ] ≈ 1 − 2T /n for every v ∈ V . Also, if edges are chosen uniformly at
random, ignoring the degree and girth constraints, then the probability of the event
et = s is (1 ± o (1))2n−2 . The bound on P[A] says that the constraints can only reduce
this probability. This heuristic will be justified by Lemma 2.3: Throughout the first T
steps of the process, the graph of available edges Ht is nearly complete. Therefore, in
each of the first T steps, both the number of available edges and the number of available
edges incident to U are very close to what these values would be in the unconstrained
graph process. As a consequence, the two processes exhibit similar behavior.
Proof. Note that there is no loss in assuming that
• s1 , . . . , sa form a matching,
• t1 , . . . , ta are all distinct, and
• U is disjoint from the vertices in s1 , . . . , sa ,
for otherwise P[A] = 0 and the conclusion follows trivially.
The sequential nature of the process suggests that we express A as an intersection
of events B0 , B1 , . . . , BT , where Bt depends only on the chord selected at step t. For
0 ≤ t < T , let St = {si : ti > t} be the set of chords that are to be chosen after step
t. Let Ut = U ∪ {u : ∃s ∈ St , u ∈ s}. The definition of Bt depends on whether or not
t = ti for some i. If so, we let Bt be the event that chord si is selected at step t.
Otherwise, it is the event that we select at step t a chord disjoint from Ut . Clearly,
A = B0 ∩ B1 ∩ . . . ∩ BT .
Therefore:
(1)

P[A] = P[B0 ] × P[B1 |B0 ] × P[B2 |B1 ∩ B0 ] × . . . × P[BT −1 |B0 ∩ . . . ∩ BT −2 ].

By Lemma 2.3, for every t < T , we have



(n − 2t)2
nc
.
|At | = 1 ± O
n − 2t
2
Therefore, for every i ∈ [a], it holds that


P[Bti |Bti −1 ∩ . . . ∩ B0 ] ≤ 1 + O

nc
n − 2ti

It will be useful to note also that

a 
a
Y
Y
P[Bti |Bti −1 ∩ . . . ∩ B0 ] ≤
1+O

(2)



nc
n − 2ti

2
.
(n − 2ti )2



2
(n − 2ti )2
i=1
i=1




a 
Y
2
2|Uti |
nc
≤ (1 ± o (1))
1−
.
1+O
n − 2ti
(n − 2ti )2
n − 2ti
i=1

Consider next the case t ∈
/ {t1 , . . . , ta }. The event B0 ∩ . . . ∩ Bt−1 implies that
Ut ⊆ Wt , so by Lemma 2.3, Ut intersects at least





 

nc
|Ut |
nc
1±O
|Ut |(n − 2t) ±
|Ut |(n − 2t)
= 1±O
n − 2t
n − 2t
2
6

chords in At . Thus:

nc
|Ut |(n − 2t)
P[Bt |Bt−1 ∩ . . . ∩ B0 ] ≤ 1 − 1 ± O
n − 2t
|At |



c
2|Ut |
n
.
≤1− 1±O
n − 2t
n − 2t


(3)



Therefore, by (1), (2), and (3):
a
Y

(4)

T 
Y


!
2|Ut |
nc
P[A] ≤ (1 ± o (1))
1− 1±O
n − 2t
n − 2t
t=0
i=1
!
!


a
T 
Y
X
2
2|Ut |
nc
≤ (1 ± o (1))
exp −
1±O
(n − 2ti )2
n − 2t
n − 2t
t=0
i=1
!
!
T
a
X
Y
2|Ut |
2
.
exp
−
≤ (1 ± o (1))
(n − 2ti )2
n − 2t
2
(n − 2ti )2

!





t=0

i=1

We now estimate the sum in the exponent. By definition of Ut , we have:
|Ut | = |U | + 2 |St | = b + 2 |St | .
It follows that:
ti
ti
T
T
a X
T
a X
X
X
X
X
X
2|Ut |
2
4
1
1
=b
+
=b
+2
.
n − 2t
n − 2t
n − 2t
n/2 − t
n/2 − t
t=0

We recall that

i=1 t=0

t=0

PL

k=ℓ 1/k

t=0

i=1 t=0

≥ log (L/ℓ) holds whenever ℓ ≤ L. Therefore:





a
T
X
X
n
n
2|Ut |
≥ b log
log
.
+2
n − 2t
n − 2T
n − 2ti
t=0

i=1

Plugging this into (4), we obtain:
a
Y



!
a
X
n − 2ti
n − 2T
P[A] ≤ (1 ± o (1))
log
exp b log
+2
n
n
i=1
i=1
!!




a
Y
2
n − 2ti 2
2T b
≤ (1 ± o (1))
1
−
(n − 2ti )2
n
n
i=1
 a 
b
2
2T
≤ (1 ± o (1))
,
1−
2
n
n
2
(n − 2ti )2

!



as claimed.



Claim 2.6 helps us bound the probability that ET contains a given set of edges:
Lemma 2.7. Let S be a set of a ≤ log2 n chords, and let u, v ∈ V be distinct vertices.
The probability that S ⊆ ET and that u, v ∈ WT is O(n−(a+2(1−c−ε)) ).
7

Proof. Let s1 , . . . , sa be an ordering of the chords in S. We employ a union bound over
all times t1 , . . . , ta such that for every i, the chord chosen at step ti is si . By Claim 2.6
the probability that S ⊆ ET and both u and v have degree 2 in GT is at most
 a 
 a  c+ε 2 !

X
2
2
n
2T 2
(1 ± o (1))
= O Ta
1−
2
2
n
n
n
n
0≤t1 ,...,ta ≤T


1
,
=O
a+2(1−c−ε)
n

as desired.



Lemma 2.7 allows us to bound the number of edges in BT . If uv ∈ BT , then GT
contains a path P from u to v of length ≤ g − 2 such that:
• No two consecutive edges in P are chords.
• The first and the last edge in P are not chords.
A length-ℓ path in Kn satisfying these conditions is said to be ℓ-threatening.
We also introduce several random variables that will allow us to bound the size of
Bt throughout the process. For ℓ ≤ g − 2, we denote by Pℓ (Gt ) the number of pairs
u, v ∈ Wt such that δGt (u, v) = ℓ. Additionally, for v ∈ V , we denote by Pℓ (Gt , v) the
number of vertices u ∈ Wt such that δGt (u, v) = ℓ.
Lemma 2.8. Let ℓ ∈ N and let a ∈ N0 such that 2a + 1 ≤ ℓ. Then Kn contains fewer
than na+1 (k − 1)ℓ ℓ-threatening paths containing a chords.
Proof. We prove the lemma by considering the number of ℓ-threatening path with a
chords. There are n choices for the initial vertex. Since the first edge is not a chord, it
must be one of the k − 1 edges in G that are incident to the initial vertex. Then, for
each subsequent edge, there are two possibilities:
• If the previous edge was a chord, the next edge must be one of the k − 1 edges
in G incident to the current vertex.
• Otherwise, the next edge is either one of the k − 2 non-backtracking edges
incident to the current vertex, or else it is a chord. In this case there are
n − k < n choices for the chord.
Put differently, at each step, there are k − 1 basic choices: Either the k − 1 edges
incident to the current vertex, or else the k − 2 non-backtracking edges incident to the
current vertex together with the choice “chord”. If the choice is “chord”, there are
(fewer than) n further choices of the specific chord. Since we are considering length-ℓ
paths with a chords, the total number of choices is at most na+1 (k − 1)ℓ , as desired. 
We next give upper bounds on Pℓ (GT ) and Pℓ (GT , v) for ℓ ≤ g − 2 and v ∈ WT .
Lemma 2.9. The following hold w.h.p.:
ℓ

log3 (n).
(a) For every ℓ ≤ g − 2, Pℓ (GT ) ≤ |WT |2 (k−1)
n
(b) For every ℓ ≤ g − 2 and every v ∈ WT , Pℓ (GT , v) ≤ (k − 1)ℓ .
Proof. We calculate the expected number of length-ℓ paths between vertices in WT . By
Lemma 2.8, there are at most na+1 (k − 1)ℓ ℓ-threatening paths in Kn with a chords.
8

By Lemma 2.7, for each such path, the probability that it is contained in E(GT ) and
that its two endpoints are in WT is at most O n−a−2(1−c−ε) . Therefore:




(ℓ−1)/2 a+1
(ℓ−1)/2 a+1
ℓ
2(c+ε)
X n (k − 1)ℓ
X
n (k − 1) 
 = O n
E [Pℓ (GT )] = O 
2
a+2(1−c−ε)
n
na
n
a=0
a=0




(ℓ−1)/2
2
X
|WT |
(k − 1)ℓ
= O
(k − 1)ℓ  = O |WT |2
log(n) .
n
n
a=1

Therefore, by Markov’s inequality, for every ℓ, it holds that




ℓ
1
3
2 (k − 1)
log (n) = O
P Pℓ (GT ) ≥ |WT |
.
n
log2 (n)

Applying a union bound to the O(log(n)) random variables P1 (GT ), . . . , Pg−2 (GT ), we
conclude that w.h.p., for every 1 ≤ ℓ ≤ g − 2, it holds that
Pℓ (GT ) ≤ |WT |2

(k − 1)ℓ
log3 (n),
n

as desired.
Part (b) follows from Moore’s bound (Observation 2.2). For every v ∈ WT there are
at most (k − 1)ℓ vertices u ∈ V with δGT (u, v) = ℓ. In particular, there are at most

(k − 1)ℓ such vertices in WT .
2.2. The latter evolution of the process. Let
1
1
c(1 − c)
, T = (n − nc+ε ), Tsaf e = (n − nε ).
ε=
3
2
2
Our plan is to show that w.h.p. GTsaf e is safe.
Our analysis of the first T steps of the process used rather crude tools: Moore’s
bound, and a first-moment calculation. Analyzing the remaining steps of the process
is more involved. However, this more involved analysis is not necessary if already GT
is safe. This is indeed the case w.h.p. if c < 1/3, as we now show.
Proof of Theorem 1.1 when c < 1/3. Suppose c < 1/3. By Lemma 2.9, w.h.p., for
every 1 ≤ ℓ ≤ g − 2, we have:
(k − 1)ℓ
(k − 1)ℓ
log3 (n) ≤ n2(c+ε)
log3 (n)
n
n
nc
≤ n2c+2ε log3 (n) ≤ n3c+2ε−1 log3 (n) = o (1).
n
Therefore, for every 1 ≤ ℓ ≤ g − 2, it holds that Pℓ (GT ) = 0. In other words GT is
safe, as claimed.

Pℓ (GT ) ≤ |WT |2

We return to our main narrative with 1 > c ≥ 1/3. We define:
β = ε/10,

α = β/100.

We have chosen these particular constants for concreteness; all we need is that β is
sufficiently smaller than ε and that α is sufficiently smaller than β. By Lemmas 2.3
and 2.9 the following hold w.h.p. (in fact, (a) - (c) hold with certainty):
9

(a) Tf reeze ≥ T .
(b) |WT | = n − 2T = nc+ε .
(c) For every v ∈ WT and ℓ ≤ g − 2, there holds Pℓ (GT , v) ≤ (k − 1)ℓ =
(d) For every ℓ ≤ g − 2, there holds Pℓ (GT ) ≤
| 2 nc

|WT |2 (k−1)ℓ
n

(k−1)ℓ
nc+ε |WT |.

log3 (n). In particular,

|BT | ≤ |WTn log4 (n).
These are pseudorandom properties of GT : The number of pairs of vertices in WT
at distance ℓ ≤ g − 2 does not exceed its expectation by more than a polylog factor,
and no vertex in WT is close to too many other vertices in WT . As we show, if these
pseudorandomness conditions hold at step Tsaf e ≥ t ≥ T , then w.h.p. they persist
until step t′ = (n − (n − 2t)n−α )/2. In particular, between times t and t′ the number
of unsaturated vertices gets multiplied by n−α , while the number of forbidden pairs is
multiplied by n−2α (ignoring polylog factors). If we repeat this process (c+ε)/α = O(1)
times, then w.h.p. no forbidden pairs remain, i.e., the graph is safe. By Lemma 2.5,
this implies that the process saturates.
We make this precise in the next lemma, which is the heart of our proof. It is useful
to introduce the following real function L:


(k − 1)ℓ (n − 2t)
.
L(ℓ, t) = max 1,
nc+ε
We now formally define the pseudorandomness properties.

Definition 2.10. For C > 0 we say that Gt is C-path-bounded if:
(a) Pℓ (Gt , v) ≤ L(ℓ, t) logC (n) for every v ∈ Wt and every ℓ ≤ g − 2.
2
ℓ
(b) Pℓ (Gt ) ≤ |Wt | (k−1)
logC (n) for every ℓ ≤ g − 2.
n
We remark that for every C there exists some n0 = n0 (C) such that if n ≥ n0 and
Gt is C-path-bounded for some T ≥ t ≥ Tsaf e , then |Wt | = n − 2t. This is because (b)
implies that |Bt | = O |Wt |2 nc logC (n)/n = o(|Wt |2 ). Therefore, if n is large enough
then At is not empty, meaning Tf reeze ≥ t, and |Wt | = n − 2t.
Lemma 2.11. There is a function D = D(C) such that for every Tsaf e ≥ t ≥ T , if Gt
is C-path-bounded then, for t′ = (n − (n − 2t)n−α )/2, w.h.p. Gt′ is D-path-bounded.
Lemma 2.11, yields Proposition 2.1, and hence Theorem 1.1.
Proof of Proposition 2.1. Define the sequence of integers t0 = T , and for i ≥ 0, ti+1 :=
(n − (n − 2ti )n−α )/2. Let m := (c + ε)/α. Clearly m = O(1). We observe that for every
i ≤ m, there holds (n − 2ti )2 = (n − 2t)2 n−2αi . In particular, (n − 2tm )2 nc−1 = n−Ω(1) .
As observed above, Gt0 = GT is C0 := 3-path-bounded. Therefore, by Lemma 2.11,
w.h.p. Gt1 is C1 := D(C0 )-path-bounded. Proceeding by induction, we conclude that
w.h.p. Gtm is Cm -path-bounded, with Cm = O(1). In particular, |Wtm | = n − 2tm and
|Btm | ≤ |Wtm |2 nc−1 logCm (n) = (n − 2tm )2 nc−1 = o (1). Namely, Btm = ∅, i.e., Gtm is
safe, and by Lemma 2.5 the process saturates.

We turn to prove Lemma 2.11. We wish to analyze the t′ − t = |Wt |(1 − n−α )/2 steps
of the process Gt , Gt+1 , . . . , Gt′ . We do so by viewing the process as taking place in
two stages: Recall that Ht = (Wt , At ) is the graph of available edges. In the first stage,
10

we take a random subgraph H ⊆ Ht , where V (H) = Wt and every edge in E(Ht ) = At
is included in E(H) with probability p := nβ /|Wt | (with all choices independent). We
also define the graph G′ = (V, E(Gt ) ∪ E(H)). In the second stage, we run the highgirth process beginning from Gt , but using only the edges in E(H). This is similar to
the “honest nibble” used by Grable [20] to analyze random greedy triangle packing.
The advantage of this approach is that we can use standard tools for analyzing
random binomial graphs to obtain properties of H and G′ . Significantly, there are
very few ways that adding a matching from H to Gt might create a cycle shorter than
g. This implies that the high-girth process run “inside” G′ behaves similarly to the
random greedy matching algorithm in H. Finally, H is sufficiently regular that the
random greedy matching algorithm in H succeeds, with high probability, in matching
all but at most |Wt |n−α vertices in Wt .
Formally, we define the process G′t , G′t+1 , . . . as follows. To start, G′t = Gt . Given G′i ,
if there exist edges uv ∈ E(H) such that dG′i (u) = dG′i (v) = k − 1, and δG′i (u, v) ≥ g − 1,
then choose such an edge e uniformly at random and set G′i+1 = (V (G), E(G′i ) ∪ {e}).
If no such edges exist, set G′i+1 = G′i . Let Tf′ reeze be the smallest integer i such that
G′i = G′i+1 .
We couple Gt , Gt+1 , . . . , Gt′ and G′t , G′t+1 , . . . , G′t′ by setting Gi = G′i for every t <
i ≤ Tf′ reeze . For i > Tf′ reeze , we obtain Gi+1 from Gi independently of G′i+1 .
Clearly, for every i ≥ t, it holds that E(G′i ) ⊆ E(G′ ). We will show that w.h.p.
′
Tf reeze ≥ t′ , and hence Gt′ = G′t′ . It will then follow from the analysis of the process
G′0 , . . . , G′t′ that Gt′ is D-path-bounded for an appropriate D.
In order to track the process G′t , G′t+1 , . . ., we first identify the pairs of vertices
u, v ∈ Wt that might have distance ≤ g − 2 in G′t′ . We observe that since G′t′ ⊆ G′ , if
δG′ ′ (u, v) = ℓ ≤ g − 2 then there exists a sequence of vertices w0 , w1 , . . . , w2m−1 in Wt
t
such that:
• w0 = u and w2m−1 = v.
• For every 1 ≤ i ≤ m − 1, it holds that w2i−1 w2i ∈ E(H).
• m − 1 + δGt (w0 , w1 ) + δGt (w2 , w3 ) + . . . + δGt (w2m−2 , w2m−1 ) = ℓ.
This is similar to the observation in Section 2.1 that uv ∈ BT only if the chords from a
threatening path in Kn were chosen in the first T steps of the process. We say that a
pair of vertices u, v ∈ Wt is ℓ-threatened if there exists a sequence of vertices satisfying
these conditions. In this case, we say that the sequence w0 , . . . , w2m−1 witnesses this
fact.
We remark that the notion of an ℓ-threatened pair of vertices is similar, but distinct
from, the notion of an ℓ-threatening path. Indeed, the latter refers to the specific path,
while the former to the endpoints. Furthermore, ℓ-threatening paths are allowed to
use any chord from Kn , whereas if w0 , . . . , w2m−1 is a witness that w0 , w2m−1 are ℓthreatened then the edges w1 w2 , w3 w4 , . . . , w2m−2 w2m−1 must be in the random graph
H.
For 1 ≤ ℓ ≤ g − 2, let Tℓ denote the number of ℓ-threatened pairs in Wt . For a vertex
v ∈ Wt , let Tℓ (v) denote the number of ℓ-threatened pairs that include v.
11

In the next claim we establish pseudorandom properties of H and G′ . These follow
from standard techniques in the analysis of functions of independent random variables.
In order not to interrupt the narrative, we defer the proof to Section 3.
Claim 2.12. There exists a function Q = Q(C) such that for every Tsaf e ≥ t ≥ T if
Gt is C-path-bounded then, with H and G′ defined as above, the following hold w.h.p.:

(a) For every v ∈ Wt , dH (v) = 1 ± n−0.4β nβ .
ℓ

(b) For every ℓ ≤ g − 2 it holds that Tℓ ≤ |Wt |2 (k−1)
logQ (n).
n
(c) For every v ∈ Wt and every ℓ ≤ g − 2 it holds that Tℓ (v) ≤ L(ℓ, t) log Q (n).
(d) For every v ∈ Wt there are at most log(n) vertices u ∈ Wt such that uv ∈ E(H)
and u, v are ℓ-threatened for some ℓ ≤ g − 2.
(e) For every S ⊆ Wt such that |S| ≤ |Wt |/nε/2 , it holds that e (H[S]) ≤ |S|n0.9β .

We turn to establish properties of the process G′t , G′t+1 , . . .. For s ∈ N0 , let Us denote
the set of degree-(k − 1) vertices in G′t+s . Our intuition is that for every s ≤ t′ − t,
Us resembles a random subset of Wt with density 1 − 2s/|Wt |. This implies, first, that
Tf′ reeze ≥ t′ , and therefore Gt′ = G′t′ . Second, this means that for ℓ ≤ g − 2, the
number of ℓ-threatened pairs in G′ in which both vertices remain unsaturated in Gt′
is approximately (|Ut′ |/|Wt |)2 Tℓ = n−2α Tℓ . A similar statement holds for ℓ-threatened
pairs that contain a specific vertex. We conclude that Gt′ is, w.h.p., D-path-bounded
for an appropriate D.
Claim 2.13. There exists a function D = D(Q) such that if H and G′ satisfy conclusions (a)-(e) of Claim 2.12 then, for t′ = (n − (n − 2t)n−α )/2, w.h.p. Gt′ is D-pathbounded.
While Claim 2.13 follows from methods developed to study random greedy hypergraph matching (e.g., [2] and [25, Section 4]), it does not seem to follow directly from
any explicit result in the literature. For completeness’ sake we prove it in Section 4.
We are now ready to prove Lemma 2.11.
Proof of Lemma 2.11. Suppose that for Tsaf e ≥ t ≥ T and C ∈ R, Gt is C-pathbounded. Let H and G′ be as above and let t′ = (n − (n − 2t)n−α )/2 be as in the
statement of Lemma 2.11. Then, w.h.p. H and G′ satisfy the conclusions of Claim 2.12
for some Q = Q(C). Consequently, by Claim 2.13, w.h.p. Gt′ is D-path-bounded for
some D = D(Q).

3. Proof of Claim 2.12
Claim 2.12 follows from standard arguments in the analysis of functions of independent random variables. We recall the following version of Chernoff’s inequality.
Theorem 3.1 (Chernoff’s Inequality). Let X1 , X2 , . . . , XN be independent Bernoulli
P
random variables, let X = N
i=1 Xi , and let δ ∈ (0, 1). Then:


1 2
P [|X − E[X]| ≥ δE[X]] ≤ 2 exp − δ E[X] .
3
12

We use a theorem of Kim and Vu to show concentration of multivariate polynomials.
The setup is this: Let Y = (V (Y ), E(Y )) be a hypergraph where the largest hyperedge
size is K = O(1) and |V (Y )| = ω (1). Let {Xv }v∈V (Y ) be a collection of independent
Bernoulli random variables. Consider the random variable:
X Y
X=
Xv .
e∈E(Y ) v∈e

For every S ⊆ V (Y ), define the random variable:
X
Y
XS =
Xv .
S⊆e∈E(Y ) v∈e\S

For every i ∈ [K]0 let
µi =

max E [XS ] .

)
S∈(V (Y
i )

Finally, let µ = max0≤i≤K µi . Here is a consequence of the Main Theorem in [23].
Theorem 3.2. In the setup above, there exists a constant D > 0 such that



P X ≥ µ logD (|V (Y )|) = exp −Ω log2 (|V (Y )|) .
Proof of Claim 2.12. Recall that we have defined the function




(k − 1)ℓ |Wt |
(k − 1)ℓ (n − 2t)
= max 1,
.
L(ℓ, t) = max 1,
nc+ε
nc+ε
For brevity, throughout this proof we write

L(ℓ) := L(ℓ, t).
By assumption, for every v ∈ Wt and every ℓ ≤ g − 2, it holds that Pℓ (Gt , v) ≤
L(ℓ) logC (n). Therefore, the number of forbidden edges incident to v does not exceed

g−2 
g−2
g−2
X
X
X
(k − 1)ℓ |Wt |
C
C
1+
L(ℓ) log (n) ≤ log (n)
Pℓ (Gt , v) ≤
nc+ε
ℓ=1
ℓ=1
ℓ=1


|Wt |
≤ 1 + ε logC+1 (n).
n
Recalling that t ≤ Tsaf e = (n − nε )/2, it follows that |Wt | ≥ nε . Thus:
g−2
X

Pℓ (Gt , v) ≤

ℓ=1

Therefore:

|Wt |
logC+2 (n).
nε

|Wt |
logC+2 (n).
nε
By definition, dH (v) is distributed binomially with parameters (dHt (v), p). In particular, E [dH (v)] = (1 ± n−ε logC+2 (n))nβ . Applying Chernoff’s inequality we obtain:





n0.6β
dHt (v) ≤ exp −Ω n0.2β .
P |dH (v) − pdHt (v)| >
2|Wt |
dHt (v) = |Wt | ±

13

Next apply a union bound to the vertices in Wt , and conclude that w.h.p. for every
v ∈ Wt :


n0.6β
dH (v) = pdHt (v) ±
dHt (v) = 1 ± n−0.4β nβ ,
2|Wt |
as desired.
We now prove (b). Suppose that u, v ∈ Wt are ℓ-threatened for some ℓ ≤ g − 2.
Then there is a sequence u = w0 , . . . , w2m−1 = v in Wt witnessing this fact. Now, the
number of sequences w0 , . . . , w2m−1 ∈ Wt such that δGt (w0 , w1 ) + δGt (w2 , w3 ) + . . . +
δGt (w2m−2 , w2m−1 ) = ℓ − m + 1 is bounded from above by
m
Y

X

Pℓi (Gt ).

ℓ1 +...+ℓm =ℓ−m+1 i=1

For each such sequence, the probability that all of the edges w1 w2 , . . . , w2m−3 w2m−2
are in E(H) is pm−1 . This yields the following bound:
(ℓ+1)/2

E [Tℓ ] ≤

X

X

pm−1

X

X

m−1

m=1 ℓ1 +...+ℓm =ℓ−m+1
(ℓ+1)/2

≤

(k − 1)ℓ
≤
p

(ℓ+1)/2 
X
m=1

Pℓi (Gt )

i=1

p

m=1 ℓ1 +...+ℓm =ℓ−m+1

m
Y

m
Y
(k − 1)ℓi
i=1

p|Wt |2 logC (n)
n

n

m 

|Wt |2 logC (n)


ℓ−m
m−1


m

(ℓ+1)/2  β
(k − 1)ℓ X
n |Wt |ℓ logC (n)
(k − 1)ℓ
2
C+1
≤
|Wt | log
(n) .
=O
p
n
n
m=1

Hence, by Markov’s inequality:




1
(k − 1)ℓ
2
C+3
|Wt | log
(n) = O
P Tℓ ≥
.
n
log2 (n)

Applying a union bound to the O(log(n)) random variables T1 , . . . , Tg−2 we conclude
ℓ

C+3
2
(n), as desired.
that w.h.p., for every ℓ ≤ g − 2, it holds that Tℓ ≤ (k−1)
n |Wt | log
In order to prove (c), we must bound |Wt |(g − 2) = O(|Wt | log(n)) random variables.
For a union bound, it suffices to show that there exists a constant D = D(C) such that
for every v ∈ Wt and ℓ ≤ g − 2,




1
D
.
P Tℓ (v) ≥ L(ℓ) log (n) = O
|Wt | log2 (n)

Let v ∈ Wt , ℓ ≤ g − 2, and m ∈ N. Let Tℓm (v) be the number of vertices u ∈ Wt such
that u, v are ℓ-threatened and there exists a witness with 2m vertices. Then Tℓ (v) ≤
P(ℓ+1)/2 m
Tℓ (v). We plan to use Theorem 3.2 to bound Tℓ (v). However, Theorem
m=1
3.2 applies only to polynomials with constant degree, whereas Tℓ (v) corresponds to a
polynomial with unbounded degree. To get around this, we first show that for large
14

values of m, Tℓm (v) = 0 with sufficiently high probability. Let M = ⌈(1−c−ε−β)−1 ⌉ =
O(1). We will show that




(ℓ+1)/2
X
1
C+1
m


(n) = O
Tℓ (v) ≥ L(ℓ) log
(5)
P
.
|Wt | log2 (n)
m=M
We first observe that:

M −1
|Wt |nβ logC+1 (n)
1
≤
|Wt |M n−(M −1)(1−β) logO(1) (n)
n
|Wt |
1 M (c+ε)−(M −1)(1−β)
1 1−β−M (1−c−ε−β) O(1)
(6)
≤
n
logO(1) (n) ≤
n
log
(n)
|Wt |
|Wt |
≤

1
n−Ω(1)
.
≤
|Wt |
|Wt | log2 (n)

Now, by considerations similar to those used to bound E [Tℓ ]:


(ℓ+1)/2
(ℓ+1)/2
m
X
X
X
Y
E
Tℓm (v) ≤
pm−1
Pℓi (Gt )
Pℓ1 (Gt , v)
m=M

m=M

i=2

ℓ1 +...+ℓm =ℓ−m+1

(ℓ+1)/2

m−1

|Wt |2 logC (n)
n
m=M
M −1

|Wt |nβ logC+1 (n)
C+1
≤ L(ℓ) log
(n)
n

≤

X



L(ℓ) logC (n) ℓp

(6)

≤ L(ℓ) logC+1 (n)

1
.
|Wt | log2 (n)

Inequality (5) follows from Markov’s inequality.
We now use Theorem 3.2 to bound Tℓm (v), for m < M . For every e ∈ E(Ht ), let Xe
be the indicator of the event e ∈ E(H). For m < M , let Tℓm (v) be the collection of
potential witnesses of length 2m to the fact that for some u ∈ Wt , u, v are ℓ-threatened.
In other words, Tℓm (v) is the collection of sequences v = w0 , w1 , . . . , w2m−1 ∈ Wt such
that:
• For every 1 ≤ i ≤ m − 1, w2i−1 w2i ∈ E(Ht ) and
• δGt (w0 , w1 ) + δGt (w2 , w3 ) + . . . + δGt (w2m−2 , w2m−1 ) = ℓ − m + 1.
For conciseness, for P ∈ Tℓm (v) and i ∈ [m − 1], we write ei (P ) = w2i−1 w2i . We also
write ℓi (P ) = δGt (w2(i−1) , w2i−1 ). Now consider the polynomial
Yℓ (v) =

M
−1
X
m=1

Tℓm (v)

=

M
−1
X

X

m−1
Y

Xei (P ) .

m=1 P ∈Tℓm (v) i=1

We will show that there exists a constant D > 0 (independent of ℓ and v) such that:



P Yℓ (v) ≥ L(ℓ) logD (n) = exp −Ω log2 (n) .
15

For S ⊆ E(Ht ) and m ∈ [M − 1], define the set:
Tℓm (v, S) = {P ∈ Tℓm (v) : S ⊆ {e1 (P ), . . . , em−1 (P )}} .
Since deg Yℓ (v) < M = O(1), by Theorem 3.2 it suffices to show that there exists a
constant B such that for every S ⊆ E(Ht ) of cardinality M − 1 or less, it holds that

E [Yℓ (v)S ] =

M
−1
X
m=1


pm−1−|S| |Tℓm (v, S)| = O L(ℓ) logB (n) .

For this it is enough to show that for every S ⊆ E(Ht ) and every m < M :


|Tℓm (v, S)| = O p|S|−m+1 L(ℓ) logB (n) .

(7)

Let S ⊆ E(Ht ) satisfy |S| ≤ M − 1. We make the following observations: Suppose
that for m < M − 1, P = w0 , . . . , w2m−1 ∈ Tℓm satisfies S ⊆ {e1 (P ), . . . , em−1 (P )}.

In particular, m ≥ |S| + 1. Furthermore, there exists an index set I ∈ [m−1]
such
|S|
that for every i ∈ I, ei (P ) ∈ S. This implies that for every i ∈ I, w2i is contained
in one of the edges in S. Therefore, since Gt is C-path-bounded, w2i+1 is one of the
O(Pℓi (P ) (Gt , w2i )) = O(L(ℓi (P )) log C (n)) vertices at distance ℓi (P ) from S. Using
these insights, we may now bound |Tℓm (v, S)|.
Start with the case where |S| = m − 1. In this case, for every P = w0 , . . . , w2m−1 ∈
Tℓm (v), it holds that S = {e1 (P ), . . . , em−1 (P )}. Therefore, each of w1 , . . . , w2m−2
is contained in an edge in S, and the only remaining freedom is in the choice of
w2m−1 . Additionally, w2m−1 is at distance at most ℓ from S. As mentioned, there
are O(L(ℓ) logC (n)) such vertices. Therefore, in this case:

|Tℓm (v, S)| = O L(ℓ) logC (n) ,

confirming (7).
We now assume that |S| < m − 1. In this case:
|Tℓm (v, S)|
≤

X

ℓ1 +...+ℓm =ℓ−m+1

Pℓ1 (Gt , v)

X

I∈([m−1]
|S| )

Y

i−1∈I

!

O L(ℓi ) logC (n) 

Since Gt is C-path-bounded, for every a ≤ g − 2 it holds that
Pa (Gt ) ≤

(k − 1)a |Wt |2 logC (n)
.
n
16

Y

i−1∈[m−1]\I



Pℓi (Gt ) .

Similarly, Pa (Gt , v) ≤ L(a) logC (n) ≤ (k−1)a logC (n). Therefore, for every ℓ1 + . . . + ℓm =

it holds that:
ℓ − m + 1 and every I ∈ [m−1]
|S|
Y

Pℓ1 (Gt , v)

i−1∈I

!

O L(ℓi ) logC (n) 

Y

i−1∈[m−1]\I

= O logCm (n)(k − 1)ℓ1 +...+ℓm
= O log

Furthermore, it holds that


Cm

m−1
|S|

|Tℓm (v, S)| = O logCm (n)
= O logCm (n)

ℓ

(n)(k − 1)



|Wt |2
n



|Wt |2
n



Pℓi (Gt )

m−1−|S| !

m−1−|S| !

.

= O(1). Thus:

X

(k − 1)ℓ

ℓ1 +...+ℓm =ℓ−m+1



nβ |Wt |
pn

m−1−|S|



|Wt |2
n
!

m−1−|S|




ℓm (k − 1)ℓ


nβ |Wt |
ℓ
(k − 1)
=O p
log
(n)
n




ℓ
|S|−m+1 (k − 1) |Wt |
|S|−m+1
=O p
=
O
p
L(ℓ)
,
nc+ε


|S|−m+1

(C+1)m

as desired.
We prove (d) by exposing E(H) in two rounds: Let v ∈ Wt , and let E(Ht , v) denote
the set of edges in E(Ht ) that are incident to v. We first expose E1 := E(H) \
E(Ht , v), and then E2 := E(H) ∩ E(Ht , v). We note that E1 and E2 are independent.
Furthermore, the random variables Y1 (v), Y2 (v), . . . , Yg−2 (v), as well as the set W ⊆ Wt
of vertices u ∈ Wt such that u, v are ℓ-threatened are determined by
proof
i
h E1 . From the
D
(n)
=
of (c) it follows that there exists a constant D = D(C) such that P |W | ≥ |Wt | log
nε

o |Wt |−1 .
We want to bound |W ∩ ΓH (v)|. We observe that given E1 (and hence W ), W ∩ΓH (v)
is a binomial random subset of W with density parameter p. Therefore, for any s ≤
|Wt | logD (n)
, conditioned on |W | = s, it holds that:
nε
P [|W ∩ ΓH (v)| ≥ log(n)] ≤
≤



|Wt | logD (n) nβ
·
nε
|Wt |




s
plog(n) ≤ (sp)log(n)
log(n)

log(n)
17


= exp −Ω log2 (n) .

Therefore, using the law of total probability:
P [|W ∩ ΓH (v)| ≥ log(n)]

 

|Wt | logD (n)
|Wt | logD (n)
≤P |W ∩ ΓH (v)| ≥ log(n) |W | ≤
P
|W
|
≤
nε
nε




D
|Wt | log (n)
1
+ P |W | >
=o
.
nε
|Wt |
By applying a union bound to all |Wt | vertices, we conclude that w.h.p., for every
v ∈ Wt , |W ∩ ΓH (v) ≤ log(n), as desired.
Finally, we prove (e). For ∅ =
6 S ⊆ Wt such that |S| ≤ |Wt |/nε/2 , let XS be the
indicator of the event that e (H[S]) ≥ |S|n0.9β . Now, e (H[S]) is distributed binomially
with parameters e (Ht [S]) ≤ |S|2 /2 and p. Hence, by a union bound:
i  |S|2 /2 
h
0.9β
0.9β
≤
p|S|n .
E[XS ] = P e (H[S]) ≥ |S|n
0.9β
|S|n

a
Applying the inequality b ≤ (ea/b)b , we obtain:
E[XS ] ≤



e|S|2 p
|S|n0.9β

|S|n0.9β

≤



e|S|nβ
n0.9β |Wt |

|S|n0.9β

≤



en0.1β
nε/2

|S|n0.9β

.

Applying a union bound over all such sets S, we have:


  0.1β kn0.9β
|Wt |n−ε/2
|Wt |n−ε/2 
X
X
|Wt |
en
 X

E
XS  ≤
k
nε/2
k=1
k=1
S∈(Wkt )
n0.9β !k
|Wt |n−ε/2 
|n−ε/2 
n0.9β k |WtX
X
e|Wt | 
e
2e
= o (1).
≤
≤
ε/2−0.1β
ε/2−0.1β
k
n
n
k=1
k=1

By Markov’s inequality, w.h.p., for every such set S, it holds that XS = 0, which is
equivalent to (e).

4. Proof of Claim 2.13
We prove Claim 2.13 by showing that w.h.p. various parameters associated with the
process G′t , G′t+1 , . . . remain close to their expected trajectories. This is motivated by
the differential equation method of Wormald [37], and is similar to the approach taken
by Bennett and Bohman [2] in their analysis of random greedy hypergraph matching.
As similar results are abundant in the literature, we aim for the simplest exposition
and not the sharpest analysis.
We use the following supermartingale inequality of Warnke [35, Lemma 2.2 and
Remark 10]. This is a variation on a martingale inequality of Freedman [14, Theorem
1.6].
Theorem 4.1. Let X0 , X1 , . . . be a supermartingale with respect to ahfiltration F0 , F1 , .i. ..
Pj−1
2
Suppose that |Xi+1 − Xi | ≤ K for all i, and let V (j) =
i=0 E (Xi+1 − Xi ) |Fi .
18

Then, for any λ, v > 0,
λ2
P [Xi > X0 + λ and V (i) ≤ v for some i] ≤ exp −
2(v + Kλ/3)




.

In our application, we find some v such that V (i) ≤ v for all i. For this v, Theorem
4.1 tells us that for every λ > 0:


λ2
.
P [Xi > X0 + λ] ≤ exp −
2(v + Kλ/3)
We now introduce the random variables we wish to track. Recall that Us is the set
of unsaturated (i.e., degree-(k − 1)) vertices in G′t+s , where s is a non-negative integer.
In particular, U0 = Wt and for every s ≤ Tf′ reeze − t, it holds that Us = Wt+s and
|Us | = |Wt | − 2s. For a vertex v ∈ Wt , let N (v, s) = |ΓH (v) ∩ Us | be the number of
neighbors of v in H that are unsaturated at time s + t. We also define the functions
p(s) = 1 −

2s
,
|Wt |

n(s) = nβ p(s),

ε(s) =

n0.6β
.
p(s)8

We observe that for 0 ≤ Tf′ reeze − t it holds that p(s) = |Us |/|Wt |.
Recall that t′ = (n − |Wt |n−α )/2. We show that w.h.p., for every v ∈ Wt and every
0 ≤ s ≤ t′ − t, it holds that
(8)

N (v, s) = n(s) ± ε(s).

The guiding intuition is that ΓH (v) ∩ Us behaves like a random subset of ΓH (v) with
density p(s). Since by Claim 2.12 (a) ΓH (v) ≈ nβ , it follows that N (v, s) is approximated by n(s).
We define the stopping time τ as the minimum between t′ − t and the first time that
(8) fails for some v ∈ Wt .
A naive attempt to prove (8) might be to show that N (v, s) − n(s) is a martingale. However, this is not quite true, as the expected one-step change might be nonzero. To remedy this, we consider two shifted random variables that are obtained from
N (v, s) − n(s) and −(N (v, s)− n(s)), respectively, by subtracting an error term. These
turn out to be supermartingales, enabling us to apply Theorem 4.1. For every v ∈ Wt ,
we define:
(
N (v, s) − n(s) − 12 ε(s) s ≤ τ
+
,
N (v, s) =
N + (v, s − 1)
s>τ
(
−N (v, s) + n(s) − 12 ε(s) s ≤ τ
−
.
N (v, s) =
N − (v, s − 1)
s>τ
The fact that these random variables “freeze” at time τ is crucial as it allows us to
assume that (8) holds when calculating the maximal and expected one-step changes.
We say that uv ∈ E(H) is available at time s if u, v ∈ Us and δG′t+s (u, v) ≥ g − 1.
For v ∈ Us , let A(v, s) be the set of available edges at time s that are incident to v. We
note that A(v, s) ⊆ {vu : u ∈ ΓH (v) ∩ Us } (the cardinality of this last set is N (v, s)).
In general, this inclusion might be strict because there may be vertices u ∈ ΓH (v) ∩ Us
19

with δG′t+s (u, v) < g − 1 (however, it is true that A(v, 0) = {vu : u ∈ ΓH (v) ∩ U0 }).
Nevertheless, the difference between the sets is small.
Claim 4.2. For every 0 ≤ s ≤ t′ − t and every v ∈ Us , it holds that |A(v, s)| ≥
N (v, s) − log(n). Consequently, if τ > s, then |A(v, s)| = n(s) ± 1.1ε(s).
Proof. By assumption, G′ satisfies the conclusions of Claim 2.12. In particular, (d)
implies that there are at most log(n) vertices u ∈ Us ⊆ Wt such that u ∈ ΓH (v) and
such that u, v are ℓ-threatened for some ℓ < g − 1. Since G′t+s is a subgraph of G′ , this
holds for G′t+s as well, and the claim follows.
We now observe that for every s ≤ t′ − t, ε(s) ≥ ε(0) = n0.6β > 10 log(n). Therefore,
if τ > s:
|A(v, s)| = N (v, s) ± log(n) = n(s) ± (ε(s) + log(n)) = n(s) ± 1.1ε(s).

−
∞
Claim 4.3. For every v ∈ Wt , the sequences {N + (v, s)}∞
s=0 and {N (v, s)}s=0 are
supermartingales with respect to the filtration induced by {G′t+s }∞
s=0 . Furthermore, for
every 0 ≤ s ≤ t′ − t, it holds that


 

5nβ
E N − (v, s + 1) − N − (v, s) , E N + (v, s + 1) − N + (v, s) ≤
.
|Wt |

Proof. We show that {N + (v, s)}∞
s=0 is a supermartingale for every v ∈ Wt . The proof
is
similar.
We
need to show that for every s ≥ 0, it holds that
for {N − (v, s)}∞
s=0
 +

(9)
E N (v, s + 1) − N + (v, s)|G′t , G′t+1 , . . . , G′t+s ≤ 0.

We apply the law of total probability. We first observe that if τ ≤ s, then, by definition,
N + (v, s + 1) = N + (v, s), so (9) holds. It thus suffices to show that


E N + (v, s + 1) − N + (v, s)|G′t+s ∧ τ ≥ s + 1 ≤ 0.

We therefore assume that τ ≥ s + 1. By Claim 4.2 this implies that for every u ∈ Us ,
it holds that |A(u, s)| = n(s) ± 1.1ε(s). In particular, this holds for every vertex in
ΓH (v) ∩ Us . Finally, the number of available edges is equal to |Us | (n(s) ± 1.1ε(s)) /2.
Therefore:
X


2
E N (v, s + 1) − N (v, s)|G′t+s ∧ τ ≥ s + 1 = −
|A(u, s)|
|Us | (n(s) ± 1.1ε(s))
u∈ΓH (v)∩Us


2
2(n(s) ± 1.1ε(s))
2n(s)
2N (v, s)(n(s) ± 1.1ε(s))
3.5ε(s)
=−
=−
=−
1±
|Us |(n(s) ± 1.1ε(s)
|Us |(n(s) ± 1.1ε(s))
|Us |
n(s)
=−

2nβ
7ε(s)
±
.
|Wt |
|Us |

Next, we observe that:
n(s + 1) − n(s) = −
20

2nβ
.
|Wt |

Finally, we note that:



1
p(s)8
1
n0.6β
ε(s + 1) − ε(s) = n
−
−1
=
p(s + 1)8 p(s)8
p(s)8 p(s + 1)8
!

8
|Wt | − 2s
= ε(s)
−1
|Wt | − 2s − 2
!


2 −8
−1 .
= ε(s)
1−
|Us |
0.6β



Hence, by Taylor’s Theorem (recalling that |Us | ≥ n−α |Wt | = ω (1)):


 

16
1
16ε(s) 18ε(s)
ε(s + 1) − ε(s) = ε(s)
+O
,
∈
.
|Us |
|Us |2
|Us |
|Us |
Therefore:


E N + (v, s + 1) − N + (v, s)|G′t+s ∧ τ ≥ s + 1


1
= E N (v, s + 1) − N (v, s)|G′t+s ∧ τ ≥ s + 1 − (n(s + 1) − n(s)) − (ε(s + 1) − ε(s))
2


2nβ
7ε(s)
8ε(s)
2nβ
≤ −
±
−
≤ 0,
+
|Wt |
|Us |
|Wt |
|Us |
as desired.
We also observe that the estimates above imply:


E N + (v, s + 1) − N + (v, s)

1
(ε(s + 1) − ε(s))
2
7ε(s)
2nβ
9ε(s)
4nβ
16ε(t′ − t)
4nβ
16n0.6β
2nβ
+
+
+
≤
+
=
+ −8α
.
≤
|Wt |
|Us |
|Wt |
|Us |
|Wt |
|Ut′ −t |
|Wt | n
|Wt |

≤ E [N (v, s) − N (v, s + 1)] + n(s) − n(s + 1) +

Recalling that α = β/100, we obtain:

as claimed.



5nβ
E N + (v, s + 1) − N + (v, s) ≤
,
|Wt |



In order to apply Theorem 4.1, we first note that the maximal one-step change in
N (v, s) is 2. Furthermore, for every s ≤ t′ − t, |n(s + 1) − n(s)|, ε(s + 1) − ε(s) = o (1).
Therefore, the maximal one-step change in N + (v, s) and N − (v, s) is bounded from
above by 3. Hence, for every 1 ≤ s ≤ t′ − t, it holds that:
′

V (s) ≤ V (t − t) ≤ 3

t′X
−t−1
i=0

≤ 3(t′ − t)

5nβ
|Wt |



E N + (v, i + 1) − N + (v, i) |G′t+i

 
= O nβ .
21

By applying Theorem 4.1 with K = 3, λ = ε(s)/2 and v = nβ log(n), we conclude that
for every w ∈ Wt and every 0 ≤ s ≤ t′ − t:





 +

ε(s)2 /4
β/100
.
P N (w, s) ≥ ε(s)/2 ≤ exp −
=
exp
−Ω
n
2(nβ log(n) + 3ε(s)/2)

Applying a union bound to the O |Wt |2 choices for v and s, we conclude that w.h.p.,
for every v ∈ Wt and 0 ≤ s ≤ t′ − t, it holds that N + (v, s) ≤ 12 ε(s). A similar
calculation implies the analogous result for N − (v, s). This implies that τ ≥ t′ − t.
therefore, w.h.p., for every v ∈ Wt and 0 ≤ s ≤ t′ − t, it holds that
N (v, s) = n(s) ± ε(s).
In particular, this implies that Tf′ reeze ≥ t′ . Therefore, Gt′ = G′t′ . Thus Ut′ −t = Wt′ .
In order to show that Gt′ is path-bounded we estimate the probability that a given
set of vertices is in Ut′ −t .
Claim 4.4. Let A ⊆ Wt satisfy |A| ≤ |Wt |/nε/2 . Then:
P [A ⊆ Ut′ −t ] = (1 ± o (1))n−α|A| .
Proof. Similar to the proof of Claim 2.6, we denote by Bs the event that A ⊆ Us , and
observe that:
P [A ⊆ Ut′ −t ] = P [B1 ] × P [B2 |B1 ] × . . . × P [Bt′ −t |Bt′ −t−1 ] .
Using the law of total probability, for every s ≤ t′ − t it holds that
P [Bs |Bs−1 ] = P [Bs |Bs−1 ∧ τ ≥ s] P [τ ≥ s] + P [Bs |Bs−1 ∧ τ < s] P [τ < s] .

−0.3β n(s) available
Now, if τ ≥ s, then every vertex
in
U
is
incident
to
1
±
n
s−1

edges, and there are 1 ± n−0.3β |Us |n(s)/2 available edges in total. Furthermore,
0.9β . Hence A
by assumption, H satisfies
Therefore e (H[A])
 Claim 2.12 (e).
 ≤ |A|n
−0.3β
0.9β
−0.05β
is incident to 1 ± n
|A|n(s) ± |A|n
= 1±n
|A|n(s) available edges.
Thus:
! 




1 ± n−0.05β |A|n(s)
−0.04β 2|A|
= 1− 1±n
.
P [Bs |Bs−1 ∧ τ ≥ s] = 1 −
(1 ± n−0.3β ) |Us |n(s)/2
|Us |

Since P [τ ≤ t′ ] = exp −Ω(nβ/100 ) , we conclude that:







−0.04β 2|A|
P [Bs |Bs−1 ] = 1 − 1 ± n
.
1 ± exp −Ω nβ/100
|Us |

Thus:

P [A ⊆ Ut′ −t ] =

′ −t
tY

P [Bs |Bs−1 ] = (1 ± o (1))n−α|A| .

s=1



We can now use Markov’s inequality to show that Gt′ satisfies Definition 2.10 (b).
Recall that for ℓ ≤ g − 2, Tℓ is the number of ℓ-threatened pairs in G′ . By Claim 2.12
ℓ
Q
2
(b), Tℓ ≤ (k−1)
n |Wt | log (n). By Claim 4.4, the expected number of these pairs that
are also contained in Ut′ −t is at most (1 ± o (1))n−2α Tℓ ≤
22

(k−1)ℓ
2 −2α logQ (n)
n |Wt | n

=

(k−1)ℓ
Q
2
′
n |Wt | log (n).

Applying Markov’s inequality and a union bound, we conclude
ℓ

Q+2
2
′
that w.h.p., for every ℓ ≤ g − 2, Pℓ (Gt′ ) ≤ (k−1)
(n).
n |Wt | log
Finally, we show that Gt′ satisfies Definition 2.10 (a) . Let v ∈ Wt and let ℓ ≤ g − 2.
Let A = Aℓ (v) be the set of vertices u ∈ Wt such that u, v is ℓ-threatened in G′ . Then
|A| = Tℓ (v), and by assumption Tℓ (v) ≤ L(ℓ, t) logQ (n). We will bound the probability

A
that |A ∩ Wt′ | ≥ L(ℓ, t′ ) logQ+1 (n). By Claim 4.4, for every B ∈ L(ℓ,t′ ) log
Q+1
(n) , it
holds that:
Q+1
′
P [B ⊆ Wt′ ] = (1 ± o (1))n−αL(ℓ,t ) log (n) .

Therefore, by a union bound:


′

P |A ∩ Wt′ | ≥ L(ℓ, t ) log

Q+1

a
b


(n) ≤




|A|
Q+1
′
(1 ± o (1))n−αL(ℓ,t ) log (n) .
Q+1
′
L(ℓ, t ) log
(n)

≤ (ea/b)b , it follows that:

L(ℓ,t′ ) logQ+1 (n)


e|A|
′
Q+1
(n) ≤ (1 ± o (1))
P |A ∩ Wt′ | ≥ L(ℓ, t ) log
.
nα L(ℓ, t′ ) logQ+1 (n)

Applying the inequality

Observing that L(ℓ, t) ≤ nα L(ℓ, t′ ), and that |A| ≤ L(ℓ, t) logQ (n), we have:
L(ℓ,t′ ) logQ+1 (n)

Q


eL(ℓ,
t)
log
(n)
P |A ∩ Wt′ | ≥ L(ℓ, t′ ) logQ+1 (n) ≤ (1 ± o (1))
nα L(ℓ, t′ ) logQ+1 (n)
L(ℓ,t′ ) logQ+1 (n)

e
= n−ω(1) .
≤ (1 ± o (1))
log(n)

We apply a union bound over the O(|Wt | log(n)) choices of v and ℓ to conclude that
w.h.p., for every v ∈ Wt′ and every ℓ ≤ g−2, it holds that |Aℓ (v)∩Wt′ | ≤ L(ℓ, t′ ) logQ+1 (n).
Therefore, for D = Q + 2, w.h.p. Gt′ is D-path-bounded.
5. Counting high-girth graphs: proof of Theorem 1.2
Let k, c, n be as in the statement of Theorem 1.2. Let g = c logk−1 (n). We prove the
theorem by considering the number of (labeled) graphs that can be produced by the
(G, g, k)-high-girth process, with G a random Hamilton cycle on n vertices. First, there
are n!/(2n) choices for the Hamilton cycle G. In Lemma 2.3 we showed that if, for d ≥ 3,
G′ is a (d − 1)-regular graph on n vertices, then for every 0 ≤ t ≤ T := (n − nc+ε)/2,
the (G′ , g, d)-high-girth process has (1 − o (1))(n − 2t)2 /2 available edges. Thus, the
total number of choices in this phase is equal to
 
T +1 Y

T 
T 
Y
n2
2t 2
(n − 2t)2
= (1 − o (1))
1−
N (d) :=
(1 − o (1))
2
2
n
t=0
t=0

n/2
n2
= (1 − o (1)) 2
2e

By Proposition 2.1, w.h.p. the (G′ , g, d)-high-girth-process succeeds in constructing a
d-regular graph. Therefore the number of successful runs of the algorithm is at least
23

(1 − o (1))N (d). Returning to the (G, g, k)-high-girth-process, we conclude that the
number of successful runs for this algorithm is at least

(k−2)n/2

n!
n2
n n
(1 − o (1)) N (3) × N (4) × . . . × N (k) = (1 ± o (1))
.
(1 − o (1)) 2
2n
e
2e

Let H be one of the k-regular graphs that the (G, g, k)-high-girth-process can produce. Then H is the disjoint union of the Hamilton cycle G and the (k − 2)-regular
graph H ′ of the chords chosen by the process. There are fewer than e(H ′ )! ways in
which the process can construct H ′ , according to the order in which the edges of H ′
are added. Furthermore, since H is k-regular, it contains fewer than kn Hamilton cycles. This serves as an upper bound on the number of possible choices for G. Since
e(H ′ ) = (k − 2)n/2, the algorithm can produce at least
(k−2)n/2
((1 ± o (1))n/e)n (1 − o (1))n2 / 2e2
= (Ω(n))kn/2
n
k ((k − 2)n/2)!
different graphs, as claimed.
We remark that the enumeration can be improved by employing better estimates of
the number of Hamiltonian cycles and one-factorizations in regular graphs. However,
even for the case of cubic graphs, it seems unlikely that the best known bounds [17]
yield a tight result.
6. Concluding remarks and open problems

• A natural and interesting variation of our algorithm starts with n isolated
vertices rather than a Hamilton cycle. At each step we add a uniformly chosen
edge subject to the constraints that all vertex degrees remain ≤ k and the girth
remains ≥ g (this is in contrast to our own process where we only connect
vertices of minimum degree). Ruciński and Wormald [33] studied this process
without the girth constraint, and showed that w.h.p. the process yields a regular
graph. We believe that ideas from the present work can be modified to show
that even for g = c logk−1 (n) (with c < 1) the process is likely to produce a
k-regular graph. However, new complications arise, which presumably require
Wormald’s differential equation method. We leave this to future work.
• To what extent do our graphs resemble random regular graphs? Numerical
experiments that we have conducted suggest that they are Ramanujan, or at
least nearly Ramanujan. For reference recall Friedman’s famous result [15] that
almost all regular graphs are nearly Ramanujan.
• The large-scale geometry of graphs holds many open questions. Thus, it is
not hard to show that every n-vertex k-regular graph of girth g has at most
nk
g/2 cycles of length g. On the other hand in LPS graphs the numg (k − 1)
ber is Ω̃(n4/3 ) [8], and no graphs are known for which this number is larger.
Our numerical calculations suggest that in our graphs this number is in fact
Θk ((k − 1)g /g). It would also be interesting to determine the smallest γ =
γ(n, k, g) such that every girth-g k-regular graph on n vertices has a set of γ
edges that intersects every g-cycle.
24

The possible relation between a graph’s girth and its diameter is particularly
intriguing. It follows from [12] and Moore’s bound that
girth(G)
≥ 1,
diam(G)
where the lim sup ranges over all graphs where all vertex degrees are ≥ 3.
Nothing better seems to be known at the moment.
Even more remarkably, we do not know whether
2 ≥ lim sup

sup(girth(G) − diam(G))
is finite or not. The sup is over all G in which all vertex degrees are ≥ 3.
References
[1] Mohsen Bayati, Andrea Montanari, and Amin Saberi, Generating random graphs with large girth,
Proceedings of the twentieth annual ACM-SIAM symposium on Discrete algorithms, Society for
Industrial and Applied Mathematics, 2009, pp. 566–575.
[2] Patrick Bennett and Tom Bohman, A natural barrier in random greedy hypergraph matching,
Combinatorics, Probability and Computing (2012), 1–10.
[3] NL Biggs and MJ Hoare, The sextet construction for cubic graphs, Combinatorica 3 (1983), no. 2,
153–165.
[4] Norman Biggs, Constructions for cubic graphs with large girth, the Electronic Journal of Combinatorics 5 (1998), no. 1, 1.
[5] Tom Bohman, The triangle-free process, Advances in Mathematics 221 (2009), no. 5, 1653–1677.
[6] Tom Bohman and Lutz Warnke, Large girth approximate Steiner triple systems, Journal of the
London Mathematical Society (2018).
[7] Béla Bollobás and Oliver Riordan, Constrained graph processes, The Electronic Journal of Combinatorics 7 (2000), no. 1, R18.
[8] Maxime Fortier Bourque and Bram Petri, Kissing numbers of regular graphs, arXiv preprint
arXiv:1909.12817 (2019).
[9] L Sunil Chandran, A high girth graph construction, SIAM journal on Discrete Mathematics 16
(2003), no. 3, 366–370.
[10] Patrick Chiu, Cubic Ramanujan graphs, Combinatorica 12 (1992), no. 3, 275–285.
[11] Xavier Dahan, Regular graphs of large girth and arbitrary degree, Combinatorica 34 (2014), no. 4,
407–426.
[12] Paul Erdős and Horst Sachs, Reguläre graphen gegebener taillenweite mit minimaler knotenzahl,
Wiss. Z. Martin-Luther-Univ. Halle-Wittenberg Math.-Natur. Reihe 12 (1963), no. 251-257, 22.
[13] Paul Erdös, Stephen Suen, and Peter Winkler, On the size of a random maximal graph, Random
Structures & Algorithms 6 (1995), no. 2-3, 309–318.
[14] David A Freedman, On tail probabilities for martingales, the Annals of Probability 3 (1975), no. 1,
100–118.
[15] Joel Friedman, A proof of Alon’s second eigenvalue conjecture and related problems, American
Mathematical Soc., 2008.
[16] Alexander Gamburd, Shlomo Hoory, Mehrdad Shahshahani, Aner Shalev, and Balint Virág, On
the girth of random Cayley graphs, Random Structures & Algorithms 35 (2009), no. 1, 100–117.
[17] Heidi Gebauer, Enumerating all Hamilton cycles and bounding the number of Hamilton cycles in
3-regular graphs, The Electronic Journal of Combinatorics 18 (2011), no. 1, P132.
[18] Stefan Glock, Daniela Kühn, Allan Lo, and Deryk Osthus, The existence of designs via iterative
absorption, arXiv preprint arXiv:1611.06827 (2016).
[19]
, On a conjecture of Erdős on locally sparse Steiner triple systems, arXiv preprint
arXiv:1802.04227 (2018).
[20] David A Grable, On random greedy triangle packing, the Electronic Journal of Combinatorics 4
(1997), no. 1, P11.
25

[21] Shlomo Hoory, On graphs of high girth, Ph.D. thesis, Hebrew University of Jerusalem Israel, 2002.
[22] Peter Keevash, The existence of designs, arXiv preprint arXiv:1401.3665 (2014).
[23] Jeong Han Kim and Van H Vu, Concentration of multivariate polynomials and its applications,
Combinatorica 20 (2000), no. 3, 417–434.
[24] Michael Krivelevich, Matthew Kwan, Po-Shen Loh, and Benny Sudakov, The random k-matchingfree process, Random Structures & Algorithms 53 (2018), no. 4, 692–716.
[25] Matthew Kwan, Almost all Steiner triple systems have perfect matchings, arXiv preprint
arXiv:1611.02246 (2016).
[26] Felix Lazebnik, Vasiliy A Ustimenko, and Andrew J Woldar, A new series of dense graphs of high
girth, Bulletin of the American mathematical society 32 (1995), no. 1, 73–79.
[27] Alexander Lubotzky, Ralph Phillips, and Peter Sarnak, Ramanujan graphs, Combinatorica 8
(1988), no. 3, 261–277.
[28] Brendan D McKay, Nicholas C Wormald, and Beata Wysocka, Short cycles in random regular
graphs, The Electronic Journal of Combinatorics 11 (2004), no. 1, 66.
[29] Moshe Morgenstern, Existence and explicit constructions of q + 1 regular Ramanujan graphs for
every prime power q, Journal of Combinatorial Theory, Series B 62 (1994), no. 1, 44–62.
[30] Deryk Osthus and Anusch Taraz, Random maximal H-free graphs, Random Structures & Algorithms 18 (2001), no. 1, 61–82.
[31] Michael E Picollelli, The final size of the C4 -free process, Combinatorics, Probability and Computing 20 (2011), no. 6, 939–955.
[32]
, The final size of the Cℓ -free process, SIAM Journal on Discrete Mathematics 28 (2014),
no. 3, 1276–1305.
[33] Andrzej Ruciński and Nicholas C Wormald, Random graph processes with degree restrictions,
Combinatorics, Probability and Computing 1 (1992), no. 2, 169–180.
[34] Lutz Warnke, The Cℓ -free process, Random Structures & Algorithms 44 (2014), no. 4, 490–526.
[35]
, On the method of typical bounded differences, Combinatorics, Probability and Computing
25 (2016), no. 2, 269–299.
[36] Alfred Weiss, Girths of bipartite sextet graphs, Combinatorica 4 (1984), no. 2-3, 241–245.
[37] Nicholas C Wormald, The differential equation method for random graph processes and greedy
algorithms, Lectures on approximation and randomized algorithms 73 (1999), 73–155.
Department of Computer Science, The Hebrew University of Jerusalem, Jerusalem
91904, Israel
E-mail address: nati@cs.huji.ac.il
Institute of Mathematics and Federmann Center for the Study of Rationality, The
Hebrew University of Jerusalem, Jerusalem 91904, Israel
E-mail address: menahem.simkin@mail.huji.ac.il

26

