MINIMALLY CONNECTED HYPERGRAPHS

arXiv:1901.04560v1 [math.CO] 14 Jan 2019

MARK BUDDEN, JOSH HILLER, AND ANDREW PENLAND

Abstract. Graphs and hypergraphs are foundational structures in discrete
mathematics. They have many practical applications, including the rapidly
developing field of bioinformatics, and more generally, biomathematics. They
are also a source of interesting algorithmic problems. In this paper, we define
a construction process for minimally connected r-uniform hypergraphs, which
captures the intuitive notion of building a hypergraph piece-by-piece, and a
numerical invariant called the tightness, which is independent of the construction process used. Using these tools, we prove some fundamental properties
of minimally connected hypergraphs. We also give bounds on their chromatic
numbers and provide some results involving edge colorings. We show that every connected r-uniform hypergraph contains a minimally connected spanning
subhypergraph and provide a polynomial-time algorithm for identifying such
a subhypergraph.

1. Introduction
Graphs and hypergraphs provide many beautiful results in discrete mathematics. They are also extremely useful in applications. Over the last six decades, graphs
and their generalizations have been used for modeling many biological phenomena,
ranging in scale from protein-protein interactions, individualized cancer treatments,
carcinogenesis, and even complex interspecial relationships [12, 15, 16, 19, 22]. In
the last few years in particular, hypergraphs have found an increasingly prominent
position in the biomathematical literature, as they allow scientists and practitioners
to model complex interactions between arbitrarily many actors [22].
The flexibility that makes hypergraphs such a versatile tool complicates their
analysis. Because of this, many different algorithms and metrics have been developed to assist with their application [18, 23]. Due to the sheer number of researchers
from varying disciplines developing these techniques, there is substantial inconsistency in the literature regarding names and notations. However, many of these
approaches share a common theme: they aim to quantify or model connectivity in
some way [18].
2010 Mathematics Subject Classification. Primary 05C65, 05C55; Secondary 05D10, 05C05.
Key words and phrases. hypertrees, hypergraph colorings, spanning subhypergraph.
1

2

M. BUDDEN, J. HILLER, AND A. PENLAND

Trees, and in particular, spanning trees, offer a very useful tool for studying
connectivity in graphs. Indeed, trees play an all-important role in combinatorics:
they are simple enough to provide intuition via examples, yet sufficiently complex
to provide richness and depth. Trees also illustrate some differences between graphs
and hypergraphs. For instance, it is well-known that every connected graph has
a spanning tree. It is also well-established that this statement is not true for
hypergraphs.
The distinction between graphs and other hypergraphs with regard to spanning trees has important considerations in theoretical computer science. If one
needs a spanning tree in a graph, standard algorithms such as that of Prim [21]
or Kruskal [17] will do the job in low-degree polynomial time. For 3-uniform hypergraphs, an algorithm due to Lovász [20] will also determine the existence of a
spanning tree in polynomial time. A subsequent, more efficient polynomial time
algorithm for the same problem is due to Gabow and Stallman [14]. However, Andersen and Fleischner [1] showed that the general problem of determining whether
or not a hypergraph has a spanning tree is NP-complete, even for relatively restricted classes, such as linear hypergraphs in which each vertex is contained in at
most 3 hyperedges, or 4-uniform hypergraphs which have some vertex in common to
all hyperedges. Andersen and Fleischner [1] quote this last fact as an unpublished
result of Carsten Thomassen.
Another important distinction between graphs and hypergraphs arises in the
equivalence of certain definitions of a spanning tree. In graph theory, every spanning minimally connected subgraph is a tree, but the analagous statement does
not hold for hypergraphs. This distinction between spanning trees and minimally
connected subhypergraphs appears when generalizing certain results from graphs
to hypergraphs. For example, in 2014, Chartrand, Johns, McKeon, and Zhang [7]
proved that a connected graph G has its rainbow connection number equal to its
size if and only if G is a tree. In order to prove an analogue of this result in the
setting of hypergraphs, Carpentier, Liu, Silva, and Sousa [6] were forced to consider
the more general class of minimally connected hypergraphs. In this paper, we examine other aspects of hypergraph theory where minimally connected hypergraphs
are necessary to prove results that typically concern trees in graphs.
In the next section, we give the formal definition of an r-uniform tree and
provide a very simple demonstration that for every r > 2, there exist connected
hypergraphs which do not admit spanning r-uniform trees. In Section 3, we consider
structural properties and existence theorems for minimally connected hypergraphs,
introducing a numerical invariant called tightness associated to a hypergraph. In

MINIMALLY CONNECTED HYPERGRAPHS

3

Section 4, we examine chromatic numbers of minimally connected hypergraphs.
Section 5 of this paper deals with other connectivity issues related to minimally
connected hypergraphs. We conclude with some open questions and directions for
future research.

2. Definitions and Background
In this section, we provide the definitions, elementary examples, and concepts
that are necessary to derive the results of this paper. We begin by formally defining hypergraphs and r-uniform hypergraphs. As is customary, we will denote the
cardinality of a set S by |S|. If S is a set, we write 2S for the power set of S.
A hypergraph H consists of two sets: a non-empty set V (H) called the vertex
set, and a set E(H) ⊆ 2V − ∅, called the set of hyperedges. When the hypergraph
being considered is clear from the context, we may write V and E in place of
V (H) and E(H), respectively. The size of a hypergraph is |E| while the order of a
hypergraph is |V |. An r-uniform hypergraph is a hypergraph where for all e ∈ E,
|e| = r. When r = 2, our definition coincides with that of a graph. For every
hypergraph H, there is a corresponding hypergraph H such that V (H) = V (H)
and E(H) = 2V − (E(H) ∪ {∅}). If H is assumed to be an r-uniform hypergraph,
then we assume H is also an r-uniform hypergraph, and so we only look at the edge
complement of H within the more restricted set of vertex sets of cardinality r.
Throughout the remainder of this paper, we will focus on r-uniform hypergraphs
with r > 2. We call a hypergraph H finite if V (H) is finite. For the remainder of
this paper, we will only consider finite hypergraphs. For clarity, when we refer to
graphs, we will call them 2-graphs.
A Berge path consists of a sequence of k distinct vertices v1 , v2 , . . . , vk and k − 1
distinct hyperedges e1 , e2 , . . . , ek−1 such that vi , vi+1 ∈ ei for all i ∈ {1, 2, . . . , k −
1}. A Berge cycle is formed if there is a hyperedge ek that includes both v1 and
vk . A Berge path is a loose path if for i 6= j,

0 if j 6= i + 1
|ei ∩ ej | =
1 if j = i + 1.
Observe that all vertices in a loose path are necessarily distinct.
We say that an r-uniform hypergraph H is minimally connected if the removal of
any hyperedge (while retaining all vertices) disconnects H. For example, consider
the hypergraphs in Figure 1. Every hyperedge in the first hypergraph contains
some vertex of degree one, but this is not the case in the second hypergraph.

4

M. BUDDEN, J. HILLER, AND A. PENLAND

Figure 1. Two minimally connected 4-uniform hypergraphs.

Observe that if every hyperedge of a connected hypergraph contains at least one
vertex of degree 1, then it is minimally connected. The second hypergraph in
Figure 1 demonstrates that the converse to this statement is false. Figure 2 shows
two other minimally connected hypergraphs, both of which are Berge cycles.

Figure 2. Two minimally connected hypergraphs in which any
hyperedge-by-hyperedge construction requires the third hyperedge
to intersect at least two previous hyperedges.

Of course, having defined minimally connected hypergraphs, one must inquire
about the appropriate definition of a hypergraph tree. We now give several possible
definitions.
Definition 1. The following definitions of r-uniform trees are equivalent:
(1) T is an r-uniform hypergraph that can be formed hyperedge-by-hyperedge
with each new hyperedge intersecting the previous hypergraph at exactly
one vertex. That is, each new hyperedge requires the creation of exactly
r − 1 new vertices.
(2) T is a connected r-uniform hypergraph that does not contain any (Berge)
cycles.

MINIMALLY CONNECTED HYPERGRAPHS

5

(3) T is a connected r-uniform hypergraph in which the removal of any hyperedge (keeping all vertices) results in a hypergraph with exactly r connected
components.
(4) T is an r-uniform hypergraph in which there exists a unique loose path
between any pair of distinct vertices.
(5) T is a connected r-uniform hypergraph in which the size |E| and order |V |
satisfy |V | = (r − 1)|E| + 1.

The equivalence of (1) − (4) can be found in Theorem 2.1 of [5]. We will wait
until Corollary 6 in Section 3 to complete the proof that (5) is also a suitable
definition. An important observation is that from (3), it immediately follows that
every r-uniform tree is minimally connected (in that the removal of any hyperedge
disconnects the hypergraph). Of course, the hypergraphs given in Figures 1 and 2
show that not all minimally connected hypergraphs are trees.
The examples given so far demonstrate that a hyperedge-by-hyperedge construction must allow for the intersection of a new hyperedge with more than one vertex
(and even more than one hyperedge) in the previous hypergraph. The examples
in Figure 2 also demonstrates why it is necessary to allow for (Berge) cycles. Of
course, if cycles are allowed, then there can be multiple paths between a pair of
distinct vertices. In fact, the following proposition shows that it is quite easy to
construct such examples for every r > 2. Let us first define an r-uniform hypergraph spanning tree for a an r-uniform hypergraph H to be an r-uniform tree T
with V (T ) = V (H) and E(T ) ⊆ E(H).
Proposition 2. For every r > 2 there exists a connected r-uniform hypergraph
which does not admit an r-uniform spanning tree.

Proof. Fix r > 2 and consider the r-uniform hypergraph on r + 1 vertices with two
edges. e1 consists of vertices (v1 , v2 , ...vr ) and e2 consists of vertices (v2 , v3 , ..., vr+1 ).
Then the hypergraph obtained is connected and not a tree but the removal of either
edge disconnects the hypergraph.



3. Structural Properties and Existence Theorems
In this section, we analyze the underlying structure of minimally connected
hypergraphs. We start by defining a construction process, which leads to the notion
of the tightness sum of such a hypergraph. Our attention then turns to possible

6

M. BUDDEN, J. HILLER, AND A. PENLAND

sizes and an algorithm for finding a spanning minimally connected subhypergraph
for any connected r-uniform hypergraph.

3.1. Construction Processes for Hypergraphs. The definition we offered for
a minimally connected hypergraph can be a little fastidious to work with when
proving basic properties of hypergraphs. Hence, we wish to offer an equivalent
constructive definition of a minimally connected r-uniform hypergraph that will
serve our purposes nicely. In order to make this notion precise, we formally define
a constructive process.
Definition 3. Let H be an r-uniform hypergraph of size n. A constructive process
P for H is a finite sequence of hypergraphs Hi , 1 ≤ i ≤ n satisfying the following
properties:

• Hn = H,
• Hj is a subhypergraph of Hk for j ≤ k,
• each Hi has exactly i hyperedges, and
S
• for each j, E(Hj+1 ) = E(Hj ) {ej } for some ej ∈ E(H).
We say that a constructive process P for a hypergraph H is connected if and
only if each Hi is connected for all i. It is clear that a hypergraph is connected
if and only if it has a connected construction process. We say that a constructive
process P for a hypergraph H is minimally connected if and only if each Hi is
minimally connected.
Theorem 4. An r-uniform hypergraph H is minimally connected if and only if H
is an r-uniform hypergraph that has a minimally connected constructive process.

Proof. First, suppose that H a is minimally connected r-uniform hypergraph. In
particular, H is connected, so it can be constructed hyperedge-by-hyperedge with
each resulting hypergraph being connected along the way. Let Hi be the resulting
hypergraph after the first i hyperedges e1 , e2 , . . . , ei have been added. Note that
if Hi is not minimally connected, then there exists some hyperedge whose removal
does not disconnect Hi , and hence, would not disconnect H. Conversely, if a hypergraph H can be formed hyperedge-by-hyperedge with the resulting hypergraph
being minimally connected at each stage, then the final stage results in H, which
is necessarily minimally connected.



MINIMALLY CONNECTED HYPERGRAPHS

7

We have shown that there is a constructive process P that one can use to obtain
a minimally connected hypergraph. Suppose that H is a minimally connected runiform hypergraph of size k. Denote the hyperedges in this constructive process
by e1 , e2 , . . . , ek and let Hi be the resulting minimally connected hypergraph after
hyperedge ei has been added. Note that with the addition of each hyperedge, at
least one new vertex must be introduced. Otherwise, when adding in a hyperedge
ei that only uses existing vertices, the hypergraph Hi−1 would have to have been
disconnected, contradicting our assumption about the constructive process. It is
also worth observing that the addition of any ei cannot prevent the removal of a
previous hyperedge ej (j < 1) from disconnecting the hypergraph (although it may
change the number of resulting components).

3.2. The Notion of Tightness And Some Applications. A constructive process P produces a sequence t1 , t2 , . . . , tk−1 of “tightnesses” given by
ti = |V (Hi ) ∩ ei+1 |,
where 1 ≤ ti ≤ r − 1. Although the constructive process that we have described
is not unique for a given minimally connected hypergraph H, we will show in the
following theorem that the sum of the tightnesses is independent of the construction
chosen.
Theorem 5. All constructive processes for a given r-uniform hypergraph H of size
k produce the same tightness sum
tH :=

k−1
X

ti .

i=1

Proof. Let H be a connected r-uniform hypergraph of size k and suppose that P
and P 0 are constructive processes for H with tightness sequences
t1 , t2 , . . . , tk−1

and t01 , t02 , . . . t0k−1 ,

respectively. Then for 1 ≤ i ≤ k − 1, the addition of ei+1 in P requires the addition
of r − ti new vertices. An analogous statement can be made for P 0 . If H has order
n, then
n=r+

k−1
X

k−1
X

i=1

i=1

(r − ti ) = r +

(r − t0i ),

from which it follows that
k−1
X
i=1

completing the proof of the theorem.

ti =

k−1
X

t0i ,

i=1



8

M. BUDDEN, J. HILLER, AND A. PENLAND

Thus, tH is uniquely determined by H and the order of H is given by
|V (H)| = r +

k−1
X

(r − ti ) = rk − tH .

i=1

The following corollary will prove the equivalence between (3) and (5) in Definition
1.
Corollary 6. A connected r-uniform hypergraph H is an r-uniform tree if and only
if tH = k − 1. Equivalently, a connected r-uniform hypergraph H is an r-uniform
tree if and only if it has order |V (H)| = (r − 1)|E(H)| + 1.
Proof. Clearly every hypergraph tree is minimally connected and has size k if and
only if it has order r + (k − 1)(r − 1). Thus, we need only show that if H is a
connected r-uniform hypergraph of size k and order r + (k − 1)(r − 1), then H
is a tree. We prove the contrapositive to this statement. Suppose that H is a
connected r-uniform hypergraph that is not a tree. Then H can be constructed
hyperedge-by-hyperedge, with the resulting hypergraph being connected at each
stage of the construction. Since H is assumed to not be a tree, some tightness
ti ≥ 2. So, the sum of the tightnesses of H satisfies tH ≥ k, giving a maximal order
of r + (k − 1)(r − 1) − 1.
(r)

Denote by Sn



the r-uniform star of order n consisting of r − 1 vertices in

the intersection of all hyperedges (called the center), along with each hyperedge
containing a single vertex of degree 1. This definition agrees with the more general
definititon of a star given in [4]. Observe that such a star is minimally connected
since the removal of any hyperedge leaves the vertex of degree 1 isolated. See Figure
3 for an example of a 6-uniform star.
Theorem 7. For r ≥ 3, a minimally connected r-uniform hypergraph H of order
(r)

n is isomorphic to Sn if and only if
tH = (k − 1)(r − 1).
Proof. If a minimally connected hypergraph H is a star, then every constructive
process for H requires each tightness ti = r − 1, giving tH = (k − 1)(r − 1). To
prove the converse, we will use induction on k. When k = 1, tH = 0 and H
consists of a single hyperedge, which is trivially a star. Now suppose that H is a
minimally connected hypergraph of size k > 1 in which tH = (k − 1)(r − 1) and
that all minimally connected hypergraphs of size k − 1 (with tightness sum equal to
(k − 2)(r − 1)) are necessarily stars. As a minimally connected hypergraph, H has
a minimally connected constructive process P. Let ek be the last hyperedge added

MINIMALLY CONNECTED HYPERGRAPHS

9

Figure 3. A 6-uniform star of order 9.
in such a process and consider the hypergraph H 0 formed by removing ek (and all
resulting singletons) from H. Since tH = (k − 1)(r − 1), all tightnesses ti in P are
equal to r − 1. Hence, the removal of ek leaves only one singleton and we find that
|V (H)| = |V (H 0 )| + 1. So,
tH 0 = r(k − 1) − |V (H 0 )|
= r(k − 1) − (|V (H)| − 1)
= r(k − 1) − (rk − tH − 1)
= r(k − 1) − (rk − (k − 1)(r − 1) − 1)
= (k − 2)(r − 1).
By the inductive hypothesis, H 0 is a star. When adding back in hyperedge ek to
form H, including any vertex x of degree one will prevent the hyperedge ei that
includes x from disconnecting H. Thus, the only vertices that can be included in
the intersection of ek with H 0 are those of degree greater than one in H 0 . Therefore,
H is a star.



3.3. The Possible Sizes of Minimally Connected Subhypergraphs. We now
focus our attention on finding bounds for the size of a minimally connected runiform hypergraph. Let H be a connected hypergraph of order at least r + 1.
From Theorem 4, each minimally connected spanning hypergraph M can be constructed hyperedge-by-hyperedge, with each resulting hypergraph being minimally
connected, and this process results in a (finite) sequence of tightnesses t2 , t3 , . . . , tm ,

10

M. BUDDEN, J. HILLER, AND A. PENLAND

where 1 ≤ ti ≤ r − 1 and m is the size of M . The maximum number of hyperedges
M can contain occurs when M is (r − 1)-tight (i.e., t = t2 , = t3 = · · · tm = r − 1).
In this case, we find that M contains m = n − r + 1 hyperedges. For example,
consider the star in Figure 3.
The minimum number of hyperedges that M can contain occurs when M is a
tree, or is close to being a tree (with say, only one tightness not equal to 1). If M
is a tree that has order n, then n − 1 ≡ 0 (mod r − 1). If m is the size of M , then
n−1
m=
.
r−1
If M is not a tree, but is close to being a tree, then suppose that
n − 1 = (m − 1)(r − 1) + k,

where

1 ≤ k ≤ r − 2.

It follows that

n − 1 r − 1 − k ln − 1m
+
=
.
r−1
r−1
r−1
Putting together these upper and lower bounds, we have shown the following.
m=

Theorem 8. Let H be a connected r-uniform hypergraph of order n with minimally
connected spanning hypergraph M of size m. Then
ln − 1m
≤ m ≤ n − r + 1.
r−1

Theorem 8 hints at a question: for a given order n is there a minimally connected
r-uniform hypergraph for every permissible value of m? The following result shows
that this is the case.
Theorem 9. Fix an order n ≥ r and let
ln − 1m
≤ m ≤ n − r + 1.
r−1
Then there is a minimally connected r-uniform hypergraph of size m and order n.
Proof. Let z = n−r+1−m. We will define a constructive process which culminates
in an r-uniform hypergraph of size m and order n. Let us choose r vertices to form
e1 and label these v1 , v2 , ..., vr . We then proceed in two cases based on the value of
z:
Case 1: If z ≥ r − 2, then define a, b ∈ Z such that z = a(r − 2) + b. For 1 ≤ i ≤ a
let ti = 1, ta+1 = r − b − 1, and tj = r − 1 for a + 1 < j < m − 1. For e2 let
|e1 ∩ e2 | = {v1 }. For ek (2 < k < m) pick any ti−1 vertices from v2 , v3 , ..., vr . Then
every edge, except possibly e1 contains a vertex of degree 1. If e1 is removed then
e2 is disconnected from the rest of the hypergraph. Thus the resulting hypergraph

MINIMALLY CONNECTED HYPERGRAPHS

11

is of size k, order n and is minimally connected.
Case 2: If z < r − 2, then let t1 = r − z − 1. Let |e1 ∩ e2 | = {v1 , v2 , ..., vt1 } create
m − 2 edges e3 , e4 , ..., em and for every 2 < i ≤ m, let |e1 ∩ ei | = {v1 , v2 , ..., vr−1 }.
Thus every edge has at least one vertex of degree 1, and so the resulting hypergraph
is of size k, order n and is minimally connected.
This completes the proof of the theorem.


(r)

Theorem 9 leads to an interesting observation. The complete hypergraph Kn

contains minimally connected subhypergraphs for every permissible value of m.
This fact stands in stark contrast to the context of 2-graphs, where it is well known
that the size of a spanning tree is completely determined by the order of the parent
graph.

3.4. Existence and An Algorithm for Minimally Connected Subhypergraphs. The original motivation for this paper was to generalize a ubiquitous result in the study of trees: every connected graph contains a spanning tree. We now
provide an analogous result for r-uniform hypergraphs and describe a polynomialtime algorithm for finding such an subhypergaph.
Theorem 10. Every connected r-uniform hypergraph contains a spanning minimally connected hypergraph.
Proof. Let H be a connected r-uniform hypergraph. If H is not minimally connected, then there exists some hyperedge e1 whose removal does not disconnect H.
Let H1 be the hypergraph formed by removing e1 from H. If H1 is not minimally
connected, then repeat this process. As H has a finite number of hyperedges, the
process must eventually terminate with a minimally connected hypergraph Hi that
spans the vertices in H.



In this subsection we discuss an algorithm for finding a minimally connected
spanning subhypergraph of a graph. In order to make the discussion clear, we will
give necessary definitions.
An algorithm is an unambiguous, step-by-step process that takes input and
terminates with some output. If f and g are functions from N to itself, we say that
g(n) is O(f (n)) if there exist positive constants c and n0 such that 0 ≤ g(n) ≤ cf (n)
for all n ≥ n0 . For an algorithm A, we let TA (n) denote the maximum number
of steps that it takes A to terminate on an algorithm of size n; note that TA
is a function from N to N. Given an algorithm A and a function f (n), we say

12

M. BUDDEN, J. HILLER, AND A. PENLAND

that an algorithm A is O(f (n)) if the function TA is O(f (n)). If there exists a
polynomial p(n) such that A is O(p(n)), we say that A is polynomial time. For
a more thorough definition of these concepts, we would direct the curious reader
towards the standard [8, Chapter 2]. Throughout the rest of this section, assume
that n = |V (H)|, where H is an r-uniform hypergraph.
Gallo, Longo, Pallottino, and Nguyen [9] provide an algorithm Visit(H, v)
which takes as input a hypergraph H and a vertex v ∈ V (H), and returns all
vertices in H that are in the same connected component as v. The Visit algorithm
is O(s), where
s=

X

|e|.

e∈E(H)

If we assume that H is an r-uniform hypergraph, then there are at most

n
r



hy-

peredges, and each e ∈ E(H) has |e| = r. Recall that if r is a fixed constant,

n
r
r is O(n ) when viewed as a function of n. Thus, in the case of an r-uniform
hypergraph, we have s = O(nr ), and Visit becomes a polynomial time algorithm.
Notice that since being in the same connected component is an equivalence relation,
it is not hard to see that an r-uniform hypergraph H is connected if and only if
Visit(H, v) returns the entire set V (H) for any v ∈ V (H).
Theorem 11. For any value of r, there exists an algorithm that takes as input a
connected r-uniform hypergraph H and returns M , a minimally connected spanning
subhypergraph of H. If r is viewed as a fixed constant, this algorithm runs in
polynomial time on the number of vertices in H.
Proof. Consider the following algorithm: Let H ∗ be a copy of H. Begin by choosing
an arbitrary vertex v ∗ ∈ H. For each edge e in E(H ∗ ), run Visit(H ∗ − {e}, v ∗ )
to determine if e can be removed without disconnecting H ∗ . If yes, remove e
from E(H ∗ ). Note that H ∗ − {e} can only be connected if H ∗ − {e} will contain
all of V (H ∗ ). So at each stage, H ∗ remains a spanning subhypergraph of H.
This algorithm will terminate with H ∗ as a minimally connected subhypergraph
of H, since if an edge of E(H ∗ ) could be removed without disconnecting H ∗ , that
edge would have been removed at the stage it was considered. Since H is an r
uniform hypergraph, there are at most nr hyperedges, which is O(nr ), and for
each hyperedge we call Visit(H, v ∗ ) which we know is an O(nr ) algorithm. Hence
the algorithm is O(n2r ), which is a polynomial in r.



It is worth emphasizing that these results provide a sharp contrast between
spanning minimally connected subhypergraphs and spanning trees. For instance,
for a 4-uniform hypergraph on n vertices, we have just shown that there must

MINIMALLY CONNECTED HYPERGRAPHS

13

be a spanning minimally connected subhypergraph, and in fact there is an O(n8 )
algorithm to find one. As discussed in the Introduction, 4-uniform hypergraphs
do not always have spanning trees, and no known polynomial time algorithm is
known to find such a spanning tree if it does exist. We would hazard the following
intuitive explanation for the potential gap in complexity between the problems. Our
algorithm is able to consider each edge one at a time and check whether removal
will result in a disconnected subhypergraph. The problem of finding a spanning tree
adds the additional difficulty of avoiding a cycle, which is a more global property
based on collections of edges rather than single edges.

4. Chromatic numbers of Minimally Connected Hypergraphs
Chromatic numbers give insight into the connectivity of a graph or hypergraph.
Let χw and χs denote the weak and strong chromatic numbers, respectively. That
is, χw (H) is the minimum number of colors needed to properly color the vertices
of H so that no hyperedge is monochromatic and χs (H) is the minimum number
of colors needed to color the vertices of H so that every pair of adjacent vertices
receive different colors. When these concepts are restricted to the case of 2-graphs,
they both agree with that of the chromatic number.
Theorem 12. If H is a minimally connected r-uniform hypergraph, then χw (H) =
2.
Proof. Let H be a minimally connected r-uniform hypergraph with m edges. From
Theorem 4, we know that a minimally connected hypergraph can be constructed
hyperedge-by-hyperedge with a connected hypergraph each step of the way and
such that each new hyperedge requires the addition of a new vertex. Suppose that
Hi is the connected hypergraph formed after adding hyperedge ei (1 ≤ i ≤ m).
We proceed by induction on m to prove that χw (H) = 2. H1 consists of a single
hyperedge, so its vertices can be trivially 2-colored. Now suppose that Hi can be
weakly 2-colored. When adding ei+1 to construct Hi+1 , there are three possibilities:
the vertices in E(Hi ) ∩ ei+1 are all the same color or receive both colors 1 and 2. In
the former case, give the new vertex added with ei+1 the other color. In the latter
case, the new vertex can receive either color. In both cases, we find that Hi+1 can
be weakly 2-colored, and hence, χw (H) = 2.



While r-uniform trees with size k ≥ 1 have strong chromatic number χs (T ) = r
(this is a simple inductive exercise to confirm), we are unable to provide such precise
limitations on the strong chromatic number of hypergraphs that are only assumed

14

M. BUDDEN, J. HILLER, AND A. PENLAND

to be minimally connected. The following theorem demonstrates a method for
finding minimally connected hypergraphs with arbitrarily large strong chromatic
numbers. Note that the following statement is not true for minimally connected
graphs (2-uniform trees), so one must assume r ≥ 3.
Theorem 13. For all natural numbers n ≥ r ≥ 3, there exists a minimally connected r-uniform hypergraph with strong chromatic number equal to n.

Proof. We begin with a complete graph Kn of order n, which has size m =

n(n−1)
2

and chromatic number χ(Kn ) = n. From this graph, we form an r-uniform hyper(r)

graph Hn that is minimally connected by replacing each edge ab in Kn with an runiform hyperedge ei = abxi1 xi2 · · · xir−2 , where xij are new vertices (with 1 ≤ i ≤ m
(r)

and 1 ≤ j ≤ r − 2) that all have degree one. The hypergraph Hn

is minimally

connected since the removal of ei leaves each xij disconnected from the rest of the
(r)

hypergraph. Also, Hn requires at least n colors in any proper coloring since adja(r)

(r)

cent vertices in Kn are still adjacent in Hn . Hence, χs (Hn ) ≥ n. On the other
hand, since n ≥ r, there are enough colors from the original proper coloring of Kn
(r)
to color the vertices xi1 , xi2 , . . . , xir−2 distinct from one another. Thus, χs (Hn ) ≤ n,
completing the proof.



The construction in the above proof provides, for any natural number n, a means
of producing a minimally connected r-uniform hypergraph with strong chromatic
(3)

number at least n. As an example, consider Figure 4. In this figure, H4
constructed from K4 . The hypergraph

(3)
H4

is

contains six hyperedges, the deletion

of any hyperedge results in a disconnected hypergraph containing an isolated vertex,
(3)

and χs (H4 ) = 4.
Theorem 14. Let H be a minimally connected r-uniform hypergraph with r ≥ 3. If
x and y are two distinct vertices in H that receive the same color in some strongly
proper vertex coloring of H, then there exists some hyperedge whose removal puts
x and y in different components.

Proof. Suppose that x and y receive the same color in some proper vertex coloring
of H, but there does not exist any hyperedge whose removal puts x and y in different
components. Let P be a constructive process with hyperedges e1 , e2 , . . . , ek . Then
removing ek does not result in x and y being in different components. Removing
the hyperedges in reverse order, the removal of ei does not result in x and y being
in different components for any 2 ≤ i ≤ k. Finally, we are left with x and y both
in e1 . So, they cannot receive the same color, giving us a contradiction.



MINIMALLY CONNECTED HYPERGRAPHS

15

Figure 4. Using a K4 to construct a minimally connected 3(3)
(3)
uniform hypergraph H4 satisfying χs (H4 ) = 4.
Theorem 15. For r ≥ 3, let H be a minimally connected r-uniform hypergraph
of size k > 1 with minimally connected constructive process P having tightness
sequence t1 , t2 , . . . , tk . Then
χs (H) ≤ r + tH − t1 − k + 2.

Proof. We proceed by induction on k > 1. When k = 2, tH = t1 , and it is easily seen
that χs (H) = r. Now, suppose that the result is true for all minimally connected
r-uniform hypergraphs of size k − 1 and let H be a minimally connected r-uniform
hypergraph of size k. Let H 0 be the minimally connected hypergraph formed by
removing ek (and all isolated vertices) from H. Then by the inductive hypothesis,
χs (H 0 ) = r +

k−2
X

ti − t1 − (k − 1) + 2.

i=1

When adding in ek , the only vertices that may need new colors are those that are
the same color in V (H 0 ) ∩ ek . So, at most, tk−1 − 1 new colors are needed, from
which it follows that
χs (H) ≤ r +

k−1
X

ti − t1 − k + 2 = r + tH − t1 − k + 2,

i=1

completing the proof of the theorem.



16

M. BUDDEN, J. HILLER, AND A. PENLAND

Observe that we can optimize the bound in Theorem 15 by picking a constructive
process in which t1 is maximal.

5. Some Hyperedge Coloring Results
In this section we will examine colorings of the hyperedges of complete r-uniform
hypergraphs. A t-coloring of an r-uniform hypergraph H is a function
c : E(H) −→ {1, 2, . . . , t}
that assigns colors to the hyperedges of H. We do not assume that such a coloring is
proper, nor do we assume that c is surjective. A subgraph H 0 of H is called rainbow
if all of the hyperedges in H 0 receive different colors. We call H rainbow connected
with respect to c if for every pair of distinct vertices u, v ∈ V (H), there exists a
rainbow Berge path connecting u to v. Observe that every connected hypergraph
H is rainbow connected with respect to some coloring as one could always choose
the coloring in which every hyperedge of H receives a different color. The rainbow
connected number rc(H) of a connected r-uniform hypergraph H is defined to be
the minimal number of colors t such that H is rainbow connected with respect to
some t-coloring.
Since every connected r-uniform hypergraph H is spanned by a minimally connected subhypergraph M , the edges of M can each receive a different color, providing a rainbow Berge path between every distinct pair of vertices. Hence, from
Theorem 8, it follows that
rc(H) ≤ n − r + 1.
(r)

Let Kn

denote the complete r-uniform hypergraph of order n. A Gallai t(r)

coloring of Kn

(r)

is a t-coloring of the hyperedges in Kn

(r)
Kr+1 -subhypergraph

such that no rainbow

exists. Thus, when t ≤ r + 1 all t-colorings are Gallai t-

colorings. The following theorem is a nice generalization of a result concerning
Gallai colorings of graphs from Gyárfás and Simonyi [14].
(r)

Theorem 16. Let r ≥ 3. Then every Gallai (r + 1)-coloring of Kn contains a
color that spans a connected r-uniform hypergraph using all n vertices.
Proof. We proceed by induction on n. When n = r + 1, at least two hyperedges in
(r)

Kr+1 are the same color by the definition of a Gallai coloring, and hence, span the
complete hypergraph. Now assume the theorem is true for n ≥ r + 1 and consider
(r)

(r)

a Gallai coloring of Kn+1 . Let {x1 , x2 , . . . , xn+1 } be the vertices of this Kn+1 and
(r)

define ki to be the subhypergraph formed by removing xi from the Kn+1 , for each

MINIMALLY CONNECTED HYPERGRAPHS

17

i ∈ {1, 2, . . . , n + 1}. Thus, we have a total of n + 1 complete Gallai (r + 1)-colored
hypergraphs where n + 1 ≥ r + 2. By the inductive hypothesis, each ki contains a
spanning color, and by the pigeonhole principle, at least two of the ki s are spanned
(r)

by the same color. This color necessarily spans all of Kn+1 .



Combining Theorem 10 with Theorem 16, it follows that every Gallai (r+1)-coloring
(r)

of Kn contains a monochromatic minimally connected spanning subhypergraph.
We now turn our attention to the colorings of complete hypergraphs involving
only two colors, but first, we must recall the definition of diameter. Here, we only
assume r ≥ 2. If u and v are any two distinct vertices in a connected r-uniform
hypergraph H, then the distance from u to v, denoted d(u, v) is the minimum
number of hyperedges contained in any Berge path connecting u to v. The diameter
diam(H) is then defined by
diam(H) := max{d(u, v) | u, v ∈ V (H)}.
Results involving 2 colorings in the setting of 2-graphs are plentiful. In particular,
it has been noted that Erdős and Rado claimed that for any graph G, either G or
G is connected [2]. Rephrasing this result in terms of colorings, every 2-coloring
of Kn contains a color that spans all n vertices. More precisely, it was shown by
Bialostocki, Dierker, and Voxman [3] that if a graph G is not connected, then G is
connected and diam(G) ≤ 2. When r ≥ 3, we offer a generalization of this fact in
Theorem 19. But first we derive some helpful results.
Theorem 17. If r ≥ 3 and H is a disconnected r-uniform hypergraph of order
n ≥ r, then H is connected and every subset {x1 , x2 , . . . , xr−1 } of distinct vertices
in V (H) is contained in some hyperedge in H.

Proof. Suppose that H is a disconnected r-uniform hypergraph of order n ≥ r.
Let S = {x1 , x2 , . . . , xr−1 } be a subset distinct vertices in V (H). We consider two
cases.
Case 1: Assume that two distinct vertices xi and xj are in different connected
components in H. Then if y is any vertex not in S, then x1 x2 · · · xr−1 y ∈ E(H).
Case 2: Assume that C1 and C2 are distinct connected components in H with
x1 , x2 , . . . , xr−1 ∈ C1 . If y is any vertex in C2 , then x1 x2 · · · xr−1 y ∈ E(H).
In both cases, we find that H is connected and every subset {x1 , x2 , . . . , xr−1 } of
vertices is contained in some hyperedge in H.



18

M. BUDDEN, J. HILLER, AND A. PENLAND

From Theorem 17, observe that whenever H is disconnected, it follows that H
is connected and diam(H) = 1. Furthermore, using this theorem with Theorem 10,
we obtain the following corollary.
(r)

Corollary 18. Let r ≥ 3. In every 2-coloring of the hyperedges in Kn , there
exists a monochromatic spanning minimally connected hypergraph.
Theorem 19. If r ≥ 3 and H is a connected r-uniform hypergraph of order n ≥ r
with diam(H) ≥ 2, then diam(H) = 1.

Proof. Assume that H has diameter at least 2. Then by Corollary 18 we can
assume that H is connected. We may choose x, y ∈ V (H) to be nonadjacent
vertices. Since H is connected and has at least r > 2 vertices then there are r − 2
vertices z1 , z2 , ..., zr−2 such that for some e ∈ E(H) {x, z1 , z2 , ..., zr−2 } ⊂ e. Then
the edge e1 = {x, z1 , z2 , ..., zr−2 , y} 6∈ E(H). Thus e1 ∈ E(H). Therefore x and y
are adjacent in H, proving that diameter(H) = 1.



6. Conclusions and future directions
This paper has been an investigation into hypergraph generalizations of trees.
The specific generalization which we explored (minimally connected hypergraphs)
stresses the role that trees play in results concerning connectivity. While minimally
connected hypergraphs work well to expand upon many theorems for 2-graphs, the
fact that the size of a minimally connected spanning tree is not necessarily determined by the parent graph shows that many open problems still exist. We conclude
by listing several open problems that we deem worthy of future investigation.
(1) Is there an algorithm that would provide, for arbitrary weights, the optimum cost minimally connected spanning subhypergraph? The answer to
this question could have serious ramifications, not just for bioinformatics
(where punning algorithms have already been applied), but also in realms
as distinct as physics and banking. Algorithms for exact and approximate
minimum spanning trees in hypergraphs are already known (e.g., see [10],
[11], and [13]). We could ask for conditions under which a weighted hypergraph would admit an optimal cost minimally connected subhypergraph,
and the running time of an optimal algorithm for finding it. Figure 5 shows
that a greedy approach of taking the hyperedges in order of least weight
can be suboptimal. Such an approach algorithm would yield a minimally
connected subhypergraph with hyperedges cde, bde, and ade, for a total

MINIMALLY CONNECTED HYPERGRAPHS

19

weight of 5, whereas the hyperedges cde and abc would form a minimally
connected subhypergraph with a lower total weight of 4.

a

2

b

e
2

3

d
1

c

Figure 5. A weighted 3-uniform hypergraph for which the greedy
approach does not produce a minimally connected subhypergraph
of minimum total edge weight.
(2) Recall that the Ramsey number R(H1 , H2 ; r) of two r-uniform hypergraphs
H1 and H2 is defined to be the least natural number p such that every 2(r)

coloring of hyperedges of Kp , using say, red and blue, results in a red
subhypergraph isomorphic to H1 or a blue subhypergraph isomorphic to
H2 . A connected r-uniform hypergraph H of order m is called n-good if
l

n m
(r)
R(H, Kn ; r) = (m − 1)
− 1 + t(Kn(r) ),
r−1
(r)

where d·e is the ceiling function and t(Kn ) is the minimum number of
vertices in any color class of a weak vertex coloring of H. The fact that
this number is a lower bound for the given Ramsey number was proved in
Theorem 3.1 of [5]. So, showing that an r-uniform hypergraph is n-good
follows from proving that this number is also an upper bound. In [5], it
was conjectured that all r-uniform trees are n-good and infinitely-many
examples of n-good 3-uniform trees were given. It was also shown that
(3)

the minimally connected 3-uniform cycle C4

of length 2 and order 4 is

4-good, but is not 5-good. What are the conditions under which a minimally connected r-uniform hypergraph is n-good? It is worth noting that
if a connected r-uniform hypergraph is n-good, then so is every minimally
connected spanning subhypergraph.

20

M. BUDDEN, J. HILLER, AND A. PENLAND

(3) In Section 4, we considered the weak and strong chromatic numbers of
minimally connected r-uniform hypergraphs, but other chromatic numbers
can be considered when r ≥ 4. More generally, define the k-chromatic
number χk (H) of an r-uniform hypergraph H to be the minimum number
of colors needed to color the vertices of V (H) so that every hyperedge
contains vertices using at least k distinct colors. It follows that
χw (H) = χ2 (H)

and χs (H) = χr (H).

Can one determine χk (H), when 2 < k < r (assuming r ≥ 4)? We saw in
Section 4 that χw (H) = 2 when H is minimally connected, but for every
n ≥ r, there exists a minimally connected r-uniform hypergraph H such
that χs (H) = n. For r ≥ 4, what is the smallest value of k for which χk is
bounded for all minimally connected r-uniform hypergraphs?

References
1. L. Andersen and H. Fleischner, The NP-Completeness of Finding A-Trails in Eulerian Graphs
and Finding Spanning Trees in Hypergraphs, Discrete Appl. Math. 59(3) (1995), 203-214.
2. J. Bierbrauer and A. Gyárfás, On (n, k)-Colorings of Complete Graphs, Eighteenth Southeastern International Conference on Combinatorics, Graph Theory, and Computing (Boca
Raton, FL 1987), Congr. Numer. 58 (1987), 123-139.
3. A. Bialostocki, P. Dierker, and W. Voxman, Either a Graph or its Complement is Connected:
A Continuing Saga, (2001), unpublished manuscript.
4. M. Budden, J. Hiller, and A. Rapp, Hypergraph Ramsey Numbers Involving Paths, Acta Univ.
Apulensis 48 (2016), 75-87.
5. M. Budden and A. Penland, Trees and n-Good Hypergraphs, Australas. J. Math. 72 (2) (2018),
329-349.
6. R. Carpentier, H. Lui, M. Silva, and T. Sousa, Rainbow Connection for Some Families of
Hypergraphs, Discrete Math. 327 (2014), 40-50.
7. G. Chartrand, G. Johns, K. McKeon, and P. Zhang, Rainbow Connection in Graphs, Math.
Bohem. 133 (2008) 85-98.
8. T. Cormen, C. Leiserson, and D. Shamir, Introduction to Algorithms. MIT Press: Cambridge,
1997.
9. G. Gallo, G. Longo, S. Pallottino, and S. Nguyen, Directed Hypergraphs and Applications,
Discrete Appl. Math. 42(2-3) (1993), 177-201.
10. H. Gabow and M. Stallmann, An Augmenting Path Algorithm for Linear Matroid Parity,
Combinatorica 6(2) (1986), 123 - 150.
11. J. Gao, Q. Zhao, W. Ren, A. Swami, R. Ramanathan, and A. Bar-Noy, Dynamic Shortest
Path Algorithms for Hypergraphs. IEEE/ACM Transactions on Networking 23(6) (2015),
1805-1817.
12. A. Golubski, E. Westlund, J. Vandermeer, and M. Pascual, Ecological Networks Over the
Edge: Hypergraph Trait-Mediated Indirect Interaction (IMII) Structure, Trends in Ecology
and Conservation 31.5 (2016), 344-354.
13. A. Goodall and A. de Mier, Spanning Trees of 3-Uniform Hypergraphs, Advances in Appl.
Math. 47(4) (2011), 840 - 868.
14. A. Gyárfás and G. Simonyi, Edge Colorings of Complete Graphs Without Tricolored Triangles,
J. Graph Theory 46(3) (2004), 211-216.
15. J. Hiller, C. Vallejo, L. Betthauser, and J. Keesling, Characteristic Patterns of Cancer Incidence: Epidemiological Data, Biological Theories, and Multistage Models 124 (2017), 41-48.
16. S. Klamt, U. Haus, and F. Theis, Hypergraphs and Cellular Networks, PLoS Computational
Biology 5(5) (2009), doi:10.1371/journal.pcbi.1000385.

MINIMALLY CONNECTED HYPERGRAPHS

21

17. J. Kruskal, On the Shortest Spanning Subtree of a Graph and the Traveling Salesman Problem,
Proc. Amer. Math. Soc. 7 (1956), 48-50.
18. M. Lau, S. Borrett, B. Baiser, N. Gotell, and A. Ellison, Ecological Network Metrics: Opportunities for Synthesis, Ecosphere 8 (2017), DOI:10.1002/ecs2.1900
19. J. Levine, J. Bascompte, P. Adler, and S. Allesina, Beyond Pairwise Mechanisms of Species
Coexistence in Complex Communities, Nature (2017), doi.10.1038/nature22898
20. L. Lovász, Matroid Matching and Some Applications, J. Combin. Theory, Ser. B 28(2) (1980),
208 - 236.
21. R. Prim, Shortest Connection Networks and Some Generalizations, Bell Systems Technical
Journal 36(6) (1957), 1389-1401.
22. D. Weighill and D. Jacobson, 3-Way Networks: Applications of Hypergraphs for Modeliing Increased Complexity in Comparative Genomics, PLoS Computational Biology (2015),
doi.10.1371/journal.pcbi.1004079.
23. W. Zhang, J. Chien, J. Yong, and R. Kuang, Network-Based Machine Learning and Graph
Theory Algorithms for Precision Oncology, Precision Oncology, 25 (2017), 1-25.

Department of Mathematics and Computer Science, Western Carolina University,
Cullowhee, NC 28723 USA
E-mail address: mrbudden@email.wcu.edu

Department of Mathematics and Computer Science, Adelphi University, Garden
City, NY 11530-0701
E-mail address: johiller@adelphi.edu

Department of Mathematics and Computer Science, Western Carolina University,
Cullowhee, NC 28723 USA
E-mail address: adpenland@email.wcu.edu

