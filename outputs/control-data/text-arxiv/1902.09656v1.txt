A circuit for precise random frequency synthesis via a
frequency locked loop
Mario Stipčevid1*
1
Center of excellence for advanced materials and sensors, Ruđer Boškovid Institute, Bijenička 54, HR10000 Zagreb, Croatia
Frequency synthesis (FS) is a technique vital for all kinds of radio frequency (RF) communications, such
as: mobile phones, Bluetooth, Wi-Fi, radio, TV and satellite, and in other equipment requiring periodic
signals of stable and programmable frequency. In this work, we present a generalization of the FS
technique to random, non-periodic signals, whose main use is in the new area of stochastic
neuromorphic computing and, information security and instrumentation. Since conventional FS
circuits cannot work with random signals, we introduce a novel random frequency ratio detector, that
works both with random and periodic signals.
Frequency synthesizer is an electronic circuit capable of generating a periodic signal of stable frequency
in a certain frequency interval. The set of available frequencies is discrete, with frequencies separated
by an arbitrarily small, constant spacing. Frequency synthesizers are crucial for operation of many widely
used devices, such as: computers, two-way radio communication devices (e.g. cell phones, Bluetooth,
Wi-Fi, walkie-talkies), receivers and transmitters (for radio, TV, and radio controlled devices), global
positioning system (GPS), satellite communications, laboratory equipment and many other applications.
Frequency synthesis (FS) of periodic signals can be accomplished by well-known methods of phaselocked loop (PLL) [3] or direct digital synthesis (DDS) [4]. These methods rely on one or more basic
techniques, notably: frequency division, signal multiplication and mixing, phase detection, phase
frequency detection (PFD), low-pass filtering, voltage controlled oscillators (VCO) and digital-to-analog
conversion.
In particular, PLLs are widely employed because of their good frequency stability and low phase noise
and because, on top of FS, they can be used to demodulate a signal, recover a signal from a noisy
communication channel, generate a stable frequency at multiples of an input frequency, or distribute
precisely timed clock pulses in digital logic circuits such as microprocessors. Since a single integrated
circuit can provide a complete PLL building block, the technique is widely used in modern electronic
devices, with output frequencies from a fraction of a hertz up to many gigahertz. Signals obtained from
FS are typically sinusoidal or square-wave with duty cycle of (roughly) ½.
In this work, however, we are concerned with a different type of electrical signal, namely random pulse
train (RPT). By definition, a RPT is a sequence of square logic pulses of a constant voltage amplitude and
typically, but not necessarily, of a constant duration 𝜏𝑝 , as shown in Fig. 3, wherein time intervals 𝑡𝑖
between rising edges of subsequent pulses (also known as "waiting times") are random numbers.

Figure 3. A random pulse train (RPT) is a sequence logic pulses usually of constant duration 𝜏𝑝 .
Shown is a voltage variation of a RPT as a function of time. For a Poissonian RPT, pulse waiting
times 𝑡𝑖 (𝑖=1,2,3,...) are random variates drawn from the exponential probability density
function.
We note that, by convention, the important information in a RPT is contained in rising edges: falling
ones are of no consequence, except technical. In this work, unless specifically mentioned, we deal with
Poissonian RPT, wherein time intervals 𝑡𝑖 follow the exponential probability density function (p.d.f.):
1
𝑃 𝑡 = 𝑒 −𝑡 𝜏 .
𝜏

(1)

Thus, a RPT is characterized by a single parameter: the average waiting time, 𝜏, whose inverse is
henceforth referred to as a "random frequency" or just "frequency" and denoted by:
𝑓𝑅 =

1
.
𝜏

(2)

It is best to picture a RPT as being a result of an underlying stationary and memoryless physical process
wherein each event coincides with a rising edge of a logic pulse. Quite generally, for empirical signals,
random or periodic, we define frequency as the inverse of the average waiting time:
𝑓𝑅 =

1
1
lim
𝑁→∞ 𝑁

𝑁
𝑖=1 𝑡𝑖

.

(3)

For a RPT based on a Poissonian random process, this definition coincides with Eq, 2.
Phase and frequency locked loops
This work is about a means for generation of a RPT of a precise frequency. Previous art [8] relates to
systems in which the output frequency is controllable via an input control voltage. This is conceptually
similar to a well-known voltage-controlled oscillator (VCO) used in periodic frequency generation, except
that here output is a RPT, instead of a periodic signal. The main problem with such a system is that it
does not possess a compensating mechanism and therefore its parameters, and thus the set random
frequency, can easily adrift from a desired value with time, temperature or aging. In order to get a stable
frequency, we propose to use a control loop control similar to a PLL.
A PLL is a negative-feedback control system that generates an output signal whose phase is
synchronized to the phase of a very stable local oscillator (LO) (usually a quartz-controlled oscillator).
There are several types of a PLL; the simplest is an electronic circuit consisting of a variable frequency
oscillator (VCO), a programmable divider-by-n divider and a phase detector (PD) followed by a DC level

extractor, in a negative-feedback loop, as shown in Fig 7. A principle is simple: a periodic signal from
VCO divided by an integer number and signal from LO are fed into the phase detector which generates
an "error voltage" proportional to the phase difference of its input signals.

Figure 7. A basic PLL circuit.
The error voltage is fed back to the VCO such that its frequency is adjusted until the phases (and
frequencies) match. A simple XOR gate, shown in Fig. 8a suffices to detect phase difference of two
square-wave signals of the same duty cycles and is thus frequently used in PLLs. However, the problem
with XOR PD is that is can generate local minima when one input frequency is an integer multiple of the
other and therefore a "lock" can happen at an undesired frequency, and for a correct operation it is
required that input signals have the same duty cycle. To improve on both accounts, an improved circuit
shown in Fig. 8b has been proposed in seventies and is used ever since [9]. In this PD, error voltage is an
additive combination of differences in both frequency and phase, of the input signals. Therefore its
name "phase frequency detector" (PFD). Because of the edge-triggered action, duty cycles of the input
signals are irrelevant.

Figure 8. A simple XOR-based phase detector (a); a classic phase frequency detector (b).
...... In conclusion, the average duty cycle at the output of XOR and PFD circuits has no sensitivity to
frequency of the RPT whatsoever. It is easy to see that the same conclusion holds for a RPT/2D signal as
well which has an average duty cycle of ½. The reason for that is that these circuits have been
constructed primarily to measure phase difference between a pair of input signals, having some
sensitivity to a frequency difference as a collateral bonus, while relative phase of two Poissonian
random signals contains no information whatsoever.

Therefore, we need to construct a different frequency detector for purpose of random frequency
synthesis via a FLL. We propose a well-known clock-less RS flip-flop but with a twist that it has the edge
action implemented on both inputs, as shown in Fig. 9.

Figure 9. A proposed frequency ratio detector (FRD).
This circuit acts asymmetrically: if the two inputs are switched, its response function mirrors horizontally
around the point 𝑓𝑅 = 𝑓𝑃 .
Unfortunately, the clock-less edge-triggered RS flip flop is not available as a standard electronic
component. We have to construct it from other logic circuits. Notably, the D-type flip-flop with an edgetriggered clock input presents an industry standard and is widely available, for example in FGPAs. The
new circuit, that we name "frequency ratio detector" (FRD), made of two D-type flip-flops, equivalent to
the modified RS flip-flop, is shown in Fig. 10.

Figure 10. Frequency ratio detector (FRD) in a frequency-locked loop capable of generating RPT
in a range from 200 cps to 20 MCps. Output frequency 𝑓𝑅 is locked (in 1:1 ratio) onto the
frequency of the periodic local oscillator of frequency 𝑓𝑝 .
Let us now imagine that a periodic signal, of frequency 𝑓𝑃 , is sent to the input S, and that a RPT of an
average frequency 𝑓𝑅 is sent to the input R. A typical waveform present at the output Q of the FRD is
shown as a solid (blue) line in Fig. 11. Dashed line shows the periodic signal present at the input S,
having the period 𝑇 = 1/𝑓𝑃 . The output Q goes HIGH by each rising edge of the periodic input, if not
already HIGH in which case the input S is ignored. The output Q goes low by each rising edge of the
(random) signal connected to the input R, if not already LOW in which case the input R is ignored.

Figure 11. An example of the waveform at the output Q of a FRD is shown by the solid (blue)
line. Periodic signal at the input R is shown by a dashed line. Random events correspond to
falling edges of the solid line.
It is important to note that whenever one starts to measure the time (for example at a time of rising
edge of the periodic signal that brings output of the RFFL at HIGH state), the next random event will
happen after a time delay which is a random variate drawn from exponential p.d.f. with the mean value
𝜏 = 1 𝑓𝑅 , and therefore durations of the HIGH state will be such variates. Let us now define a "period"
as a time lapse between two subsequent rising edges at the output Q. Then, the total duration of the
HIGH states of the output Q during 𝑁 periods is a sum over all periods:
𝑁

𝑇high =

−𝜏 ∙ ln(1 − 𝑅𝑖 )

(4)

𝑖=1

where 𝑇 = 1/𝑓𝑃 , 𝜏 = 1 𝑓𝑅 , and 𝑅𝑖 is 𝑖-th random number drawn from the uniform probability
distribution. The total duration of 𝑁 periods, each period consisting of a HIGH state followed by a LOW
state, is a sum of all periods:
𝑁

𝑇tot = 𝑇
𝑖=1

𝜏
(1 + Int − ∙ ln(1 − 𝑅𝑖 ) .
𝑇

(5)

Now, the average duty cycle is defined as:
1

𝑁
𝑖=1 −𝜏

lim
𝑇high
𝑁→∞ 𝑁
𝐷 = lim
=
1
𝑁→∞ 𝑇tot
𝑇 1 + lim 𝑁

𝑁
𝑖=1 Int

𝑁→∞

∙ ln(1 − 𝑅𝑖 )
𝜏

− 𝑇 ∙ ln(1 − 𝑅𝑖 )

.

(6)

The numerator term is just the average period, 𝜏, so the Eq. 6 can be written as:
𝐷 =

𝜏 𝑇
1

1
+ lim
𝑁→∞ 𝑁

𝑁
𝑖=1 Int

𝜏
𝑇

− ∙ ln(1 − 𝑅𝑖 )

.

(7)

The sum in the denominator can be rearranged as a sum of terms in which real positive numbers
𝜏

− 𝑇 ∙ ln(1 − 𝑅𝑖 ) lie in an interval between two consecutive integer numbers:

1
lim
𝑁→∞ 𝑁

𝑁

Int −
𝑖=1

𝜏
∙ ln(1 − 𝑅𝑖 ) =
𝑇

𝑇 𝜏

=0

2𝑇 𝜏

𝑒

−𝑧

𝑑𝑧 + 1

0

=

𝑑𝑧 + 2

𝜏

−𝑧

𝑘𝑒 −𝑘𝑇

𝑑𝑧 =

𝜏

1 − 𝑒 −𝑘𝑇

(10)

𝜏

𝑘=1

− 𝑒 −2𝑇

∞

𝑒 −𝑘𝑇

(9)

0

𝑘

= 𝑒 −𝑇

𝑒 −𝑧 𝑑𝑧 + ⋯

∞

𝑒

𝑘=1

𝑘=1

𝑒

𝑘+1 𝑇 𝜏

𝑘

=

3𝑇 𝜏
−𝑧

0

∞

(8)

𝜏

=

𝜏

+ 2 𝑒 −2𝑇

𝜏

− 𝑒 −3𝑇

𝑒 −𝑇 𝜏
.
1 − 𝑒 −𝑇 𝜏

𝜏

+ 3 𝑒 −3𝑇

𝜏

− 𝑒 −24 + ⋯

(11)
(12)

Finally, inserting Eq. 12 into Eq. 7 we get:
𝐷 =

𝜏
1 − 𝑒 −𝑇
𝑇

𝜏

.

(13)

Since the average duty cycle, 𝐷 , is a function only of the frequency ratio of the two input signals,
namely 𝑇 𝜏 = 𝑓𝑅 /𝑓𝑃 , the circuit shown in Fig. 10 can be used as a frequency detector. Its transfer
function, given in Eq. 11, along with the actual measured points, is shown in Fig 12.

Figure 12.
In theory, this circuit is accurate in the sense that..... However, in practice, the average voltage at V- is
not perfectly proportional to the average frequency of FD Output because of the finite rise and fall times
of the digital signal. Shorter pulses will suffer greater errors due to the edge effects in proportion to
their length. The net effect of this is that as 𝑓in rises, the 𝑓out lags behind. In our particular circuit the
error reaches -0.88% at 𝑓in = 20 MHz. This error is linear in the average pulse length at the FRD Output
and therefore can be corrected by injecting a small current to positive input of the operational amplifier

LM358 proportional to the input frequency 𝑓in . To that end, assuming approximately linear relationship
between the voltage 𝑉0 and light intensity of the LED, we simply use a feedback resistor 𝑅3 = 2.2 MΩ,
shown on Fig. 10 whose optimal value is determined by experiment such as to minimize the nonlinearity.
None of the PDs or FPDs known so far work if one or both inputs is a RPT. This is interesting because
noone has constructed them sepecifically to be insensitive to random signals, but they are. On the other
hand, circuit in Fig. 10 works well when one signal is periodic and the other random, when both are
random and even when both are periodic. In fact, when fed by two periodic signals it also features a
level of phase sensitivity without a gap, and thus presents an improvement and generalization of FPDs
known so far.

Frequency precision
Resulting linearity of the frequency 𝑓𝑅 of the output RPT, versus frequency 𝑓𝑃 of the periodic control
input, is shown in Fig. 13. We see that the relative error is kept well within 1% over 5 orders of
magnitude.

Figure 13.
Frequency jump response

Figure 14. C1=110 uF, 47 uF, 22.5 uF, 10.5 uF, 5.1 uF , modulation frequency = 0.05 Hz, pulse
duration = 10s, scope resolution 2 s/div. (Nejasno je značenje 100k i 1M.)

Randomness quality and autocorrelation
Distributions / fine. Autocorrelation is sensitive o small randomness imperfections:

𝑎 𝑡 =

Figure 14.
Autocorrelation function a(k) depends on mean random period tau and gain and time constant R1C1 of
the feedback loop. ne ovisi o tau (1/frekvencija?) ako se prika\e kao funkcija a(t) gdje t=k*tau.

Modulation and demodulation
Spomenuti i brzu verziju s DRSF koja kao ulaz treba jednu ili dvije stabilne točne frekvencije, Ref. [7].
A system for generating random frequencies in a desired range with an arbitrarily small increment,
named digital random frequency synthesis (DRFS), has been described in our earlier work [7]. However,
this requires two stable sources of precisely known random frequencies - a problem that was not solved
at the time.

References
1. "Single-Chip Direct Digital Synthesis vs. the Analog PLL", Analog Devices Corporation (1996). URL:
http://www.analog.com/en/analog-dialogue/articles/dds-vs-analog-pll.html (last accessed
17.06.2018.)
2. "DDS Controls Waveforms in Test, Measurement, and Communications", Analog Devices
Corporation (2005). URL: http://www.analog.com/en/analog-dialogue/articles/dds-controlswaveforms-in-test.html
3. R. E. Best, Phase-Locked Loops: Theory, Design and Applications. New York: McGraw-Hill, 1984.
4. E. Murphy and C. Slattery, "Ask The Application Engineer—33: All About Direct Digital Synthesis",
Analog Dialogue, 38 (2004), https://www.analog.com/media/en/analog-dialogue/volume38/number-3/articles/all-about-direct-digital-synthesis.pdf
5. J. A. Hanby and S. J. Redman, "Random Pulse Train Generator with Linear Voltage Control of Average
Rate ", Rev. Sci. Instrum. 42, 657 (1971); https://doi.org/10.1063/1.1685194 errata: Review of
Scientific Instruments 42, 1897 (1971); https://doi.org/10.1063/1.1685039
6. M. Arkani, H. Khalafi, N. Vosoughi, "A Flexible Multichannel Digital Random Pulse Generator Based
on FPGA", World Journal of Nuclear Science and Technology, 3, 109-116 (2013). pseudorandom
http://dx.doi.org/10.4236/wjnst.2013.34019
7. M. Stipčevid, “Quantum random flip-flop and its applications in random frequency synthesis and
true random number generation”, Rev. Sci. Instrum. 87, 035113 (2016). DOI: 10.1063/1.4943668
8. J. C. Fletcher, R. S. Lindsey, "Random Pulse Generator", US patent No. 3866128 (1975).
9. D. K. Morgan, "CD4046B Phase-Locked Loop: A Versatile Building Block for Micropower Digital and
Analog Applications", Texas Instruments Application Report SCHA002A (2003).
http://www.ti.com/lit/an/scha002a/scha002a.pdf (accessed 02/18/2019).

