Reinforcement Learning-Based Trajectory
Design for the Aerial Base Stations
Behzad Khamidehi and Elvino S. Sousa

arXiv:1906.09550v2 [eess.SP] 29 Jun 2019

Department of Electrical and Computer Engineering, University of Toronto, Canada
Emails: b.khamidehi@mail.utoronto.ca and es.sousa@utoronto.ca

Abstract—In this paper, the trajectory optimization
problem for a multi-aerial base station (ABS) communication network is investigated. The objective is to find the
trajectory of the ABSs so that the sum-rate of the users
served by each ABS is maximized. To reach this goal, along
with the optimal trajectory design, optimal power and subchannel allocation is also of great importance to support
the users with the highest possible data rates. To solve this
complicated problem, we divide it into two sub-problems:
ABS trajectory optimization sub-problem, and joint power
and sub-channel assignment sub-problem. Then, based on
the Q-learning method, we develop a distributed algorithm
which solves these sub-problems efficiently, and does not
need significant amount of information exchange between
the ABSs and the core network. Simulation results show
that although Q-learning is a model-free reinforcement
learning technique, it has a remarkable capability to train
the ABSs to optimize their trajectories based on the
received reward signals, which carry decent information
from the topology of the network.
Index Terms—Reinforcement learning, Q-learning,
Aerial Base Station (ABS), Trajectory optimization.

I. I NTRODUCTION
Supporting ceaselessly increasing number of mobile
devices and their high data rate demands are among the
most critical concerns of the wireless networks. Unfortunately, the currently utilized base stations (BSs) are not
able to completely satisfy these requirements due to their
static nature [1]. In particular, a long distance between
mobile users and these static BSs causes a low quality
for the communication link, and leads to poor coverage.
To resolve this issue, finding technologies allowing the
BSs to adaptively decrease their distances to the users is
essential for the future communication networks. Motivated by this, aerial base stations (ABSs) have recently
attracted significant attention due to their applications in
wireless networks [2]. Considering advantages such as
high mobility, low cost, and flexible deployement offered
by the ABSs [3], they can be considered as a promising
technology to improve the coverage of mobile users in
the wireless networks.
The conducted research for the ABSs can be categorized into two lines: static ABSs and dynamic ABSs.
For the statice ABSs, the objective is to find the optimal
placement of the ABS(s) in a way that some criteria such
as coverage or sum-rate of the users is maximized [4]–
[6]. For instance, in [4] the optimal placement of the

ABSs is determined to minimize the number of ABSs
required to cover ground users, ensuring that each mobile
user is in the coverage area of at least one of the ABSs.
In [5] an algorithm is developed to optimize the 3-D
deployment of an ABS with the objective of maximizing
the number of covered users using the minimum transmit
power. However, in all of these work, the location of the
ABS is assumed to be fixed. For the dynamic ABSs,
however, the main goal is to leverage the mobility
of the ABSs. Thus, the trajectory of the ABS(s) is
optimized to improve the performance of the mobile
users [7]–[9]. This performance gain is resulted from
the fact that when the distance between an ABS and
user decreases, the probability of having a line-of-sight
(LoS) link increases, and hence, higher data rates are
achievable in comparison to the static case. In [7] based
on the block coordinate descent and successive convex
approximation techniques, the authors optimize the user
association, ABS trajectories, and transmit power of a
multi-ABS system with the objective of maximizing the
minimum data rate of the users. In [8], data offloading
problem for an ABS-enabled wireless network has been
investigated and the trajectory of the ABS obtained with
the objective of maximizing the sum-rate of the users
served by the ABS, while minimum data requirement
has been considered for all users. In [9] the authors
proposed an algorithm to maximize the minimum data
rate of ground users by jointly optimizing the ABS
trajectory and its power and bandwidth. It is worth
mentioning that in all of these work, it is assumed that
perfect knowledge of the environment is available. This
assumption is not practical since the topology of the
network can change continuously, and to have perfect
knowledge of the environment, a significant amount of
information has to be exchanged between the ABSs and
the core network, which is not possible.
Motivated by this, we propose a distributed algorithm
based on Q-learning to optimize the trajectory of the
ABSs. In contrast to the existing algorithms, our algorithm does not need perfect knowledge of the environment, and the amount of information exchanged between
ABSs and the core network is negligible. The objective
of our trajectory design algorithm is to maximize the
sum-rate of users served by each ABS. Therefore, it is

of great importance to allocate optimal power and subchannels to the users to support them with the highest
data rates. To solve this complicated problem, we divide
it into two sub-problems: trajectory optimization subproblem (higher level) and joint power and sub-channel
allocation sub-problem (lower level). In the higher level,
based on the reinforcement learning techniques, a Qlearning problem is formulated to train and update the
trajectory of the ABSs using the feedback signal received
from the environment. On the other hand, in the lower
level, a joint power and sub-channel allocation problem
is solved to form the reward function emerging from
taking actions by the ABSs in the higher level.
The rest of the paper is organized as follows: Section
II describes the system model. The channel model is
also discussed in this section. Principals of reinforcement
learning is presented in section III. Section IV formulates
the trajectory design problem as a Q-learning problem.
Our algorithm is also presented in section IV. Simulation
results and conclusion are presented in section V and VI,
respectively.
II. S YSTEM M ODEL
In this paper, we consider the downlink of a wireless
network integrated with multiple ABSs. The set of all
ABSs is presented by J = {1, 2, . . . , J}, and the set
of users associated with the j-th ABS is denoted by
Kj . Moreover, the ABSs share N = {1, 2, . . . , N }
orthogonal sub-channels. We use indices j, k, and n
to represent ABSs, mobile users, and sub-channels. The
position of the j-th ABS at time t is denoted by Ωj (t) =
(xj (t), yj (t), H), where H is the altitude of the ABSs
which is assumed to be constant throughout their flight
time. The initial and final position of the j-th ABS are
F
F
indicated by Ω0j = (x0j , yj0 , H) and ΩF
j = (xj , yj , H),
respectively. According to this notation, the trajectory
of the j-th ABS starts from Ω0j and ends to ΩF
j . We
assume that the speed of the ABSs is constant during
their flights, i.e., kVj (t)k = V , ∀t, j, where V is the
constant velocity. The distance between ABS j and its
final position ΩF
j at time t is expressed as
2

Dj (t) , Ωj (t) − ΩF
j

,

∀j, t,

(1)

and the distance between ABS j1 and ABS j2 at time t
is
2

Dj1 ,j2 (t) , Ωj1 (t) − Ωj2 (t)

,

∀j1 6= j2 , ∀t. (2)

To avoid any collision between the ABSs, their trajectories are subject to collision avoidance constraint as
follows
Dj1 ,j2 (t) > Dmin ,

∀j1 6= j2 , ∀t,

(3)

where Dmin is the minimum distance between any pair
of ABSs that ensures collision avoidance.

For the air-to-ground links between ABSs and mobile
users, we assume that the channel gains are composed
of path loss and frequency selective Rayleigh fading. If
hnjk (t) denotes the channel between the j-th ABS and
user k over the n-th sub-channel at time t, we have
ρnjk (t)
,
hnjk (t) = p
PLjk (t)

(4)

where ρnjk (t) accounts for the small scale fading, and
PLnjk (t) is the average path loss of the link at time
t. For the path loss, we adopt the model proposed in
[10]. According to this model, both LoS and Non-LoS
propagation groups are involved in the average path loss
expression. To consider the effects of LoS and NonLoS links on the average path loss, we need to know
their probabilities which depend on the elevation angle
between the ABS and the mobile users. Based on [10],
the probability of having a LoS link between the j-th
ABS and user k at time t is given by
prLoS
jk (t) =

1
,
1 + a exp (−b(θjk (t) − a))

(5)

where θik (t) is the elevation angle between ABS j and
user k at time t, and a and b are constants depending on
the environment. The elevation angle is given as θik (t) =
H
arctan( L(t)
), where H and L(t) are the altitude and the
horizontal distance between the j-th ABS and user k at
time t, respectively. Based on the probability given in
(5), the average path loss between ABS j and user k,
PLjk (t) can be formulated as
LoS
N-LoS
PLjk (t) = prLoS
(t) + (1 − prLoS
(t),
jk (t)PL
jk (t))PL
(6)
where PLLoS (t) and PLN-LoS (t) are the free space path
losses corresponding to the LoS and Non-LoS links,
respectively. The free space path loss
to
 corresponding

4πf d

(t)

2

c jk
the LoS is expressed as PLLoS (t) =
×η LoS ,
c
where djk (t) represents the distance between the j-th
ABS and user k at time t, fc is the carrier frequency,
c is the speed of light, and η LoS is the environmentdependant additional loss due to LoS link. In a similar
way, the free space path loss corresponding
to

 the Non-

4πf d

(t)

2

c jk
LoS is described as PLN-LoS (t) =
×η N-LoS ,
c
N-LoS
where η
is the additional loss due to the Non-LoS
link. For the small scale fading, without loss of generality
we assume that for ∀j, k, n, ρnjk (t) are independent
and identically distributed (i.i.d) random variables with
E{|ρnjk |2 } = 1. Using the described model, the channel
gain between the j-th ABS and user k at time t is given
by
2
n
gjk
(t) , hnjk (t) .
(7)

As discussed earlier, in this paper, we are to find trajectories of the ABSs with the objective of maximizing
sum-rate of the users associated with each ABS. As a

The agent at each time step implements a policy
π(a|s) which is the probability that at = a if st = s,
i.e.,
π(a|s) = Pr (at = a|st = s) .
(11)

Fig. 1: Interaction between agent and environment.

result, in addition to the optimal trajectory design, optimal power and sub-channel allocation is also necessary
to support the users with the highest data rates. If the
transmit power of the j-th ABS on the n-th sub-channel
and time t is denoted by Pjn (t), according to Shannon
formula, the instanteneous rate of user k served by the
j-th ABS at time t on sub-channel n is given by
!
n
Pjn (t)gjk
(t)
n
,
(8)
rjk (t) = log 1 + n
Ijk (t) + σ 2
where σ 2 is the thermal noise at the receiver of the k-th
n
mobile user and Ijk
(t) is the total interference on the nth sub-channel and time t arising from other ABSs and
ground base station (GBS) to the receiver of the k-th
n
user. The interference Ijk
(t) is expressed as
n
Ijk
(t) =

J
X

n
Pjn0 (t)gjn0 k (t) + P0n (t)g0k
(t),

(9)

j 0 =1,j 0 6=j

where the first summation is the total interference from
the other ABSs and the last term accounts for the
interference arising from the GBS. Accordingly, P0n (t)
is the transmit power of GBS at time t over the n-th subn
(t) is the channel gain from the GBS
channel, and g0k
to user k over sub-channel n and time t. Moreover, we
define the sub-channel assignment indicator as
anjk (t) ∈ {0, 1}, ∀j, k, n, t,

(10)

where anjk (t) = 1 indicates that at time t, sub-channel
n is assigned to the user k by its associating ABS j.
Otherwise the value of anjk (t) is zero.
III. R EINFORCEMENT L EARNING F UNDAMENTALS
In this section, we briefly explain the reinforcement
learning principals. Then, we formulate our trajectory
design problem as a Q-learning problem which can be
solved efficiently.
In reinforcement learning, the agent interacts with the
environment at each of a sequence of discrete time steps
denoted by t = 0, 1, 2, . . .. If st and S denote the state
occupied by the agent at time t and the set of all possible
states, respectively, based on the current state st , the
agent takes an action at ∈ A(st ), where A(st ) is the set
of actions available at state st . One time step later, agent
receives reward rt+1 and goes to a new state st+1 . Fig. 1
presents the interaction between agent and environment.

The implemented policy is modified over time based
on the previous experience. Reinforcement learning describes how this policy change is made as a result of
agent’s experience [11]. The goal of an agent is not
maximizing its immediate reward, but the expected sum
of discounted reward it receives over the long run is
maximized. For this purpose, we define a return function
Rt as
T
−1
X
Rt ,
γ k rt+k+1 ,
(12)
k=0

where T and γ are the final time step and the discount
rate 0 ≤ γ < 1, respectively. Based on (11) and (12),
we can define a function which represents the value of
taking action a in state s under policy π, denoted by
Qπ (s, a) as
n
o
Qπ (s, a) = Eπ Rt st = s, at = a .
(13)
In other words, Qπ (s, a) is the expected return starting
from s, taking action a, and following policy π. This
function is called action-value function or simply Qfunction. Using the definition of return in (12), the
action-value function can be decomposed into immediate
reward plus discounted Q-function of successor state as
n
o
Qπ (s, a) = Eπ rt+1 +γQπ (st+1 , at+1 ) st = s, at = a .
(14)
The optimal Q-function is expressed as
Q? (s, a) = max Qπ (s, a),
π

(15)

and the optimal policy can be obtained by maximizing
over Q? (s, a) according to
(
1
if a = arg maxa Q? (s, a)
?
π (a|s) =
. (16)
0
Otherwise
Moreover, the optimal Q-function has to satisfy the
Bellman optimality equation [11] for the Q-function as
n
o
?
0
Q? (s, a) = Eπ rt+1 +γ max
Q
(s
,
a
)
s
=
s,
a
=
a
.
t+1
t
t
a0
(17)
It is worth mentioning here that the Bellman optimality
equation is non-linear and in general does not have any
closed form solution. Alternatively, to solve (17) we
have to use an iterative method. Q-learning is a wellknown method for finding Q? (s, a) in a recursive manner
[12]. According to this method, the learned action-value
function is updated as
h
Q(st , at ) ←− Q(st , at ) + α rt+1 + γ max Q(st+1 , a)
a
i
− Q(st , at ) , (18)

where α ∈ [0, 1] is the learning rate. The most important
advantage of this method is that the learned Q-function
derived by (18) directly approximates the optimal actionvalue function, Q? (s, a), independent of the policy followed by the agent [11].
IV. T RAJECTORY OPTIMIZATION AS A Q- LEARNING
PROBLEM

In this section, the trajectory optimization is formulated as a Q-learning problem. To find the trajectories
of the ABSs with the objective of maximizing sum-rate
of the users associated with each ABS, we divide the
problem into two sub-problems: trajectory optimization
sub-problem and joint power and sub-channel allocation
sub-problem. In other words, a two stage decision making procedure is considered to deal with the original
complicated problem. In the first stage, using the Qlearning technique, ABSs take one of the available
actions to obtain their trajectories. Upon any change in
the position of the ABSs, in the second stage, a new
optimization problem is solved to allocate optimal power
and sub-channels to the mobile users. The corresponding
sum-rate contributes to the reward received from taking
the action in the first stage. In what follows, we define
the agents, states, actions, and reward associated to the
Q-learning framework:
Agent j: ABS j, 1 ≤ j ≤ J.
(j)
State st : Position of ABS j at time t. In other words,
(j)
st = {xj (t), yj (t), H}. It is worth mentioning that in
general, the position of each ABS can be a continuous
function. To restrict the number of possible states, we
place a grid with limited number of squares on it to discretize the area. The center of each square represents that
state. For instance, if the area of interest is rectangular
and is presented by xmin ≤ x ≤ xmax and ymin ≤ y ≤
ymax , we convert this continuous area into M 2 states by
spliting both [xmin , xmax ] and [ymin , ymax ] intervals into M
slots. In the resulting grid, the coordinates of the center
of the square located at the k1 -th slot in the x axis and the
−xmin )
(k1 −1)
k2 -th slot in the y slot are xk1 = xmin + (xmaxM
(ymax −ymin )
and yk2 = ymin +
(k
−
1),
respectively.
As a
2
M
result, the number of available states in our problem is
limited to M 2 .
(j)
Action at : Available actions at each state are the
movement in four directions: left, right, forward, and
backward.
(j)
Reward rt : The reward function for the j-th agent is
defined as follows
(j)

rt

(j)

(j)

(j)

= β1 F1 (t) − β2 F2 (t) − β3 F3 (t),

(j)

K X
N
X
(j)
F1 (t)=
a?n
jk (t) log
k=1 n=1

(j)

n
(t)
Pj?n (t)gjk
1+ n
Ijk (t) + σ 2

!
, (20)

where Pj?n (t) and a?n
jk (t) are the optimal power and subchannel allocation at time t, respectively. To find these
values, the j-th ABS solves the following optimization
problem at time t
K X
N
X

max
P,a

s.t.

n
Pjn (t)gjk
(t)
1+ n
Ijk (t) + σ 2

anjk (t) log

k=1 n=1
K X
N
X

anjk (t)Pjn (t) ≤ Pmax ,

k=1 n=1
K
X
anjk (t) ≤ 1,
k=1
anjk (t) ∈ {0, 1},

!
(21a)

(21b)

∀n,

(21c)

∀k, n,

(21d)

where constraint (21b) ensures that the transmit power
of each ABS is limited to Pmax and (21c) guarantees that
at each time t, each sub-channel is assigned to at most
one mobile user. The optimization problem of (21a) is
a non-convex mixed integer problem due to constraint
(21d). To make it tractable, we first relax the binary
variables anjk (t) to be continuous in the interval of [0, 1].
Moreover, we denote the actual power allocated to the
k-th mobile user served by the j-th ABS on the n-th
n
sub-channel and time t with P̃jk
(t) , anjk (t)Pjn (t). As
a result, the new optimization problem is given by

K X
N
X
n
max
ajk (t) log 1+
P̃ ,a

s.t.

k=1n=1
K X
N
X

(j)

n
P̃jn (t)gjk
(t)
n (t) + σ
anjk (t) Ijk

n
P̃jk
(t) ≤ Pmax ,

k=1 n=1
0 ≤ anjk (t)

(19)

where F1 reflects the sum-rate of the users served by
(j)
ABS j, F2 motivates the ABS to complete its flight in a
(j)
reasonably short time, and F3 is an activation function
required for the safety of the ABSs. In (19), β1 , β2 , and
β3 are parameters of the reward function. In what follows

(j)

we introduce functions F1 , F2 , and F3 in more
details and explain the rationale behind this selection.
As discussed earlier, Q-learning aims to maximize the
sum-rate of the users while the time to complete the
flight is reasonably short. Moreover, for safety purposes,
the distance between any pair of ABSs must be greater
than some predefined threshold. Based on these concerns, we design the reward function. Function F1j (t)
is defined to be the sum-rate of mobile users currently
served by the ABS j. This function is expressed as

≤ 1,

∀k, n,


 (22a)
2
(22b)
(22c)

(21c).
It can be shown that the function f (x, y) = x log(1 +
for a constant h, is concave over x ≥ 0 and
y ≥ 0 since its Hessian matrix is negative semi-definite.
y
x h),

Therefore, problem of (22a) is a convex problem. To
solve (22a), we form its Lagrangian function as follows
!
K X
N
n
X
Pjn (t)gjk
(t)
n
L{P, a, λ, µ} =
ajk (t) log 1+ n
Ijk (t) + σ 2
k=1n=1
! N
!
K X
N
K
X
X
X
n
n
n
+λ Pmax −
ajk (t)Pj (t) + µn 1− ajk (t) ,
k=1n=1

n=1

k=1

(23)
where λ and µn are the dual multipliers associated with
constraints (21b) and (21c), respectively. The Lagrangian
dual function is defined as
g(λ, µ) = max L{P, a, λ, µ},
p̃,a

λ,µ

g(λ, µ)

s.t. λ, µ ≥ 0.

(24)

According to the KKT conditions [13], the optimal
∂L
solution of (22a) must sastisfy ∂∂L
n = 0 and ∂an = 0,
P̃jk
jk
As a result, we obtain
"
#+
?n
n
P̃jk
(t)
Ijk
(t) + σ 2
1
?n
=
−
, (25)
Pj (t) = n
ajk (t)
ln 2 λ
hnjk (t)
and
anjk? (t) = 1

k? =arg maxk Ψn
jk (t)

,

(26)

where

Pj?n (t)hnjk (t) 
Ψnjk (t) = log 1 + n
−
Ijk (t) + σ 2
Pj?n (t)hnjk (t)
1
n (t) + σ 2 .
ln 2 Pj?n (t)hnjk (t) + Ijk
In other words, sub-channel n is assigned to user k with
the largest value of Ψnjk (t). The dual variable λ can be
updated with the sub-gradient method according to
#
"
K X
N

 +
X
n
λ(l+1)= λ(l) − α(l) Pmax −
P̃jk (t)
, (27)
k=1 n=1

where α(l) is the step size in the l-th iteration which has
∞
X
to satisfy
α(l) = ∞, and lim α(l) = 0. Using (25)
l=1

1: For all ABSs, initialize their Q-function Qj (s, a) for all s ∈ S,
∀a ∈ A(s) and ∀j ∈ J , arbitrarily.
2: Set Qj (Terminal state, .) = 0 for all ABSs.
3: for episode=1 to max episode do
(j)
4:
Initialize s0 based on the initial location of each ABS j.
5:
for each step of episode (time t) do
6:
for each ABS do
7:
if rand(.) <  then
8:
select action randomly (exploration)
9:
else
(j)
(j)
10:
Choose action at
= arg maxa0 Qj (st , a0 )
(exploitation)
11:
end if
(j)
12:
Take action at ,
(j)
13:
Receive the immediate reward, rt+1 according to (19)
(j)

Observe the new state st+1
Update Q-function for ABS j as
h
(j) (j)
(j) (j)
(j)
Qj (st , at ) ←− Qj (st , at ) + α rt+1 +
i
(j)
(j) (j)
γ maxa Qj (st+1 , a) − Qj (st , at )
17:
end for
18:
end for
19: end for
14:
15:
16:

and the dual problem is
min

Algorithm 1 Distributed Q-Learning for the ABS trajectory design

l→∞

and (26), the sum-rate of the users associated with the
j-th ABS is derived by (20).
(j)
In addition to the sum-rate function F1 (t), we need
(j)
another function F2 (t) to motivate the ABS to reach
the terminal state (final position) at the end of its flight
time. This prevents ABSs from staying at a specific
point, and forces the ABSs to reach their destinations.
We define
(j)
F2 (t) = Dj (t),
(28)
where Dj (t) is the distance between ABS j and its final
position at time t and is defined in (1). Moreover, we

(j)

need another function F3 (t) to act like an activation
function returning a value when the distance between
ABS j to any other ABS is less than the threshold
distance required for the collision avoidance. In other
words,
(
1
Dj,j 0 (t) < Dmin , ∀j 0 6= j
(j)
F3 (t) =
. (29)
0
Otherwise
Based on (20), (28), and (29), the reward function is
expressed as (19). Algorithm 1 shows our distributed Qlearning algorithm for the ABS trajectory design.
V. S IMULATION R ESULTS
In this section, numerical results are presented to show
the performance of the proposed algorithm. We consider
a 3km × 3km area which using a rectangular grid is
divided into M 2 = 900 states. Users are randomly
distributed in the area. In our simulations we assume
a dual-ABS system. The number of sub-channels and
the carrier frequency are N = 8 and fc = 2GHz,
respectively. The total number of users in our simulations is 20 in which half of them are assigned to
each one of the ABSs. The altitude of the ABSs is
assumed H = 100m. Other parameters are as follows:
(a, b) = (5, 0.5), η LoS = 1, η N-LoS = 20, γ = 0.9,
 = 0.1, (β1 , β2 , β3 ) = (10, 0.25, 1000) , V = 10m/s,
Pmax = 200mW, Dmin = 5m, [xmin , xmax ] = [0, 3000],
and [ymin , ymax ] = [0, 3000].
Fig. 2 presents the final trajectory of the ABSs. This
figure shows that although Q-learning is a model-free
method, it has ability to make the agents aware of
the environment. In other words, using the feedback
signals which are the rewards signals, the ABSs can be

50

2500

45

Average sum-rate (bps/Hz)

3000

y (m)

2000

ABS1
ABS2
Users
1500
Initial Positions
Final Positions
1000

500

0

40

35

30

25

20

0

500

1000

1500

2000

2500

3000

x (m)
Fig. 2: Final trajectory of the ABSs.

trained to find their trajectories based on the topology of
the network. This figure also shows that in addition to
moving from the initial position toward the final position,
the ABSs repeatedly decrease their distances to their
associated users. This is essential for the ABSs since by
reducing the distance to a user, the link quality between
the ABS and the aformentioned user is improved. As
a result, the data rate of the user increases. Moreover,
it is observed that the ABSs eventually reach to their
final positions either to get prepared for the next flight
time or to recharge their batteries. This is done so that
the distance between the ABSs at any time during their
flight remains more than Dmin .
Fig. 3 shows convergence of the average sum-rate of
the users. Index e indicates the episode number. As can
be observed, at the begining of the learning process, the
achievable sum-rate fluctuates widely. However, after a
sufficient number of episodes, this fluctuation becomes
negligible and the sum-rate converges to its optimal
value. This is due to the fact that the agents (ABSs)
are trained based on the feedback signals they receive.
These feedback signals carry required information from
the environment. Therefore, After a sufficient number
of episodes, the ABSs will have a decent knowledge
of the topology of the network. This improves the
performance of the ABSs in terms of their trajectory
and their achievable data rates.
VI. C ONCLUSION
In this paper, we studied the trajectory optimization
problem for a wireless network integrated with multiple
ABSs. The objective is to maximize the total data
rate of users served by each ABS. As a result, in
addition to the trajectory optimization, it is of great
importance to allocate optimal power and sub-channels
to the users to support them with the highest possible
data rates. To address all, we divide the problem into two
sub-problems: trajectory optimization sub-problem and
joint power and sub-channel allocation sub-problem. For

0

500

1000

1500

2000

2500

3000

episode (e)

Fig. 3: Convergence of the average sum-rate of the users

the trajectory optimization sub-problem, a reinforcement
learning problem has been formulated while for the
later one an optimization problem has been solved. The
simulation results show that although Q-learning is a
model-free reinforcement learning method, it effectively
trains the ABSs to optimize their trajectories.
R EFERENCES
[1] I. Bor-Yaliniz and H. Yanikomeroglu, “The New Frontier in RAN
Heterogeneity: Multi-Tier Drone-Cells,” IEEE Commun. Mag.,
vol. 54, no. 11, pp. 48–55, Nov. 2016.
[2] Y. Zeng, J. Lyu, and R. Zhang, “Cellular-Connected UAV: Potential, Challenges, and Promising Technologies,” IEEE Wireless
Commun., vol. 26, no. 1, pp. 120–127, Feb. 2019.
[3] Y. Zeng, R. Zhang, and T. J. Lim, “Wireless Communications
with Unmanned Aerial Vehicles: Opportunities and Challenges,”
IEEE Commun. Mag., vol. 54, no. 5, pp. 36–42, May 2016.
[4] J. Lyu, Y. Zeng, R. Zhang, and T. J. Lim, “Placement Optimization of UAV-Mounted Mobile Base Stations,” IEEE Commun.
Lett, vol. 21, no. 3, pp. 604–607, Mar. 2017.
[5] M. Alzenad, A. El-Keyi, F. Lagum, and H. Yanikomeroglu, “3-D
Placement of an Unmanned Aerial Vehicle Base Station (UAVBS) for Energy-Efficient Maximal Coverage,” IEEE Wireless
Commun. Lett., vol. 6, no. 4, pp. 434–437, Aug. 2017.
[6] R. Ghanavi, E. Kalantari, M. Sabbaghian, H. Yanikomeroglu,
and A. Yongacoglu, “Efficient 3D aerial base station placement
considering users mobility by reinforcement learning,” in Proc.
IEEE WCNC, Apr. 2018, pp. 1–6.
[7] Q. Wu, Y. Zeng, and R. Zhang, “Joint Trajectory and Communication Design for Multi-UAV Enabled Wireless Networks,” IEEE
Trans. Wireless Commun., vol. 17, no. 3, pp. 2109–2121, Mar.
2018.
[8] F. Cheng, S. Zhang, Z. Li, Y. Chen, N. Zhao, F. R. Yu,
and V. C. M. Leung, “UAV Trajectory Optimization for Data
Offloading at the Edge of Multiple Cells,” IEEE Trans. Veh.
Technol., vol. 67, no. 7, pp. 6732–6736, Jul. 2018.
[9] Q. Wu and R. Zhang, “Common Throughput Maximization
in UAV-Enabled OFDMA Systems with Delay Consideration,”
2018. [Online]. Available: http://arxiv.org/abs/1801.00444
[10] A. Al-Hourani, S. Kandeepan, and S. Lardner, “Optimal LAP
Altitude for Maximum Coverage,” IEEE Wireless Commun. Lett.,
vol. 3, no. 6, pp. 569–572, Dec 2014.
[11] R. S. Sutton and A. G. Barto, Introduction to Reinforcement
Learning, 1st ed. Cambridge, MA, USA: MIT Press, 1998.
[12] C. J. C. H. Watkins and P. Dayan, “Q-Learning,” Machine
Learning, vol. 8, no. 3, pp. 279–292, May 1992.
[13] S. Boyd and L. Vandenberghe, Convex Optimization. Cambridge
University Press, 2004.

