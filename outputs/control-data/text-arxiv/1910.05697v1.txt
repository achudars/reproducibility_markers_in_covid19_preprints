Generalization Bounds for Neural Networks via Approximate
Description Length
Amit Daniely∗

Elad Granot†

arXiv:1910.05697v1 [cs.LG] 13 Oct 2019

October 15, 2019

Abstract
We investigate the sample complexity of networks with bounds on the magnitude of its
weights. In particular, we consider the class
N = {Wt ◦ ρ ◦ Wt−1 ◦ ρ . . . ◦ ρ ◦ W1 : W1 , . . . , Wt−1 ∈ Md×d , Wt ∈ M1,d }
where the spectral norm of each Wi is bounded by O(1), the Frobenius norm is bounded by
ex
x
R, and ρ is the sigmoid function 1+e
x or the smoothened ReLU function ln (1 + e ). We show
 2
that for any depth t, if the inputs are in [−1, 1]d , the sample complexity of N is Õ dR
. This
2
bound
up to log-factors, and substantially improves over the previous state of the art
 is2 optimal

2
of Õ d R
,
that
was established in a recent line of work [7, 4, 8, 5, 2, 9].
2
We furthermore show that this bound remains valid if instead of considering the magnitude
of the Wi ’s, we consider the magnitude of Wi − Wi0 , where Wi0 are some reference matrices,
with spectral norm of O(1). By taking the Wi0 to be the matrices at the onset of the training
process, we get sample complexity bounds that are sub-linear in the number of parameters, in
many typical regimes of parameters.
To establish our results we develop a new technique to analyze the sample complexity of
families H of predictors. We start by defining a new notion of a randomized approximate
description of functions f : X → Rd . We then show that if there is a way to approximately
describe functions in a class H using d bits, then d2 examples suffices to guarantee uniform
convergence. Namely, that the empirical loss of all the functions in the class is -close to the
true loss. Finally, we develop a set of tools for calculating the approximate description length
of classes of functions that can be presented as a composition of linear function classes and
non-linear functions.

∗
†

School of Computer Science and Engineering, The Hebrew University, Jerusalem, and Google Research, Tel-Aviv.
School of Computer Science and Engineering, The Hebrew University, Jerusalem

Contents
1 Introduction

1

2 Preliminaries
2.1 Notation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
2.2 Uniform Convergence and Covering Numbers . . . . . . . . . . . . . . . . . . . . . .
2.3 Basic Inequalities . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

2
2
2
4

3 Simplified Approximate Description Length
3.1 Linear Functions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
3.2 Simplified Depth 2 Networks . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

4
6
8

4 Approximation Description Length
11
4.1 Linear Operations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 13
4.2 Non-Linear Operations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 15
5 Sample Complexity of Neural Networks
17
5.1 Proof of Theorem 5.1 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 18
6 Proof of theorem 5.3
18
6.1 Shattering with Quadratic Activation . . . . . . . . . . . . . . . . . . . . . . . . . . 18
6.2 Shattering with other Activations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 23
7 Future Work

25

1

Introduction

We analyze the sample complexity of networks with bounds on the magnitude of their weights. Let
us consider a prototypical case, where the input space is X = [−1, 1]d , the output space is R, the
number of layers is t, all hidden layers has d neurons, and the activation function is ρ : R → R.
The class of functions computed by such an architecture is
N = {Wt ◦ ρ ◦ Wt−1 ◦ ρ . . . ◦ ρ ◦ W1 : W1 , . . . , Wt−1 ∈ Md×d , Wt ∈ M1,d }
As the class N is defined by (t − 1)d2 + d = O(d2 ) parameters, classical results (e.g. [1]) tell us that
order of d2 examples are sufficient and necessary in order to learn a function from N (in a standard
worst case analysis). However, modern networks often succeed to learn with substantially less
examples. One way to provide alternative results, and a potential explanation to the phenomena,
is to take into account the magnitude of the weights. This approach was a success story in the days
of SVM [3] and Boosting [10], provided a nice explanation to generalization with sub-linear (in the
number of parameters) number of examples, and was even the deriving force behind algorithmic
progress. It seems just natural to adopt this approach in the context of modern networks. For
instance, it is natural to consider the class
NR = {Wt ◦ ρ ◦ Wt−1 ◦ ρ . . . ◦ ρ ◦ W1 : ∀i, kWi kF ≤ R, kWi k ≤ O(1)}
qP
d
2
where kW k = maxkxk=1 kW xk is the spectral norm and kW kF =
i,j=1 Wij is the Frobenius
norm. This class has been analyzed
 2 2 in several recent works [7, 4, 8, 5, 2, 9]. Best known results
show a sample complexity of Õ d R
(for the sake of simplicity, in the introduction, we ignore the
2
dependence on the depth
in the big-O notation). In this paper we prove, for various activations, a
 2
dR
stronger bound of Õ 2 , which is optimal, up to log factors, for constant depth networks.
How good is this bound? Does it finally provide sub-linear bound in typical regimes of the
parameters? To answer this question, we need to ask how large R is. While this question of course
don’t have a definite answer, empirical studies (e.g. [13]) show that it is usually the case that the
norm (spectral, Frobenius, and others) of the weight matrices is at the same order of magnitude as
the norm of the matrix in the onset of the training process. In most standard training methods,
the initial matrices are random matrices with independent (or almost independent) entries,
with
√
mean zero and variance of order d1 . The Frobenius norm of such
d.
Hence,
a
matrix
is
of
order

√
2
the magnitude of R is of order d. Going back to our Õ dR
bound, we get a sample complexity
2

 2
of Õ d2 , which is unfortunately still linear in the number of parameters.
Since our bound is almost optimal, we can ask whether this is the end of the story? Should we
abandon the aforementioned approach to network sample complexity? A more refined examination
of the training process suggests another hope for this approach. Indeed, the training process
doesn’t start from the zero matrix, but rather form a random initialization matrix. Thus, it stands
to reason that instead of considering the magnitude of the weight matrices Wi , we should consider
the magnitude of Wi − Wi0 , where Wi0 is the initial weight matrix. Indeed, empirical studies [6]
show that the Frobenius norm of Wi − Wi0 is often order of magnitude smaller than the Frobenius
norm of Wi . Following this perspective, it is natural to consider the class

NR (W10 , . . . , Wt0 ) = Wt ◦ ρ ◦ Wt−1 ◦ ρ . . . ◦ ρ ◦ W1 : kWi − Wi0 k ≤ O(1), kWi − Wi0 kF ≤ R
For some fixed matrices, W10 , . . . , Wt0 of spectral norm1 O(1). It is natural to expect that considering balls around the initial Wi0 ’s instead of zero, shouldn’t change the sample complexity of the
1

The bound of O(1) on the spectral norm of the Wi0 ’s and Wi − Wi0 is again motivated by the practice of neural

1

class at hand. Inother
words, we can expect that the sample complexity of NR (W10 , . . . , Wt0 ) is

2
– the sample complexity of NR . Such a bound would finally be sub-linear,
approximately Õ dR
2
as in practice, it is often the case that R2  d.
This approach was pioneered by Bartlett et al. [4] who considered the class

NR2,1 (W10 , . . . , Wt0 ) = Wt ◦ ρ ◦ Wt−1 ◦ ρ . . . ◦ ρ ◦ W1 : kWi − Wi0 k ≤ O(1), kWi − Wi0 k2,1 ≤ R
Pd

qP
d

2
where kW k2,1 =
i=1
j=1 Wij . For this class they proved a sample complexity bound of
 2
 2 2
√
dR
Õ 2 . Since, kW k2,1 ≤ dkW kF , this implies a sample complexity bound of Õ d R
on
2
√
0
0
NR (W1 , . . . , Wt ), which is still not sublinear. We note that kW k2,1 = Θ( d) even if W is a
random matrix with variance that is calibrated so that kW kF = Θ(1) (namely, each 
entryhas
2
1
variance d2 ). In this paper we finally prove a sub-linear sample complexity bound of Õ dR
on
2

NR (W10 , . . . , Wt0 ).
To prove our results, we develop a new technique for bounding the sample complexity of function
classes. Roughly speaking, we define a notion of approximate description of a function, and count
how many bits are required in order to give an approximate description for the functions in the class
under study. We then show that this number, called the approximate description length (ADL),
gives an upper bound on the sample complexity. The advantage of our method over existing
techniques is that it behaves nicely with compositions. That is, once we know the approximate
description length of a class H of functions from X to Rd , we can also bound the ADL of ρ ◦ H,
as well as L ◦ H, where L is a class of linear functions. This allows us to utilize the compositional
structure of neural networks.

2
2.1

Preliminaries
Notation

We denote by med(x1 , . . . , xk ) the median of x1 , . . . , xk ∈ R. For vectors x1 , . . . , xk ∈ Rd we denote
med(x1 , . . . , xk ) = med(x11 , . . . , xk1 ), . . . , med(x1d , . . . , xkd ) . We use log to denote log2 , and ln to
denote loge An expression of the form f (n) . g(n) means that there is a universal constant
c > 0 for
1 P
which f (n) ≤ cg(n). For a finite set A and f : A → R we let Ex∈A f = Ex∈A f (a) = |A|
a∈A f (a).
d−1 = {x ∈ Rd :
We denote BdM = {x ∈ Rd : kxk ≤ M } and Bd = Bd1 . Likewise, we denote SP
2
kxk = 1}. We denote the Frobenius norm of a matrix W by kW kF = hW, W i = ij Wij2 , while the
spectral norm is denoted by kW k = maxkxk=1 kW xk. For a pair of vectors x, y ∈ Rd we denote by
xy ∈ Rd their point-wise product xy = (x1 y1 , . . . , xd yd ). For a scalar a we denote by ~a ∈ Rd the
vector whose all coordinates are a. Let V be a finite dimensional inner product space. A standard
Gaussian in V is a centered Gaussian vector X ∈ V such that VAR(hu, Xi) = kuk2 for any u ∈ V .
For a subspace U ⊂ V we denote by PU the orthogonal projection on U .

2.2

Uniform Convergence and Covering Numbers

Fix an instance space X , a label space Y and a loss ` : Rd × Y → [0, ∞). We say that ` is Lipschitz
/ Bounded / etc. if for any y ∈ Y, `(·, y) is. Fix a class H from X to Rd . For a distribution D and
networks – the spectral norm of Wi0 , with standard initializations, is O(1), and empirical studies [6, 13] show that
the spectral norm of Wi − Wi0 is usually very small.

2

a sample S ∈ (X × Y)m we define the representativeness of S as
m

repD (S, H) = sup `D (h) − `S (h) where `D (h) =
h∈H

E

(x,y)∼D

`(h(x), y) and `S (h) =

1 X
`(h(xi ), yi )
m
i=1

We note that if repD (S, H) ≤  then any algorithm that is guaranteed to return a function ĥ ∈ H
will enjoy a generalization bound `D (h) ≤ `S (h) + . In particular, the ERM algorithm will return a
function whose loss is optimal, up to an additive factor of . We will focus on bounds on repD (S, H)
when S ∼ Dm . To this end, we will rely on the connection between representativeness and the
covering numbers of H.
Definition 2.1. Fix a class H of functions from X to Rd , an integer m,  > 0 and 1 ≤ p ≤ ∞.
We define Np (H, m, ) as the minimal integer for which the following holds. For every A ⊂ X of
X
size ≤ m there exists H̃ ⊂ Rd
such that H̃ ≤ Np (H, m, ) and for any h ∈ H there is h̃ ∈ H̃
1

p p
with Ex∈A h(x) − h̃(x)
≤ . For p = 2, we denote N (H, m, ) = N2 (H, m, )
∞

Lemma 2.2. [11] Let ` : Rd × Y → R be B-bounded. Then
M
q
12B X −k
E m repD (S, H) ≤ B2−M +1 + √
2
ln (N (` ◦ H, m, B2−k ))
S∼D
m
k=1

Furthermore, with probability at least 1 − δ,
repD (S, H) ≤ B2

−M +1

M
q
12B X −k
2
+√
ln (N (` ◦ H, m, B2−k )) + B
m
k=1

r

2 ln (2/δ)
m

We conclude with a special case of the above lemma, which will be useful in this paper.
Lemma 2.3. Let ` : Rd × Y → R be L-Lipschitz w.r.t. k · k∞ and B-bounded. Assume that for any
0 <  ≤ 1, log (N (H, m, )) ≤ n2 . Then
√
(L + B) n
√
E repD (S, H) .
log(m)
S∼Dm
m
Furthermore, with probability at least 1 − δ,
r
√
(L + B) n
2 ln (2/δ)
√
repD (S, H) .
log(m) + B
m
m
Proof. Denote
M
q
12B X −k
A = B2−M +1 + √
2
ln (N (` ◦ H, m, B2−k ))
m
k=1

√

We will show that A .


(L+B) n
√
m

log(m). We have, if

ln N (` ◦ H, m, B2

−k

B2−k
L

≤ 1,

 


nL2 22k
B −k
) ≤ ln N H, m, 2
≤
+n
L
B2

3

Hence,
A ≤ B2

−M +1

√
M √
M
12(LM + B) n
12B X nL 12B X −k √
−M +1
√
n ≤ B2
+
+√
+√
2
B
m
m
m
k=1

Choosing M = log

pm
n

we get,
A≤

2.3

k=1

12(L log

√
√
+ B) n + B n
√
m

pm
n

Basic Inequalities

Lemma 2.4. Let X1 , . . . , Xn be independent r.v. with that that are σ-estimators to µ. Then
 n
2
Pr (|med(X1 , . . . , Xn ) − µ| > kσ) <
k
Proof. We have that Pr(|Xi −µ| > kσ) ≤ k12 . It follows that the probability that ≥
fall outside of the segment (µ − kσ, µ + kσ) is bounded by


3

n
dn/2e



1
k2

dn/2e

n

<2



1
k2

dn/2e

n
2

of X1 , . . . , Xn

 n
2
≤
k

Simplified Approximate Description Length

To give a soft introduction to our techniques, we first consider a simplified version of it. We next
define the approximate description length of a class H of functions from X to Rd , which quantifies
the number of bits it takes to approximately describe a function from H. We will use the following
notion of approximation
Definition 3.1. A random vector X ∈ Rd is a σ-estimator to x ∈ Rd if
E X = x and ∀u ∈ Sd−1 , VAR(hu, Xi) = E hu, X − xi2 ≤ σ 2
A random function fˆ : X → Rd is a σ-estimator to f : X → Rd if for any x ∈ X , fˆ(x) is a
σ-estimator to f (x).
A (σ, n)-compressor C for a class H takes as input a function h ∈ H, and outputs a (random)
function Ch such that (i) Ch is a σ-estimator of h and (ii) it takes n bits to describe Ch. Formally,
Definition 3.2. A (σ, n)-compressor for H is a triplet (C, Ω, µ) where µ is a probability measure
X
on Ω, and C is a function C : Ω × H → Rd
such that
1. For any h ∈ H and x ∈ X , (Cω h)(x), ω ∼ µ is a σ-estimator of h(x).
X
2. There are functions E : Ω × H → {±1}n and D : {±1}n → Rd
for which C = D ◦ E

4

Definition 3.3. We say that a class H of functions from X to Rd has approximate description
length n if there exists a (1, n)-compressor for H
It is not hard to see that if (C, Ω, µ) is a (σ, n)-compressor for H, then
Pk
(Cω1 ,...,ωk h)(x) :=


√σ , kn
k

i=1 (Cωi h)(x)

k



-compressor for H. Hence, if the approximate description length of H is n, then for

any 1 ≥  > 0 there exists an , nd−2 e -compressor for H.
We next connect the approximate description length, to covering numbers and representativeness. We separate it into two lemmas, one for d = 1 and one for general d, as for d = 1 we can
prove a slightly stronger bound.
is a

Lemma 3.4. Fix a class H of functions from X to R with approximate description length n. Then,
 
log (N (H, m, )) ≤ n −2
Hence, if ` : Rd × Y → R is L-Lipschitz and B-bounded, then for any distribution D on X × Y
√
(L + B) n
√
E repD (S, H) .
log(m)
S∼Dm
m
Furthermore, with probability at least 1 − δ,
r
√
(L + B) n
2 ln (2/δ)
√
repD (S, H) .
log(m) + B
m
m
  
Proof. Fix a set A ⊂ X . Let (C, Ω, µ) be a n −2 ,  -compressor for H. Let H̃ be the range
−2
of C. Note that H̃ ≤ 2nd e . Fix h ∈ H. It is enough to show that there is h̃ ∈ H̃ with

2
Ex∈A h(x) − h̃(x) ≤ 2 . Indeed,
E

E (h(x) − (Cω h)(x))2 = E

ω∼µ x∈A

E (h(x) − (Cω h)(x))2 ≤ 2 .

x∈A ω∼µ


2
Hence, there exists h̃ ∈ H̃ for which Ex∈A h(x) − h̃(x) ≤ 2
Lemma 3.5. Fix a class H of functions from X to Rd with approximate description length n.
Then,


log (N∞ (H, m, )) ≤ log (N (H, m, )) ≤ n 16−2 dlog(dm)e
Hence, if ` : Rd × Y → R is L-Lipschitz w.r.t. k · k∞ and B-bounded, then for any distribution D
on X × Y
p
(L + B) n log(dm)
√
E repD (S, H) .
log(m)
S∼Dm
m
Furthermore, with probability at least 1 − δ,
r
p
(L + B) n log(dm)
2 ln (2/δ)
√
repD (S, H) .
log(m) + B
m
m
5


 
Proof. Denote k = dlog(dm)e. Fix a set A ⊂ X . Let C be a n 16−2 , 4 -compressor for H.
Define
(Cω0 1 ,...,ωk h)(x) = med ((Cω1 h)(x), . . . , (Cωk f )(x))
−2
Let H̃ be the range of C 0 . Note that H̃ ≤ 2knd16 e . Fix h ∈ H. It is enough to show that there

is h̃ ∈ H̃ with maxx∈A h(x) − h̃(x)
Pr

ω1 ,...,ωk ∼µ

∞

≤ . By lemma 2.4 we have that


∃x ∈ A, (Cω0 1 ,...,ωk h)(x) − h(x) >  < dm2−k ≤ 1

In particular, there exists h̃ ∈ H̃ for which maxx∈A h(x) − h̃(x)

3.1

∞

≤

Linear Functions

We next bound the approximate description length of linear functions with bounded Frobenius
norm.

Theorem 3.6. Let class Ld1 ,d2 ,M = x ∈ Bd1 7→ W x : W is d2 × d1 matrix with kW kF ≤ M has
approximate description length


1
n≤
+ 2M 2 2 dlog (2d1 d2 (M + 1))e
4
Hence, if ` : Rd2 × Y → R is L-Lipschitz w.r.t. k · k∞ and B-bounded, then for any distribution D
on X × Y
p
(L + B) M 2 log(d1 d2 M ) log(d2 m)
√
E repD (S, Ld1 ,d2 ,M ) .
log(m)
S∼Dm
m
Furthermore, with probability at least 1 − δ,
r
p
(L + B) M 2 log(d1 d2 M ) log(d2 m)
2 ln (2/δ)
√
repD (S, Ld1 ,d2 ,M ) .
log(m) + B
m
m
We remark that the above bounds on the representativeness coincides with standard bounds
([11] for instance), up to log factors. The advantage of these bound is that they remain valid for
any output dimension d2 .
In order to prove theorem 3.6 we will use a randomized sketch of a matrix.
Definition 3.7. Let w ∈ Rd be a vector.2 A random sketch of w isj a krandom vector ŵ that is
wi
wi
wi
1
samples as follows. Choose i w.p. pi = 2kwk
let b = 1 and otherwise
2 + 2d . Then, w.p. p −
pi
i
j k

wi
b = 0. Finally, let ŵ =
pi + b ei . A random k-sketch of w is an average of k-independent
random sketches of w. A random sketch and a random k-sketch of a matrix is defined similarly,
with the standard matrix basis instead of the standard vector basis.
q
The following useful lemma shows that an sketch w is a 14 + 2kwk2 -estimator of w.
Lemma 3.8. Let ŵ be a random sketch of w ∈ Rd . Then,
1. E ŵ = w
6

2. For any u ∈ Sd−1 , E (hu, ŵi − hu, wi)2 ≤ E hu, ŵi2 ≤

1
4

+ 2kwk2

Proof. Items 1. is straight forward. To see item 2. note that
E (hu, ŵi − hu, wi)2 ≤ E hu, wi2
   
2 
   2 !
X
wi
wi
wi
wi
+1 + 1−
u2i
=
pi
pi
pi
pi
pi
i
 2
     !
X
wi
wi
wi
wi
=
pi
+
u2i
+2
pi
pi
pi
pi
i
   2    2 !
X
wi
wi
wi
wi
+
−
=
pi
+
u2i
pi
pi
pi
pi
i
 2   
 !
X
wi
wi
wi
=
pi
+
1−
u2i
pi
pi
pi
i
!
 2
X
1
wi
≤
u2i
pi
+
pi
4
i

≤

X w2 u2
1
i i
kuk2∞ +
4
pi

≤

1 X wi2 u2i
+
4
pi

i

i

Now, since pi =

wi2
2kwk2

+

1
2d

we have

X w2 u2
i

i

pi

i

≤

X w2 u2
i i
i

wi2

= 2kwk2

X

u2i = 2kwk2

i

2kwk2

Proof. (of theorem 3.6) We construct a compressor for Ld1 ,d2 ,M as follows. Given W , we will


sample a k-sketch Ŵ of W for k = 41 + 2M 2 , and will return the function x 7→ Ŵ x. We claim
that that W 7→ Ŵ is a (1, 2k dlog(2d1 d2 (M + 1))e)-compressor for Ld1 ,d2 ,M . Indeed, to specify a
sketch of W we need dlog(d1 d2 )e bits to describe the chosen index, as well as log (2d1 d2 M + 2)
bits to describe the value in that index. Hence, 2k dlog(2d1 d2 (M + 1))e bits suffices to specify a
k-sketch. It remains to show that for x ∈ Bd1 , Ŵ x is a 1-estimator of W x. Indeed, by lemma 3.8,
E Ŵ = W and therefore
E Ŵ x = W x
Likewise, for u ∈ Sd2 −1 . We have
E

D
E
2
D
E
2
u, Ŵ x − hu, W xi = E Ŵ , xuT − W, xuT
≤

7

1
4

+ 2M 2
≤1
k

3.2

Simplified Depth 2 Networks

To demonstrate our techniques, we consider the following class of functions. We let the domain X
to be Bd . We fix an activation function ρ : R → R that is assumed to be a polynomial
ρ(x) =

k
X

ai xi

i=0

with

Pn

n=1 |an |

= 1. For any W ∈ Md,d we define
d

1 X
hW (x) = √
ρ(hwi , xi)
d i=1
Finally, we let

H=

hW

1
: ∀i, kwi k ≤
2



In order to build compressors for classes of networks, we will utilize to compositional structure of
the classes. Specifically, we have that
H=Λ◦ρ◦F
Where
F = {x 7→ W x : W is d × d matrix with kwi k ≤ 1 for all i}
and

d

1 X
Λ(x) = √
xi
d i=1
As F is a subset of Ld,d,√d , we know that there exists a (1, O (d log(d)))-compressor for it. We will
use this compressor to build a compressor to ρ ◦ F, and then to Λ ◦ ρ ◦ F. We will start with the
latter, linear case, which is simpler
Lemma 3.9. Let X be a σ-estimator to x ∈ Rd1 . Let A ∈ Md2 ,d1 be a matrix of spectral norm
≤ r. Then, AX is a (rσ)-estimator to Ax. In particular, if C is a (1, n)-compressor to a class H
of functions from X to Rd . Then
Cω0 (Λ ◦ h) = Λ ◦ Cω h
is a (1, n)-compressor to Λ ◦ H
Proof. We have E AX = A E X = Ax. Furthermore, for any u ∈ Sd2 −1 ,
E hu, AX − Axi2 = E AT u, X − x

2

≤ kAT uk2 σ 2 ≤ r2 σ 2

We next consider the composition of F with the non-linear ρ. As opposed to composition
with a linear function, we cannot just generate a compression version using F’s compressor and
then compose with ρ. Indeed, if X is a σ-estimator to x, it is not true in general that ρ(X) is
an estimator of ρ(x). For instance, consider the case that ρ(x) = x2 , and X = (X1 , . . . , Xd ) is
a vector of independent standard Gaussians. X is a 1-estimator of 0 ∈ Rd . On the other hand,
ρ(X) = (X12 , . . . , Xn2 ) is not an estimator of 0 = ρ(0). We will therefore take a different approach.

8

Given f ∈ F, we will sample k independent estimators {Cωi f }ki=1 from F’s compressor, and define
the compressed version of σ ◦ h as
Cω0 1 ,...,ωk f =

d
X
i=0

ai

i
Y

C ωi f

j=0

This construction is analyzed in the following lemma
d


Lemma 3.10. If C is a 21 , n -compressor of a class H of functions from X to − 12 , 12 . Then C 0
is a (1, n)-compressor of ρ ◦ H
Combining theorem 3.6 and lemmas 3.9, 3.10 we have:
Theorem 3.11. H has approximation length . d log(d). Hence, if ` : R × Y → R is L-Lipschitz
and B-bounded, then for any distribution D on X × Y
p
(L + B) d log(d)
√
E repD (S, H) .
log(m)
S∼Dm
m
Furthermore, with probability at least 1 − δ,
r
p
(L + B) d log(d)
2 ln (2/δ)
√
log(m) + B
repD (S, H) .
m
m
Lemma 3.10 is implied by the following useful lemma:
Lemma 3.12.

1. If X is a σ-estimator of x then aX is a (|a|σ)-estimator of aX

d Assume furthermore that
2. P
Suppose that for
P∞n = 1, 2, 3, . . . Xn is a σdn -estimator of xn ∈ R . P
∞
∞
n=1 Xn is a σ-estimator
n=1 σn converge to x ∈ R and σ ∈ [0, ∞). Then,
n=1 xn and
of x
Q
3. Suppose that {Xi }ki=1 are independent
σi -estimators
of xi ∈ Rd . Then ki=1 Xi is a σ 0 

Q
Q
Q
estimator of ki=1 xi for σ 02 = ki=1 σi2 + kxi k2∞ − ki=1 kxi k2∞

We note that the bounds in the above lemma are all tight. Specifically, (3) is tight in the case
that {Xi }ki=1 are independent Gaussians with means {xi }ki=1 and co-variance matrices {σi2 I}ki=1 .
Proof. 1. and 2. are straight forward. We next prove 3. By replacing each Xi with

9

Xi
σi

we can

assume w.l.o.g. that σ1 = . . . = σk = 1. We have
*
E

X1 ,...,Xk

u,

k
Y

Xi −

i=1

k
Y

+2

k
Y

*

xi

=

u,

E

X1 ,...,Xk

i=1

((Xi − xi ) + xi ) −

i=1

+2

k
Y

xi

i=1
k
Y

*
=

X Y

u,

E

X1 ,...,Xk

Y

(Xi − xi )

xi −

i∈Ac

A⊂[k] i∈A

=

E

X1 ,...,Xk

+

 u,

Y

(Xi − xi )

−

xi

=

E

X1 ,...,Xk

+*

X

E

k
Y

u,

xi

+
Y

u,

i∈Ac

xi

Y

(Xi − xi )

xi

i∈B c

i∈B

+*

+
Y

u,

i=1

A⊂[k]

Y

Y

(Xi − xi )

xi

i∈Ac

i∈A

+2

k
Y

u,

(Xi − xi )

i∈A

A⊂[k] B⊂[k]

X1 ,...,Xk

*
+

Y

u,

*
−2

u,

+2
xi 

i=1

*
X

k
Y

*

i∈Ac

A⊂[k] i∈A

X

xi

i=1

*
X Y

+2

xi

i=1

+2

*

(1)

=

X

E

X1 ,...,Xk

Y

u,

*
−

xi

u,

i∈Ac

i∈A

A⊂[k]

Y

(Xi − xi )

k
Y

+2
xi

i=1

2
(2)

X

≤

Y

u

xi

i∈Ac

A⊂[k],A6=[k]

2

X

=

X

≤

xi

i∈A

A⊂[k],A6=∅
(3)

Y

u

Y

kxi k2∞

A⊂[k],A6=∅ i∈A
k 
Y

=

k
 Y
1 + kxi k2∞ −
kxi k2∞

i=1

i=1

(1) If A 6= B, then w.l.o.g. k ∈ A \ B. In this case we have
*
E

X1 ,...,Xk

+*
Y

u,

Y

(Xi − xi )

xi

+

i∈Ac

i∈A

E

E

X1 ,...,Xk−1 Xk

Y

u,

Y

(Xi − xi )

X1 ,...,Xk−1

Y

(Xi − xi )

Y

xi

i∈B c

i∈B

*
=
=

E

X1 ,...,Xk−1

xi

+
u,

Y

(Xi − xi )

Y

(Xi − xi )

Y

xi
+

*
E

Xk

xi

u,

Y

(Xi − xi )

Y

xi

i∈Ac

i∈A

=0

}|
{ Y
z
xi
(Xi − xi ) E (Xk − xk )

Y

u,

i∈B c

i∈B

Y
i∈B c

i∈B

+*
u,

xi

i∈Ac

i∈Ac

i∈A

+
u,

E

Y

+*

*
=

(Xi − xi )

i∈B

*
=

Y

u,

Xk

i∈A\[k]

+

i∈Ac

0

Similarly, if A 6= ∅, then w.l.o.g. k ∈ A. In this case we have
*
E

X1 ,...,Xk

u,

k
Y
i=1

+*
xi

+
u,

Y
i∈A

(Xi − xi )

Y

xi

k
Y

*
=

i∈Ac

E

E

X1 ,...,Xk−1 Xk

*
=

E

X1 ,...,Xk−1

10

u,

u,

+*
xi

u,

i=1
k
Y
i=1

+
Y
i∈A

xi

i∈Ac
=0

+*
xi

(Xi − xi )

Y

u,

Y
i∈A\[k]

z
}|
{ Y
(Xi − xi ) E (Xk − xk )
xi
Xk

i∈Ac

+

(2) Fix a set A that is w.l.o.g. A = {1, . . . , k 0 }. We note that if X ∈ Rd is a 1-estimator to 0,
then for any vector z ∈ Rd
E kzXk2 =

d
X

X

zi2 E Xi2 =

i=1

X

d
X

d
X

zi2 E hei , Xi2 ≤
X

i=1

zi2 = kzk2

i=1

It follows that

E

X1 ,...,Xk0 −1

k
Y

u

xi

i=k0 +1

0 −1
kY

2

(Xi − xi )

=

i=1

≤

E

u

E

X1 ,...,Xk0 −2 Xk0 −1

xi

i=k0 +1

k
Y

u

E

X1 ,...,Xk0 −2

k
Y

xi

0 −2
kY

i=k0 +1

0 −1
kY

2

(Xi − xi )

i=1
2

(Xi − xi )

i=1

..
.
≤

2

k
Y

u

xi

i=k0 +1
2

=

u

Y

xi

i∈Ac

Hence,
+2

*
E

X1 ,...,Xk

Y

u,

(Xi − xi )

i∈A

Y

k
Y

*

xi

=

E

E

X1 ,...,Xk0 −1 Xk0

i∈Ac
Xk0 is 1-estimator of xk

≤

u

E

X1 ,...,Xk0 −1

u

xi

i=k0 +1
k
Y

xi

i=k0 +1

0
kY
−1

0
kY
−1

+2
(Xi − xi ) , (Xk0 − xk0 )

i=1
2

(Xi − xi )

i=1

2

≤

u

Y

xi

i∈Ac

(3) If z = u

Q

i∈A xi

then for any j ∈ [d], |zj | ≤ |uj |
2

kzk ≤

Y

kxi k∞

d
X

i∈A kxi k∞ .

u2j =

j=1

i∈A

4

Q

Y

Hence,

kxi k∞

i∈A

Approximation Description Length

In this section we refine the definition of approximate description length that were given in section
3. We start with the encoding of the compressed version of the functions. Instead of standard
strings, we will use what we call bracketed string. The reason for that often, in order to create
a compressed version of a function, we concatenate compressed versions of other functions. This
results with strings with a nested structure. For instance, consider the case that a function h is
encoded by the concatenation of h1 and h2 . Furthermore, assume that h1 is encoded by the string
11

01, while h2 is encoded by the concatenation of h3 , h4 and h5 that are in turn encoded by the
strings 101, 0101 and 1110. The encoding of h will then be
[[01][[101][0101][1110]]]
We note that in section 3 we could avoid this issue since the length of the strings and the recursive
structure were fixed, and did not depend on the function we try to compress. Formally, we define
Definition 4.1. A bracketed string is a rooted tree S, such that (i) the children of each edge are
ordered, (ii) there are no nodes with a singe child, and (iii) the leaves are labeled by {0, 1}. The
length, len(S) of S is the number of its leaves.
Let S be a bracketed string. There is a linear order on its leaves that is defined as follows.
Fix a pair of leaves, v1 and v2 , and let u be their LCA. Let u1 (resp. u2 ) be the child of u that
lie on the path to v1 (resp. v2 ). We define v1 < v2 if u1 < u2 and v1 > v2 otherwise (note that
necessarily u1 6= u2 ). Let v1 , . . . , vn be the leaves of T , ordered according to the above order, and
let b1 , . . . , bn be the corresponding bits. The string associated with T is s = b1 . . . bn . We denote
by Sn the collection of bracketed strings of length ≤ n, and by S = ∪∞
n=1 Sn the collection of all
bracketed strings.
The following lemma shows that in log-scale, the number of bracketed strings of length ≤ n
differ from standard strings of length ≤ n by only a constant factor
Lemma 4.2. |Sn | ≤ 32n
Proof. By adding a pair of brackets around each bit, each bracketed string can be described by
2n − 1 correctly matched pairs of brackets, and a string of length ≤ n. As the
of ways
 number
1 2k
2k , we have,
to correctly match k pairs of brackets is the Catalan number Ck = k+1
≤
2
k
|Sn | ≤ 24n−2 2n+1
We next revisit the definition of a compressor for a class H. The definition of compressor will
now have a third parameter, ns , in addition to σ and n. We will make three changes in the definition.
The first, which is only for the sake of convenience, is that we will use bracketed strings rather than
standard strings. The second change, is that the length of the encoding string will be bounded
only in expectation. The final change is that the compressor can now output a seed. That is, given
a function h ∈ H that we want to compress, the compressor can generate both a non-random seed
Es (h) ∈ Sns and a random encoding E(ω, h) ∈ S with Eω∼µ len(E(ω, h)) ≤ n. Together, Es (h)
X
and E(ω, h) encode a σ-estimator. Namely, there is a function D : Sns × S → Rd
such that
D(Es (h), E(ω, h)), ω ∼ µ is a σ-estimator of h. The advantage of using seeds is that it will allow
us to generate many independent estimators, at a lower cost. In the case that n  ns , the cost of
generating k independent estimators of h ∈ H is ns + kn bits (in expectation) instead of k(ns + n)
bits. Indeed, we can encode k estimators by a single seed Es (h) and k independent “regular”
encodings E(ωk , h), . . . , E(ωk , h). The formal definition is given next.
Definition 4.3. A (σ, ns , n)-compressor for H is a 5-tuple C = (Es , E, D, Ω, µ) where µ is a
probability measure on Ω, and Es , E, D are functions Es : H → T ns , E : Ω × H → T , and
X
such that for any h ∈ H and x ∈ X
D : T ns × T → Rd
1. D(Es (h), E(ω, h)), ω ∼ µ is a σ-estimator of h.
2. Eω∼µ len(E(ω, h)) ≤ n

12

We finally revisit the definition of approximate description length. We will add an additional
parameter, to accommodate the use of seeds. Likewise, the approximate description length will
now be a function of m – we will say that H has approximate description length (ns (m), n(m)) if
there is a (1, ns (m), n(m))-compressor for the restriction of H to any set A ⊂ X of size at most m.
Formally:
Definition 4.4. We say that a class H of functions from X to Rd has approximate description
length (ns (m), n(m)) if for any set A ⊂ X of size ≤ m there exists a (1, ns (m), n(m))-compressor
for H|A
It is not hard to see that if H has approximate description length (ns (m),
 n(m)), then for any
−2
1 ≥  > 0 and a set A ⊂ X of size ≤ m, there exists an , ns (m), n(m)d e -compressor for H|A .
We next connect the approximate description length, to covering numbers and representativeness.
The proofs are similar the the proofs of lemmas 3.4 and 3.5.
Lemma 4.5. Fix a class H of functions from X to R with approximate description length (ns (m), n(m)).
Then,
n(m)
log (N (H, m, )) . ns (m) + 2

d
Hence, if ` : R × Y → R is L-Lipschitz and B-bounded, then for any distribution D on X × Y
p
(L + B) ns (m) + n(m)
√
E repD (S, H) .
log(m)
S∼Dm
m
Furthermore, with probability at least 1 − δ,
r
p
(L + B) ns (m) + n(m)
2 ln (2/δ)
√
log(m) + B
repD (S, H) .
m
m
Lemma 4.6. Fix a class H of functions from X to Rd with approximate description length (ns (m), n(m)).
Then,
n(m) log(dm)
log (N (H, m, )) ≤ log (N∞ (H, m, )) . ns (m) +
2
Hence, if ` : Rd × Y → R is L-Lipschitz w.r.t. k · k∞ and B-bounded, then for any distribution D
on X × Y
p
(L + B) ns (m) + n(m) log(dm)
√
E repD (S, H) .
log(m)
S∼Dm
m
Furthermore, with probability at least 1 − δ,
r
p
(L + B) ns (m) + n(m) log(dm)
2 ln (2/δ)
√
log(m) + B
repD (S, H) .
m
m

4.1

Linear Operations

Lemma 4.7. Let H1 , H2 be classes of functions from X to Rd with approximate description length of
(n1s (m), n1 (m)) and (n2s (m), n2 (m)). Then H1 +H2 has approximate description length of (n1s (m)+
n2s (m), 2n1 (m) + 2n2 (m))
Lemma 4.8. Let H be a class of functions from X to Rd with approximate description length
of (ns (m),
Let
 n(m)).

 A be d2 × d1 matrix. Then A ◦ H1 has approximate description length
2
ns (m), kAk n(m)
13

Definition 4.9. Denote by Ld1 ,d2 ,r,R the class of all d2 × d1 matrices of spectral norm at most r
and Frobenius norm at most R.
Lemma 4.10. Let H be a class of functions from X to Rd1 with approximate description length
(ns (m), n(m)). Assume furthermore that for any x ∈ X and h ∈ H we have that kh(x)k ≤ B.
Then, Ld1 ,d2 ,r,R ◦ H has approximate description length

ns (m), n(m)O(r2 + 1) + O (d1 + B 2 )(R2 + 1) log(Rd1 d2 + 1)
Proof. Fix as set A ⊂ X of size m. We will construct a compressor to Ld1 ,d2 ,r,R ◦ H as follows.
Given h ∈ H and W ∈ Ld1 ,d2 ,r,R we q
first pay a seed cost ns (m) to use H’s compressor. Then,
we use H’s compressor to generate a

1
k1 -estimator

ĥ of h, at the cost of k1 n(m) bits. Then, we

take Ŵ to be a k2 -sketch of W , at the costs of k2 O (log (d1 d2 R + 1)) bits. Finally, we output the
estimator ĥ ◦ Ŵ . Fix a ∈ A. We must show that Ŵ X := Ŵ ĥ(a) is a 1-estimator of x = h(a).
Indeed, for u ∈ Sd2 −1 we have,
D
E2
E E u, Ŵ X − W x

X Ŵ

D
E2
D
E
E E u, Ŵ X − W X + 2 u, Ŵ X − W X hu, W X − W xi + hu, W X − W xi2

=

X Ŵ

=0

D

E2

D

E2

E E u, Ŵ X − W X

=

X Ŵ

E E u, Ŵ X − W X

=

X Ŵ

*
+2E

X

+
z h }|
i{
u, E Ŵ − W X hu, W X − W xi + E E hu, W X − W xi2
Ŵ

X Ŵ

+ hu, W X − W xi2

E2
D
E2 D
+ W T u, X − x
E E Ŵ − W, XuT

=

X Ŵ

Lemma 3.8

≤

(1)

≤
(2)

≤
≤

2kW k2F + 1
1
E kXk2 +
kW uk2
X
k2
k1


2kW k2F + 1
1
E kX − xk2 + kxk2 +
kW k2
X
k2
k1


2kW k2F + 1 1
1
d1 + kxk2 +
kW k2
k2
k1
k1


2R2 + 1 1
1 2
d1 + B 2 +
r
k2
k1
k1

(1) We have
E kX − xk2 = E kXk2 − 2 hX, xi + kxk2

X

X

= E kXk2 − 2 hE X, xi + kxk2
X

= E kXk2 − kxk2
X

(2) We have
E kX − xk2 =

X

d1
X
i=1

=

≤

d1
X
i=1
d1
X
i=1



Finally, by choosing k1 = 2r


2

E(Xi − xi )2
E hX − x, ei i2
1
d1
=
k1
k1

+ 1 and k2 = 2(d1 + B 2 )(2R2 + 1) we get the result.
14

4.2

Non-Linear Operations

Lemma
4.11. Suppose that
{Xn }∞
σ-estimators to x ∈ Rd . Let ρ(t) =
n=1 are independent
P
Q
P∞
∞
n
an
n
n=1 ân Yn where Yn = q
i=1 Xi and ân = p1 w.p. pi and 0 othern=0 an t . Let U = a0 +
P
kan k2∞
2
2 n
2n
wise. Then U is σ’-estimator of ρ(x) with σ 0 = ∞
n=1
pn ((σ + kxk∞ ) + (1 − pn )dkxk∞ ).
l
m
(
log3 (d)
p
1
n
≤
2
1
Remark 4.12. In particular, if kan k∞ ≤ B n , σ 2 + kxk2∞ ≤ 6B
and pn =
,
4−n otherwise
log3 (d)+4
. Indeed,
2
s
s
∞
∞
X
X
kan k2∞ 2
kan k2∞
n
n
2
2
2n
2
((σ + kxk∞ ) + (1 − pn )dkxk∞ ) ≤
(σ + kxk∞ ) +
(1 − pn )dkxk2n
∞
pn
pn
n=1
n=1

We have σ 0 ≤ 1 and E max{n : ân 6= 0} ≤
∞
X
n=1

s

kan k2∞
pn

≤

∞
X

(2B)n

n=1

≤

≤

3

∞
X

√
+

d
n=

∞  n
X
1
n=1

(2B)n kxkn
∞

l
m
log3 (d)
n=
+1
2

∞  n
X
1
n=1

∞
X

q
√
(σ 2 + kxk2∞ )n + d

3

+

l

log3 (d)
2

∞  n
X
1
n=1

3

m
+1

 n
1
3

=1

and
∞
X




log3 (d)
E max{n : ân =
6 0} ≤
+
2
n=

l

log3 (d)
2

4
m
+1

−n


log3 (d)
+1
n≤
2

Proof. By lemma 3.12 it is enough to show that for all n, ân Yn is a
estimator of an xn . Indeed,
VAR (hu, ân Yn i)

=
=
=
=
=
lemma 3.12

≤

≤



q

kan k2∞
pn

((σ 2 + kxk2∞ )n + (1 − pn )dkxk2n
∞ )-

E (hu, ân Yn i − hu, an xn i)2

2

an
+ (1 − pn ) hu, an xn i2
pn E
u,
Yn − hu, an xn i
pn
1
E hu, an Yn i2 − 2 E hu, an Yn i hu, an xn i + pn hu, an xn i2 + (1 − pn ) hu, an xn i2
pn
1
E hu, an Yn i2 − hu, an xn i2
pn
 1−p
1 
n
E han u, Yn i2 − han u, xn i2 +
hu, an xn i2
pn
pn
n

kan uk22
σ 2 + kxk2∞ + (1 − pn )kxn k22
pn
n

kan k2∞
σ 2 + kxk2∞ + (1 − pn )dkxk2n
∞
pn

Definition 4.13. A function f : R → R is B-strongly-bounded if for all n ≥ 1, kf (n) k∞ ≤ n!B n .
Likewise, f is strongly-bounded if it is B-strongly-bounded for some B
We note that
Lemma 4.14. If f is B-strongly-bounded then f is analytic and its Taylor coefficients around any
point are bounded by B n
15

Figure 1: The functions ln (1 + ex ) and

ex
1+ex

The following lemma gives an example to a strongly bounded sigmoid function, as well as a
strongly bounded smoothened version of the ReLU (see figure 1).
Lemma 4.15. The functions ln (1 + ex ) and

ex
1+ex

are strongly-bounded

z

e
Proof. Consider the complex function f (z) = 1+e
z . It is defined in the strip {z = x + iy : |y| < π}.
By Cauchy integral formula, for any r < π, a ∈ R and n ≥ 0,
Z
n!
f (z)
f (n) (a) =
2πi |z−a|=r (z − a)n+1

It follows that
f (n) (a) ≤

n!
n!
max |f (z)| ≤ n
n
r |z−a|=r
r

max

|f (x + iy)|

x+iy:|y|<r

Now, if |y| < r < π2 , we have
|f (x + iy)| =

ex
ex
ex
1
≤
≤
≤
|1 + eiy ex |
|1 + cos(y)ex |
|1 + cos(r)ex |
cos(r)

x

e
This implies that 1+e
x is strongly bounded. Likewise, since
x
function ln (1 + e ) is strongly bounded as well.

ex
1+ex

is the derivative of ln (1 + ex ), the

Lemma 4.16. Let H be a class of functions from X to Rd with approximate description length of
(ns (m), n(m)). Let ρ : R → R be B-strongly-bounded. Then, ρ ◦ H has approximate description
length of


ns (m) + O n(m)B 2 log(md) , O n(m)B 2 log(d)
√
1
1
σ 2 + 2 ≤ 6B
. To
Proof. Fix a set A ⊂ X of size ≤ m. Let 2 = σ 2 = 72B
2 and note that
generate a 1-estimator to ρ ◦ h ∈ ρ ◦ H on A we first describe h̃, which forms the seed, such that ∀i ∈
[m], kh̃(xi ) − h(xi )k∞ ≤ . Then, we generate σ-estimators ĥ1 , ĥ2 , . . . , to h|A . Finally, we
m
l sample
(
1
n ≤ log23 (d)
Bernoulli random variables Z1 , Z2 , . . . where the parameter of Zn is pn =
.
4−n otherwise
The final estimator is
ĝ(x) = ρ(h̃(x)) +

∞
X
ρ(n) (h̃(x)) Zn
n=1

n!

pn

Yn where Yn =

n 
Y
i=1

By lemma 4.11 and the following remark, ĝ is 1-estimator of ρ ◦ h|A .
16

ĥi (x) − h̃(x)



How many bits do we need in order to specify ĝ? By lemma 4.6 the restriction of H|A has an
-cover, w.r.t. the ∞-norm, of log-size . ns (m) + n(m) log(md)
. So the generation of the seed h̃ costs
2

bits. We also need to specify N := max{n : Zn 6= 0}, Z1 , . . . , ZN and ĥ1 , . . . , ĥN .
ns (m)+ n(m) log(md)
2
This can be done by concatenating the descriptions of the pairs (Zn , ĥn ) for n = 1, . . . , N . The bit

cost of this is bounded (in expectation) by log3 (d)+4
d72B 2 en(m) + 1
2

5

Sample Complexity of Neural Networks

We next utilize the tools we developed in order to analyze the sample complexity of networks. For
simplicity we will focus on a standard fully connected architecture. We note that nevertheless the
ADL approach is quite flexible, and can be applied to various other network architectures.
√ This isd
however left for future investigation. Fix the instance space X to be the ball of radius d in R
(in particular [−1, 1]d ⊂ X ). Consider the class

ρ
Nr,R
(d0 , . . . , dt ) = Wt ◦ ρ ◦ Wt−1 ◦ ρ . . . ◦ ρ ◦ W1 : Wi ∈ Mdi−1 di kWi k ≤ r, kWi kF ≤ R
and more generally, for matrices Wi0 ∈ Mdi ,di−1 , i = 1, . . . , t consider

ρ
Nr,R
(W10 , . . . , Wt0 ) = Wt ◦ ρ ◦ Wt−1 ◦ ρ . . . ◦ ρ ◦ W1 : kWi − Wi0 k ≤ r, kWi − Wi0 kF ≤ R
Theorem 5.1. Fix a constants2 r > 0, t > 0 and a strongly bounded activation σ. Then, for every
choice of matrices Wi0 ∈ Mdi ,di−1 , i = 1, . . . , t with d := maxi di and maxi kWi0 k ≤ r we have that
ρ
(W10 , . . . , Wt0 ) is
the approximate description length of H = Nr,R

 


dR2 O logt (d) log(md), dR2 O logt+1 (d) = Õ dR2 , Õ dR2
In particular, if ` : Rdt × Y → R is bounded and Lipschitz w.r.t. k · k∞ , then for any distribution
D on X × Y
!
r
dR2
E repD (S, H) ≤ Õ
S∼Dm
m
Furthermore, with probability at least 1 − δ,
r
repD (S, H) . Õ

dR2
m

!

r
+O

ln (1/δ)
m

The above theorem shows that the sample complexity H is Õ



!

dR2
2



. We next show a corre-

ρ
sponding lower bound. This lower bound is valid already for the simple case of N1,R
(d, d, 1), where
ρ is the ReLU activation, and will match this aforementioned bound on the sample complexity up
to poly-log factor. However, it will be valid for a family of activations, that is not the family of
strongly-bounded activations, and therefore there is still certain discrepancy between our upper
and lower bounds. The lower bound will be given in the form of shattering.

Definition 5.2. Let H be a class of functions from a domain X to R. We say that H γ-shatters
a set A ⊂ X if for any B ⊂ A there is h ∈ H such that h|B ≥ γ while h|A\B ≤ −γ. The γ-fat
shattering dimension of H, denoted Fatγ (H), is the maximal cardinality of a strongly shaterred set.
We will also denote Fat := Fat1
2

The constant in the big-O notation will depend only on t, r and sigma.

17

It is well known that many losses of interest, such as the large margin loss, ramp loss, the logloss, the
of a class H is lower bounded
 loss, the 0-1 loss and others, the sample complexity
 hinge
√
Fat(H)
. The following theorem shows that for R ≤ d, and the ReLU activation ρ(x) =
by Ω
2


 2

ρ
max(0, x), Fat N1,R
(d, d, 1) = Ω̃ dR2 , implying that its sample complexity is Ω̃ dR
.
2
√
ρ
(d, R2 , 1)) =
Theorem 5.3. Let ρ the ReLU activation. Then, for any R ≤ d we have that Fat(N1,R


2
Ω logdR2 (d)

5.1

Proof of Theorem 5.1

We note that
ρ
ρ
ρ
Nr,R
(W10 , . . . , Wt0 ) = Nr,R
(Wt0 ) ◦ . . . ◦ Nr,R
(W10 )

The following lemma analyzes the cost, in terms of approximate description length, when moving
ρ
from a class H to Nr,R
(W 0 ) ◦ H.
Lemma 5.4. Let H be a class of functions from X to Rd1 with approximate description length
ρ
(Wt0 ) ◦ H
(ns (m), n(m)) and kh(x)k ≤ M for any x ∈ X and h ∈ H. Fix W 0 ∈ Md2 ,d1 . Then, Nr,R
has approximate description length of

ns (m) + n0 (m)B 2 log(md2 ), n0 (m)B 2 log(d2 )
for
n0 (m) = n(m)O(r2 + kW 0 k2 + 1) + O (d1 + M 2 )(R2 + 1) log(Rd1 d2 + 1)



The lemma is follows by combining lemmas 4.7, 4.8, 4.10 and 4.16.
√ We note that in the case
√
that d1 , d2 ≤ d, M = O( d1 ), B, r, kW 0 k = O(1) (and hence R = O
d ) and R ≥ 1 we get that
ρ
Nr,R
(W 0 ) ◦ H has approximate description length of


ns (m) + O (n(m) log(md)) , O (n(m) log(d)) + O d1 R2 log2 (d)
Theorem 5.1 now follows by simple induction.

6
6.1

Proof of theorem 5.3
Shattering with Quadratic Activation

In this section we will consider the fat shatering dimension of depth two networks with quadratic
activations. We will later use it as a building block for establishing lower bounds on the fat shatering
dimension of networks with other activations. Specifically, for k ≤ d and B > 0 let Qd,k,B be the
class of functions from the d-cube {±1}d to the reals given by
q(x) =

k
X

λi hui , xi2

i=1

Where u1 , . . . , uk are orthonormal, and maxi |λi | ≤ √Bk . We will show that there is a universal


dk
constant B > 0 for which Fat(Qd,k,B ) = Ω log(d)
. In fact, we will show a slightly stronger result,
that will be useful later in order to handle other activation functions. We will use the following
notion of shattering
18

Definition 6.1. We say that Qd,k,B nicely-shatters the set A ⊂ {±1}d if A is 1-shattered by the
sub-class
)
(
k
X
p
Qd,k,B (A) = q(x) =
λi hui , xi2 ∈ Qd,k,B : ∀x ∈ A, i ∈ [k], | hui , xi | ≤ 2 ln(20d|A|)
i=1

Theorem

 6.2. For a universal constant B > 0, Qd,k,B with k ≤ d nicely-shatters a set of size
dk
Ω log(d)
Denote by Hd,k the space of d×d symmetric matrices W such that Wi,j = 0 whenever min(i, j) ≥
k + 1. Denote by Ψk : {±1}d → Hd,k the mapping

 √ xi xj
min(i, j) ≤ k
k(2d−k)
(Ψk (x))ij =
0
otherwise
We say that a subset X of an inner product space H is γ-shattered by another subset F ⊂ H, if X
is γ-shattered by the function class {x 7→ hf , xi : f ∈ F }.
Lemma 6.3. Fix x1 , . . . , xD ∈ {±1}d . Suppose that Ψk (x1 ), . . . , Ψk (xD ) are 1-shaterred by
p
√
Q̃d,k,B (X) = {W ∈ Hd,k : kW k ≤ dB and |hu, xi i| ≤ kuk 2 ln(20dD) for any xi and eigenvector u of W }
Then, x1 , . . . , xD ∈ {±1}d are nicely shaterred by Qd,min(2k,d),√2B
√
Proof.
p Let h : [D] → {±1}. There is W ∈ Hd,k such that (1) kW k ≤ dB, (2) |hu, xi i| ≤
kuk 2 ln(20dD) for any i ∈ [D] and eigenvector u of W , and (3) h(i) hW, Ψk (xi )i ≥ 1 for any
i ∈ [D]. Let u1 , . . . , uk0 be normalized and orthonormal sequence of eigenvectors of W , that span
the space of spanned by the eigenvectors of W corresponding to non-zero eigenvalues. Such a
sequence exists since W is symmetric (and is unique, up to sign and order in case that W don’t
have eigenvalues of multiplicity > 1). Since W is of rank at most min(2k, d), k 0 ≤ min(2k, d).
√
√
√
P 0
0 ∈ [−B
Since kW k ≤ B d, there
are
scalars
λ̃
,
.
.
.
,
λ̃
d,
B
d] such that W = ki=1 λ̃i ui uTi .
1
k
i
h √
i
h
√
Let λi = √ λ̃i
∈ − √Bk , √Bk ⊂ − √2B0 , √2B0 . We will conclude the proof by showing that
k
k
k(2d−k)
Pk0
2
q(x) = hW, Ψk (x)i for the function q ∈ Qd,min(2k,d),√2B (X) given by q(x) =
i=1 λi hui , xi .
Indeed,
X
1
p
hW, Ψk (x)i
=
Wij xi xj
k(2d − k) min(i,j)≤k
=

d
X
1
p
Wij xi xj
k(2d − k) i,j=1

=

1
p
W, xxT
k(2d − k)

W ∈Hd,k

0

=

=

1

k
X

p
k(2d − k)

i=1

k0
X

λi hui , xi2

i=1

19

λ̃i ui uTi , xxT

Theorem 6.2 is therefore implied by the following theorem.
Theorem 6.4. For a universal constant B > 0, and any k ≤ d there is a choice of D = Ω



dk
log(d)



points x1 , . . . , xD for which Ψk (x1 ), . . . , Ψk (xD ) are 1-shattered by Q̃d,k,B (X)
The remaining part of this section is devoted to the proof of theorem 6.4. We will first show
a lemma that shows that any “large” subset W of an inner product space V shatters a contant
fraction of any collection of vectors that are “almost orthogonal”. Theorem 6.4 will then follow
dk
by showing that there are Ω log(d)
vectors x1 , . . . xD ∈ {±1}d such that Ψk (x1 ), . . . , Ψk (xD ) are
“almost orthonormal” in Hd,k , and that Q̃d,k,B (X) is a “large” subset of Hd,k
Let V be an inner product. We say that a sequence of unit vectors x1 , . . . , xD ∈ V is b-almostorthonormal if for any i ∈ [D], kPVi−1 xi k2 ≤ b, where Vi = span{xj }ij=1 (and PVi is the orthogonal
projection on Vi ). In this section we will prove the following lemma:
Lemma
There
are universal constants a, b > 0 for which the following holds. Let x1 , . . . , xD ∈

 6.5.
8
b2
V be 2 log(20D)
-almost-orthonormal and let W ⊂ V be a set of measure ≥ 10
according to the
standard Gaussian measure on V . Then W a-shatters a set of size Ω (D)
Theorem 6.4 therfore follows from the following two lemmas.
Lemma 6.6. Let V ⊂ Hd,K be a linear subspace of dimension D. Let X ∈ {±1}d be a uniform
vector. Then
k + 2D + 2
E kPV Ψk (X)k2 ≤
k(2d − k)
Note
thatthe lemma implies that there are D vectors x1 , . . . , xD ∈ {±1}d for which Ψk (x
1 ), . . . ,Ψk (xD )

dk
k+2D
are k(2d−k) -almost-orthonormal. In particular, for any constant b > 0, there are D = Ω log(d)


b2
-almost-orthonormal.
vecotrs x1 , . . . , xD ∈ {±1}d for which Ψk (x1 ), . . . , Ψk (xD ) are 2 log(20D)
Lemma 6.7. For large enough B > 0 and any choice of vectors x1 , . . . , xD ∈ {±1}d , the Gaussian
8
measure of Q̃d,k,B (X) is ≥ 10
P
Proof. (of lemma 6.6) We first assume that Ik := ki=1 Eii ∈ V . Here Eii is the matrix whose all
elements are 0 except the ii entry which is 1. Let E1 , . . √
. , ED be an orthonormal basis to V such
that E1 = √1k Ik . In particular, for all i > 1, tr(Ei ) = k hE1 , Ei i = 0. We note that for every
E ∈ Hd,k we have
h
i
E hΨk (X), Ei2 =
=
≤

h
i
1
2
E XX T , E
k(2d − k)
P
Pd
2
2
i6=j Eii Ejj + 2Eij +
i=1 Eii
k(2d − k)
+ 2kEk2F
k(2d − k)

tr2 (E)

20

Hence,
E kPV Ψk (X)k

2

=

D
X

E hΨk (X), Ei i2

i=1
D

≤

X
1
tr2 (Ei ) + 2kEi k2F
k(2d − k)
i=1

=
=

tr2 (E1 ) + 2D
k(2d − k)
k + 2D
k(2d − k)

In case that Ik ∈
/ V , let Ṽ be the linear span of V ∪ {Ik }. By what we have shown and the fact
that dim(Ṽ ) = D + 1 we have
E kPV Ψk (X)k2 ≤ E kPṼ Ψk (X)k2 =

k + 2D + 2
k(2d − k)

Proof. (of lemma 6.7. Sketch) Let W ∈ Hk,d be a standard Gaussian, and let u be the k’th
normalized eigenvector of W (with sign determined uniformly at random). It is not hard to
see that the distribution of u is invariant to any diagonal ±1 matrix U . It follows that given
(u21, . . . , u2d ), u1 x1 , . . . , ud xd are
 independent random variables, and Hoefdding’s bound implies that
p
1
Pr | hu, xi i | ≥ 2 ln(20dD) ≤ 10dD
. Via a union bound we conclude that the probability that
p
1
. The lemma fol| hu, xi i | ≥ 2 ln(20dD) for some i and normalized eigenvector u is at most 10
lows from that, together with the fact (e.g. Corollary 5.35 at [14]) that with probability at least
√
t2
1 − 2e− 2 , kW k ≤ 2d + t
To prove lemma 6.5 we will use Steele’s generalization [12] of the VC dimension and SauerShelah lemma
Definition 6.8. Let H ⊂ Y X . A set A ⊂ X is shattered if H|A = Y A . The dimension of H,
denoted dim(H), is the maximal cardinality of a shattered set.
Pdim(H) |X|
|X|−i
Lemma 6.9 ([12]). For any H ⊂ Y X , |H| ≤ i=0
i (|Y | − 1)
In the sequel we denote for vectors v, x in an


1
hv,a (x) := ∗


−1

inner product space V and a ∈ R,
hv, xi ≥ a
−a < hv, xi < a
hv, xi ≤ −a

Lemma 6.10. Let a > 0 be the scalar such that PrX∼N (0,1) (X ∈ (−a, a)) = 13 . Let b > 0 small
enough such that for any µ ∈ [−b, b] and σ 2 ∈ [1 − b2 , 1]


1
max
Pr
(X ≤ −a) ,
Pr
(X ≥ a) ,
Pr
(−a < X < a) , ≤ + 0
2
2
2
3
X∼N (µ,σ )
X∼N (µ,σ )
X∼N (µ,σ )

21

Fix unit vectors x1 , . . . , xD ∈ V such that for any k ∈ [D], kPVk−1 xk k2 ≤
span{xi }ki=1 .

b2
2 ln(20D) ,

where Vk =

Fix also h : [D] → {−1, 1, ∗} and a standard Gaussian w ∈ V . Then,



Pr ∀i ∈ [D], hw,a (xi ) = h(i) and w, PVi−1 xi

2

≤ PVi−1 xi

Proof. Let Ak be the event
n
Ak = w : ∀i ∈ [k], hw,a (xi ) = h(i) and w, PVi−1 xi

2

D
 1
+ 0
2 ln(20D) ≤
3

2

≤ PVi−1 xi

2

o
2 ln(20D)

Since Ak ⊂ Ak−1 ,
Pr(Ak ) = Pr(Ak |Ak−1 ) Pr(Ak−1 )
Hence,
Pr (AD ) =

D
Y

Pr(Ak |Ak−1 )

k=1

It is therefore enough to show that Pr(Ak |Ak−1 ) ≤ 13 + 0 .
To see this, write w = w1 + w2 + w3 where w1 , w2 , w3 are independent standard Gaussians
on Vk−1 , the orthogonal complement of Vk−1 in Vk and Vk⊥ . Note that w ∈ Ak−1 if and only if
w1 ∈ Ak−1 . It holds that given that w1 ∈ Ak−1 , w ∈ Ak only if
hw, xk i = hw1 , xk i + hw2 , xk i ∈ Ih(k) , where I−1 = (−∞, −a], I1 = [a, ∞) and I∗ = (−a, a)
Now, given w1 ∈ Ak−1 , hw, xk i = hw1 , xk i + hw2 , xk i is a Gaussian of variance σ 2 = 1 −
kPVk−1 xk k2 ≥ 1 − b2 and mean µ = hw1 , xk i = PVk−1 w, xk = w, PVk−1 xk whose absolute
value satisfies
p
|µ| ≤ PVk−1 xk
2 ln(20D) ≤ b
It therefore follows that the probability that W, xk xTk ∈ Ih(k) is bounded by
Proof. (of lemma 6.5) Let a, b be as in lemma 6.10 with 0 =
Gaussian measure on V . Define
W̃ = W ∩ {w : ∀i ∈ [D], w, PVi−1 xi

2

1
9

1
3

+ 0 .

and denote by µ the standard

≤ PVi−1 xi

2

2 ln(20D)}

t2

Since PrX∼N (0,1) (|X| ≥ t) ≤ 2e 2 we have

µ(W̃) ≥ µ(W) − µ W : ∃i ∈ [D], w, PVi−1 xi

2

> PVi−1 xi

2


7
2 ln(20D) ≥
10

We will show that W a-shatters a set of size Ω (D). Let H = {hw,a : w ∈ W̃ }. For any h : [D] →
D
{−1, 1, ∗} define W̃h = {w ∈ W̃ : hw,a = h}. By lemma 6.10, µ(W̃h ) ≤ 94 . On the other hand
X
h∈H

µ(W̃h ) =

X

µ(W̃h ) = µ(W̃) ≥

h:[D]→{−1,1,∗}

It follows that
7
|H| ≥
10
22

 D
9
4

7
10

On the other hand, by Steele’s lemma 6.9
D



|H| ≤ 2

D
≤ dim(H)

Hence


eD
dim(H)


≤2

dim(H)

D



eD
dim(H)

dim(H)

 D
9
8

7
≥
10

It follows that
dim(H) = Ω (D)

6.2

Shattering with other Activations

Definition 6.11. We say that an activation ρ : R → R is nice. If there is a constant C > 0 and a
distribution µ on [−2, 2] × [−C, C] such that for any x ∈ [−1, 1] it holds that E(a,b)∼µ bρ(x − a) = x2
Lemma 6.12. The ReLU activation ρ(x) = max(0, x) is nice.
Proof. We first claim that if f : R → R is smooth and compactly supported then f = f 00 ∗ σ.
Indeed,
Z ∞
00
f 00 (t)ρ(x − t)dt
(f ∗ ρ)(x) =
−∞
∞

Z
=
=

00

Z

x−t

f (t)

ρ0 (τ )dτ dt

−∞
−∞
Z ∞ Z x−t
00

f (t)ρ0 (τ )dτ dt

−∞ −∞
∞ Z x−τ

Z
=

−∞
∞

−∞

Z
=

f 00 (t)ρ0 (τ )dtdτ

0

Z

x−τ

σ (τ )

f 00 (t)dtdτ

−∞
−∞
∞ Z x−τ
00

Z
=

f (t)dtdτ

−∞

0

Z

∞

=
Z0 x

f 0 (x − τ )dτ
f 0 (τ )dτ

=
−∞

= f (x)
Now, let f : R → R be a function that is smooth, coincides with x2 on [−1, 1] and supported in
[−2, 2]. For any x ∈ [−1, 1] we have
Z ∞
Z ∞


|f 00 (a)|
2
00
00
x = f (x) = f ∗ ρ (x) =
ρ(x − a)f (a)da =
kf 00 k1 sign(f (a)) ρ(x − a) 00 da
kf k1
−∞
−∞
The lemma thus holds for the distribution µ of the random variable (a, (kf 00 k1 sign(f (a)))) where
00
a is sampled according to the density function |fkf 00(a)|
k1
23

Theorem 5.3 now follows from the following theorem.
Theorem 6.13. Let ρ be a nice activation. Then, for any R ≤


2
Ω logdR2 (d)

√
ρ
d we have that Fat(N1,R
(d, R2 , 1)) =

Proof. In the proof we will allow neurons to have bias terms. This can be standardly eliminated by
d
adding constant
 dimensions to shattered vectors. Fix k ≤ d and let A = {x1 , . . . , xD } ⊂ {±1} be
dk
D = Θ log(d)
vectors that are nicely shattered by Qd,k,B for the universal constant B from theorem
ρ
6.2. We will show that x1 , . . . , xD are 1-shattered by NO(1),O(R)
(d, O(k log(d)), 1). By simple scaling


ρ
dk
R2
. Choosing k = log(d)
arguments it follows that N1,R
(d, k log(d), 1) shatters a set of size Θ log(d)
will establish the theorem.
ρ
Fix g : A → {±1} it is enough to show that there is f ∈ NO(1),O(R)
(d, O(k log(d)), 1) such that

∀x ∈ A, f (x)g(x) ≥ 1

(1)

Since A is nicely
shattered
by Qd,k,B there are orthogonal unit vectors u1 , . . . , uk and numbers
h
i
B
B
λ1 , . . . , λk ∈ − √k , √k such that
∀x ∈ A, f (x)q(x) ≥ 1 for q(x) =

k
X

λi hui , xi2

i=1

and
∀i ∈ [k] and x ∈ A, |hui , xi| ≤

p
2 ln(20dD)

We will create a random network with nk hidden neurons, p
where n will be determined later. Denote
by U ∈ Mkd the matrix whose i’s row is ui , and let L := 2 ln(20dD). The hidden weight matrix
(without the biases) will be


U 



1 
 U 
 .  n times
L  .. 



U
To generate the biases and the output weights we will sample nk independent pairs {(ai,j , bi,j )}1≤i≤k,1≤j≤n
from the distribution µ on [−2, 2] × [−C, C] that satisfies E(a,b)∼µ bρ(x − a) = x2 for any x ∈ [−1, 1].
The bias of the (i(k − 1) + j)’th neuron will be −ai,j , and the corresponding output weight will be
2λi bi,j L
. The network will then calculate the function
n


n X
k
X
2λi bi,j L
hui , xi
fa,b (x) =
ρ
− ai,j
n
L
j=1 i=1

Now, we have that for any x ∈ A,
 E fa,b(x) = 2g(x). Likewise, fa,b (x) is a sum of nk independent

√
random variables, bounded by O log(d)
. Using Hoeffding’s bound and union bound, we can choose
n k
n = O(log(d)) so that with positive probability ∀x ∈ A, |fa,b (x) − 2q(x)| < 1, implying the (1)
holds. Finally, the spectral norm of the hidden weight matrix is
r
n
= O(1)
2 ln(20dD)

24

Hence, since the rank is at most kn, the Frobenius norm is
√ 
p

O
kn = O
k log(d)
As for the output weights, the squared norm is
n
n
k
k
L2 X X 2 2
L2 X X O(1)
= O(1)
λ
b
≤
i ij
n2
n2
k
j=1 i=1

j=1 i=1

ρ
This implies that fa,b ∈ NO(1),O(R)
(d, O(k log(d)), 1)

7

Future Work

As we elaborate next our work leaves many open directions for further research. First, we used
ADL in order to analyze the sample complexity of fully connected neural networks. We believe
however that our approach is quite flexible and can be used to analyze the sample complexity of
many other classes of functions. Natural candidates are convolutional and residual networks, as
well as magnitude bounds in terms of of norms other than the spectral and Euclidean norm. We
also believe that ADL can be useful beyond supervised learning, and can be used to analyze the
sample complexity of sub-space learning (such as PCA and dictionary learning), clustering, and
more. In even more generality, it is interesting to explore the scope ADL in analyzing sample
complexity. Is ADL a “complete” framework? That is, does learnability implies low ADL?
Second, our current analysis leaves much to be desired. There are many poly-log factors in our
bounds, the activation is required to be strongly bounded (and in particular, the ReLU activation
is not captured), the loss function should be bounded, it is not clear whether the use of seeds in
necessary, etc. Getting over these shortcomings is left for future work, which will hopefully lead to
a cleaner theory.
√
Lastly, we note that our lower bound, theorem 5.3, requires that R ≤ d. We believe that this
requirement in unnecessary, and the lower bound should hold for much larger R’s.

Acknowledgements
The authors acknowledge Kunal Talwar for many discussions in early stages of this work. The
authors also acknowledge Haim Kaplan, Aryeh Kontorovich, and Yoram Singer for many useful
comments.

References
[1] Martin Anthony and Peter Bartlet. Neural Network Learning: Theoretical Foundations. Cambridge University Press, 1999.
[2] Sanjeev Arora, Rong Ge, Behnam Neyshabur, and Yi Zhang. Stronger generalization bounds
for deep nets via a compression approach. In ICML, 2018.
[3] P. L. Bartlett and S. Mendelson. Rademacher and Gaussian complexities: Risk bounds and
structural results. Journal of Machine Learning Research, 3:463–482, 2002.

25

[4] Peter L Bartlett, Dylan J Foster, and Matus J Telgarsky. Spectrally-normalized margin bounds
for neural networks. In Advances in Neural Information Processing Systems, pages 6240–6249,
2017.
[5] Noah Golowich, Alexander Rakhlin, and Ohad Shamir. Size-independent sample complexity
of neural networks. In COLT, 2018.
[6] Vaishnavh Nagarajan and J Zico Kolter. Generalization in deep networks: The role of distance
from initialization. arXiv preprint arXiv:1901.01672, 2019.
[7] Behnam Neyshabur, Ryota Tomioka, and Nathan Srebro. Norm-based capacity control in
neural networks. In Conference on Learning Theory, pages 1376–1401, 2015.
[8] Behnam Neyshabur, Srinadh Bhojanapalli, and Nathan Srebro. A pac-bayesian approach to
spectrally-normalized margin bounds for neural networks. In ICLR, 2018.
[9] Behnam Neyshabur, Zhiyuan Li, Srinadh Bhojanapalli, Yann LeCun, and Nathan Srebro. The
role of over-parametrization in generalization of neural networks. In ICLR, 2019.
[10] R.E. Schapire, Y. Freund, P. Bartlett, and W.S. Lee. Boosting the margin: A new explanation
for the effectiveness of voting methods. In Machine Learning: Proceedings of the Fourteenth
International Conference, pages 322–330, 1997. To appear, The Annals of Statistics.
[11] Shai Shalev-Shwartz and Shai Ben-David. Understanding machine learning: From theory to
algorithms. Cambridge university press, 2014.
[12] J Michael Steele. Existence of submatrices with all possible columns. Journal of Combinatorial
Theory, Series A, 24(1):84–88, 1978.
[13] Ilya Sutskever, James Martens, George Dahl, and Geoffrey Hinton. On the importance of initialization and momentum in deep learning. In International conference on machine learning,
pages 1139–1147, 2013.
[14] Roman Vershynin. Introduction to the non-asymptotic analysis of random matrices. arXiv
preprint arXiv:1011.3027, 2010.

26

