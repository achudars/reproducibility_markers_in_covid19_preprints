Optimizing vaccine distribution networks in low and middle-income
countries
Yuwen Yang, Hoda Bidkhori, Jayant Rajgopal*
Department of Industrial Engineering
University of Pittsburgh
Pittsburgh, PA 15261

*Corresponding author:
1032 Benedum Hall, Department of Industrial Engineering, University of Pittsburgh, Pittsburgh, PA 15261 (rajgopal@pitt.edu)

Optimizing vaccine distribution networks in low and middle-income
countries
Abstract
Vaccination has been proven to be the most effective method to prevent infectious diseases.
However, there are still millions of children in low and middle-income countries who are not
covered by routine vaccines and remain at risk. The World Health Organization – Expanded
Programme on Immunization (WHO-EPI) was designed to provide universal childhood vaccine
access for children across the world and in this work, we address the design of the distribution
network for WHO-EPI vaccines. In particular, we formulate the network design problem as a
mixed integer program (MIP) and present a new algorithm for typical problems that are too large
to be solved using commercial MIP software. We test the algorithm using data derived from four
different countries in sub-Saharan Africa and show that the algorithm is able to obtain high-quality
solutions for even the largest problems within a few minutes.

Keywords: Vaccines, Network design, Supply chains, Mixed integer programming

1

1. Introduction
Vaccination has been proven to be the most effective method to prevent illness, disability and
death from infections. It is estimated that 2 to 3 million deaths are averted each year because of
vaccines [1] and over the years, significant levels of coverage have been achieved. However, it is
estimated that an additional 1.5 million deaths could be avoided annually if global vaccination
coverage could improve further, and that even in the 21st century there are still almost 20 million
infants worldwide who lack access to routine immunization services and remain at risk for vaccinepreventable diseases [2]. This problem is especially pronounced in low and middle-income
countries (LMICs), where some of the contributors to the problem include high costs, competing
health priorities, lack of resources, inadequate infrastructure, poor monitoring and supervision,
rigid distribution structures, and even religious reasons [3–5].
The World Health Organization (WHO) established the Expanded Programme on
Immunization (EPI) in 1974 with the goal of providing universal access to all important vaccines
for all children [6]. The program was further expanded with the formation of the Global Alliance
for Vaccines and Immunization (Gavi) in 2000 to accelerate access to new vaccines in the poorest
countries. EPI and Gavi together have successful contributed to saving millions of lives worldwide
by reducing mortality and even largely eliminating some diseases like polio and measles [7,8].
With the help of international organizations and new technological developments, many
vaccines can now be obtained at low cost and in mass quantities. However, shipping, storing and
delivering vaccines in a cost-efficient fashion while ensuring that vaccines are reliably available
to end-users remains a major challenge. In particular, in many LMICs vaccines are usually
distributed via a hierarchical legacy medical network, with locations and shipping routes of this
network often determined by political boundaries and history. The overarching goal is to ensure
that every child has access to vaccines, and along with this, in most LMICs the objective is to
design a system that can be operated without the need for sophisticated logistics personnel and at
minimum cost.
This fact motivates our study to propose an improved vaccine distribution network. As an
alternative to the current structure, the network for vaccine distribution could be separated from
the current legacy health network, while using some appropriate subset of these facilities and with
2

vaccine flows along routes that differ from the current ones. However, the operation of the network
must not deviate from established WHO guidelines and needs to be simple because of the relative
lack of sophisticated vaccine management abilities in LMICs.
In this paper we develop a mixed integer programming (MIP) model that optimizes the design
of the distribution network. The model allows for a more appropriate design than current networks
while following the WHO guidelines for operational simplicity. The resulting formulation for a
national network is too large to solve optimally using standard commercial software and we
develop a novel algorithm that solves a sequence of increasingly larger MIP problems. To maintain
tractability, the approach uses insights into the problem structure and principles from cluster
analysis to limit the size of each MIP in the sequence. In order to study the performance of the
algorithm, numerical tests using data derived from several different countries in sub-Saharan
Africa are conducted. Comparisons with the optimal solution when one is available indicate that
the algorithm works very well with solution times that scale up in a roughly linear fashion.

2. Problem development and literature review
In most LMICs, vaccines are distributed via a four-tier hierarchical legacy medical network such
as the one depicted in Figure 1. Typically, EPI vaccines are purchased in bulk and shipped in by
air once or twice a year, then stored in a national distribution center in the capital (or other large
city). Required vaccine volumes are transported every three months to regional distribution centers
using a specialized vehicle such as a large cold truck. Each regional distribution center delivers
vaccines to its surrounding district centers every month using a smaller cold truck or more
commonly, 44 trucks with cold storage boxes. Finally, the vaccines are transported from district
centers in a vaccine carrier/cooler using locally available means of transportation such as trucks,
cars, motorbikes, bicycles, boats, or sometimes even by foot, to local clinics where infants,
children and pregnant women come to receive vaccinations. This last step is typically, a “pull”
operation with monthly pickup by the clinic. A characteristic of EPI vaccines is that they must be
stored/transported while maintaining appropriate temperatures (2 to 8C), so that this vaccine
distribution chain is often referred to as being a cold chain.

3

N

C

National

R

R

R

D

D

D

D

D

District

C

C

C

C

C

C

Regional

Clinic

Figure 1. A typical tour-tier vaccine distribution network

To develop an optimal vaccine distribution network design and operational policies for a
country that also follow WHO guidelines, we separate this from the existing legacy medical supply
chain of which it is typically a component, and model the cold chain independently. Our objective
is to minimize the overall cost of transportation, facilities and storage over the whole network,
while guaranteeing universal access and following WHO operational guidelines. In the model,
vaccines flow from the national center (source node) to clinics (sink nodes), usually via one or
more intermediate hubs (transshipment nodes). Although multiple (usually 6 to 8) vaccines are
handled in the cold chain, transportation and storage capacities are only affected by the overall
space required. Therefore, we only consider the total volume of vaccines shipped or stored. Hub
locations are chosen from the current locations of legacy intermediate nodes (regional or district
center), and while we retain the choices of monthly or quarterly replenishments as per WHO
guidelines, we allow a hub to freely select either option. The model determines the clinics assigned
to each hub, the national center-to-hub and hub-to-hub connections, the actual vaccine flows on
these connections, and the types of storage and transportation devices to be deployed at each
location and for each flow.
We make the following assumptions to model the EPI vaccine network:
1)

The network should be capable of meeting all demand that can arise at each clinic, and this
demand is determined by the estimated population that the particular clinic serves.

2)

The locations of the clinics and the national distribution center are fixed but we can choose
hub distribution centers freely from the current set of regional and district centers.
4

3)

Each clinic is assigned to a hub for its vaccines (although clinics close to the national center
could be directly supplied by it) and replenished once a month. Each hub is supplied by the
national center or by another hub.

4)

The national center is the root node of the network and all other nodes (hubs and clinics) have
exactly one inbound arc.

5)

As per WHO guidelines, a hub is replenished either quarterly or monthly.

6)

Every open facility has an appropriately sized storage device, to be selected from the WHO’s
pre-qualified list of devices.

7)

As per WHO guidelines, there is a 25% safety buffer at each clinic location so that the total
demand volume is inflated by this factor.
We now discuss these assumptions briefly. First, universal access is the goal of the WHO and

our model’s constraints explicitly capture this. Second, our model is based on using the existing
facilities for hubs as opposed to building new ones. Third, in most LMICs, operational simplicity
is a driving requirement because resources are very constrained and it can be a challenge to find
qualified logisticians and trained personnel who can deal with multiple suppliers and different
types of equipment. We therefore retain the current approach of restricting each facility location
to having a single supplier, and a single type of storage device that is selected from the WHO’s
pre-qualified list [9]. Finally, for the same reason of operational ease, we do not attempt to
determine optimal safety buffers at clinics or reorder points by location; hub locations are restricted
to one of two replenishment intervals (monthly or quarterly) and all clinics have the same 25%
buffer inventory levels as per WHO guidelines.
Several variations of this class of network design problems have been addressed by the
operations research community, including the p-median problem, the uncapacitated and
capacitated facility location problems [10–12], and extensions to include transportation cost [13].
The facility location problem is often combined with the vehicle routing problem and typically
using heuristics [14]. It has also been extended with consideration of risk pooling [15] and facility
failures [16], with Lagrangian relaxation being a common solution strategy [17]. Klose and Drexl
[18] reviewed several facility location models for distribution system design.
As an extension to these facility location problems, the hub selection problem considers the
situation where one or more nodes are designated as facilities that serve as consolidation, switching
5

or transshipment points and connect to origin/destination nodes. It has received attention in
applications ranging from airlines and emergency services to intermodal logistics and postal
delivery services. Interested readers are referred to the surveys on hub location problems presented
in [19,20]. Models for these problems address a variety of objectives and combinations of various
problem environments [19]. These include the domain of the hub nodes (all network nodes,
discrete subset or anywhere along a continuous plane), the number of nodes to be designated as
hubs (pre-specified vs. unspecified), hub capacity (limited vs. unlimited), cost of locating hubs
(none, fixed or variable), allocation of non-hub nodes to hubs (single vs. multiple) and allocation
costs (none, fixed or variable). In particular, our formulation chooses an unspecified number of
hubs from a discrete subset of capacitated hub locations that incur fixed costs, and each non-hub
locations is assigned to a single hub with allocation costs that are exogenous to the model. In
studying the literature for exact algorithms to find the optimum solution to models similar to ours
(capacitated, single allocation, p-hubs; albeit with differing objectives), approaches include bicriteria integer linear programming [21], mixed integer programming [22,23], generalized
Benders’ decomposition [24], and fuzzy integer linear programming [25]. The largest problem size
solved is reported as having “up to 10,000 integer variables” [24]. Given the limits to the size of
the problems that can be solved optimally, many others have resorted either to metaheuristics [26],
heuristics based on Lagrangean relaxation or Benders’ decomposition [27,28] or heuristics
designed for specific formulations [29].
A unique aspect of our model is that replenishment frequencies as well as capacities at hubs
and for transportation along arcs are limited to multiple discrete options. This greatly increases the
number of binary variables to well over 10,000 even for medium sized problems, and while most
of the prior work looks at under 20 hubs, our formulation for an entire country has a number of
hubs as well as a total number of binary variables that are an order of magnitude higher. Thus,
solving full-country problems using an exact approach is not a viable option. Results from our
initial experiments with using Lagrangean relaxation were also not encouraging. Therefore, we
develop a heuristic approach that is designed for the application domain and the specific class of
problems that we study. These and related computational issues are discussed in detail in Sections
3 and 4.

6

In terms of work specific to vaccine distribution networks, Chen et al. [30] were the first
to model the network in 2014 as a planning model to maximize the number of children being fully
immunized under current network capacity; they then extended it to the case where capacity
expansion is allowed. However, this work addresses operations in an existing network as opposed
to its design. In 2016, Lim [31] proposed a model to design a minimum cost vaccine distribution
network, and utilized an evolutionary strategy to solve this problem. His model assumes that
deliveries to hubs are coordinated and done using vehicle loops and fixes the storage devices; thus
multiple trips might have to be made along a route if the volume cannot be handled in a single trip.
In Section 2.1 we present a mixed integer programming model that draws on the initial work
by Lim [31] but allows for flexibility in replenishment, allows storage devices to be selected in the
required size, does not require delivery coordination during replenishment and ensures that all
deliveries to a node are made in a single trip as is typically the case in practice. We also develop a
mathematical programming based heuristic to address larger problems that cannot be solved via
standard commercial software.
2.1 Formulation
We now develop our model formulation.
Index sets:
𝑵: National Distribution Center ={0}
𝑯: Potential Hub Distribution Centers = {1, 2… 𝒉}
𝑪: Local Clinics = {𝒉+1… 𝒏}, where 𝒏 = |𝑯| + |𝑪|
𝑽: Vertices: 𝑵 ∪ 𝑯 ∪ 𝑪
𝑨: Arcs:(𝒊, 𝒋)|𝒊 ∈ 𝑵 ∪ 𝑯, 𝒋 ∈ 𝑯 ∪ 𝑪; 𝒊 ≠ 𝒋
𝑻: Transportation Vehicles
𝑹: Storage Devices
𝑭: Replenishment Frequency: {Quarterly (=0), Monthly (=1)}
Parameters:
𝑃
𝑐𝑖𝑗𝑡
: Transportation cost per km of vehicle type 𝑡 between locations 𝑖 and 𝑗 ; (𝑖, 𝑗) ∈ 𝐴; 𝑡 ∈ 𝑇
𝑆
𝑐𝑗𝑟
: Annual facility cost when facility j is open and uses storage device 𝑟; 𝑟 ∈ 𝑅

𝑝𝑡𝑃 : Transportation capacity per trip of vehicle 𝑡; 𝑡 ∈ 𝑇
7

𝑝𝑟𝑆 : Storage capacity of device 𝑟; 𝑟 ∈ 𝑅
𝑔𝑓 : Annual number of replenishments; 𝑓 ∈ 𝐹 (𝑔𝑓 = 4 if f = 0; 𝑔𝑓 = 12 if f = 1)
𝑑𝑖𝑗 : Driving distance (km) between location 𝑖 and location 𝑗; (𝑖, 𝑗) ∈ 𝐴
𝑏𝑗 : Annual demand volume at location 𝑗, 𝑗 ∈ 𝐶

Variables:
𝑈𝑖𝑗𝑡𝑓 ∈ {0,1}: 1 if vaccines flow from location 𝑖 to location 𝑗 using vehicle type 𝑡 ∈ 𝑇 and with
replenishment frequency 𝑓 ∈ 𝐹, 0 otherwise; 𝑖 ∈ 𝑁 ∪ 𝐻, 𝑗 ∈ 𝐻 ∪ 𝐶
𝑊𝑖𝑟𝑓 ∈ {0,1}: 1 if hub location 𝑖 ∈ 𝐻 is open and uses storage device of type 𝑟 ∈ 𝑅 and
replenishment frequency 𝑓 ∈ 𝐹, 0 otherwise
𝑋𝑖𝑗 : Annual flow (volume) of vaccines from location 𝑖 to location 𝑗; 𝑖 ∈ 𝑁 ∪ 𝐻, 𝑗 ∈ 𝐻 ∪ 𝐶
The mixed integer program for designing the optimal network may then be formulated as
follows:
Program MIP-1
𝑆
𝑃
𝑀𝑖𝑛 ∑ ∑ ∑ 𝑐𝑗𝑟
𝑊𝑗𝑟𝑓 + ∑ ∑ ∑ 2𝑐𝑖𝑗𝑡
𝑔𝑓 𝑑𝑖𝑗 𝑈𝑖𝑗𝑡𝑓
𝑗∈𝐻 𝑟∈𝑅 𝑓∈𝐹

(1)

(𝑖,𝑗)∈𝐴 𝑡∈𝑇 𝑓∈𝐹

𝑠𝑢𝑏𝑗𝑒𝑐𝑡 𝑡𝑜
∑ ∑ 𝑊𝑗𝑟𝑓 ≤ 1
𝑟∈𝑅 𝑓∈𝐹

∑ ∑ 𝑈𝑖𝑗𝑡1 = 1

𝑗∈𝐻

(2)

𝑗∈𝐶

(3)

𝑗∈𝐻

(4)

𝑗 ∈ 𝐻, 𝑓 ∈ 𝐹

(5)

𝑗∈𝐻

(6)

𝑗∈𝐶

(7)

𝑖∈𝑁∪𝐻 𝑡∈𝑇

∑ ∑ ∑ 𝑈𝑖𝑗𝑡𝑓 ≤ 1
𝑖∈𝑁∪𝐻 𝑡∈𝑇 𝑓∈𝐹

∑ 𝑊𝑗𝑟𝑓 − ∑ ∑ 𝑈𝑖𝑗𝑡𝑓 = 0
𝑟∈𝑅

𝑖∈𝑁∪𝐻 𝑡∈𝑇

∑ 𝑋𝑖𝑗 − ∑ 𝑋𝑗𝑘 = 0
𝑖∈𝑁∪𝐻

𝑘∈𝐻∪𝐶

∑ 𝑋𝑖𝑗 = 𝑏𝑗
𝑖∈𝑁∪𝐻

8

∑ ∑ 𝑝𝑟𝑆 𝑊𝑗𝑟𝑓 − (1/𝑔𝑓 ) ∑ 𝑋𝑖𝑗 ≥ 0

𝑗∈𝐻

(8)

𝑖 ∈ 𝑁 ∪ 𝐻, 𝑗 ∈ 𝐻 ∪ 𝐶

(9)

𝑖 ∈ 𝑁 ∪ 𝐻, 𝑗 ∈ 𝐻 ∪ 𝐶

(10)

𝑊𝑗𝑟𝑓 ∈ {0, 1}

𝑗 ∈ 𝐻, 𝑟 ∈ 𝑅, 𝑓 ∈ 𝐹

(11)

𝑈𝑖𝑗𝑡𝑓 ∈ {0, 1}

𝑖 ∈ 𝑁 ∪ 𝐻, 𝑗 ∈ 𝐻 ∪ 𝐶, 𝑡 ∈ 𝑇, 𝑓 ∈ 𝐹

(12)

𝑟∈𝑅 𝑓∈𝐹

𝑖∈𝑁∪𝐻

∑ ∑ 𝑝𝑡𝑃 𝑈𝑖𝑗𝑡𝑓 − (1/𝑔𝑓 )𝑋𝑖𝑗 ≥ 0
𝑡∈𝑇 𝑓∈𝐹

𝑋𝑖𝑗 ≥ 0

The objective function (1) has two components: annual hub facility costs and total annual
round-trip transportation costs. Constraints (2) ensure that every open hub 𝑗 has a single
replenishment frequency and a single type of storage device, while constraints (3) ensure that each
clinic has exactly one inflow and a monthly replenishment frequency. Constraints (4) ensure that
each hub has at most one inflow with unique associated replenishment frequency and transport
device. Constraints (5) ensure there is no flow associated with a hub that is not open and constraints
(6) and (7) are standard flow balance equations at hubs and clinics. Constraints (8) ensure that in
each hub there is a sufficiently large storage device to store the vaccines required within each
replenishment interval. Finally, constraints (9) ensure that a transportation mode with sufficient
capacity is selected to carry the required volume of vaccines for replenishment.
2.2 Limitations with solving MIP-1
To explore the solution of the model described by MIP-1 we tested it with a standard commercial
solver using data derived from the EPI networks in four different countries in sub-Saharan Africa;
specifics on the data, as well as the hardware and software used are discussed in Section 4, where
we describe our numerical experiments in full detail.
Unfortunately, none of the models for these countries could be directly solved using off-theshelf commercial software. To further explore the limits of the problem size that could be solved
using a standard solver we also experimented with subsets of the data from each country. That is,
we considered successively larger problems: first, with the national center along with a single
region (based on how a region is currently defined in the country), then problems with a
combination of two regions, three regions, etc. In general, the difficulty associated with a particular
problem depends on several factors including the total number of nodes and potential hubs in the
9

problem, as well as the population distribution, transportation cost, and storage cost across the
network. Unfortunately, despite extensive computational experimentation it was impossible to
pinpoint the limiting characteristics of a tractable problem or establish any clear monotonicity,
because of the interrelationships between the problem parameters. Our numerical tests are
discussed in more detail in Section 4, but as a general rule of thumb, we found that most problems
with over 200 to 250 nodes and over 15 to 20 potential hubs are impossible to solve directly. Given
that in the network for an entire country these limits are almost always exceeded, there is clearly
a need for good algorithm if one aims to design an optimal network for the country.
A key fact that makes MIP-1 hard to solve is that the model has a large number of 0-1 decision
variables. For example, if we can choose from three types of transport vehicles and four types of
storage devices (i.e., {T|=3, |R|=4), Table 1 illustrates the number of decision variables in MIP-1.
Thus, in order to solve the full problem for one our instances with 685 nodes and 41 candidate
hubs, we end up with 168,838 integer variables. Even for a typical 100-node, mid-sized problem
with 15 candidate hubs, the number of binary decision variables is close to 10,000.
Table 1. Number of decision variables in MIP for a problem with n nodes and h potential hubs
Decision Variables

𝑊𝑗𝑟𝑓

𝑈𝑖𝑗𝑡𝑓

𝑋𝑖𝑗

Type

Integer

Integer

Continuous

Number

8ℎ

6ℎ𝑛

ℎ𝑛

In the next section, we propose a sequential MIP-based disaggregation-and-merging algorithm
that divides the problem on the entire graph for the distribution network into several subproblems
on smaller subgraphs that can be solved with relative ease. The algorithm then intelligently merges
the subgraphs together sequentially to obtain a solution to the whole graph. We present numerical
comparisons in Section 4 and show that the algorithm is able to yield good solutions for even the
largest problems.

3. A disaggregation-and-merging algorithm
Our algorithm is motivated by the observation that in a large network, the optimal subnetwork
structures in regions that are relatively far apart will tend to be independent of each other. For
10

example, the characteristics of a local clinic are unlikely to have any influence on the network
structure in locations that are far away, and if a hub is added or removed at some distant location
it is unlikely to affect the clinic’s supply. The same is also true of a hub that is distant from some
other hub whose disposition is changed. Therefore, for larger problems we propose a divide-andconquer approach where we first divide the whole network into portions that each yield smaller
problems that can be solved independently with relative ease. We then systematically merge these
smaller problems and solve a sequence of increasingly larger problems. Each of these is formulated
using MIP-1, but with the key difference that parts of the structure are fixed based on the optimal
solutions to the smaller problems as well as the spatial relationship between the current subnetwork
and the new portion being added on. To clarify our approach, we first provide an overview of the
method and then provide all of the details.
We start by dividing the entire network into 𝑃 smaller subnetworks. One could always use
existing political boundaries as a natural disaggregation of the network, i.e., each region or
province or state of the country is an “independent” network; larger existing regions could be split
into smaller ones. Alternatively, we could apply a clustering algorithm to determine them.
Although the average cluster size will be smaller as we form more clusters, the number of clusters
that would give us problems that are small enough to yield a tractable version of MIP-1 is problem
dependent, so that it is difficult to prescribe a general value for 𝑃 in advance. We therefore chose
to use hierarchical clustering rather than a simpler method such as K-means clustering, whereby
we can continue to disaggregate the network until each region is small enough for a standard MIP
solver to handle; the interested reader is referred to [32] for more details on hierarchical clustering.
Once the independent regions are created we start with the one contains the national center
and optimize its structure via MIP-1 to obtain an initial subnetwork. We now pick a neighboring
region to merge with this subnetwork, formulate MIP-1 for the combined set of nodes and solve
this (larger) consolidated problem to get a new subnetwork structure with both regions. This
process continues until all of the independent regions have been merged into our network. While
we will specify details on how each step is executed, the critical thing to note is that at each
successive iteration we handle a larger collection of nodes, and therefore have to solve a larger
problem. Clearly, the effort required at each stage has to be reasonable; otherwise we are defeating
the purpose of the original disaggregation! To ensure that this is the case, we refer to our initial
11

observations on the motivation for this approach, and at each iteration we fix a portion of the
current subnetwork, so that we are only using variables associated with a subset of all the nodes
corresponding to the current iteration’s network. This is done by retaining the locally optimal
structure for portions of the subnetwork while allowing for changes in others. In addition, we also
use a “shrinking” scheme whereby some of the nodes are aggregated and replaced by a single
dummy node so as to further reduce the size of the problem being solved.
New region
Potential hub

(d)
(e)
(a)

(b)

(c)

Current subnetwork
Closed hub
Open hub

National Center

Figure 2. Hub classification during consolidation

To decide upon how to fix parts of the structure at each iteration, we classify all hubs for the
current network into three categories. We overview these categories here using the example shown
in Figure 2; more mathematically precise definitions are provided when the algorithm is detailed.
The lower part of Figure 2 shows the subnetwork we currently have. The seven solid squares
represent open hubs while the empty squares denote potential hub locations that were not selected
for opening. The dashed lines within the area covered by this subnetwork divide it into eight
discrete sections corresponding to the national center and the seven open hubs, and clinics within
each section (not shown) are supplied by the corresponding open hub (or national center). Note
that some open hubs are supplied directly by the national center while others receive their vaccines
from some other open hub. The upper portion of Figure 2 represents the new, neighboring region
12

that we wish to merge with the current subnetwork, along with five potential hub locations within
it.
•

The first category, which we call Critical Hubs, are hub locations “close to” the boundary
between the current subnetwork and the new region being merged. The dispositions of these
hubs are likelier to change after merger; currently open hubs might close and vice-versa. Clinic
assignments to a hub might also change as new hubs might be introduced at geographically
proximal locations. In our illustration, nodes (a), (d) and (e) might be critical hubs.

•

The second category, which we call Intermediate Hubs, are hub locations in the existing
subnetwork that are in some sense “in between” the national center and hubs in the new region
that is being merged with the existing subnetwork (e.g., hubs labeled (a), (b) and (c) in Figure
2). Since they are en route from the center to a possible hub in the new region, such hubs could
potentially serve as intermediate transshipment points (while continuing to serve their current
clinics if they are currently open). Thus their storage requirements could be larger after
merging and/or their replenishment frequencies could possibly change.

•

The third category of hub locations, which we call Non-critical Hubs can be considered as
“independent” during merger. These are locations that are not near the common boundaries or
en route to a potential new hub and we fix their dispositions (open or closed); for the open
hubs, their clinic assignments, hub-to-hub connections, storage devices, transportation routes
and frequencies are also fixed. In Figure 2 all non-labeled nodes might be non-critical hubs.
Lastly, we overview the process to sequence regions for merger. Once an initial set of regions

is formed, we first apply MIP-1 just to the nodes in a region along with the national center, and
solve a sub-problem for each region to obtain a locally optimal structure for each. At each iteration,
we will choose the region for merger as one with minimum cluster distance between it and some
region that has already been merged into the consolidated network. Here, we define the cluster
distance as the minimum distance between two points that are in different clusters; we found this
worked best among the common measures of cluster distance.
We are now ready to outline the steps in our algorithm.
3.1 Algorithm 1
STEP 1: Disaggregation
13

Consider the directed graph 𝐺 of nodes indexed in V and arcs indexed in A. Divide the set of
potential hubs 𝐻 into 𝑃 mutually exclusive subsets 𝐻1 , 𝐻2 , ..., 𝐻𝑃 using a clustering algorithm
or heuristically. If using a clustering algorithm, to determine whether a cluster of potential
hubs indexed in 𝐻𝑝 is small enough, define set 𝐶𝑝 to be the set of clinics whose closest hub
nodes are in 𝐻𝑝 and define set 𝑄𝑝 =𝐻𝑝 ∪ 𝐶𝑝 ∪ {0} as the complete node set of the region
defined by hub nodes in cluster 𝐻𝑝 . While there is no obvious way to prescribe the value of 𝑃
in advance, it is important for the number of nodes in each set 𝑄𝑝 to be small enough that
MIP-1 on the subgraph generated by nodes in this set is readily solved. Therefore, define a
suitable number 𝑀 (we suggest a value under 200 based upon our computational experiments)
and check whether |𝑄𝑝 | ≤ 𝑀 for all 𝑝; if not, further divide the corresponding cluster 𝐻𝑝 ,
again by using existing political boundaries (such as districts within the region), a clustering
algorithm, or heuristically based on the distribution of nodes within the cluster. Continue until
the number of nodes in each of 𝐻1 , 𝐻2 , ..., 𝐻𝑃 is no larger than 𝑀. Note that depending on the
demographic characteristics, the number of nodes in each cluster 𝐻𝑝 could be quite different.
Define 𝐻′ as the set of potential hubs that are currently not merged into the consolidated
network; thus, at the end of the STEP 1, 𝐻 ′ = 𝐻 = {𝐻1 , 𝐻2 , ..., 𝐻𝑃 }.
STEP 2: Sub-problem solution and initialization
Consider the subgraph 𝐺[𝑄𝑝 ] that is induced by nodes in 𝑄𝑝 . For each 𝑝 {1,2,… 𝑃 }
formulate and solve MIP-1 on subgraph 𝐺[𝑄𝑝 ] to meet demand optimally at all clinic
locations in set 𝑄𝑝 .
Denoting the cluster distance (i.e., distance of the nearest pair of nodes in different clusters)
between clusters 𝐻𝑝 and 𝐻𝑞 as 𝐷(𝐻𝑝 , 𝐻𝑞 ), compute
𝑝∗ ∈ 𝐴𝑟𝑔𝑚𝑖𝑛𝑝∈1,2,…,𝑃 𝐷(𝐻𝑝 , 𝑁)
where cluster 𝑁 = {0} is an artificial cluster with just the national center in it. Thus cluster 𝐻𝑝
has the smallest cluster distance to {0}.
To start the iterative process set 𝑘 = 0, define 𝐼 0 = 𝑄𝑝∗ = 𝐻𝑝 ∪ 𝐶𝑝 ∪ {0} as the index set of
all nodes in the initial subnetwork, with corresponding subgraph 𝐺 0 = 𝐺[𝐼 0 ].
Update 𝐻′ ← 𝐻′\{𝐻𝑝∗ }.
14

STEP 3: Subset Selection
Set 𝑘 = 𝑘 + 1 and compute 𝑝∗ ∈ 𝐴𝑟𝑔𝑚𝑖𝑛𝑝|𝐻𝑝 ∈𝐻 ′ {𝐷(𝐻𝑞 , 𝐻𝑝 )|𝐻𝑞 ∉ 𝐻′}
Here 𝑞 and 𝑝 correspond respectively, to clusters that have and have not yet been merged into
the consolidated network, and among the clusters not yet merged 𝑝∗ has the smallest cluster
distance to a cluster that has already been merged. Define 𝐼 𝑘 = 𝐻𝑝∗ ∪ 𝐶𝑝∗ ∪ 𝐼 𝑘−1 as the
complete node set for the consolidated network at iteration 𝑘. Define the graph 𝐺 𝑘 = 𝐺[𝐼 𝑘 ]
and update 𝐻′ ← 𝐻′\{𝐻𝑝∗ }.
STEP 4: Classification
Compute 𝑑𝑚𝑎𝑥 = 𝑀𝑎𝑥𝑖,𝑗∈𝐻𝑝∗ 𝑑𝑖𝑗 . That is, 𝑑𝑚𝑎𝑥 is the largest distance between any pair of
locations within the new cluster of potential hubs that was just merged. Let 𝐶𝑜𝑛𝑣𝑝∗ be the
convex hull of {0} and all hub nodes in 𝐻𝑝∗ : 𝐶𝑜𝑛𝑣𝑝∗ = 𝐶𝑜𝑛𝑣(𝐻𝑝∗ {0}), and define a positive
real number 𝛼 ∈ (0,1). Classify the hubs in 𝐼 𝑘 into three categories as follow:
a. Critical Hubs (𝐻 𝐶 ): Identify all pairs of nodes (𝑖, 𝑗), such that 𝑖𝐼 𝑘−1 ∩ 𝐻 and 𝑗𝐻𝑝∗ ,
with 𝑑𝑖𝑗 < 𝛼𝑑𝑚𝑎𝑥 , and define 𝑖 and 𝑗 as critical hubs. That is, we consider all potential
hub pairs with one from the previous consolidated region and one from the new region,
and define the two as being critical if they are separated by less than some fraction of
the maximum distance between two hub locations in the region being merged. Larger
values for 𝛼 result in more hubs being identified as critical so that the structure of the
consolidated network is more flexible, but the associated model formulation is also
more difficult to solve. Conversely, when 𝛼 is smaller, the consolidated problem is
easier to solve but a larger portion of the network is fixed. Based upon computational
experiments we suggest a value for 𝛼 between 0.1 and 0.3.
b. Intermediate Hubs ( 𝐻 𝐼 ): Define 𝑖 as an intermediate hub if 𝑖(𝐼 𝑘−1 ∩ 𝐻) ∋ 𝑖 ∉
𝐻 𝐶 , 𝑖𝐶𝑜𝑛𝑣𝑝∗ . That is, these are hub locations (open or closed) in the previous
consolidated region that also lie within the convex cone containing the national center
and all potential hubs in the new region.
c. Non-critical Hubs (𝐻 𝑁 ): Defined as hubs in 𝐼 𝑘 ∩ 𝐻 that do not belong to 𝐻 𝐶 or 𝐻 𝐼 .
STEP 5: Reduced form of MIP-1
15

In this step we add constraints to MIP-1 based upon our classification of hubs:
a. Critical Hubs (𝐻 𝐶 ): Since the disposition of such a hub is more likely to change during
consolidation, we impose no further restrictions on these.
b. Intermediate Hubs (𝐻 𝐼 ): For every intermediate hub, add constraints that maintain the
same clinic assignments that it had in the solution (if it was open), i.e., for 𝑗𝐻 𝐼 add:
∗
∑ ∑ 𝑊𝑗𝑟𝑓 = ∑ ∑ 𝑤𝑗𝑟𝑓
𝑟∈𝑅 𝑓∈𝐹

(13)

𝑟∈𝑅 𝑓∈𝐹

and for all 𝑖𝐶, 𝑡𝑇
𝑋𝑗𝑖 = 𝑥𝑗𝑖∗

(14)

∗
𝑈𝑗𝑖𝑡1 = 𝑢𝑗𝑖𝑡1

(15)

∗
∗
where 𝑢𝑗𝑖𝑡𝑓
, 𝑥𝑗𝑖∗ , and 𝑤𝑗𝑟𝑓
are from the solution to the MIP defined on 𝐺[𝐼 𝑘−1 ]. Here (13)

ensures that open intermediate hubs remain open and closed ones remain closed. Note that
since such a hub can potentially supply other hubs, the required capacity of its own storage
device and of the inbound transport device might increase, and the replenishment
frequency at the hub might also change. Constraints (14) and (15) ensure the same flow
into a clinic with the same device and replenishment frequency.
c. Non-critical Hubs (𝐻 𝑁 ): Add constraints for each open hub 𝑗𝐻 𝑁 to fix replenishment
frequency, storage device, inbound and outbound volumes and vehicle types, and clinic
assignment to be the same as they are in the solution to (i) the MIP defined on 𝐺[𝐼 𝑘−1 ] if
𝑗 ∈ 𝐼 𝑘−1 ∩ 𝐻 , or (ii) MIP-1 defined on 𝐺[𝑄𝑗 ∗ ] if 𝑗 ∈ 𝐻𝑗 ∗ and ensure that closed hubs
remain closed. That is, for 𝑗𝐻 𝑁 , 𝑖𝐶, 𝑙𝑁 ∪ 𝐻 , 𝑟𝑅, 𝑡𝑇, 𝑓𝐹, add:
𝑋𝑗𝑖 = 𝑥𝑗𝑖∗

(16)

∗
𝑈𝑗𝑖𝑡1 = 𝑢𝑗𝑖𝑡1

(17)

∗
𝑊𝑗𝑟𝑓 = 𝑤𝑗𝑟𝑓

(18)

∗
𝑋𝑙𝑗 = 𝑥𝑙𝑗

(19)

∗
𝑈𝑙𝑗𝑡𝑓 = 𝑢𝑙𝑗𝑡𝑓

(20)

∗
∗
∗
∗
where 𝑤𝑗𝑟𝑓
, 𝑥𝑗𝑖∗ , 𝑢𝑗𝑖𝑡𝑓
, 𝑥𝑙𝑗
, 𝑢𝑙𝑗𝑡𝑓
are values obtained from the solution to the MIP

defined on 𝐺[𝐼 𝑘−1 ] if 𝑗 ∈ 𝐼 𝑘−1 ∩ 𝐻, or the MIP on 𝐺[𝑄𝑗∗ ] if 𝑗 ∈ 𝐻𝑗 ∗ .
16

Note that (18) maintains the open/closed status of a hub, (16) and (17) maintain the
same flow into and the same transport device and replenishment frequency for each clinic
served by a hub, while (19) and (20) do the same for the inbound flow into the hub (note that
this last feature is different than with intermediate hubs).
STEP 6: Consolidation
With the constraints added in STEP 5, solve the MIP defined on subgraph 𝐺[𝐼 𝑘 ]. If 𝐻′ = ,
we have merged all hubs; stop and return the solution. Otherwise, delete all new constraints
added in STEP 5, return to STEP 3 to add a new region, and repeat the process at the next
iteration.
3.2 A refinement to Algorithm 1
In STEP 5, there could potentially be hundreds of constraints added at each iteration. We can
further manipulate the formulation at this step to obtain the same outcome but with fewer nodes in
the graph. Instead of directly formulating the MIP on 𝐺[𝐼 𝑘 ] with the constraints added in STEP 5,
we could use information previously obtained from the solutions to problems defined on 𝐺[𝐼 𝑘−1 ]
and 𝐺[𝑄𝑝∗ ] in order to restrict the problem size. Consider an open intermediate or non-critical hub
𝑗 that will be restricted to remain open at the next iteration along with the same clinic assignments.
To reduce the number of nodes (and hence, the number of binary variables) we could collapse all
clinics associated with the hub into a single dummy clinic 𝑚 with a demand equal to the sum of
the demands at these clinics, locate it at the same location as the hub (so that 𝑑𝑗𝑚 = 0) and assign
it to hub 𝑗. This ensures that the outflows to clinics served by 𝑗 are the same, so that the solution
to the new problem will be the same as the one to the MIP on 𝐺[𝐼 𝑘 ]. The only difference is that in
the modified problem the total transportation cost to the clinics served by 𝑗 is zero; however, we
can simply add the true cost to the final value obtained by the new MIP.
More formally, consider a hub 𝑗𝐻 𝐼 ∪ 𝐻 𝑁 that is open in the solution to the MIP on 𝐺[𝐼 𝑘−1 ]
or MIP-1 on 𝐺[𝑄𝑝∗ ]. Define a dummy clinic 𝑚 with demand 𝐷𝑗𝑇 equal to the total demand across
all clinics served by hub 𝑗 in this solution.
∗
𝐷𝑗𝑇 = ∑ ∑ 𝑏𝑖 𝑢𝑗𝑖𝑡1

(21)

𝑖∈𝑐 𝑡∈𝑇

17

Also, define the new index set 𝐶 − by removing from set 𝐶 the indices of all of the clinics
serviced by hub 𝑗. Then we have the following proposition.
PROPOSITION 1: Given that hub 𝑗𝐻 𝐼 𝐻 𝑁 is open in the solution to 𝐺[𝐼 𝑘−1 ] or 𝐺[𝑄𝑝∗ ], MIP1 with the additional constraints (14) and (15) for all 𝑖𝐶, 𝑡𝑇 is equivalent to MIP-1 with the
following three additional constraints:
𝑋𝑗𝑚 = 𝐷𝑗𝑇

(22)

∑ 𝑈𝑗𝑚𝑡1 = 1

(23)

𝑡∈𝑇

∑ ∑ 𝑈𝑗𝑙𝑡1 = 0

(24)

𝑙∈𝐶 − 𝑡∈𝑇

Proof: See Appendix A.
By using Proposition 1, for every open intermediate or non-critical hub, we could replace the
{ |𝐶| + |𝐶| × |𝑇|} constraints in (14) and (15) with the 3 constraints in (22), (23) and (24).
Similarly, we could replace {|𝑇| × |𝐶|} binary variables associated with selecting devices used to
send vaccines from the hub to all of its clinics, with |𝑇| binary variable associated with the dummy
clinic at the hub and |𝑇| × |𝐶 − | binary variables associated with each of the clinics not
consolidated into the dummy. This results in a reduction of {|𝑇| × (|𝐶| − |𝐶 − | − 1)} in the
number of binary variables. As a direct consequence of Proposition 1, we have the following:
PROPOSITION 2: For any hub 𝑗𝐻 𝐼 that is open in the solution to 𝐺[𝐼 𝑘−1 ], MIP-1 with the
constraints added in STEP 5(b) is equivalent to MIP-1 with constraints given by (22), (23) and
(24) along with (13).
PROPOSITION 3: For any hub 𝑗𝐻 𝑁 that is open in the solution to 𝐺[𝐼 𝑘−1 ] or 𝐺[𝑄𝑝∗ ], MIP-1
with the constraints added in STEP 5(c) is equivalent to MIP-1 with constraints given by (22),
(23) and (24), along with the constraints (18), (19) and (20) for 𝑙𝑁 ∪ 𝐻, 𝑟𝑅, 𝑡𝑇, 𝑓𝐹.
Note that if we use Propositions 2 and 3 to solve the modified formulation (as opposed to the
one in STEP 5), we will need to add to the final objective value the following outbound
transportation cost (𝐶𝑗𝑃 ) for each hub 𝑗 that has its clinics consolidated:
𝑃
∗
𝐶𝑗𝑃 = ∑ ∑ 2𝑐𝑗𝑖𝑡
𝑔1 𝑑𝑗𝑖 𝑢𝑗𝑖𝑡1

(25)

𝑖∈𝐶 𝑡∈𝑇

Based on the preceding discussion, we have the following refined Algorithm 1*:
18

STEPS 1* to 4*: Identical to STEPS 1 to 4 in Algorithm 1.
STEP 5*: Shrinkage
As in STEP 5, we first formulate MIP-1 for 𝐺[𝐼 𝑘 ] but then add constraints and operations
based on the category of the hub as follows:
a. Critical Hubs (𝐻 𝐶 ): No additional action or restrictions.
b. Intermediate Hubs (𝐻 𝐼 ): If hub 𝑗 ∈ 𝐻 𝐼 is open in the solution to 𝐺[𝐼 𝑘−1 ], delete all clinics
assigned to that hub, add a dummy clinic 𝑚 with demand 𝐷𝑗𝑇 computed via (21), and add
the constraints given by (13), (22), (23) and (24) for that hub.
On the other hand, if hub 𝑗 is closed in the corresponding solution, add constraints to keep
the hub closed:
∑ ∑ 𝑊𝑗𝑟𝑓 = 0
𝑟∈𝑅 𝑓∈𝐹

c. Non-critical Hubs (𝐻 𝑁 ): if a hub 𝑗𝐻 𝑁 is open in the solution to the problem on 𝐺[𝐼 𝑘−1 ]
or 𝐺[𝑄𝑝∗ ], delete all clinics assigned to that hub, add a dummy clinic 𝑚 with demand 𝐷𝑗𝑇
computed via (21), and add the constraints given by (18), (19), (20), (22), (23) and (24)
for that hub.
If hub 𝑗 is closed, add constraints to keep the hub closed:
∑ ∑ 𝑊𝑗𝑟𝑓 = 0
𝑟∈𝑅 𝑓∈𝐹

STEP 6*: Consolidation
Identical to STEP 6 except that we use (25) to add the total cost of additional transportation
∗
(𝐶𝑇𝑜𝑡𝑎𝑙
) to the optimal value to account for the clinics deleted and consolidated in STEP 5*:
∗
𝐶𝑇𝑜𝑡𝑎𝑙
= ∑ 𝐶𝑗𝑃 + ∑ 𝐶𝑗𝑃
𝑗∈𝐻 𝐼

𝑗∈𝐻 𝑁

19

4. Numerical experiments
We tested Algorithm 1* as well as a standard commercial solver on a suite of 43 different problems
that are derived from the EPI networks in four different countries in sub-Saharan Africa. Due to
data confidentiality issues, we denote these as Countries A, B, C and D. Several geographic and
demographic characteristics of these four countries are shown in Table 2; for areas and population
densities we have normalized the largest values to 1.0 and expressed the other values as respective
fractions of these. As one can observe, there are significant differences in these. Countries A and
B are relatively large but the population densities are relatively low. Most of the population in
Country A is concentrated in a few regions with the remainder being sparsely distributed over the
rest of the country in remote desert areas). In contrast, Countries C and D are smaller in area but
densely populated and have many more existing vaccination facilities per km2 of land.
Table 2. Characteristics
Country

A

B

C

D

Area (103 km2)

0.99

1.00

0.09

0.45

Population density [33]
(per km2)
No. of potential hubs (h)

0.17

0.12

1.00

0.88

41

60

87

141

Total no. of nodes (n+1)

685

933

746

2875

We summarize detailed information on facilities, storage, transportation devices and vaccines
in Tables 3 through 6 in Appendix B. Note that each country may have different transportation and
storage devices to choose from and there can be significant differences in costs as well. For the
problem instances that we considered, it happened that |T|=3 and |R|=4, although there were
differences in the specific transport/storage device options in each country as shown in Tables 4
and 5. There are also minor differences in the EPI vaccine regimens within the countries. To obtain
the total demand volume at each clinic we first estimate the number of newborns it must serve by
multiplying the estimated population in the area served by the clinic and the corresponding national
birth rate published by the World Bank. This is then multiplied by the number of required doses

20

and the volume of each dose for each vaccine in the regimen, and adjusted upward to account for
anticipated open-vial waste. Finally, the volumes are added across all vaccines.
We tested the algorithm using a computer with an Intel Core i5-6500 CPU and 3.20 GHz
processor with 8.0 GB memory. For solving MIP-1 directly we used IBM ILOG CPLEX 12.6.
Since none of the complete problems for any of the four countries could be directly solved, we
started with smaller subproblems and worked on successively larger ones based on how a region
is currently defined in the country. Detailed results for each of the four countries studied may be
found in Tables 7 through 10 in Appendix C. Each entry in a table corresponds to a problem over
a region, part of a region, or a set of regions in the corresponding country. The last row in each
table denotes the problem with the full set of nodes across all regions of the country. We summarize
the number of potential hubs, the total number of nodes, total number of binary variables and a
characterization of the population density associated with each instance, in order to illustrate the
diversity of the problems that we formulated. For the problems whose optimal solutions could be
obtained via CPLEX, we report the percentage gap between the optimum cost and the objective
value for the solution returned by Algorithm 1*. For a design problem such as this, computational
times are obviously less relevant than being able to solve the problem; nevertheless, as a matter of
reference we also list the solution times for MIP-1 using the commercial software (when an
optimum solution is available) and for the solution found by Algorithm 1*.
As the tables show, the number of nodes, potential hubs, and binary variables in the largest
problem that CPLEX could solve directly vary with each country. While problem size is certainly
a factor, the geographical and population characteristics of the underlying network for a problem
also play a role in determining whether it can be solved optimally. Based on extensive testing, it
is our conclusion that (with a few exceptions) direct solution of MIP-1 using commercial software
is feasible only in problems with fewer than approximately 200 nodes and 15 potential hubs, which
is much smaller than the full network for almost all countries.
While the results indicate that the ability (and the effort) required to solve a problem optimally
depends on the combination of factors listed in the tables, there is no systematic relationship with
any one specific factor that could be established. However, as might be expected, the total number
of binary variables seems significant. To further interpret the results we label our test problems as
“large” or “small” using a cutoff of 20,000 binary variables. This leads to a total of 24 small and
21

19 large instances (including the full problem for each country) in our test set; the distribution of
these labels for each country was different and depended on the specific characteristics of that
country. The results show that while all the small instances could be solved optimally, MIP-1
corresponding to 15 of the 19 large instances could not be solved to optimality. In particular,
countries C and D which have denser populations with more nodes per unit area proved harder to
handle. Even for the instances that could be solved to optimality, the required effort can be
inconsistent. For example, there are a couple of small instances (instances 8, 9 for Country A) that
took a long time to solve, and while three of the four large instances that could be solved yielded
solutions in reasonable times, one (instance 11, Country A) took over a week to solve. This was
also the largest problem that we were able to solve to optimality. Also, in the case of the problems
that could not be solved, there was no pattern to the integrality gap when the solver failed.
On the other hand, the disaggregation-and-merging approach of Algorithm 1* was robust and
able to generate solutions for every problem that we formulated (and in well under about 5 minutes
in almost all cases; even the largest problem that we tested, with over 2 million variables, took
only approximately 12 minutes). In the 28 instances where the optimal solution was available for
comparison, Tables 7-10 show that Algorithm 1* also converged to the optimal solution in 22
instances while finding a solution with a cost within 0.5% of the optimum value for five of the six
remaining instances; our cost for the largest problem that could be solved optimally was 0.69%
higher than the optimal cost. Moreover, even though the demographic characteristics also have an
effect, Figure 3 shows that the computational effort appears to be approximately linear in the
number of binary variables (the data point for the full Country D problem with over 2 million
binary variables is omitted in the graph to maintain a better visual scale; the effort for this problem
is actually proportionately smaller).

22

500
450
400

CPU seconds

350

300
250
200
150
100
50
0
0

100

200

300

400

500

600

700

800

900

Binary Variables (x1000)
Figure 3: Computational times with Algorithm 1 *

With the 15 problems for which the optimal solutions to MIP-1 are not available there was no
way to compute the cost difference between the solution from Algorithm 1* and the optimum
value. We could visually verify that the network structures generated were reasonable in all
instances, and while there is no guarantee that they are optimal, they are certainly better than
anything that could be derived by inspection or ad hoc methods. One comparison that we can do
is to compare the current cost for the entire country against that of the solution generated by our
algorithm (the last row in each of Tables 7-10), since this is an existing network. To compute the
country-wide costs for the current structure, we used the same unit costs for facilities, transport
and storage as those used in our numerical tests. The results are shown in Table 11 in Appendix
C. Note that the total costs in both cases include identical operational costs for the national center
as well as the clinics. The difference is that for the existing structure we have operational costs for
regional and district centers and transportation costs from the national center to regions, regions to
districts, and districts to clinics; while in our case, we have operational costs for the selected hubs
and transport costs into the hubs and from the hubs to clinics (as captured by cost expression (1)
in the formulation). Also note that we do not consider all the costs associated with the existing
network in the comparison; rather we compare only the storage and transport costs currently
incurred for EPI vaccines, with the corresponding costs in the redesigned network. The results
23

indicate that even though we do not have a guarantee of optimality our distribution network
produces overall savings ranging from approximately 6% to 27% for the four countries studied.

5. Summary and directions for future work
The WHO-EPI vaccine distribution network is of critical importance in low and middle-income
countries, and designing it optimally can be of significant economic and social benefit to these
countries. In this paper we present a general MIP formulation of the design problem that is
applicable to any country. While this problem can be solved optimally when the network is small,
it rapidly becomes intractable as the problem size grows and a different solution approach is
needed to address the problem for an entire country. We present a novel MIP-based
disaggregation-and-merging algorithm that is based on the simple observation that changes to the
structure in a part of the network are unlikely to have a significant effect on the structure in other
parts that are far away. The algorithm thus uses a divide-and-conquer approach to intelligently
generate and solve a sequence of MIPs. Extensive tests based on real-world data derived from four
different countries in sub-Saharan Africa show that it yields solutions that are optimal or within
0.5% of the best cost where optimality can be verified, and for large instances that are impossible
to solve optimally, it is uniformly robust and yields good solutions in a few minutes.
There are several directions for future work. First, a possible limitation of our approach is the
fact that it is designed for problems where it is reasonable to assume that structures for subnetworks
that are physically distant will tend to be independent of each other. While this is generally true if
costs are uniform, it might not be true in other networks. For example, it might be appropriate to
locate the hub serving a portion of the network at a location that is far away if the associated costs
there are significantly lower. It would be interesting to see what degradation is obtained in the
results when our approach is applied to such networks. Second, one could consider and model
uncertainty, which could be associated with both demand and supply. Finally, a related direction
would be to develop more sophisticated vaccine inventory management policies than the current
practice of using an across-the-board buffer of 25% with a fixed monthly/quarterly replenishment
interval. From an implementation standpoint though, the challenge here is twofold. First, to
quantify and evaluate stochasticity we would need much more data than is currently available.
24

Second, from a personnel standpoint, it would require far more sophistication in vaccine inventory
management than is currently available in most LMICs.

Acknowledgement
This work was partially supported by the National Science Foundation via Award No. CMII1536430.

Bibliography
[1]

World
Health
Organization.
Immunization
http://www.who.int/topics/immunization/en/ (accessed November 25, 2019).

2019.

[2]

World Health Organization. Immunization coverage 2018. http://www.who.int/newsroom/fact-sheets/detail/immunization-coverage (accessed November 25, 2019).

[3]

Gavi.
Gavi
Progress
Reports.
Glob
Vaccine
Alliance
2017.
https://www.gavi.org/library/publications/gavi-progress-reports/gavi-progress-report2017/ .

[4]

Yadav P, Lydon P, Oswald J, Dicko M, Zaffran M. Integration of vaccine supply chains
with other health commodity supply chains: A framework for decision making. Vaccine
2014;32:6725–32. https://doi.org/10.1016/j.vaccine.2014.10.001.

[5]

Zaffran M. Vaccine transport and storage: environmental challenges. Dev Biol Stand
1996;87:9—17.

[6]

Bland J, Clements CJ. Protecting the world’s children: the story of WHO’s immunization
programme. World Heal. forum 1998; 19, 1998, p. 162–73.

[7]

Gavi. Our impact. Gavi, the Vaccine Alliance n.d. https://www.gavi.org/programmes-andimpact/our-impact (accessed November 25, 2019).

[8]

World Health Organization. The Expanded Programme on Immunization 2013.
http://www.who.int/immunization/programmes_systems/supply_chain/benefits_of_immun
ization/en/ (accessed November 25, 2019).

[9]

World Health Organization. Prequalified Devices and Equipment n.d.
http://apps.who.int/immunization_standards/vaccine_quality/pqs_catalogue/categorylist.as
px?cat_type=device.

[10]

Şahin G, Süral H. A review of hierarchical facility location models. Comput Oper Res
2007;34:2310–31. https://doi.org/10.1016/j.cor.2005.09.005.

[11]

Melo MT, Nickel S, Saldanha-da-Gama F. Facility location and supply chain management
25

- A review. Eur J Oper Res 2009;196:401–12. https://doi.org/10.1016/j.ejor.2008.05.007.
[12]

Mirchandani PB. The p-median problem and generalizations. In: Mirchandani P, Francis R,
editors. Discret. Locat. Theory, New York: John Wiley and Sons Inc; 1990, p. 55–117.

[13]

Geoffrion A. M., Graves G. W. Multicommodity Distribution System Design by Benders
Decomposition. Manage Sci 1974;20:822–44.

[14]

Wu TH, Low C, Bai JW. Heuristic solutions to multi-depot location-routing problems.
Comput Oper Res 2002;29:1393–415. https://doi.org/10.1016/S0305-0548(01)00038-7.

[15]

Shen ZM, Coullard C, Daskin MS. A Joint Location-Inventory Model. Transp Sci
2003;37:1–121.

[16]

Snyder L V., Daskin MS. Reliability models for facility location: The expected failure cost
case. Transp Sci 2005;39:400–16. https://doi.org/10.1287/trsc.1040.0107.

[17]

Daskin MS, Snyder L V., Berger RT. Facility location in supply chain design. In: Langevin
A, Riopel D, editors. Logist. Syst. Des. Optim., Springer US; 2005, p. 39–65.
https://doi.org/10.1007/0-387-24977-X_2.

[18]

Klose A, Drexl A. Facility location models for distribution system design. Eur J Oper Res
2005;162:4–29. https://doi.org/10.1016/j.ejor.2003.10.031.

[19]

Farahani RZ, Hekmatfar M, Arabani AB, Nikbakhsh E. Hub location problems: A review
of models, classification, solution techniques, and applications. Comput Ind Eng
2013;64:1096–109. https://doi.org/10.1016/j.cie.2013.01.012.

[20]

Campbell JF, O’Kelly ME. Twenty-five years of hub location research. Transp Sci
2012;46:153–69. https://doi.org/10.1287/trsc.1120.0410.

[21]

da Graça Costa M, Captivo ME, Clímaco J. Capacitated single allocation hub location
problem-A
bi-criteria
approach.
Comput
Oper
Res
2008;35:3671–95.
https://doi.org/10.1016/j.cor.2007.04.005.

[22]

Correia I, Nickel S, Saldanha-da-Gama F. Single-assignment hub location problems with
multiple capacity levels. Transp Res Part B Methodol 2010;44:1047–66.
https://doi.org/10.1016/j.trb.2009.12.016.

[23]

Kratica J, Milanović M, Stanimirović Z, Tošić D. An evolutionary-based approach for
solving a capacitated hub location problem. Appl. Soft Comput. J., vol. 11, 2011, p. 1858–
66. https://doi.org/10.1016/j.asoc.2010.05.035.

[24]

De Camargo RS, Miranda G. Single allocation hub location problem under congestion:
Network owner and user perspectives. Expert Syst Appl 2012;39:3385–91.
https://doi.org/10.1016/j.eswa.2011.09.026.

[25]

Taghipourian F, Mahdavi I, Mahdavi-Amiri N, Makui A. A fuzzy programming approach
for dynamic virtual hub location problem. Appl Math Model 2012;36:3257–70.
26

https://doi.org/10.1016/j.apm.2011.10.016.
[26]

Ernst AT, Krishnamoorthy M. Solution algorithms for the capacitated single allocation hub
location
problem.
Ann
Oper
Res
1999;86:141–59.
https://doi.org/10.1023/A:1018994432663.

[27]

Contreras I, Díaz JA, Fernández E. Lagrangean relaxation for the capacitated hub location
problem
with
single
assignment.
OR
Spectr
2009;31:483–505.
https://doi.org/10.1007/s00291-008-0159-y.

[28]

De Camargo RS, De Miranda G, Ferreira RPM. A hybrid Outer-Approximation/Benders
Decomposition algorithm for the single allocation hub location problem under congestion.
Oper Res Lett 2011;39:329–37. https://doi.org/10.1016/j.orl.2011.06.015.

[29]

Chen JF. A heuristic for the capacitated single allocation hub location problem. Lect. Notes
Electr. Eng., vol. 5 LNEE, 2008, p. 185–96. https://doi.org/10.1007/978-0-387-749051_14.

[30]

Chen SI, Norman BA, Rajgopal J, Assi TM, Lee BY, Brown ST. A planning model for the
WHO-EPI vaccine distribution network in developing countries. IIE Trans (Institute Ind
Eng 2014;46:853–65. https://doi.org/10.1080/0740817X.2013.813094.

[31]

Lim J. Improving the design and operation of WHO-EPI vaccine distribution networks.
University of Pittsburgh, 2016.

[32]

Charu C. Aggarwal JH. Data Mining: The Textbook. Springer Int Publ 2015:746.
https://doi.org/10.1007/978-3-319-14142-8.

[33]

United
Nations.
World
Population
Prospects
https://population.un.org/wpp/DataQuery/ (accessed November 26, 2019).

2017.

27

Appendix A: Proof of Proposition 1
Since hub 𝑗 is open in the solution to 𝐺[𝐼 𝑘−1 ] or 𝐺[𝑄𝑗∗ ], we have

∑ ∑ 𝑊𝑗𝑟𝑓 = 1.
𝑟∈𝑅 𝑓∈𝐹

First, suppose that for this 𝑗 and all 𝑖𝑪, 𝑡𝑻 we add the constraints given by (14) and (15). This
is equivalent to partially fixing the network structure. Specifically, we fix the clinic assignments
for hub 𝑗. With constraint (7) we have for all 𝑖𝑪 that are served by hub 𝑗
𝑋𝑗𝑖 = 𝑥𝑗𝑖∗ = 𝑏𝑖 .
Therefore, the total volume that goes out of hub 𝑗 and goes into all of its clinics is also fixed:
∗
∑ 𝑋𝑗𝑖 = ∑ 𝑋𝑗𝑖 ∑ 𝑈𝑗𝑖𝑡1 = ∑ ∑ 𝑋𝑗𝑖 𝑈𝑗𝑖𝑡1 = ∑ ∑ 𝑏𝑖 𝑢𝑗𝑖𝑡1
= 𝐷𝑗𝑇 .
𝑖∈𝐶

𝑖∈𝐶

𝑡∈𝑇

𝑖∈𝐶 𝑡∈𝑇

𝑖∈𝐶 𝑡∈𝑇

Note that the second and third equalities above hold because of constraint (2).
Now, suppose instead that we delete all clinics assigned to 𝑗 to obtain the index set 𝑪− and add a
dummy clinic 𝑚 with demand given by (21), then add constraints (22), (23) and (24) to MIP-1.
From these constraints and constraint (6) of MIP-1, once again the total volume that goes out of
hub 𝑗 is fixed, i.e., we have:
∑ 𝑋𝑗𝑙 = 𝑋𝑗𝑚 = 𝐷𝑗𝑇 .
𝑙∈𝐶

Since we are not altering any other constraints, this is equivalent to the first case with fixed clinic
assignments and the only difference is that the same total outflow is sent to a single clinic. Thus
the optimal solutions with either approach are identical.



28

Appendix B: Input Data
Table 3. Facility Cost ($/year)
Facility type

Country A

Country B

Country C

Country D

National

40,000

14,870

52,500

158,191

Hub

4,500

450

2,389

20,992

Clinic

800

150

140

1,825

Table 4. Storage Details
Country

A

B

C

D

Device Type
Cold Room 1

Capacity (L)
18,000

Cost ($/year)
8,116

Cold Room 2

1,200

1,200

Refrigerator 1

700

900

Refrigerator 2

340

610

Cold Room 1

5,000

17,534

Cold Room 2

1,500

1,800

Refrigerator 1

700

900

Refrigerator 2

504

624

Cold Room

1,500

1,500

Refrigerator 1

340

650

Refrigerator 2

200

550

Refrigerator 3

53

462

Cold Room

5,000

17,534

Refrigerator 1

504

624

Refrigerator 2

340

510

Refrigerator 3

84

394

29

Table 5. Transportation Details
Country

A

B

C

D

Vehicle Type

Capacity (L)

Cost ($/km)

Cold truck

9,293

0.97

44 truck

172

0.54

Motorbike

5

0.23

Cold truck

9,500

0.78

44 truck

308.44

0.51

Motorbike

3.4

0.1

Truck 1

331.2

1.4

Truck 2

110.4

0.4667

Motorbike

3

0.13

Cold truck

15,000

1.12

44 truck

82.8

0.38

Motorbike

3

0.12

30

Table 6. Vaccine Details
Country

A

B

C

D

Name

Pharmaceutical
Form

Tuberculosis

Lyophilized

Openvial
waste
0.5

Tetanus Toxoid

Liquid

Measles

Dose
Required
Volume (cc) Dosage
1.2

1

0

3

3

Lyophilized

0.4

2.1

1

Oral Polio

Liquid

0

1

4

Yellow Fever

Lyophilized

0.4

2.5

1

DTC-HepB-Hib

Liquid

0

16.8

3

Rotavirus

Liquid

0

45.9

3

PCV13

Liquid

0

12

3

Tuberculosis

Lyophilized

0.5

1.2

1

Tetanus Toxoid

Liquid

0.15

3

2

Measles

Lyophilized

0.45

3.5

1

Oral Polio

Liquid

0.17

1

4

Yellow Fever

Lyophilized

0.45

2.5

1

DTC-HepB-Hib

Liquid

0.1

11

3

Rotavirus

Liquid

0

17.1

2

PCV13

Liquid

0.05

12

3

Tetanus Toxoid

Liquid

0.05

3

2

Measles

Lyophilized

0.45

3.5

1

Oral Polio

Liquid

0.17

1

4

Yellow Fever

Lyophilized

0.1

2.5

1

BCG

Lyophilized

0.5

1.2

1

Pentavalent

Liquid

0.15

5.3

3

Pentavalent

Liquid

0.45

12.9

3

Tetanus Toxoid

Liquid

0.1

2.5

2

Measles

Lyophilized

0.45

3.5

1

Oral Polio

Liquid

0.17

2

4

Yellow Fever

Lyophilized

0.05

2.46

1

PCV10

Liquid

0.45

4.8

3

BCG

Lyophilized

0.5

1.2

1

Pentavalent

Liquid

0.15

9.7

3

31

Appendix C: Computational Results
Table 7. Computational results for Country A
No.

Hubs

Nodes

Binary
Size
Variables Label

Population
Density

Gap

CPU Times
MIP-1 Algorithm 1*

1
2
3
4
5
6
7
8
9
10
11
12
Full

1
2
4
5
7
8
14
13
14
19
20
33
41

10
49
48
77
99
206
148
210
235
176
384
599
685

68
604
1,184
2,350
4,214
9,952
12,544
16,484
19,852
20,216
46,240
118,866
168,838

sparse
sparse
moderate
moderate
dense
dense
moderate
moderate
dense
moderate
dense
moderate
moderate

0%
0%
0%
0%
0%
0%
0%
0%
0%
0%
0.29%
-

<1s
<1s
<1s
1.6s
4.4s
~10h
103s
~1d
~2d
4,649s
~1.1w
-

small
small
small
small
small
small
small
small
small
large
large
large
large

<1s
<1s
<1s
<1s
2s
15s
14s
24s
25s
16s
51s
81s
127s

Table 8. Computational results for Country B
No.

Hubs Nodes Binary
Size
Variables Label

Population Density

1

8

56

2,752

small

sparse

2

14

101

8,596

small

3

12

128

9,312

4

16

162

5

28

6

Gap

CPU Times
MIP-1

Algorithm 1*

0%

16s

1s

sparse

0%

119s

12s

small

dense

0%

116s

13s

15,680

small

dense

0%

1,304s

15s

271

45,752

large

dense+moderate

-

-

41s

41

372

91,840

large

moderate

-

-

64s

7

57

510

174,876

large

moderate

-

-

79s

8

65

591

231,010

large

moderate+sparse

-

-

104s

Full 87

746

390,108

large

moderate+sparse

-

-

191s

32

Table 9. Computational results for Country C
No.

Hubs Nodes Binary
Size
Variables Label

Population
Density

Gap

CPU Times
MIP-1 Algorithm 1*

1
2
3
4
5
6
7
8
9
10
11
12
13
Full

1
2
3
3
4
4
4
4
11
17
20
26
34
60

moderate
sparse
sparse
moderate
sparse
moderate
moderate
dense
moderate
moderate
moderate
sparse+moderate
moderate+dense
sparse+dense

0%
0%
0%
0%
0%
0%
0%
0%
0.07%
0.15%
0.42%
0.69%
-

<1s
<1s
2s
2s
3s
4s
7s
8s
10s
79s
387s
2,748s
-

18
11
22
39
44
55
64
65
96
141
295
333
601
933

116
148
420
726
1,088
1,352
1,568
1,592
6,424
14,518
35,560
52,156
122,876
336,360

small
small
small
small
small
small
small
small
small
small
large
large
large
large

<1s
<1s
<1s
<1s
<1s
<1s
<1s
<1s
<1s
2s
3s
37s
218s
476s

Table 10. Computational results for Country D
No.

Hubs

Nodes

Binary
Variables

Size
Label

Population
Density

Gap
0.25%

CPU Times
MIP-1

Algorithm 1*

146s

6s

1

10

117

7,100

small

moderate

2

14

270

22,792

large

dense

-

-

19s

3

11

366

24,244

large

dense

-

-

23s

4

27

540

87,696

large

dense

-

-

72s

5

38

906

206,872

large

dense

-

-

168s

6

83

1,718

856,228

large

dense+moderate

-

-

453s

Full

141

2,875

2,433,378

large

moderate

-

-

713s

Table 11. Network cost for Country A, B, C, D
Country
Original Cost ($)
Optimized Cost ($)
Savings

A
2,453,690
1,844,129
24.84%

B
791,164
743,903
5.97%

C
5,239,822
3,819,622
27.10%

D
8,674,722
7,869,399
9.28%
33

