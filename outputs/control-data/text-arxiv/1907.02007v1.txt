An Encoding-Decoding algorithm based on Padovan numbers
Jenan Shtayat, Alaa Al-Kateeb∗

arXiv:1907.02007v1 [cs.IT] 3 Jul 2019

July 4, 2019

Abstract
In this paper, we propose a new of coding/decoding algorithm using Padovan Q-matrices. This
method is based on blocked message matrices. an advantage of this method is that the encryption of
each message matrix will use a different key and that will increase the security of the method.

keywords: Padovan sequence; Padovan Q-matrix; Encoding-Decoding algorithms.
Mathematics Subject Classification: 11B50, 11B83, 68P30

1

Introduction

The Padovan sequence is the sequence of integers Pn defined by the initial values P0 = 0, P1 = 0, P2 = 1 and
the recurrence relation
Pn = Pn−2 + Pn−3 n ≥ 3
The Padovan sequence is named after Richard Padovan who attributed its discovery to Dutch architect
Hans van der Laan in his 1994 essay Dom. Hans van der Laan : Modern Primitive, see [7], the first few
terms of the sequence are: 0, 0, 1, 0, 1, 1, 1, 2, 2, 3, 4, 5, 7, 9, 12, 16, 21, 28, 37, 49, 65, . . ..


0 1 0
The Padovan numbers have the Q−matrix, where Q = 0 0 1, clearly
1 1 0
det(Q) = 1. It is well-known that [2]


Pn−1 Pn+1
Pn
Pn+2 Pn+1 
Qn =  Pn
Pn+1 Pn+3 Pn+2
Recently, coding-decoding algorithms becomes very important for improving information security and data
transfers. Especially Fibonacci coding [4, 5, 6].

In this paper we propose a new coding-decoding algorithm using the Padovan Q−matrix, the algorithm
depends on dividing the message matrix into the block matrices each is of size 3 × 3. We use different
numbered alphabet for each message, so we get a more reliable coding method. The alphabet is determined
by the number of block matrices of the message matrix.
This paper is structured as follows: in section 2 we describe the new code depends on the Padovan
numbers, in section 3 we list two detailed examples, and finally in section 4 we give a Maple code that can
be used to check the computations.
∗ Yarmouk

university, Irbid-Jordan.

1

2

The Encoding and Decoding Algorithms

At first, we put our message in a matrix M of size 3m × 3m adding commas between two words. Dividing
the message square matrix M of size 3m × 3m into the matrices, named Bi of size 3 × 3. For simplicity and
readability for 1 ≤ i ≤ m2 , let
 i

b1 bi2 bi3
1. Bi = bi4 bi5 bi6 
bi7 bi8 bi9
 i

e1 ei2 ei3
2. Ei = ei4 ei5 ei6 
ei7 ei8 ei9


q1 q2 q3
3. Qn = q4 q5 q6 
q7 q8 q9

2.1

Coding Algorithm

Before applying the algorithm we need to make sure that in the matrices Bi , the minor of the entries (Bi )22
is not zero, otherwise we change the message by adding a sequence of zeros in the begging of the message
(and in the end we can do that as many times as needed).
1. We choose n as follows:
n=

(

4
m2

m=1
otherwise

2. We use the following table mod 28
A
n
K
n + 10
U
n + 20

B
n+1
L
n + 11
V
n + 21

C
n+2
M
n + 12
W
n + 22

D
n+3
N
n + 13
X
n + 23

E
n+4
O
n + 14
Y
n + 24

F
n+5
P
n + 15
Z
n + 25

G
n+6
Q
n + 16
,
n + 26

H
n+7
R
n + 17
0
n + 27

I
n+8
S
n + 18

3. Compute di = det(Bi ).
4. Construct the coded matrix C = [di , bik ]k∈{1,2,3,4,6,7,8,9}

2.2

Decoding Algorithm

we have det(Qn Bi ) = di
1. Compute
ei1
ei2
ei3

q1 bi1 + q2 bi4 + q3 bi7
q1 bi2 + q3 bi8
i
q1 b3 + q2 bi6 + q3 bi9

ei4
ei5
ei6

q4 bi1 + q5 bi4 + q6 bi7
q4 bi2 + q6 bi8
i
q4 b3 + q5 bi6 + q6 bi9

ei7
ei8
ei9

q7 bi1 + q8 bi4 + q9 bi7
q7 bi2 + q9 bi8
i
q7 b3 + q8 bi6 + q9 bi9

2. Solve the equation
di = (e2 + q2 x)

e6
e9

e4
e
+ (e5 + q5 x) 7
e7
e9
2

e1
e
+ (e8 + q8 x) 3
e3
e6

e1
e4

J
n+9
T
n + 19

3. Substitute for xi = bi5
4. Construct Bi
5. Construct M

3

Examples

Example 1 (A short example). Consider the message

H
M = L
A
Encoding: Since m = 1, we have one

11
Step 1 n = 4, hence B1 = 15
4
Step 2 d1 = 2208

block B1 = M .

8 15
18 3 
15 4

“HELLOALA”

E L
O ,
L A

Step 3 we have C = [2208, 11, 8, 15, 15, 3, 4, 15, 4]
Decoding: We have


0 1
Step 1 Q4 = 1 1
1 2

Step 2


1
1
1
e11
e12
e13

19 e14
15 e15
7 e16

30 e17
23 ei8
22 ei9

45
23
25

Step 3 Solve 2208 = 2496 − 16x1
Step 4 x1 = 18 and bi5

11 8
Step 5 B1 = 15 18
4 15

= 18

15
3
4

Example 2 (A long example). Consider the message “HELLOTOBETHEBESTDOYOURBEST”


H E L L O ,
T O , B E , 


 T H E , B E


M =

S T , D O , 
Y O U R , B
E S T ,
,
,
Encoding: We have the following steps

Step 1 Since
 m = 2, we
 We divide

H E L
B
B1 =  L O , , B2 =  T
T O ,
,

the message
matrix


E ,
S
H E , B3 = D
B E
Y
3

into
T
O
O

four
 block matrices.


,
R , B
, , B4 = E S T 
U
, , ,



11 8 15
Step 2 1. B1 = 15 18 3  we have d1 = −1968
23 18 3


5
8 3
2. B2 = 23 11 8 we have d2 = −794
3
5 8


22 23 3
3. B3 =  7 18 3  we have d3 = 4845
1 18 24


21 3 5
4. B4 =  8 22 23 we have d4 = −138
3
3 3


−1968 11 8 15 15 3 23 18 3
 −794 5 8 3 23 8 3 5 8 

Step 3 we get C = 
 4845 22 23 3 7 3 1 18 24
−138 21 3 5 8 23 3 3 3

Decoding:

1. For B1
Step1
e11
e12
e13

38 e14
18 e15
6 e16

49 e17
26 ei8
21 ei9

64
26
24

e21
e22
e23

26 e24
5 e25
16 e26

31 e27
13 e28
19 e29

54
13
27

e31
e32
e33

8 e34
18 e35
27 e36

30 e37
41 e38
30 e39

37
41
33

e41
e42
e43

11 e44
3 e45
26 e46

32 e47
6 e48
31 e49

40
6
54

Step 2 Solve −138 = 48x1 − 1194
Step 3 x1 = 22
2. For B2
Step1

Step 2 Solve −794 = 31x2 − 1135
Step 3 x2 = 11
3. For B3
Step1

Step 2 Solve 4845 = 525x3 − 4605
Step 3 x3 = 18
4. For B4
Step1

Step 2 Solve −138 = 48x4 − 1194

4

Step 3 x4 = 22
Example 3 (With minor equals zero). Consider the message “ALAJENAN”


A L A
M =  , J E
N A N
Here we
 vane only one block matrix
4 15 4
B1 = 26 13 8 . Notice that the minor M22 = 0, so
17 4 17

27 4 15
 8 17 4

27 27 27
M =
27 27 27

27 27 27
27 27 27

we change the message to be
4
17
27
27
27
27

Encoding: We have the following steps?? fix everything??

26
27
27
27
27
27


13
27

27

27

27
27

Step 1 Since
 m = 2, we We divide
 the message
 matrix
 into four block
 matrices.


27 4 15
4 26 13
27 27 27
27 27 27
B1 =  8 17 4 , B2 = 17 27 27, B3 = 27 27 27, B4 = 27 27 27
27 27 27
27 27 27
27 27 27
27 27 27


27 4 15
Step 2 1. B1 =  8 17 4  we have d1 = 5400
27 27 27


4 26 13
2. B2 = 17 27 27 we have d2 = 3510
27 27 27


27 27 27
3. B3 = 27 27 27 we have d3 = 0
27 27 27


27 27 27
4. B4 = 27 27 27 we have d4 = 0
27 27 27


4500 27 4 15 8 4
27 27 27
3510 4 26 13 17 27 2727 27 27

Step 3 we get C = 
 0
27 27 27 27 27 27 27 27
0
27 27 27 27 27 27 27 27

Decoding:

1. For B1
Step1
e11
e12
e13

35 e14
27 e15
31 e16

Step 2 Solve 4500 = 324x1 − 108
Step 3 x1 = 17
5

62 e17
31 e18
46 e19

70
31
50

2. For B2
Step1
e21
e22
e23

44 e24
27 e25
54 e26

48 e27
53 e28
67 e29

65
53
94

Step 2 Solve −2710 = −243x2 + 10071
Step 3 x2 = 11
3. For B3 and B4

27 4
 8 17

27 27
4. M = 
27 27

27 27
27 27

4

clearly x3 = x4 = 27.

15 4 26 13
4 17 27 27

27 27 27 27

27 27 27 27

27 27 27 27
27 27 27 27

Maple Code

with(LinearAlgebra):
n := 1 :
Q := M atrix([[0, 1, 0], [0, 0, 1], [1, 1, 0]]) :
Q := Qn :
q[1] := Q[1, 1] : q[2] := Q[1, 2] : q[3] := Q[1, 3] :
q[4] := Q[2, 1] : q[5] := Q[2, 2] : q[6] := Q[2, 3] :
q[7] := Q[3, 1] : q[8] := Q[3, 2] : q[9] := Q[3, 3] :
B := M atrix([[b11, b12, b13], [b21, b22, b23], [b31, b32, b33]]); # the block matrix B
d := Determinant(B); b[1] := B[1, 1] : b[2] := B[1, 2] : b[3] := B[1, 3] :
b[4] := B[2, 1] : b[5] := B[2, 2] : b[6] := B[2, 3] :
b[7] := B[3, 1] : b[8] := B[3, 2] : b[9] := B[3, 3] :
E := M atrixM atrixM ultiply(Q, B); e[1] := E[1, 1]; e[2] := q[1] ∗ b[2] + q[3] ∗ b[8]; e[3] := E[1, 3];
e[4] := E[2, 1]; e[5] := q[4] ∗ b[2] + q[6] ∗ b[8]; e[6] := E[2, 3];
e[7] := E[3, 1]; e[8] := q[7] ∗ b[2] + q[9] ∗ b[8]; B[3, 2] : e[9] := E[3, 3];
solve(d = (e[2] + q[2] ∗ x) ∗ Determinant(M atrix([[e[6], e[4]], [e[9], e[7]]]))
+ (e[5] + q[5] ∗ x) ∗ Determinant(M atrix([[e[1], e[7]], [e[3], e[9]]]))
+ (e[8] + q[8] ∗ x) ∗ Determinant(M atrix([[e[3], e[1]], [e[6], e[4]]])), x);

References
[1] H. W. Gould, A history of the Fibonacci Q-matrix and a higher-dimensional problem, Fibonacci Quart.
19(3) (1981) 250-257.
[2] Sokhuma, Padovan Q-Matrix and the Generalized Relations, Applied Mathematical Sciences, 7(2013),
2777 - 2780
[3] Sokhuma, Matrices Formula for Padovan and Perrin Sequences, Applied Mathematical Sciences, 7(2013),
7093 - 7096
[4] A. P. Stakhov, A generalizition of the Fibonacci Q-matrix, Rep. Natl. Acad. Sci. Ukraine 9 (1999) 46-49.
[5] A. P. Stakhov, Fibonacci matrices, a generalization of the Cassini formula and a new coding theory,
Chaos Solitons Fractals 30(1) (2006) 56-66.
6

[6] N. Tas, S. Ucar, N. Y. Ozgur, O. O. Kaymak, A new coding/decoding algorithm using Finonacci
numbers, Discrete Mathematics, Algorithms and Applications, 2(2018).
[7] wikipedia.org/wiki/Padovan -sequence

7

