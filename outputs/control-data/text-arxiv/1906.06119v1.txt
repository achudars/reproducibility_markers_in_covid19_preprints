A three-dimensional Hellinger-Reissner
Virtual Element Method
for linear elasticity problems
F. Dassi∗1 , C. Lovadina†2,3 , and M. Visinoni‡1

arXiv:1906.06119v1 [math.NA] 14 Jun 2019

1

Dipartimento di Matematica e Applicazioni, Università degli studi di Milano Bicocca, Via Roberto
Cozzi 55 - 20125 Milano, Italy
2

Dipartimento di Matematica, Università di Milano, Via Saldini 50, 20133 Milano, Italy
3

IMATI del CNR, Via Ferrata 1, 27100 Pavia, Italy

Abstract
We present a Virtual Element Method for the 3D linear elasticity problems,
based on Hellinger-Reissner variational principle. In the framework of the small
strain theory, we propose a low-order scheme with a-priori symmetric stresses and
continuous tractions across element interfaces. A convergence and stability analysis
is developed and we confirm the theoretical predictions via some numerical tests.

1

Introduction

The Virtual Element Method (VEM), introduced in [11, 13], is a recent technology
for the approximation of partial differential equation problems. This method is a generalization of the Finite Element Method (FEM) which allows to deal with arbitrary
polygonal/polyhedral meshes, also including non convex and distored elements. To
garantee this flexibility, the virtual element method abandons the idea of the local
polynomial approximation, typical of FEM, to use approximating functions which are
solution of suitable local PDE. In general, these non-polynomial functions are not explicitly known. Therefore, the main idea of this method is to exploit the available
information (the degrees of freedom) to compute the stiffness matrix and the righthand side of the discretized problem.
During these years, VEM have been employed with success both in mathematical
and engineering communities. Here we mention, as a rapresentative non-exaustive
sample, a brief list of papers [12, 14, 16, 17, 18, 19, 23, 24, 27, 29, 36, 37]. In the
framework of structural mechanics problems, we cite the recent works [1, 5, 6, 7, 8, 9,
41, 42, 43] and [10, 15, 26, 33], for instance. However, we remark that VEM is not
the only technology which can make use the polytopal meshes. Considering elasticity
problems, we mention [21, 28, 30, 32, 34] as representative examples.
In the present paper we extend the study presented in [7] to the three dimensional
case. More precisely, we design and analyze a low-order virtual element method for
∗

franco.dassi@unimib.it
carlo.lovadina@unimi.it
‡
michele.visinoni@unimib.it
†

1

linear elasticity problems. Within the framework of small displacements and small
deformations, we consider the Hellinger-Reissner variational principle as the basis of
our discretization procedure. This mixed formulation describes the problem by means
of both the displacement and the stress fields. In the Finite Element practice it is a
difficult task designing a stable and accurate scheme that preserves both the symmetry
of the stress tensor and the continuity of the tractions at the inter-elements, see for
instance [20] and [4]. The fundamental reason behind this difficulty lies in the local
polynomial approximation, which forces the introduction of nodal degrees of freedom
for the stress unknown. The resulting finite element schemes are typically quite cumbersome, especially in the three dimensional case, see [2]. Furthermore, the presence
of nodal degrees of freedom introduces an additional complication if one aims at using
the hybridization procedure to solve the discrete linear system, see [3]. We exploit the
flexibility of virtual element methods to avoid these drawbacks and to develop an optimal scheme which is reasonably cheap with respect to the delivered accuracy. Since
the approximated stresses does not have nodal degrees of freedom (on the contrary,
the degress of freedom are entirely local to each polyhedron face), the hybridization
procedure could be easily applied to our VEM scheme. This aspects show that, even
for tetrahedral or hexahedral meshes, the proposed VEM method is a valid alternatives
to FEM schemes.
The paper is organized as follows. In Section 2 we briefly introduce the classical
Hellinger-Reissner formulation of the 3D elasticity problem. Section 3 describes the
Virtual Element approximation we propose, while Section 4 is about the convergence
analysis of the method. The numerical experiments, which confirm the theoretical
predictions, are detailed in Section 5. Finally, we draw some conclusions.
Space notation. Throughout the paper, we will make use of standard notations
regarding Sobolev spaces, norms and seminorms (cf. [35] for example). In addition,
given two quantities a and b, we write a . b when there exists a constant C, indipendent
of the meshsize, such that a ≤ C b. Finally, given any subset A ⊂ Rn and an integer
k ≥ 0, Pk (A) denotes the space of polynomials up to degree k, defined on A; whereas,
given a functional space X, we denote by [X]3×3
the 3 × 3 symmetric tensors whose
s
components belong to the space X.
Mesh notation. Given a polyhedron E with nE
f faces we denote its volume, diameter
and barycenter by |E|, hE and xE , respectively. In a similar way we refer to the area,
diameter and barycenter of a face f , while |e| denotes the length of the edge e. Given
a polygonal face f , we use x and x̃ to indicate the global and local coordinates of a
generic point of f , respectively.

2

The elasticity problem in mixed form

In this section we briefly present the 3D elasticity problem based on Hellinger-Reissner
principle [20, 22]:

σ , u) such that

 Find (σ


 − div σ = f
in Ω

σ = Cεε(u)





in Ω
in ∂Ω

u=0

2

where Ω ⊆ R3 is a polyhedral domain, σ and u represent the stress and the displacement
σ , τ ) := (Dσ
σ , τ ), where (·, ·) is the
fields, respectively. We define the bilinear form a(σ
scalar product in L2 , and D := C−1 . Then, the mixed variational formulation reads:


σ

 Find (σ , u) ∈ Σ × U such that

∀ττ ∈ Σ

σ , τ ) + (div τ , u) = 0
a(σ



 (div σ , v) = −(f , v)

where f ∈ L2 (Ω)


3

(1)

∀v ∈ U

is the loading term, while the spaces U and Σ are
h

U = L2 (Ω)

i3

and
Σ = {ττ ∈ H(div; Ω) : τ is symmetric} .
3×3

As usual, H(div; Ω) is the space of tensor in L2 (Ω)
whose divergence is the vector 2
3
valued operator in L (Ω) . The elasticity fourth-order symmetric tensor D is assumed
to be uniformly bounded and positive-definite.
It is well known that Problem (1) is well posed, cf. [20] for example. In particular,
considering the natural norms


σ ||2Σ
||σ

Z

2

σ | dΩ +
|σ

:=

Z

Ω

2

σ )| dΩ,
| div(σ

Ω

Z

||u||2U

:=

|u|2 dΩ,

Ω

it holds:
σ ||Σ + ||u||U ≤ C||f ||0
||σ
where C is a constant depending on Ω and on the material tensor D, which, however,
does not degenerate in the incompressible limit. We also remark that a possible interesting variant of the variational formulation (1) has been recently proposed and studied
in [38] and [39].
When considering a polyhedral mesh Th of the domain Ω, the bilinear form a(·, ·)
is split as
σ, τ ) =
a(σ

X

σ, τ )
aE (σ

with

σ , τ ) :=
aE (σ

Z
E

E∈Th

σ : τ dE
Dσ

for all σ , τ ∈ Σ. Similarly, it holds
(div τ , v) =

X

(div τ , v)E

with

(div τ , v)E :=

Z

div τ · v dE,

E

E∈Th

for all (ττ , v) ∈ Σ × U .

3

The Virtual Element Method

In this section we define our Virtual Element discretization of Problem (1). Let {Th }h
be a sequence of decompositions of Ω into general polyhedral elements E with
h := sup hE .
E∈Th

We suppose that for all h, each element E in Th fulfils the following standard assumptions (cf. [11]):
3

• (A1) E is star-shaped with respect to a ball of radius ≥ γ hE ,
• (A2) for every face f ∈ ∂E we have hf ≥ γhE and f is star-shaped with respect
to a disk of radius ≥ γ hf ,
• (A3) for every edge e ∈ ∂f , we have |e| ≥ γ hf ≥ γ 2 hE ,
where γ is a suitable positive constant. We also assume that the elasticity tensor D
is piecewise constant with respect to the decomposition Th , i.e. D is constant on each
polyhedron of the mesh [7].

3.1

The local spaces

To describe the local spaces employed in the VEM proposed scheme, we introduce two
spaces: RM (E) and Th (f ).
Space RM (E). It is the space of local infinitesimal rigid body motions:
n

RM (E) := r(x) = α + ω ∧ x − xE



o

s.t. α, ω ∈ R3 ,

(2)

whose dimension is 6.
Space Th (f ). For each face f ∈ ∂E, we introduce






Th (f ) := ψ (x̃) = tf + a nf ∧ (x(x̃) − xf ) + p1 (x̃)nf , s.t. a ∈ R, p1 (x̃) ∈ P1 (f ) ,
(3)
where nf the outward normal to the face f , and tf is an arbitrary vector tangent to the
face f . Above, x(x̃) is the three dimensional position vector of a point on f , determined
by the two local coordinates x̃. The dimension of such a space is 6:
• The three dimensional tangent vector t is determined by a linear combination of
two given linearly independent tangential vectors t1 and t2 , i.e.
t = b1 t1 + b2 t2 .




• The rotational term a nf ∧ (x(x̃) − xf ) is determined by a single scalar value
a ∈ R.
• The polynomial p1 (x̃) ∈ P1 (f ) is a two variable polynomial with respect to the
local face coordinate system so it is determined by three parameters, for instance:
p1 (x̃) = c1 + c2 (x̃ − x̃f ) + c3 (ỹ − ỹf ).
Therefore, this space consists of vector functions whose tangential component is a 2D
face rigid body motion (the first two terms of (3)), while the normal component is a
linear two-variable polynomial (the last term of (3)).
4

We are now ready to introduce our local approximation space for the

Stress space.
stress field:

n

i3

h

Σh (E) := τ h ∈H(div; E) : ∃ w∗ ∈ H 1 (E)

such that τ h = Cεε(w∗ );
o

(ττ h n)|f ∈ Th (f ) ∀f ∈ ∂E;

(4)

div τ h ∈ RM (E) .

We have the following Proposition.
Proposition 3.1. Let τ h ∈ Σh (E), then div τ h is completely determined by (ττ h n)|f ,
with f ∈ ∂E face of E. More precisely, setting (cf (2))


div τ h = αE + ω E ∧ x − xE ,
it holds





1 X
αE =
|E| f ∈∂E

(5)

Z
f

(ττ h n) df  ,

and ω E is the unique solution of the 3 × 3 linear system
Z





x − xE ∧ ω E ∧ x − xE



dE =

X Z



f ∈∂E f

E

x − xE ∧ (ττ h n) df.

(6)

Proof. Since τ h ∈ Σh (E), we have div τ h ∈ RM (E) and (ττ h n)|f = ψ (x̃)|f ∈ Th (f ), for
f ∈ ∂E. Then, denoting with ϕ : ∂E → R3 the function such that ϕ|f := ψ (x̃)|f , the
integration by parts:
Z
E

div τ h · r dE =

Z

ϕ · r df

∀r ∈ RM (E),

(7)

∂E

allows to compute div τ h using the degrees of freedom of the space Th (f ).
Testing (7) with constant functions r(x) = α and recalling (5), we have
Z

αE · α dE =

Z

E

∂E

ϕ|f · α df =

 X Z
f ∈∂E f



(ττ h n) df · α

∀α
α ∈ R3 .

Hence, we obtain
αE =

1  X
|E| f ∈∂E

Z



f

(ττ h n) df .



Now, we test (7) selecting r(x) = ω ∧ x − xE . We have
Z



ω E ∧ x − xE

 

· ω ∧ x − xE



dE =

E

X Z
f ∈∂E f



ϕ|f · ω ∧ x − xE



df

∀ω
ω ∈ R3 ,
(8)

i.e.
Z

ω·





x − xE ∧ ω E ∧ x − xE







dE

E

= ω ·


X Z
f ∈∂E f



x − xE ∧ ϕ|f df 

We then infer that ω E satisfies
Z





x − xE ∧ ω E ∧ x − xE



dE =

E

X Z
f ∈∂E f

5



x − xE ∧ (ττ h n) df,

ω ∈ R3 .
∀ω

i.e. ω E solves system (6). We also notice that from (8) we deduce that the linear
operator
Z


ω E 7−→



x − xE ∧ ω E ∧ x − xE



dE

E

is symmetric and positive definite.
From Proposition 3.1 and (3) we infer that the dimension of the space (4) is
dim(Σh (E)) = 6 nE
f.
Displacement space. The local approximation space for the displacement field is
defined by, see (2):


h

2

Uh (E) = vh ∈ L (E)

i3



: vh ∈ RM (E) ,

(9)

and it follows that
dim(Uh (E)) = 6.

3.2

The local forms

In this section we introduce the VEM counterparts of the local forms associated with
the continuous problem.
The local mixed term. Given E ∈ Th , we begin by noticing that the term
(div τ h , vh )E =

Z

div τ h · vh dE

E

is computable for every τ h ∈ Σh (E) and vh ∈ Uh (E) via degrees of freedom. For this
reason, we do not need to introduce any approximation of the terms (div τ , u) and
(div σ , v) in problem (1).
The local bilinear form aE (·, ·). The local bilinear form
σh, τ h) =
aE (σ

Z

σ h : τ h dE
Dσ

E

σ h , τ h ) ∈ Σh (E) × Σh (E). As it is standard
is not computable for a general couple (σ
in the VEM procedure (cf. [11]), we build a computable approximation of the bilinear
form by defining a suitable projection operator onto local polynomial functions. In our
case, we introduce ΠE : Σh (E) → [P0 (E)]s3×3 , by requiring
Z
E

ΠE τ h : π 0 =

Z
E

τ h : π 0 dE

∀π
π 0 ∈ [P0 (E)]3×3
.
s

(10)

This is a projection operator onto the constant symmetric tensor functions and it
is computable. Indeed, we notice that each π 0 ∈ [P0 (E)]3×3
can be written as the
s
symmetric gradient of a linear vectorial function, i.e. π 0 = ε(p1 ), with p1 ∈ [P1 (E)]3 .
Hence, using the divergence theorem, the right-hand side of (10) becomes
Z
E

τ h : π 0 dE =

Z
E

τ h : ε(p1 ) dE = −
6

Z
E

div τ h · p1 dE +

Z
∂E

(ττ h n) · p1 df

which is clearly computable (see also Proposition 3.1). Then, the approximation of
aE (·, ·) reads:
σ h , τ h ) := aE (ΠE σ h , ΠE τ h ) + sE ((I − ΠE )σ
σ h , (I − ΠE )ττ h )
ahE (σ
Z

=
E

σ h , (I − ΠE )ττ h ) ,
D(ΠE σ h ) : (ΠE τ h ) dE + sE ((I − ΠE )σ

(11)

where sE (·, ·) is a suitable stabilization term. In this paper we propose the following
choice:
Z
σ h , τ h ) := κE hE
σ h n) · τ h n df,
sE (σ
(σ
(12)
∂E

Above, κE is a positive constant to be chosen according to D. For instance, in the
numerical examples of Section 5, κE is set equal to 12 tr(D|E ). However, any norm of
D|E can be used. A possible variant of (12) is
σ h , τ h ) := κE
sE (σ

X

Z

hf

f

f ∈∂E

σ h n) · τ h n df.
(σ

The local loading term. We split the load term on each element and we have
Z

(f , vh ) =

f · vh dΩ =

Ω

X Z
E∈Th E

f · vh dE.

Since vh ∈ RM (E), the right-hand side is computable via quadrature rules for polyhedral domains.
Remark 1. Since this integral involves a sufficiently regular function f , to get a “good”
approximation we exploit a quadrature rule of high degree. For the numerical examples
in Section 5, we use a quadrature rule of degree 4.

3.3

The discrete scheme

Starting from the local spaces and local terms introduced in the previous sections, we
can set the global problem. More specifically, we introduce a global approximation
space for the stress field, by glueing the local approximation spaces, see (4):
n

o

Σh = τ h ∈ H(div; Ω) : τ h|E ∈ Σh (E) ∀E ∈ Th .

(13)

For the global approximation of the displacement field, we take, see (9):
n

h

Uh = vh ∈ L2 (Ω)

i3

o

: vh|E ∈ Uh (E)

∀E ∈ Th .

(14)

Then, given a local approximation of aE (·, ·), see (11), we set
σ h , τ h ) :=
ah (σ

X

σ h , τ h ).
ahE (σ

(15)

E∈Th

The method we consider is then defined by


σ

 Find (σ h , uh ) ∈ Σh × Uh such that

σ h , τ h ) + (div τ h , uh ) = 0
ah (σ


 (div σ , v ) = −(f , v )
h
h
h
7

∀ττ h ∈ Σh
∀vh ∈ Uh .

(16)

4

Stability and convergence analysis

Since some results of the analysis follows the guidelines of the theory developed in [7],
in this section we do not provide full details of all the proofs. First, for all E ∈ Th , we
introduce the space:


h

i3

1

τ ∈ H(div; E) : ∃w ∈ H (E)

e
Σ(E)
:=



such that τ = Cεε(w) .

e is defined as
The global space Σ

e :=
Σ

i3

h

τ ∈ H(div; Ω) : ∃w ∈ H 1 (Ω)



such that τ = Cεε(w) .

In the sequel, given a measurable subset A ⊆ Ω and r > 2, we will use the following
space


h

, div τ ∈ L2 (A)
W r (A) := τ : τ ∈ [Lr (A)]3×3
s

i3

,

equipped with the obvious norm.

4.1

An interpolation operator for stresses

We introduce the local interpolation operator IE : W r (E) → Σh (E), defined by:
Z
∂E

(IE τ )n · ϕ∗ df =

Z
∂E

(ττ n) · ϕ∗ df

ϕ∗ ∈ R∗ (∂E),
∀ϕ

(17)

where:
n

h

i3

R∗ (∂E) = ϕ∗ ∈ L2 (∂E)

: ϕ∗|f (x̃) = γ f + [δδ f ∧ (x(x̃) − xE )] ,
o

(18)

γ f , δ f ∈ R3 , ∀f ∈ ∂E .
We remark that if τ is not sufficiently regular, the integral in the right-hand side of
h

1

i3

h

1

0

i3

(17) is intended as a duality between W − r ,r (∂E) and W r ,r (∂E) . Instead, if τ
is a regular function, the above condition is equivalent to require:
Z
Z

τ
(ττ n) · α df
(I
)n
·
α
df
=

E

f
f
Z
Z


 (IE τ )n · [ω
ω ∧ (x(x̃) − xE )] df
ω ∧ (x(x̃) − xE )] df = (ττ n) · [ω
f

f

∀α
α ∈ R3 ;
ω ∈ R3 ;
∀ω

(19)
for each face f ∈ ∂E.
We now show that IE τ ∈ Σh (E) is well-defined by conditions (17). Indeed this is
an immediate consequence of the following Lemma.
Lemma 4.1. If τ h ∈ Σh (E) is such that
Z
∂E

(ττ h n) · ϕ∗ df = 0

then τ h = 0.
8

∀ϕ
ϕ∗ ∈ R∗ (∂E),

Proof. Recalling (4), Proposition 3.1 and (18), it is sufficient to prove that, given a face
f ∈ ∂E, conditions
Z

h

i

∀γ
γ f , δ f ∈ R3

(ττ h n) · γ f + δ f ∧ (x(x̃) − xE ) df = 0

f

(20)

imply (ττ h n)|f = 0. To this end, we first set (cf. (3))




(ττ h n)|f (x̃) = tf + a nf ∧ (x(x̃) − xf ) + p1 (x̃)nf ,

(21)

with tf an arbitrary constant vector tangent to the face f , a ∈ R, nf the outward
normal vector and
p1 (x̃) = c1 + c2 (x̃ − x̃f ) + c3 (ỹ − ỹf )

ci ∈ R i = 1, 2, 3.

Choosing δ f = 0 and γ f arbitrary in (20), and considering (21), we infer tf = 0 and
c1 = 0. Hence, it holds:




(ττ h n)|f (x̃) = a nf ∧ (x(x̃) − xf ) + (c2 (x̃ − x̃f ) + c3 (ỹ − ỹf )) nf .

(22)

We now select γ f = 0 and δ f = nf in (20). From (22) we get
Z



a
f

 



nf ∧ (x(x̃) − xf ) · nf ∧ (x(x̃) − xE ) df = 0.

We have:
Z
f

Z
f

Z
f

Z
f



 



 



nf ∧ (x(x̃) − xf ) · nf ∧ (x(x̃) − xE ) df =


nf ∧ (x(x̃) − xf ) · nf ∧ ((x(x̃) − xf ) + (xf − xE )) df =
2

nf ∧ (x(x̃) − xf ) df +

Z
f

(23)


 



nf ∧ (x(x̃) − xf ) · nf ∧ (xf − xE ) df =

2

nf ∧ (x(x̃) − xf ) df > 0.

Above, we have used that nf ∧ (xf − xE ) is a constant vector and that nf ∧ (x(x̃) − xf )
has zero mean value over the face f , to infer that:
Z



f

 



nf ∧ (x(x̃) − xf ) · nf ∧ (xf − xE ) df = 0

From (23) we deduce a = 0, and therefore we get:
(ττ h n)|f (x̃) = (c2 (x̃ − x̃f ) + c3 (ỹ − ỹf )) nf .

(24)

We finally select γ f = 0 and δ f = tf in (20), with tf an arbitrary vector tangential to
the face f . Thus, we obtain:
Z
f

(c2 (x̃ − x̃f ) + c3 (ỹ − ỹf )) nf · [tf ∧ (x(x̃) − xE )] df = 0.

Using again x(x̃) − xE = (x(x̃) − xf ) + (xf − xE ), we infer
Z

T :=
f

Z
f

(c2 (x̃ − x̃f ) + c3 (ỹ − ỹf )) nf · [tf ∧ (x(x̃) − xf )] df =
(25)

(c2 (x̃ − x̃f ) + c3 (ỹ − ỹf )) (x(x̃) − xf ) · [nf ∧ tf ] df = 0.
9

We now choose tf such that the (tangential to the face) vector nf ∧ tf has components
(c2 , c3 ) with respect to the local coordinate system (x̃, ỹ). Then, from (25) we get
T =

Z 
f



c22 (x̃ − x̃f )2 + c23 (ỹ − ỹf )2 df = 0,

which implies c2 = c3 = 0. Therefore, (ττ h n)|f = 0, see (24), and the proof is complete.
The global interpolation operator Ih : W r (Ω) → Σh is then defined by glueing the
local contributions provided by IE . More precisely, for every τ ∈ W r (Ω) and E ∈ Th ,
we set
(Ih τ )|E := IE τ |E .
Using the same steps detailed in [7], we have the following error estimates for the
interpolation operator Ih .
Proposition 4.2. Under assumptions (A1), (A2) and (A3), for the interpolation
operator IE defined in (19), the following estimates hold:
h

i3×3

e
∀ττ ∈ Σ(E)
∩ H 1 (E)

||ττ − IE τ ||0,E . hE |ττ |1,E

,

and
i3×3

h

e
|| div(ττ − IE τ )||0,E . hE | div τ |1,E ∀ττ ∈ Σ(E)
∩ H 1 (E)

4.2

3

s.t. div τ ∈ H 1 (E) .


The ellipticity-on-the-kernel and inf-sup conditions

The proposed approach satisfies the compatibility conditions. First, we notice that (see
(13), (4) and (14), (9)):
div(Σh ) ⊆ Uh .

(26)

Then, we introduce the discrete kernel Kh ⊆ Σh :
Kh = {ττ h ∈ Σh : (div τ h , vh ) = 0 ∀vh ∈ Uh },
and we infer from (26) that τ h ∈ Kh implies div τ h = 0. Hence, it holds:
||ττ h ||Σ = ||ττ h ||0

∀ττ h ∈ Kh .

(27)

This is essentially the property that leads to the following ellipticity-on-the-kernel condition.
Proposition 4.3. For the method described in Section 3, there exists a constant α > 0
such that
ah (ττ h , τ h ) ≥ α ||ττ h ||2Σ

∀ττ h ∈ Kh .

(28)

Proof. Fix E ∈ Th . By (10), (11) and (12), using the techniques of [11, 25], one has:
||ττ h ||20,E . ahE (ττ h , τ h ) . ||ττ h ||20,E

∀ττ h ∈ Σh (E).

By recalling (15), we get the existence of α > 0 such that
ah (ττ h , τ h ) ≥ α ||ττ h ||20
Estimate (28) now follows by recalling (27).
10

∀ττ h ∈ Σh .

For the discrete inf-sup condition, we need the following commuting diagram property.
Proposition 4.4. For the operator Ih : W r (Ω) → Σh it holds:
div(Ih τ ) = ΠRM (div τ )

∀ττ ∈ W r (Ω),

(29)

where ΠRM denotes the L2 -projection operator onto the space of the rigid body motions,
see (2).
Proof. It is sufficient to prove property (29) locally, in each element E ∈ Th . Fix now
r ∈ RM (E) and τ ∈ W r (E). We have:
Z

div τ · r dE =

E

Z

(ττ n) · r df

Z∂E

=

(IE τ )n · r df

(by (19))
(integration by parts)

(30)

Z∂E

div(IE τ ) · r dE

=
E

From (30) and the definition of L2 -projection operator, we get div(IE τ ) = ΠRM (div τ )
on E.
Using Proposition 4.4 the following discrete inf-sup condition follows from the theory
developed in [7].
Proposition 4.5. Suppose that assumptions (A1), (A2) and (A3) are fulfilled. Then,
there exists β > 0 such that
sup

τ h ∈Σh

4.3

(div τ h , vh )
≥ β||vh ||U
||ττ h ||Σ

∀ vh ∈ Uh .

Error estimates

We denote with P0 (Th ) the space of piecewise constant functions with respect to the
given mesh Th . Using the techniques developed in [7], one can prove the following
result.
Proposition 4.6. Suppose that assumptions (A1), (A2) and (A3) are fulfilled. For
every (σ
σ I , uI ) ∈ Σh × Uh and every σ π ∈ [P0 (Th )]s3×3 , the following error equation
holds:
||σ
σ − σ h ||Σ + ||u − uh ||U . ||σ
σ − σ I ||Σ + ||u − uI ||U + h || div σ I ||0,Ω + ||σ
σ − σ π ||0,Ω .
A suitable choice of uI , σ I , and σ π leads to the following error estimate, see [7].
Theorem 4.7. Let (σ
σ , u) ∈ Σ × U be the solution of Problem (1), and let (σ
σ h , uh ) ∈
Σh × Uh be the solution of the discrete problem (16). Suppose that assumptions (A1),

3×3

3
(A2) and (A3) are fulfilled. Assuming σ |E ∈ H 1 (E)
and (div σ )|E ∈ H 1 (E) ,
the following estimate holds true:
||σ
σ − σ h ||Σ + ||u − uh ||U . C(Ω, σ , u) h,
where C(Ω, σ , u) is independent of h but depends on the domain Ω and on the Sobolev
regularity of σ and u.
11

5

Numerical results

In this section we numerically assess the proposed VEM approach through the study
of the method accuracy on a selected number of test problems. The numerical results
confirm the proved theoretical results.
We consider the standard unit cube Ω = [0, 1]3 as the domain of our problems and
we take the following three types of mesh:
• Cube, a mesh composed by standard structured cubes;
• Tetra, a Delaunay tetrahedralization of the domain Ω;
• CVT, a Voronoi tassellation obtained by the Lloyd algorithm [31];
• Random, a Voronoi tassellation achieved with random control points.
We remark that the meshes CVT and Random are very challenging. Indeed,
they could have some elements with small faces and edges, and we remark that such
case is not covered by the developed theory, i.e. assumptions (A1), (A2) and (A3).
However, the numerical results show that the proposed methods are fairly robust with
respect to this geometric situation. These two type of meshes are build via the voro++
library [40]. Moreover, the whole numerical scheme is developed inside the vem++
library, a c++ code realized at the Univeristy Milano - Bicocca during the CAVE project
(https://sites.google.com/view/vembic/home).
In order to assess the convergence rate, for each type of mesh, we define the following
mesh-size h:
NE
1 X
h :=
hE
NE i=1
where we recall that NE is the number of elements in the mesh, and hE is the diameter
of the polyhedron E. The accuracy and the convergence rate assessment is carried out
using the following error norms:
• L2 error norm for the displacement field:
1/2


X Z

Eu := 

E

E∈Th

|u − uh |2 

= ||u − uh ||0 .

• L2 error on the divergence:
1/2


X Z

Eσ ,div := 

E∈Th

E

σ − σ h )|2 
| div(σ

.

• L2 error on the projection:
1/2



Eσ ,Π := 

X Z

E∈Th

12

E

σ − ΠE σ h |2 
|σ

.

Cube

Tetra

CVT

Random

Figure 1: Overview of adopted meshes for convergence assessment numerical tests.
• Discrete error norms for the stress field:
1/2



Eσ := 

X

f ∈Fh

Z

hf

f

σ − σ h )n|2 
κ |(σ

,

where Fh is the set of faces for Th and κ = 12 tr(D) (the material is here homogeneous). We remark that the quantity above scales like the internal elastic energy,
with respect to the size of the domain and of the elastic coefficients, i.e. ∼ h.
Example 1 (compressible material). We consider an elastic problem with a trigonometric solution and homogeneous Dirichlet boundary conditions. The material of this
problems obeys to a homogeneous isotropic constituive law, with material parameters
13

assigned in terms of the Lamé constants, here set as λ = 1 and µ = 1. Applied loads
are accordingly computed. More precisely, the test details are as follows:


u1 = u2 = u3 = 10 S(x, y, z)


 f 1 = −10π 2 ((λ + µ) cos(πx) sin(πy + πz) − (λ + 4µ)S(x, y, z))

f 2 = −10π 2 ((λ + µ) cos(πy) sin(πx + πz) − (λ + 4µ)S(x, y, z))



2

f 3 = −10π ((λ + µ) cos(πz) sin(πx + πy) − (λ + 4µ)S(x, y, z)),

where S(x, y, z) = sin(πx) sin(πy) sin(πz).

10 0

Cube
CVT
Random
Tetra
h

0.3
0.25
0.2

Cube
CVT
Random
Tetra
h

0.15

0.1

10 -1

0.1

0.15

0.2

0.25

0.3 0.35 0.4

0.1

(a)

0.35
0.3
0.25

0.15

0.2

0.25

0.3 0.35 0.4

0.2

0.25

0.3 0.35 0.4

(b)

0.45
0.4

Cube
CVT
Random
Tetra
h

0.35
0.3

0.2

0.25

0.15

0.2

Cube
CVT
Random
Tetra
h

0.15
0.1

0.1

0.05
0.1

0.15

0.2

0.25

0.3 0.35 0.4

(c)

0.1

0.15

(d)

Figure 2: Example 1 (compressible material): h-convergence results for all meshes.
Figure 2 reports h-convergence of the proposed methods for Example 1. As expected, for the considered methods, the asymptotic convergence rate is approximately
equal to 1 for all error norms and meshes. In addition, the convergence graphs of
each type of mesh are close to each others and this fact confirms the robustness of the
proposed method with respect to the element shape.
Example 2 (nearly incompressible material). We consider a problem with known
analytical solution. A nearly incompressible material is chosen by selecting Lamé constants as λ = 105 , µ = 0.5. The test is designed by choosing a required solution for the
14

displacement field and deriving the load f accordingly. The displacement solution is as
follows:



2
2
2

u
=
sin(2πx)
cos(2πy)
sin(2πy)sin(2πz)
−
cos(2πz)
sin(2πz)sin(2πy)


 1



u = sin(2πy)2 cos(2πz) sin(2πz)sin(2πx)2 − cos(2πx) sin(2πx)sin(2πz)2

2





 u3 = sin(2πz)2 cos(2πx) sin(2πx)sin(2πy)2 − cos(2πy) sin(2πy)sin(2πx)2

In Figure 3 we report the convergence results for the proposed VEM approach. It can
be clearly seen that our method shows the expected asymptotic rate of convergence for
each kind of mesh. Moreover, also in this case the convergence lines are close to each
other and this fact further confirms the robustness of the proposed scheme with respect
to element shape.

10 1

10 0
Cube
CVT
Random
Tetra
h

Cube
CVT
Random
Tetra
h

10 0

10 -1
10 -1
0.1

0.15

0.2

0.25

0.3 0.35 0.4

0.1

(a)

0.15

0.2

0.25

0.3 0.35 0.4

0.2

0.25

0.3 0.35 0.4

(b)

10 0

10 0
Cube
CVT
Random
Tetra
h

Cube
CVT
Random
Tetra
h

10 -1

10 -1

0.1

0.15

0.2

0.25

0.3 0.35 0.4

(c)

0.1

0.15

(d)

Figure 3: Example 2 (nearly incompressible material): h-convergence results for
all meshes.

Example 3 (unloaded body). We consider a problem with polynomial solution,
non-homogeneous Dirichlet boundary conditions and zero loading. We take a homogeneous and isotropic material with Lamé constants λ = 1 and µ = 1 (compressible
case). As in the previous examples, the test is defined by choosing a required solution
15

and deriving the correspondig body load f , as indicated in the following:


u1 = 2x3 − 3xy 2 − 3xz 2


 u = 2y 3 − 3yx2 − 3yz 2
2
3
2
2

u
 3 = 2z − 3zy − 3zx



f =0

We remark that this is a typical example where the displacement field is nontrivial, while
stresses are divergence-free. As expected, this latter feature is numerically satisfied by
our VEM scheme. Indeed, in Table 1 the errors Eσ ,div are close to the machine precision
at each mesh refinement step. The other error behaviours are similar to the ones showed
in the previous examples so we do not report such graphichs.
Step
1
2
3
4

Cube
2.1904e-14
4.7351e-14
1.0024e-13
1.1793e-13

Tetra
4.7821e-14
1.2589e-13
2.0757e-13
2.7652e-13

CVT
2.2369e-14
4.5054e-14
8.7751e-14
1.0922e-13

Random
2.9712e-14
6.4063e-14
1.3174e-13
1.6482e-13

Table 1: Example 3 (unloaded body): h-convergence results for error Eσ ,div .

6

Conclusions

We have proposed a Virtual Element Method for the linear elasticity 3D problem, based
on the mixed Hellinger-Reissner variational principle. The scheme takes advantage of
low-order approximation spaces for both the stresses and the displacements. In addition, the stresses are a-priori symmetric and with continuous normal component across
the element interfaces. The convergence and stability analysis has been confirmed by
some numerical results. A possible future development of the present paper may concern the design of schemes with reduced (minimal) degrees of freedom, by exploiting
different variational principles (e.g. suitable augmented lagrangian formulations).

References
[1] O. Andersen, H. M. Nilsen, and X Raynaud, Virtual element method for geomechanical simulations of reservoir models, Computational Geosciences 21 (2017),
no. 5, 877–893.
[2] D.N. Arnold, G. Awanou, and R. Winther, Finite elements for symmetric tensors
in three dimensions, Math. Comp. 77 (2008), 1229–1251.
[3] D.N. Arnold and F. Brezzi, Mixed and nonconforming finite element methods:
implementation, postprocessing and error estimates, ESAIM Math. Model. Numer.
Anal. 19 (1985), 7–32.
[4] D.N. Arnold and R. Winther, Mixed finite elements for elasticity, Numer Math 92
(2002), 401–419.
[5] E. Artioli, L. Beirão da Veiga, C. Lovadina, and E. Sacco, Arbitrary order 2D
virtual elements for polygonal meshes: Part I, elastic problem, Computational
Mechanics 60 (2017), no. 3, 355–377.
16

[6]

, Arbitrary order 2D virtual elements for polygonal meshes: Part II, inelastic problems, Computational Mechanics 60 (2017), no. 4, 643–657.

[7] E. Artioli, S. de Miranda, C. Lovadina, and L. Patruno, A stress/displacement
virtual element method for plane elasticity problems, Computer Methods in Applied
Mechanics and Engineering 325 (2017), 155 – 174.
[8]

, A family of virtual element methods for plane elasticity problems based
on the hellinger-reissner principle, Computer Methods in Applied Mechanics and
Engineering 340 (2018), 978 – 999.

[9]

, An equilibrium-based stress recovery procedure for the VEM, International
Journal for Numerical Methods in Engineering 117 (2019), 885–900.

[10] L. Beirão da Veiga, F. Brezzi, and L. D. Marini, Virtual Elements for linear elasticity problems, Siam. J. Numer. Anal. 51 (2013), 794–812.
[11] L. Beirão da Veiga, F. Brezzi, A. Cangiani, G. Manzini, L. D. Marini, and A. Russo,
Basic principles of virtual element methods, Math. Models Methods Appl. Sci. 23
(2013), no. 1, 199–214.
[12] L. Beirão da Veiga, F. Brezzi, F. Dassi, L. Marini, and A. Russo, A family of threedimensional virtual elements with applications to magnetostatics, SIAM Journal on
Numerical Analysis 56 (2018), no. 5, 2940–2962.
[13] L. Beirão da Veiga, F. Brezzi, L. D. Marini, and A. Russo, The hitchhiker’s guide
to the virtual element method, Math. Models Methods Appl. Sci. 24 (2014), no. 8,
1541–1573.
[14] L. Beirão da Veiga, F. Dassi, and A. Russo, High-order virtual element method on
polyhedral meshes, Computers & Mathematics with Applications 74 (2017), no. 5,
1110 – 1122.
[15] L. Beirão da Veiga, C. Lovadina, and D. Mora, A virtual element method for
elastic and inelastic problems on polytope meshes, Computer Methods in Applied
Mechanics and Engineering 295 (2015), 327 – 346.
[16] L. Beirão da Veiga, C Lovadina, and A. Russo, Stability analysis for the virtual
element method, Mathematical Models and Methods in Applied Sciences 27 (2017),
no. 13, 2557–2594.
[17] L. Beirão da Veiga, C. Lovadina, and G. Vacca, Divergence free virtual elements
for the Stokes problem on polygonal meshes, to appear on ESAIM: M2AN.
[18] L. Beirão da Veiga, A. Russo, and G. Vacca, The virtual element method with
curved edges, ESAIM Mathematical Modelling and Numerical Analysis (2018).
[19] S. Bertoluzza, M. Pennacchio, and D. Prada, BDDC and FETI-DP for the virtual
element method, Calcolo 54 (2017), no. 4, 1565–1593.
[20] D. Boffi, F. Brezzi, and M. Fortin, Mixed finite element methods and applications,
Springer Series in Computational Mathematics, vol. 44, Springer, Heidelberg, 2013.
MR 3097958
17

[21] M. Botti, D. A. Di Pietro, and P. Sochala, A Hybrid High-Order method for nonlinear elasticity, SIAM Journal on Numerical Analysis 55 (2017).
[22] D. Braess, Finite elements. Theory, fast solvers, and applications in elasticity
theory., third ed., Cambridge University Press, 2007.
[23] S. C. Brenner, Q. Guan, and Li-Y. Sung, Some estimates for virtual element
methods, Computational Methods in Applied Mathematics 17 (2017).
[24] S. C. Brenner and Li-Y. Sung, Virtual element methods on meshes with small edges
or faces, Mathematical Models and Methods in Applied Sciences (2017).
[25] F. Brezzi, R. S. Falk, and L. D. Marini, Basic principles of mixed virtual element
methods, ESAIM Math. Model. Numer. Anal. 48 (2014), no. 4, 1227–1240.
[26] F. Brezzi and L.D. Marini, Virtual Element Method for plate bending problems,
Comput. Methods Appl. Mech. Engrg. 253 (2012), 455–462.
[27] H. Chi, L. Beirão da Veiga, and G. H. Paulino, Some basic formulations of the
virtual element method (VEM) for finite deformations, Computer Methods in Applied Mechanics and Engineering 318 (2017), 148 – 192.
[28] B. Cockburn and G. Fu, Devising superconvergent HDG methods with symmetric
approximate stresses for linear elasticity by M -decompositions, IMA Journal of
Numerical Analysis 38 (2017), no. 2, 566–604.
[29] F. Dassi and G. Vacca, Bricks for the mixed high-order virtual element method:
Projectors and differential operators, Applied Numerical Mathematics (2019).
[30] D. A. Di Pietro and A. Ern, A hybrid high-order locking-free method for linear
elasticity on general meshes, Comput. Methods Appl. Mech. Engrg. 283 (2015),
no. 0, 1–21.
[31] Q. Du, V. Faber, and M. Gunzburger, Centroidal voronoi tessellations: Applications and algorithms, SIAM Rev. 41 (1999), no. 4, 637–676.
[32] G. Fu, B. Cockburn, and H. Stolarski, Analysis of an HDG method for linear
elasticity, International Journal for Numerical Methods in Engineering 102 (2015),
no. 3-4, 551–575.
[33] A. L. Gain, C. Talischi, and G. H. Paulino, On the Virtual Element Method for
three-dimensional linear elasticity problems on arbitrary polyhedral meshes, Comput. Methods Appl. Mech. Engrg. 282 (2014), 132–160.
[34] A. Hungria, D. Prada, and F.-J. Sayas, HDG methods for elastodynamics, Computers & Mathematics with Applications (2017).
[35] J.-L. Lions and E. Magenes, Problèmes aux limites non homogènes et applications.
Vol. 1, Travaux et Recherches Mathématiques, No. 17, Dunod, Paris, 1968.
[36] L. Mascotto and F. Dassi, Exploring high-order three dimensional virtual elements:
bases and stabilizations, Computers & Mathematics with Applications (2017).
[37] L. Mascotto, I. Perugia, and A. Pichler, Non-conforming harmonic virtual element
method: h- and p-versions, Journal of Scientific Computing 77 (2018), no. 3, 1874–
1908.
18

[38] A. Pechstein and J. Schöberl, Tangential-displacement and normal-normal-stress
continuous mixed finite elements for elasticity, Math. Models Methods Appl. Sci.
21 (2011), 1761–1782.
[39]

, An analysis of the TDNNS method using natural norms, Numerische
Mathematik 139 (2018), 93–120.

[40] C.H. Rycroft, Voro++: A three-dimensional voronoi cell library in c++, Chaos
(Woodbury, N.Y.) 19 (2009), 041111.
[41] P. Wriggers, B.D. Reddy, W. Rust, and B. Hudobivnik, Efficient virtual element
formulations for compressible and incompressible finite deformations, Computational Mechanics (2017).
[42] P. Wriggers, W.T. Rust, and B.D. Reddy, A virtual element method for contact,
Comput Mech 58 (2016), 1039–1050.
[43] B. Zhang and M. Feng, Virtual element method for two-dimensional linear elasticity problem in mixed weakly symmetric formulation, Applied Mathematics and
Computation 328 (2018), 1 – 25.

19

