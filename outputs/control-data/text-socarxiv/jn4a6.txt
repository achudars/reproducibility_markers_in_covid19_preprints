Assortative matching with network spillovers.1
Andreas Bjerre-Nielsen2
University of Copenhagen, Øster Farimagsgade 5, 1353 Copenhagen K., Denmark

Abstract
This paper investigates endogenous network formation by heterogeneous agents. The
agents’ types determine the value of linking and we incorporate spillovers as utility
from indirect connections. We provide sufficient conditions for a class of networks
with sorting to be stable for low to moderate spillovers; with only two types these
networks are the unique pairwise stable ones. We also show that this sorting is
suboptimal for moderate to high spillovers despite otherwise obeying the conditions
for sorting in Becker (1973). This shows that in our sorted networks a tension between
stability and efficiency is present. We analyze a policy tool to mitigate suboptimal
sorting.
Keywords: network formation, under-connectivity, assortative matching, network
externalities, one-sided matching.
JEL classification: C71; C78; D61; D62; D85.
1

2
3
4
5

1. Introduction
Social relations and their network structures are fundamental in almost all aspects of our lives: which jobs we get, how we perceive the world, the decisions we
make, etc. (Jackson, 2019). A ubiquitous finding in studies of social relations is the
tendency to form more ties with people similar to one-self, i.e. the pattern known
1

This paper has grown out of Bjerre-Nielsen (2015). The author is grateful to Peter Norman
Sørensen who supervised his PhD. A big thanks to Jan Eeckhout, Matthew Jackson, John Kennes,
Jesper Rüdiger, Hans Keiding, Bartosz Redlicki, Thomas Jensen, David Dreyer Lassen and seminar
participants at CTN 2018, CoED 2015, CoopMAS 2015, EDGE 2015, University of Copenhagen,
Stanford University and Universitat Pompeu Fabra. This paper is a revised version of a chapter
in the author’s PhD dissertation at University of Copenhagen from 2016. The work was funded by
University of Copenhagen.
2
University of Copenhagen, email: andreas.bjerre-nielsen@econ.ku.dk.
Preprint submitted to Journal of Economic Theory

March 17, 2020

6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39

as sorting or homophily, see the meta-study McPherson et al. (2001). Pioneered by
Becker (1973), economic research has contributed to the understanding of sorting
by providing mathematically sufficient conditions for sorting in marriage- and labor
markets to be stable and optimal. The essential condition for sorting is supermodularity. This condition entails complementarity in type is such that similar types gain
higher value from linking than dissimilar ones. Previous research has not analyzed
what implications supermodularity has for assortative matching in the context of
networks, either with or without utility from indirect connections.
We extend assortative matching to the context of networks. We demonstrate
fundamental properties for a class of networks which we label as having sorted connectivity. We require these networks to satisfy the following conditions: perfect
sorting such that all agents link only with agents of the same type; type-connectivity
whereby any two agents of the same type are connected; and, no-link surplus whereby
all available links are used. Intuitively, these networks maximize utility both at the
individual and aggregate levels, conditional on perfect sorting. We show that networks with sorted connectivity exist when the number of agents for each type exceeds
the number of links allowed per agent and a regularity condition holds, see Proposition 3.
We provide a novel, parsimonious framework which unites the frameworks of complementarity between heterogeneous agents (Becker, 1973) and utility from indirect
connections to friends of friends (Jackson and Wolinsky, 1996). In our setup every
agent has, at most, a fixed number of links, which reflects limited amounts of time
and effort.3 We investigate stability of networks in the following sense: no two agents
can form and/or delete links in the network to improve their joint payoff (we allow
for transfers of utility). Our central result is that if Becker’s condition for supermodularity holds and spillovers (i.e magnitude of utility from indirect connections) are
low to moderate, then networks with sorted connectivity are stable; with only two
types of agents it further holds that every stable network has sorted connectivity.
See details in Theorem 1.
We also investigate the efficiency for networks with sorted connectivity. For
moderate to high spillovers and supermodularity we show that networks with sorted
connectivity are inefficient. Therefore, we may refer to inefficient sorted networks
as ‘under-connected’ as they have too little connectivity across types relative to the
efficient networks. In the situation where there are only two types of agents, and
3

A limited number of partners is consistent with empirical research: Ugander et al. (2011) show
that the average number of social ties for the entire Facebook network is a few hundred, and likewise
Miritello et al. (2013) show the number of phone calls for millions of people is also limited.

2

40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77

supermodularity holds, we strengthen the results: for low spillovers, networks with
sorted connectivity are efficient – otherwise, networks with connectivity across types
are efficient. Note that among these results, the latter is about global efficiency
whereas the former is about comparative (relative) efficiency, see Theorem 2 for
details.
The complementarity captured by supermodularity resembles situations where
more similarity in matches increases the joint utility. In these situations heterogeneity
in type may refer to productive and non-productive capabilities as well as other
characteristics with synergy between types. Natural examples include geography or
language, as suggested by Church and King (1993). Matching contrary to these
characteristics may lead to increased transaction costs or miscommunication and,
therefore, to lower aggregate productivity. Another example is combined effects in
skills – it could be that matching workers or students with similar skills results
in higher joint utility, e.g. as in the classic O-ring model of Kremer (1993). A
property of this complementarity is exogeneity; synergy depends only on agents’
pre-defined types, not other parts of the matching/network. We note there are
other kinds of homophily/sorting on exogenous characteristics, e.g. eye-color, height.
However, these kinds of homophily are often based directly on mutual preference for
similarity and do not require conditions on the joint utility. This difference often
discussed as transferable versus non-transferable utility, where this paper uses the
former framework.
Our results show that Becker’s supermodularity condition is no longer sufficient
for sorting to be either stable or efficient. This comes from the fact that agents face
a trade-off between two sources of utility: on the one hand, complementarity implies
that increased sorting leads to higher direct utility as links between similar agents are
more valuable; on the other hand, positive spillovers entail that more sorting can lead
to a loss of utility from indirect connections. Therefore, instability and inefficiency of
sorting stems from the utility of indirect connections dominating complementarity,
which imply that the stable networks are under-connected. However, when combined, our results show that if there are moderate spillovers and supermodularity,
then networks with sorted connectivity are stable but inefficient. The reason is that
the underlying thresholds governing the two properties are not identical. The intuition behind this incompatibility of stability and efficiency is that two agents forming
and removing links will internalize the direct utility from sorting, but they do not
internalize the utility from indirect connections for third party agents. We show by
visual inspection that the scope for incompatibility (i.e. the region of ‘moderate’
spillovers) widens as the number of agents grows and strength of complementarity
increases. We demonstrate in Proposition 4 how to enact policies that curb exces3

78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106

107
108
109
110
111
112

sive sorting by leveraging contracts that make payoffs conditional on links. These
new insights can help policymakers within organizations to design better internal
networks by overcoming under-connectivity, e.g. between individuals within schools,
corporations or organizations.
The policy implications are easy to see in a stylized example. Suppose there are
two islands with costly transportation from one to the other. If spillovers are moderate in the sense of our model, then the network is under-connected – no inhabitants
of either island want to establish connections with inhabitants of the other island as
their individual payoff is too small. Nevertheless, by paying agents to connect, everyone could be better off. That is, policies that foster connectivity across the islands
can increase the efficiency of the underlying network. With more islands that are all
disconnected, the problem can compound and thus the scope for policies increases.
Although unrealistic, the results should translate to situations with high levels of homophily combined with strong complementarity and/or many agents. For instance,
new empirical work has already shown that a few connections between otherwise
connected sub-communities in online social media can foster diffusion of information
that otherwise would be unlikely (Park et al., 2018). Our model also helps us to
understand the potential consequences of forming organizations that consist of disjoint parts, e.g. school classes, company divisions. If the organizational parts are not
encouraged to interact across affiliated parts, it may lead to no interaction (which is
suboptimal), as the disjoint structure provides an implicit complementarity among
members from the same part of the organization.
This paper also makes a number of additional contributions towards the understanding of assortative matching. We establish that supermodularity is sufficient for
stable networks to contain a general pattern of sorting by type without utility from
indirect connections, see Proposition 1. We also show that if the agent population
is very large, then sorting is the unique strongly stable outcome (i.e. the core),
when Becker’s complementarity condition holds and spillovers are not too high, see
Proposition 5.4
Literature. In what follows we review relevant literature and discuss our results in
the context of the most related work. A seminal mathematical work on sorting and
segregation is Schelling (1969, 1971). Although related, the modeling differences
between Schelling’s spatial model and networks (or matchings) are stark; networks
are more flexible and allow for connections between any individuals and utility from
indirect connections. Two-sided matching captures agents from two distinct sides
4

The level of spillovers satisfies asymptotic independence in social connections.

4

113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143

who match, e.g. in labor and dating markets. The inaugural study on sorting is
Becker (1973), which has since been extended to a search setting with match frictions,
see Shimer and Smith (2000) and a recent review in Chade et al. (2017). Most of
the earlier work on sorting investigates two-sided matching but we use a one-sided
matching model. The research on one-sided assortative matching has been limited to
formation of partnerships and clubs, which correspond respectively to one-to-one and
many-to-many matchings (Farrell and Scotchmer, 1988; Kremer, 1993; Durlauf and
Seshadri, 2003; Legros and Newman, 2002; Pycia, 2012; Baccara and Yariv, 2013;
Xing, 2016).5 All the research on one-sided assortative matching finds conditions
for sorting which correspond to type complementarity in Becker (1973). Yet, none
of the above papers allows for general linking beyond partnerships and clubs, or
considers network spillovers. We relax both of these assumptions. We have carefully
chosen our framework to use the fundamental concepts from the earlier literature, i.e.
supermodularity, a finite capacity for forming links, and pairwise link formation. Our
main contribution to the literature on assortative matching is to show which extra
conditions in combination with supermodularity lead to stability and efficiency in
networks with utility from indirect connections. Another key contribution is that we
show potential incompatibility between stability and efficiency and that policies that
create incentives to link can fix the issue. We also extend the framework of assortative
matching without externalities to a one-sided setting with many partners but without
restrictions on link structure (i.e. limited to clubs): Proposition 1 establishes that
sorting is stable using a novel measure of sorting which is tractable in equilibrium.
The only paper that investigates sorting in networks with externalities is de Martı́
and Zenou (2017); they also model type complementarity and positive spillovers.6
Their results show the existence of sorted networks that are stable yet inefficient
due to the lack of linking across types.7 Although this model is similar to ours,
there are crucial differences that motivate our analysis. The essential difference
is that we use exogenous complementarity which is independent of the network,
while de Martı́ and Zenou (2017) use endogenous complementarity. de Martı́ and
Zenou (2017) specifically assume that complementarity is strongest when the level of
sorting is high, while there is no complementarity when there is negative sorting (i.e.
5
Buchanan (1965) defines clubs as groups where one’s utility depends on all other members. This
means that clubs are networks with the implicit assumption that any agents of the same group are
all linked. In the networks literature, such groups are known as cliques.
6
Note that this paper was developed independently and without awareness of de Martı́ and
Zenou (2017).
7
See Propositions 1.ii, 4.iii in de Martı́ and Zenou (2017) for results on stable sorting; their
Proposition 6 contains results on inefficiency.

5

144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175

tendency to link with dissimilar types). This different assumption makes our results
considerably stronger than de Martı́ and Zenou (2017) when there are two types: we
establish that sorting constitutes the unique set of stable networks; we show there
exists a globally efficient network that is sorted but has connectivity between groups
and we demonstrate that this network is implementable through a simple policy, see
Proposition 4. In addition, our results also apply more generally as they are neither
limited to only five agents of each type, nor to sub-structures of within-type networks
being either stars or cliques, nor to only two types.
The essential difference between how we model complementarity here and how
de Martı́ and Zenou (2017) model it also implies that we interpret our results differently. First, our results are relevant in cases when we do not expect endogenous
complementarity (see example above). Second, the modeling of complementarity
also entails that the source of inefficiency is different. In our setup suboptimality
stems from misaligned incentives which entail there is a general incompatibility of
efficiency and stability of as in Jackson and Wolinsky (1996). Thus, as sorting is the
unique stable outcome, no one wants to volunteer to build the bridge between communities which increases overall welfare unless there is an outside readjustment of
the incentives, e.g. by policy as we explore or by allowing different contracts (Bloch
and Jackson, 2007). On the contrary, in de Martı́ and Zenou (2017) the network
with two connected communities, is both efficient and stable. Thus, suboptimality
is not due to incompatibility of efficiency and stability, but rather that agents ended
up in one of the pairwise stable networks characterized by low welfare.8
There is a vast literature on optimal networks under externalities. The field
has a long tradition and begins with the general formulation under the quadratic
assignment problem (Koopmans and Beckmann, 1957). The field of matching and
networks under externalities was revolutionized by Jackson and Wolinsky (1996)
who demonstrate that there is an incompatibility in networks between stability and
efficiency; Bloch and Jackson (2007) extend these results to show that the tension is
preserved when allowing for more coordination and more flexible transfers between
agents. Although Jackson and Wolinsky (1996) as well as Bloch and Jackson (2007)
show that the incompatibility between stability and efficiency holds generally, they
provide very little in terms of what structure inefficient networks can have. Our
8

The results in de Martı́ and Zenou (2017) do not rule out that there can exist stable networks
(e.g. some amount of connectivity between groups) that are more efficient than a sorted network.
This follows as de Martı́ and Zenou (2017) have multiplicity in equilibria and they only establish relative inefficiency between two networks (complete network and perfectly sorted network of
cliques).

6

176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198

contribution is to provide explicit structure to the incompatibility in the context of
sorting. This extension may seem small but it has important implications - sorting is
a fundamental pattern in empirical networks (McPherson et al., 2001) and therefore
we show that the incompatibility may hold widely.
The most relevant research on exogenous complementarity in networks is Johnson and Gilles (2000); Jackson and Rogers (2005); Galeotti et al. (2006); the first
assumes agents all have a unique type with linking costs proportional to their distance, while the two latter use an islands type of model (where agents have same
type). Johnson and Gilles (2000) shows existence of a pairwise stable equilibrium
with local connectivity between adjacent types, possibly with local cliques where all
agents within a given range are connected. Jackson and Rogers (2005) shows that
clustering and short paths are robust features among both pairwise stable networks
and efficient networks with full linkage among same type. Galeotti et al. (2006)
investigate minimally connected networks in a setup with one-sided link formation.9
There are other strands of literature on homophily in network formation e.g.
Currarini et al. (2009, 2010) and Bramoullé et al. (2012). Their approach, however,
is different: we use a one period model with strategic link formation, while they rely
on matching sequences that are dynamic and stochastic. Currarini et al. (2009, 2010)
investigate how differences in community sizes play a role in explaining empirical
phenomena, including homophily. Bramoullé et al. (2012) investigate the conditions
for long run integration of a network. Other literature has investigated the role of
homophily in a model combining referral networks and a labor market (Montgomery,
1991; Galenianos, 2018).

203

Paper organization. The paper proceeds as follows: Section 2 introduces the model;
Section 3 investigates sorting under no externalities; Section 4 analyzes the setting
with externalities, focusing on sorting and its potential suboptimality, and; Section
5 concludes with a discussion of assumptions. All proofs are found in Appendix
Appendix A.

204

2. Model

199
200
201
202

205
206
207

Let N = {1, .., n} constitute a set of agents. Each agent i ∈ N is endowed with a
fixed measure of type, xi ∈ X, where X ⊂ R is the set of (realized) types for agents
in N . Let x̄ = max X and x = min X. Define the vector of types X = (x1 , x2 , ..., xn ).
¯
9

Note that one-sided link formation is based on the setup of Bala and Goyal (2000) which only
requires the weaker equilibrium concept, Nash stability, as links do not need mutual acceptance.

7

208
209

210
211
212
213
214
215
216
217
218
219
220
221

222
223
224
225
226
227
228

229
230
231
232
233
234
235
236

Let the agents’ type be sorted in descending order according to their label such that
xl ≥ xl+1 for l = 1, .., n − 1.
Linking and networks. Two agents i, j ∈ N may link if they both accept it. Any of
the two agents who link may break the link without mutual consent. A link between i
and j is denoted ij ∈ µ, where the set µ consists of links and is called a network. The
set of all networks is denoted M = {µ| µ ⊆ µc }, where µc is the complete network in
which all agents are linked.
A coalition of agents, t, is a subset of agents (i.e. t ⊆ N ) such that t ∈ T , where
T is the power set of N excluding the empty set. For a given group, t, define X (t)
as the vector of types in descending order over each of the agents in t. A coalitional
move is a set of actions implemented by a coalition that moves the network from one
state to another. A move from µ to µ̃ is feasible for coalition t if added links, µ̃\µ,
are only formed between members of coalition t and deleted links, µ\µ̃, only contain
members of coalition t.
Network measures. The neighborhood, ν, is the set of agents who an agent links to:
νi (µ) = {j ∈ N : ij ∈ µ}. The number of neighbors is called degree and denoted
ki (·) for i. A path is a subset of links {i1 i2 , i2 i3 , ..., il−1 il } ⊆ µ where no agent is
reached more than once; the length of a path is the number of links in its set. The
distance between two agents, i, j, in a network is the length of the shortest path
between them - this is denoted pij : M → N0 ; when no path exists then the distance
is infinite.
Utility. The utility accruing to agent i is denoted ui . An agent’s utility equals
benefits less costs, expressed mathematically as ui = bi − ci . The aggregate utility
is denoted U (·). We model costs of linking indirectly through an opportunity cost
of linking. We do this through a (degree) quota on links, κ, which is the maximum
number of links for any agent, i.e. for i ∈ N , it holds ki (·) ≤ κ. We say there
is no linking surplus when all agents have a degree equal to the degree quota, i.e.
∀i ∈ N : ki = κ. The benefit to agent i is a weighted sum consisting of two elements;
network and individual value:
bi (µ) = Σj6=i wij (µ) · zij .

237
238
239

(1)

The network factor wij (µ) is a function of network distance. The individual link
value is zij , which measures the personal value to i of linking to j - the value is a
function of the two partners’ types zij = z(xi , xj ). The function z is assumed twice

8

243

differentiable as well as taking positive and bounded values.10 Let the total link value
be defined as the value of linking for the pair, i.e. Zij = zij + zji .
In order to derive results, a restriction of payoffs is necessary. The essential
feature of the total link value for sorting is complementarity in type:11

244

Definition 1. The link value has supermodularity if

240
241
242

Z(x, x̃) + Z(y, ỹ) > Z(x, y) + Z(x̃, ỹ),
245
246

247
248
249
250
251
252
253
254
255
256
257
258
259

260
261
262
263
264
265
266
267
268

∂2
Z(x, y)
∂x∂y

> 0. This entails:

x > ỹ, x̃ > y.

(2)

The network components are further restricted in the analysis under externalities
in Section 4.
The game framework. This paper explores a static setting of one period. Agents’
information about the payoffs of other agents is complete. Together the players,
action, utility and information constitute a game.
We assume that any pair of agents can transfer ‘utility’ between them. Let a
net-transfer from agent j to agent i be denoted as τij ∈ R such that τij = −τji ,
which implies non-wastefulness of utility. The matrix of net transfers is denoted τ .
Transfers can be exchanged by any pair of agents. We specifically assume that for
any pair of agents there is mutual dependence between transfers and their link, if
they have one. This entails that a transfer cannot be changed unless both agents
agree, otherwise the non-consenting agent can break the link. Conversely, if the link
is broken without mutual consent, then the transfers are set to zero. Although this
seems similar to Bloch and Jackson (2007), the conditionality here is only between
agents who are linked.
Stability. We define network stability using coalition moves. A coalition t is blocking
a network µ with net-transfers τ if there is a feasible coalition move from network µ
to network µ̃ with τ̃ where all members in t have a higher net-payoff after the move.
We employ two concepts of stability. The first is strong stability: this is satisfied
for a network if there exist transfers such that no coalition (of any size) may have
a feasible move that is profitable for all its members. The second concept, pairwise
(Nash) stability,12 is similar but has weaker requirements: it holds when there exist
transfers where it holds that no coalitions of at most two agents may block. A further
discussion of the stability concepts is found in Section 5.
10

The upper bound rules out an infinite number of links in equilibrium.
Complementarity between type corresponds to cheaper links between same/similar types used
in the models of Johnson and Gilles (2000); Jackson and Rogers (2005); Galeotti et al. (2006).
12
This is also known as bilateral stability, cf. Goyal and Vega-Redondo (2007).
11

9

279

Our pairwise definition of stability is stricter than that of Jackson and Wolinsky
(1996). However, the stricter requirement enables substitution of links (simultaneous
deletion and formation), which is a necessary requirement for establishing results in
the matching literature.
A noteworthy feature is that strong stability implies pairwise stability; thus any
condition valid for all pairwise stable networks also applies to any strongly stable
network. In addition, without utility from indirect connections (i.e. no spillovers),
every pairwise stable network is also strongly stable, see Lemma 1. Note also that
any strongly stable network requires efficiency (coalition of all agents can implement
any network). We use the efficiency property of strongly stable networks to derive
the structure of these networks in Proposition 5.

280

3. Analysis: no spillovers

269
270
271
272
273
274
275
276
277
278

281
282
283
284
285
286
287

288
289

This brief section analyzes the setting without utility from indirect connections.
We begin with defining our measure of sorting. The concept of sorting that we
employ is a generalization of the sorting when there is a single partner, such as in
Becker’s marriage market. The shape of sorting is such that a high type agent has
partners which weakly dominate in type when compared partner-by-partner with the
partners of a lower type agent. Note the comparison is done over the sorted set of
partners type X . The sorting pattern is mathematically defined as:
Definition 2. Sorting in type holds in µ if for all pairs i, j such that xi > xj it
holds that:
X (νi (µ)/{j})l ≥ X (νj (µ)/{i})l+l∗ ,

290

291
292

293
294

295
296
297

∀l ∈ {1, .., k ∗ },

where k ∗ = min(ki (µ), kj (µ)) and l∗ = max(kj (µ) − ki (µ), 0).
Our first result is that sorting in type emerges under the same conditions as in
Becker (1973) when network externalities are absent:
Proposition 1. If there is supermodularity and no externalities, then for any pairwise stable network there is sorting in type.
The proof of this proposition follows by establishing that a pairwise stable network must be strongly stable without externalities; then we use that strongly stable
networks are efficient and show that sorting in type must hold under efficiency.13
Note that the current proof relies on comparing partner order of l for i with order l + l∗ for j
in Definition 2. We conjecture that this can be relaxed to comparison partner of order l of i with
order l + l∗ of j.
13

10

298

299
300
301

302
303
304
305
306
307
308
309
310
311
312
313
314
315
316
317

4. Analysis: positive spillovers
We proceed to a more general context where indirect connections matter for
utility. Whenever we allow for externalities we restrict our attention to two forms of
linking utility.
(
δ pij (µ)−1 ,
constant decay,
wij (µ) =
(3)
1=1 (pij (µ)) + δ · 1∈[2,∞) (pij (µ)), hyperbolic decay,
where 1∈(1,∞) (l) is the Dirac measure/indicator function of whether 1 < l < ∞.
The first and more general setting is where utility from connections decays over
increasing distance at a constant exponential rate. This corresponds to benefits from
linking in the ‘connections-model’ from Jackson and Wolinsky (1996). The other case
is when externalities from indirect connections are discounted equally at any distance
if there is a connection, i.e. a finite path length. This second case is referred to as
hyperbolic decay and entails that there is no decay beyond that from distance one
(linked) to distance two.
The introduction of externalities to our framework implies that the pairwise utility no longer depends only on the total link benefits. As a consequence, sorting is not
guaranteed to be either stable or efficient. The intuition for this is straight forward:
externalities entail that the total welfare from sorting is internalized for the pair,
while the total welfare for indirect connections are not internalized. We see this by
inspecting the utility functions. Suppose that ĝ is a pairwise deviation such that
agents i, j form a link. Then the pairwise total net utility from deviation can be
expressed as follows under externalities:
X

ui (ĝ) + uj (ĝ) − ui (g) − uj (g) = Zij +

zkl · δ pkl (ĝ) − δ pkl (g)



(4)

k∈{i,j}, l∈N
/ \{i,j}
318
319
320
321

From the analysis in the previous section we found that, in the absence of externalities, sorting prevails. In the above equation this incentive to sort is captured
by the component Zij . Therefore, we see that the total benefits from sorting are
preserved for the pair.
The total benefits to all agents that accrue from agents i, j forming a link are:
X
U (µ̂) − U (µ) = ui (µ̂) + uj (µ̂) − ui (µ) − uj (µ) +
[ul (µ̂) − ul (µ)]
l∈N
/ \{i,j}

= ui (µ̂) + uj (µ̂) − ui (µ) − uj (µ) +

X

Zll0 · (wll0 (µ̂) − wll0 (µ))

l∈N
/ \{i,j}, l0 ∈N, l0 6=l

(5)
11

322
323
324
325
326
327

328
329
330
331
332
333
334
335
336
337
338

339
340

341
342

343
344

345
346

Inspection of Equation 5 informs us that the pairwise utility of linking does not
capture the aggregate gains from linking. Moreover, we see that the gains not captured correspond to the indirect benefits that others receive from the deviation. This
implies that there is a disparity between the pairwise incentives and total welfare:
the pairwise incentives capture the full benefits of sorting but not the full gains from
lower distances between agents.
4.1. Finite population
We begin with the situation where there are a finite number of agents. Before
starting the analysis of networks under externalities we define some useful concepts.
Naturally, we call networks perfectly sorted when the agent of each type only link
among themselves. A further important distinction is whether the subnetworks for
each type are connected among agents of the same type. Such connectivity is sufficient for agents to reap all the gains of utility from indirect connections when sorting
occurs if there is hyperbolic decay in spillovers. Finally, we want to ensure that there
is no surplus of links as this would imply wastefulness, which is not in the interest
of agents as they always benefit from linking. Combining these concepts we can
introduce our main concept, sorted connectivity of networks:
Definition 3. A network has perfect sorting if every linked pair of agents have
the same type.
Definition 4. A network is type connected if every two agents of the same type
is connected.
Definition 5. An agent i has link-surplus in a given network if i’s number of links
is lower than the degree quota.
Definition 6. A network is sort-connected if the network (i) is perfectly sorted,
(ii) is type connected and (iii) no agents have a link surplus in the network.

349

We now turn to type self-sufficiency, which requires that there is potential for
each type to perfectly sort and have no link surplus. This concept is important and
plays a critical role for the existence of sort-connected networks.

350

Definition 7. A type of agents x ∈ X is self-sufficient if nx > κ.

347
348

352

We briefly investigate the situation when type self-sufficiency does not hold, i.e.
nx ≤ κ for one or more types x ∈ X. This is seen from the following statement:

353

Proposition 2. Suppose there is supermodularity and there is not type self-sufficiency:

351

12

354
355

356
357
358

359
360
361
362
363
364
365
366
367
368
369
370
371
372
373
374
375
376
377
378

379
380
381
382
383
384
385

(i) if n ≤ κ + 1 then the complete network is the only pairwise stable network and
the only efficient network;
(ii) if n > κ + 1 and there are two types where nx̄ = nx , then every network where
¯
every agent has nx̄ − 1 same-type links, and κ − nx̄ + 1 cross-type links is stable
and efficient.
We move on to examining sorted connectivity in networks. We note that the
remainder of this subsection is restricted in two ways. First, by confining our analysis
to the setting where there is self-sufficiency for each type. Second, we exclusively
focus on the case of hyperbolic decay as it provides for more intuitive and more
immediate results without restrictions on the network. As noted earlier, a more
general exposition is found in Supplementary Appendix Appendix B.
The aim is to show that sort-connected networks are stable when the strength of
utility from indirect connections is low to moderate. Moreover, when the strength of
utility from indirect connections is moderate to high, the networks are suboptimal
despite fulfilling Becker’s complementarity condition, i.e. supermodularity. We will
see that the suboptimality arises because the network is under-connected relative to
the efficient network.
We begin our analysis by presenting an illustration of the situation. We want
to show that for strength of utility from indirect connections below the threshold,
δ stab , any network with sorted connectivity is also pairwise stable. Moreover, we will
show that there exist networks with higher aggregate utility when utility exceeds
another threshold, δ opt . In order to motivate and capture the intuition we provide
simplified results in Example 1. The example is based on hyperbolic decay of network
externalities, however, it can be easily adapted to constant decay.14 The example is
graphically represented in Figure 1.
Example 1. There are six agents; three of high type (1,2,3) and three of low type
(4,5,6). Moreover, there is supermodularity, degree quota of two (κ=2) and hyperbolic
decay. Define two networks: a network with sorted connectivity, µ = {12, 13, 23, 45, 46, 56},
see Figure 1.A; a sort-connected network with bridges (see Definition 8), which we
denote as µ̃ = {12, 23, 34, 45, 56, 61}, see Figure 1.C. We show in this example that,
for a range of decay-factors, µ is pairwise stable, yet suboptimal. In this setup there
is a unique move which is both feasible and payoff relevant.15 This move consists in
14

In an old paper version, Bjerre-Nielsen (2015), we compute the example under constant decay
of spillovers.
15
Under pairwise stability at most one link can be formed in a single move. As the value of every

13

1

6

2

1
5

3

4

6

2

5
3

(A): Segregated network, µ.
Pairwise stable if δ ≤ δ stab (Ẑ).

1
2

4

(B): Pairwise move by agent 1,
6 who form a link together and
remove links 13, 46.

6
5

3

4

(C): Connected network, µ̃.
Efficient if δ ≥ δ opt (Ẑ).

Figure 1: Sorted network is stable but inefficient.
The above three networks depict Example 1. The network in (A) is pairwise (Nash) stable for some
parameters and the network in (B) is the only kind of feasible deviation. The network in (C) is an
efficient network.
386
387
388
389

390
391
392
393
394
395

two agents forming a link across types and both participating agents delete a link.
Such a move could be agents 1,6 forming a link while deleting their respecetive links
to agents 3 and 4. We denote this network µ̂ = µ ∪ {16}\{13, 46} and we plot it in
Figure 1.B. Benefits for agents 1 and 6 from network µ and deviating from it are:
u1 (µ̂) + u6 (µ̂) = (1 + δ) · [z(x̄, x̄) + z(x, x)] + [1 + 2δ] · [z(x̄, x) + z(x, x̄)],
¯ ¯
¯
¯
= (1 + δ) · 12 · [Z(x̄, x̄) + Z(x, x)] + [1 + 2δ] · Z(x̄, x),
¯ ¯
¯
u1 (µ) + u6 (µ) = 2 · [z(x̄, x̄) + z(x, x)] = Z(x̄, x̄) + Z(x, x).
¯ ¯
¯ ¯
We can express the condition that the deviation to µ̂ is not pairwise profitable as:
u1 (µ) + u6 (µ) > u1 (µ̂) + u6 (µ̂). This condition is sufficient for pairwise stability due
to payoff symmetry in µ and no transfers.
We now turn to deriving the condition for segregation to be inefficient. The
aggregate benefits over all agents of the two networks, µ and µ̃, is expressed below in
the two equations.
U (µ̃) = (2 + δ) · [Z(x̄, x̄) + Z(x, x)] + [2 + 7δ] · Z(x̄, x),
¯ ¯
¯
U (µ) = 3 · [Z(x̄, x̄) + Z(x, x)].
¯ ¯
link is positive it follows that a move consisting only in deletion of a link always leads to a loss.
Thus, only coalition moves where new links are formed can be valuable. All links to same type
agents are already formed in network µ. Therefore, the only feasible move consists in forming a
link to agents of the other type.

14

Sorting is inefficient when: U (µ) < U (µ̃). The two inequalities governing pairwise
stability and inefficiency have the following positive solution:
δ stab (Ẑ) =
δ opt (Ẑ) =
396
397

398
399
400
401
402
403
404
405
406
407
408
409
410

411
412

413

414

415

416
417
418
419
420
421
422
423

Ẑ
,
Ẑ+1
Ẑ
9,
Ẑ+
2

Ẑ =

Z(x̄,x̄)+Z(x,x)
¯¯
2Z(x̄,x)
¯

− 1,

where δ opt and δ stab are thresholds for, respectively, when network µ becomes inefficient, and unstable when δ increases.
The example above demonstrates that sorting can be inefficient when there are
network effects despite there being complementarity in type, i.e. supermodular link
values. The inefficiency stems from a novel source - the pairwise formation of links.
The intuition is that under pairwise deviation the two agents do not internalize the
total value created for the other agents; number of indirect links between a high and
a low agent. Note that the above example has a close correspondence to Propositions
1 and 6 from de Martı́ and Zenou (2017) and that their results also holds only for
cliques with very few agents (≤ 5), see literature review.
We proceed with a generalization of the example above which holds for various
structures of the subnetworks within types and for multiple types. The aim is to
extend the above example to a less restrictive setting for sorted connectivity. Below
is our first general result where we establish sufficient and necessary conditions for
the existence of networks with sorted connectivity.
Proposition 3 (Existence). The set of sort-connected networks is non-empty if and
only if all of the following conditions hold:
i) there is self-sufficiency for each type;
ii) more than one partner is allowed.
iii) either the degree quota is even or there is an even number of agents of each type;
The conditions in Proposition 3 are listed in order of importance. The essential
condition is self-sufficiency, which ensures that there are enough links for each type
to perfectly sort. The second condition of the degree quota exceeding one, is obvious
as otherwise the problem would reduce to a simple one-to-one matching problem and
type connectivity would not be possible. The final condition requiring either even
numbered quota of links or even number of agents for each type is a little subtle. The
reason is technical; if both of these conditions are not met then the total demand for
links of the same type is uneven when there is no link surplus but each link takes up
15

424
425
426
427
428
429
430
431

a capacity of two and thus must be an even number; the implication is that perfect
sorting and no link surplus is incompatible when this even number condition is not
met. We discuss the choice of equilibrium concepts in the discussion found in Section
5.
We move on to investigate stability and optimality of the network structure. We
now generalize the thresholds from Example 1. These thresholds for stability and
optimality hold for any number of types and number of agents for each type. Note
that for optimality the value provided below is an upper bound of threshold value.

δ

stab

=

δ̄ opt =
432
433
434

435
436
437

438
439
440
441
442
443
444
445
446
447
448
449
450
451
452
453

min



Ẑx,x̃
Ẑx,x̃ +max(nx ,nx̃ )−|nx −nx̃ |·ẑx,x̃

min



Ẑx,x̃
Ẑx,x̃ + 12 nx nx̃

x,x̃∈X

x,x̃∈X



Ẑx,x̃ =

,



,

ẑx,x̃ =

Z(x,x)+Z(x̃,x̃)
2Z(x,x̃)

z(x, x̃)
Z(x, x̃)

−1

(6)
(7)

Using the first threshold above we can express our main result on the stability
of sort-connected networks. Note that an alternative version of the above theorem
under constant decay can be found in Appendix Appendix B in Theorem 3.
Theorem 1 (Stability). Suppose there is supermodularity, then every sort-connected
network is pairwise stable if δ ≤ δ stab ; moreover, if there are only two types and sortconnected networks exist, then every pairwise network is also sort-connected.
We have shown general stability of sort-connected networks. Moreover, when
there are only two types, our results from Theorem 1 are substantially stronger. We
establish that sorting is the unique pairwise stable outcome for low to moderate levels
of externalities (i.e. δ < δ stab ).
We emphasize that Theorem 1 and δ stab have implications for understanding the
instability of perfect sorting in networks. For sufficiently high levels of spillover, i.e.
δ > δ stab , it holds that sorted networks are never pairwise stable. The reason is
that agents of different types can benefit jointly by mutually forming a link and each
breaking a same type link.
One can view Theorem 1 as generalizing not only Example 1 but also Propositions
1.ii and 4.iii from de Martı́ and Zenou (2017), who require that there are very few
agents, two types and all agents of a given type link with one another.
We move on to discussing another main property of sort-connected networks,
namely optimality, i.e. whether the network structure is efficient. In order to state
our results we introduce a related network which has efficiency properties for moderate to high strength of utility from indirect connections.

16

454
455
456

457
458
459
460
461
462
463
464

465
466
467
468
469

470
471
472
473
474
475
476
477
478
479
480
481
482
483
484
485
486
487
488
489

Definition 8. Let a bridged, sort-connected network be a sort-connected network
where (i) for at least two types exactly one link is broken, (ii) each agent with a broken
link forms exactly one link to other agents across types who also have a link broken.
It is important to understand that in our model moving to a bridged, sortconnected network require two links to be established across types from a sortconnected network. This is a technical condition stemming from the fact that reducing the number of links among the same type by one frees up the capacity to
establish a link by two agents; as a consequence it is possible for two links across
types to be established. Using both of these possible links is important for establishing efficiency. It will turn out to also be important in the investigation of policy, see
Proposition 4.
Theorem 2 (Efficiency). Suppose there is supermodularity, then the thresholds for
efficiency and stability satisfy δ̄ opt < δ stab . Any sort-connected network is inefficient
when δ < δ opt where it holds that δ opt ≤ δ̄ opt . Finally, if there are two types then, sortconnected network are efficient when δ ≤ δ̄ opt , while bridged, sort-connected networks
are efficient for δ ≥ δ̄ opt .
The above theorem generalizes Example 1 by showing that under-connected networks with too little linking across sorted groups of agents occur more generally. It
also extends Proposition 6 from de Martı́ and Zenou (2017) by removing the restriction to two types and linking between all same type agents as well as doing away
with the limitation of having very few agents. Again, with only two types of agents
the results are considerably stronger. We can show that the threshold for inefficiency
now governs whether it is the sort-connected network or the bridged, sort-connected
network that is efficient.
A visualization of the computed thresholds of externalities when there are two
types is found in Figure 2. The thresholds are computed for varying population
size and varying strength of complementarity. These plots can be seen as providing
comparative statics along these two dimensions. The upper part of the figure keeps
the population size fixed while lower ones keep the complementarity strength fixed.
From inspection it is evident that both of the connection thresholds are approximately linear in log-log scale. This pattern suggests that both of the thresholds follow power-laws in the number of agents and strength of complementarity. Note that
it is also straightforward to mathematically derive these patterns from the threshold
definitions. Note also that it is possible to do a comparative static in the number of
types. For example, if we assume that all same type agents get a certain payoff and
cross type relations get some fraction of that, as in Jackson and Rogers (2005), then
17

490
491
492
493
494
495
496
497
498
499
500
501
502
503
504

increasing the number of islands keeps the gain from pairwise deviation constant,
but the gains in efficiency increase.
The remainder of this subsection will sketch a policy intervention that can mitigate the problem of suboptimal sorting by improving welfare through encouraging
connection. These interventions can be seen more generally as a design problem,
where the policy maker intervenes to induce a network that produces higher welfare.
The tool that the policy maker employs is providing incentives to agents for forming
specific links. Note that two agents of each type may need to be compensated. This
stems from the fact that when compensating one agent to establish a link across
types the agent to which it has deleted a link has an incentive to form a new link,
which will potentially destabilize the sub-networks for each type. We discuss this
assumption and how it relates to our choice of model in Section 5.
Define a link-contingent contract as a non-negative transfer, Cij , paid to i for
linking with another agent j. Denote the vector of link-contingent contract as C. We
start demonstrating our results on intervention through a continuation of Example 1.

505

Connection threshold,

Strength of complementarity: Z = 1.1
2

10

4

10

10

6

10

10

8

10

10

10

12

Stability
Efficiency
101

100

Connecting threshold,

100

10

10
10

102

103

104

105

4

3

10

6

10

5

10

8

10

7

10

9

101

101

102

102

103

104

Number of agents, n

105

10

1

10

3

10

5

10

7

100

Stability
Efficiency
101

Stability
Efficiency
101

106

Number of agents: n = 1000

Stability
Efficiency
Strength of complementarity, Z

Stability
Efficiency

10

106

1

100

1

10

2

Number of agents: n = 3

2

Strength of complementarity: Z = 100
10

10

Number of agents, n

Strength of complementarity: Z = 10

102

103

104

Number of agents, n

105

106

Number of agents: n = 100000
10

3

10

5

10

7

10

9

10

102

Strength of complementarity, Z

Stability
Efficiency

11

100

101

102

Strength of complementarity, Z

Figure 2: Thresholds for connecting.
Visualization of thresholds for connecting from Theorems 1 and 2. The upper part shows varying
sizes of populations and fixed strength of complementarity. The lower part has varying strength of
complementarity and fixed population sizes. It is assumed that there are two types which have an
identical number of agents.

18

506
507
508
509
510

Example 1 (continued) Let strength of utility from indirect connections satisfy
δ < δ stab and assume that there is a policy maker who can issue link-contingent
transfers as follows. We suppose that the policy maker offers conditional transfers
such that the pairwise net-utility for agents 1,6 and agents 3,4 from forming a link
satisfies:
Cij +Cji = − [(1 − δ) · (z(x, x) + z(x̃, x̃)) + (1 + 2δ) · z(x, x̃)]+ε,

511
512
513
514
515

ij ∈ 16, 34,

ε>0

Agents 1,6 and 3,4 have an incentive to form a link and break their existing links (i.e.
{13, 46}). This implies that a deviation from the sort-connected network µ to the
bridged, sort-connected network µ̃ is possible; see the networks depicted in Figure 1.
We round off the example by noting that if δ > δ opt , then the deviation to the bridged,
sort-connected network raises aggregate utility.

516
517
518
519

520
521
522
523

524
525
526

527
528
529

530
531

532
533
534
535
536
537
538

We now generalize the insight from the continuation of Example 1 into the following proposition. This proposition holds for an arbitrary number of agents when there
are two types. We need to define an auxiliary term to describe the interventions:
Definition 9. Let a network µ̃ be implementable from µ, τ given C if there exist
a sequence of tuples (µ0 , τ0 ), .., (µl , τl ) where µ0 = µ, µl = µ̃, and τl = τ such that:
for q = 1, .., l from µq−1 to µq is a feasible pairwise move which increases the pair’s
net-utility most given C, and; µ̃ is pairwise stable given τq and C.
Proposition 4 (Implementation). Suppose that there are two types, supermodularity
and δ < δ stab . It follows that a policy maker can implement a bridged, sort-connected
network from any sort-connected network.
The above result shows it is possible to have agents deviate to implement the
bridged, sort-connected networks by offering link-contingent contracts. By combining
the proposition with earlier results on inefficiency, it follows directly that:
Corollary 1. If conditions for Proposition 4 hold and δ > δ̄ opt it follows that implementening the bridged, sort-connected network will result in higher welfare.
The intuition of the corollary is that efficiency can be restored by compensating
certain agents. Recall that in our model conditionality of transfers exist only between
agents who are linked. This lack of conditionality for third parties implies that
agents cannot fully internalize positive spillovers. Therefore, it is not surprising that
efficiency is restored when allowing a third party, i.e. the policy maker, to transfer
utility conditional on certain links as has been shown previously (Bloch and Jackson,
2007). We note that Proposition 4 and Corollary 1 outline a centralized intervention
19

539
540
541
542
543
544
545

546
547
548
549
550
551
552
553

554
555
556

557
558
559

560
561
562

563
564
565
566
567
568
569
570

by a policy maker but it could also have been solved decentrally through conditional
transfer by other agents, as in the framework of Bloch and Jackson (2007).
We note that the individual compensation paid to agents for connecting to others
may not be equal. In particular, the payment may also depend on the types. This
is the case when there is both supermodularity and monotonicity in Z. If these
conditions hold, then agents may receive compensation that is increasing with their
type.
4.2. Infinite population - constant decay in spillovers
We finalize this section by investigating what pattern of linking is exhibited when
the count of agents becomes asymptotically infinite. In this large matching market
we examine asymptotic perfect sorting, i.e. when the measured share of links to
same-type agents converges to one. We employ the constant decay to measure utility
from indirect connections as hyperbolic decay yield infinite payoff for any connected
network with infinite number of agents. Note that we also use a stronger equilibrium
concept, strong stability, which allows for coordination between coalitions of any size.
Definition 10. Let asymptotic perfect sorting hold for a sequence of networks
sets, Mn , if for any network, µ ∈ Mn , where n → ∞, it holds that |{ij ∈ µ : xi =
xj }|/|µ| ' 1.
Define asymptotic independence as δ < (κ − 1)−1 . For large matching markets
the sufficient conditions for asymptotic perfect sorting to emerge in strongly stable
networks are:
Proposition 5. If there is supermodularity, a degree quota and constant decay with
asymptotic independence, then there is asymptotic perfect sorting for strongly stable
networks.
The result above demonstrates that the availability of many agents for linking
induces perfect sorting in strongly stable networks. It demonstrates the same prediction as the conclusion of Becker (1973) for the marriage market model but holds
in the presence of externalities with constant decay.
For deriving the result we exploit strong stability which implies that efficiency
holds. Therefore, it is sufficient to show that asymptotic efficiency requires asymptotic perfect sorting. Although efficiency is a unique property for strong stability
(and does not hold for weaker concepts) it can be argued that strong stability should

20

575

be seen as a refinement with desirable properties which makes it more likely when it
exists.16
We conclude this section by noting that we may interpret the result on sorting
for infinite populations differently; there is no loss from sorting when there are many
agents.

576

5. Concluding discussion

571
572
573
574

577
578
579
580
581
582
583
584
585
586
587
588
589
590
591
592
593
594
595
596
597
598
599
600
601
602

We have extended the assortative matching framework to a setting of networks.
We have shown that in a general context that Becker’s condition for sorting is still
essential for stability. However, the same condition is insufficient for efficiency (when
there is a finite population). The context is where types have enough members to
form a community among themselves. We have sketched a policy that can help
overcome this issue.
We have chosen to model costs implicitly via a degree quota in order to have
comparability with the matching literature. We expect, however, that our results
should easily translate to the standard connections model of Jackson and Wolinsky
(1996). In this other setup we expect that the intuition should transfer when limiting
the number of sub-networks within types to be either cliques or stars, as in de Martı́
and Zenou (2017). One advantage of translating the setup to the linear cost framework of the standard networks literature would be that the technical assumption of
either even degree or an even number of agents for each type would not be necessary.
Under hyperbolic decay one would also get a more natural efficient policy solution
requiring only a single agent of each type to bridge the gap between their respective
subnetworks.
Our analysis is based on other strict assumptions which we now review. We
begin by noting that search frictions are important and have received attention in
the literature (Chade et al., 2017) but for the sake of tractability we focus on a
frictionless model. There are also a number of restrictive assumptions on payoff. The
most crucial assumptions are payoff separability and fixed structure of externalities.
Further research could explore how results generalize to less restrictive utility from
indirect connections captured by the decay parameter, δ. For instance, does there
exist a set of criteria that are more general than constant or hyperbolic decay for
which our results hold. It is likely that our results are robust to including utility from
16

In some circumstances the existence of contracts where an agent may subsidize or penalize
another agent’s link formation with alternative agents may imply strong stability even if contracts
were limited to being pairwise specified, cf. Bloch and Jackson (2007).

21

620

network measures, e.g. triadic closure/clustering, that are common in the literature
within economics on networks. Other critical assumptions are supermodularity and
perfect transferability. Nevertheless, as mentioned in the introduction, these two
assumptions can be replaced by monotonicity in individual link values and perfect
non-transferability, which is also in line with some research on peer effects.17 Finally,
the model relies on some agents being of different types but it should be possible to
remove this assumption.18
Another caveat with our analysis, and stable networks in general, is that these
networks may not exist. We have shown some properties of existence under regularity
conditions of sort-connected networks, see Propositions 3 and 1. However, beyond
sort-connected networks we do not offer much in the case of externalities. The gross
substitutes conditions from Kelso and Crawford (1982), which ensure existence of
stable matchings in related settings, are not satisfied in our setting with externalities.19 Nevertheless, by changing the equilibrium concept we expect that some of
the lack of existence could be solved. One approach is using farsighted stability,
as in Chwe (1994); Dutta et al. (2005); Herings et al. (2009). Another approach is
using some approximative equilibrium concept e.g. cost of stability (the necessary
payments to induce stability) from Bachrach et al. (2009).

621

Appendix A. Proofs

603
604
605
606
607
608
609
610
611
612
613
614
615
616
617
618
619

622
623

624
625
626
627
628
629
630
631

Lemma 1. In the absence of network externalities then the set of strongly stable
networks is equivalent to the set of pairwise stable networks.
Proof. By definition it holds that any strongly stable network is pairwise stable.
Thus, we need to show that any pairwise network is strongly stable. This claim is
shown using similar to arguments to Klaus and Walzl (2009)’s Theorem 3.i.
Let µ with associated contracts τ be a network which is blocked by a coalition. It
will be shown that for every coalition t ∈ T that blocks, within the coalition there is
a subset of no more than two members that also wishes to block the network. Let µ̃
be the alternative network that the blocking coalitions implements through a feasible
coalition move and τ be the transfers associated with µ̃.
17

Or, more broadly, by generalized increasing in differences from Legros and Newman (2007).
The more extreme case is where all agents have different types, e.g., they exist in a ring with
local complementarities, similar to Johnson and Gilles (2000) who assume agents’ types are defined
on a line. In this setting it may be that stable networks have the property that agents only link
with the most similar agents and thus fail to connect with those further away.
19
The lack of gross substitutes is due to the fact that a change in one active link can imply a
change in the value of other links. This fact will violate gross substitutes.
18

22

632
633
634
635
636
637
638
639
640
641
642
643
644
645
646
647
648
649
650
651
652
653
654
655
656
657
658
659
660
661

662
663
664

It is always possible to partition the set of deleted links µ\µ̃ into two: (i) a
subset denoted µ̂ where for each link ij that can be deleted where one of the two
partners can benefit, i.e. it holds that either zij + τij − [ci (µ) − ci (µ\ij)] < 0 or
zji + τji − [cj (µ) − ci (µ\ij)] < 0; (ii) a subset denoted µ̆ where for each link ij neither
of the previous two inequalities are satisfied.
Suppose that the first partition is non-empty, i.e. µ̂ 6= ∅. However, as deleting
links can be done by a single agent on its own then the move only takes needs the
coalition of that agent to delete the link. Thus any part of a coalitional move that
only involves profitably removing links can be performed in parts by a coalition with
a single agent - therefore this move is also a pairwise block.
Thus it remains to be shown that the remaining part of coalitional move also
can be performed as a pairwise block, i.e. when forming µ̃\µ and deleting µ̆. This
part of the coalitional move must entail forming links as no links can be deleted
profitably. The set of formed links µ̃\µ can be partitioned into a number of |µ̃\µ|
feasible submoves of adding a single link while deleting links by each of the agents i
and j who form a link. The feasibility for each of the partitioned moves is always true
when there is a cost function as moves are unrestricted. It is now argued that each
of the partitioned moves are feasible when there is a degree quota. If the network
µ ∪ ij is feasible then the move of simply adding the link is feasible. If µ ∪ ij is not
feasible, then agents i and j can delete at most one link each and if both µ and µ̃
are feasible then this also feasible as the degree quota is kept.
For the coalitional move to µ̃ it must be that at least at least one link among
the implemented links µ̃\µ has a strictly positive value that exceeds the loss from
deleting at most one link for each of two agents forming the link. This follows as it
is known that deleting one or more links cannot add any value and thus must have
weakly negative value and that by definition the total value to the blocking coalition
must be positive. As every one of the partitioned moves is feasible, it follows that
for every coalitional move there are two agents who can form link while potentially
destroying current links and both be better off. In other words, for every coalition
that blocks, there is a pairwise coalition that blocks.
Proof of Proposition 1.. Suppose the claim is false. Let q be the lowest index for
which the condition fail: for all l < q it holds that X (νi (µ)/{j})l ≥ X (νj (µ)/{i})l+l∗
where l∗ = max(kj (µ) − ki (µ), 0). Thus there are two agents i0 , j 0 such that:
xj 0 = X (νj (µ))q , j 0 ∈ (νj (µ)\(νi (µ) ∪ {i})),
xi0 < X (νj (µ))q , i0 ∈ (νi (µ)\(νj (µ) ∪ {j})).

665
666

Recall k ∗ = min(ki (µ), kj (µ)). The argument why there must exist an agent i0 in
νj (µ) but not in (νj (µ)∪{j}) is that |{ι ∈ νi (µ) : xι < xj 0 }| > |{ι ∈ νj (µ) : xι < xj 0 }|.
23

667
668
669
670
671
672
673

674
675
676
677
678
679
680
681
682
683
684
685
686
687
688
689
690
691
692
693
694
695
696
697
698
699
700

701
702

This follows as by construction it holds that |{ι ∈ νi (µ) : xι < xj 0 }| = k ∗ − q + 1 and
|{ι ∈ νj (µ) : xι < xj 0 }| ≤ k ∗ − q.
The agents are such that xi > xj , xi0 < xj 0 as well as ij 0 , ji0 ∈
/ µ. However,
this fact implies that there is a violation of strong stability: agents i, i0 , j, j 0 can
deviate by destroying {ij, i0 j 0 } and forming {ij 0 , i0 j} and thus increase payoffs due to
supermodularity (cf. Equation 2). From Lemma 1 it follows that pairwise stability
is also violated if strong stability is violated. 
Proof of Proposition 2:. Condition (i) follows from the fact that it is possible for
every agent to be linked with one another. Moreover every link adds value. Thus as
a consequence every link can be formed and will add value both for the pair forming
and it at the aggregate level; thus the unique pairwise and efficient outcome must
be the complete network.
We move on to proving condition (ii). Suppose µ is a network where every agent
has nx̄ − 1 same-type links and κ − nx̄ + 1 cross-type links.
Efficiency of µ follows from three facts. Firstly, µ the maximum distance of 2
between any two agents as all same-type links are active and all agents have at
least one cross-type link; thus the potential benefits from indirect connections are
maximized (both for constant and hyperbolic decay). Secondly, the number of same
type links are maximized for all agents and this will maximize the benefits from
direct links; thus there must exactly nx̄ − 1 same type links. Finally, there can be
no link surplus because violation there exist a network where every agent has nx̄ − 1
same-type links and κ − nx̄ + 1 cross-type links and thus has no link surplus; this
must have strictly higher aggregate utility as every direct link increases utility.
Stability of µ follows from reviewing the feasible deviations. Let there be no
transfers between any agents. Firstly, deleting one or more links is profitable as
it lowers the agents own welfare. Secondly, forming a link requires deletion of one
or more links by both agents. Deleting more links than one will lower the utility
this only the deviations with deletion of a single link are relevant to consider - this
corresponds to substitution of a link. Substituting either a same type link for another
same type link or a cross type link for another cross type provides no change of utility
to the pair of agents deviating. Substituting a cross type link for a same type link
is not feasible. Substituting a same type link for a cross type link will lower the
utility as the indirect benefits are unchanged but the direct benefits must be lower
on aggregate due to supermodularity. 
Lemma 2. For every κ, n such that n > κ and n·κ is even there exists a network µn,κ
where all agents have exactly κ neighbors. Moreover, if κ ≥ 2 then µn,κ is connected.

24

703
704

705
706

Proof. Suppose n is even. Let % be the modulus operator. We can construct the
following networks.

µ̂n,κ = ij : i ∈ {1, ..., n2 }, j ∈ {( n2 + i % n2 ), ..., ( n2 + [i + κ − 1] % n2 }) , κ ≤ n2 ,
(
µ̂n,κ ,
κ ≤ n2 ,
µ̃n,κ =
µc \µ̂n,n−κ−1 , κ > n2 .
Letting µn,κ = µ̃n,κ is sufficient for n is even. When n is odd we know that κ is
even and thus we can use the following amended procedure instead:
(
n−1
+ ι,
κ ≤ n−1
2
2
ιn,κ (ι) = n−1
n−1
n−1
+ (ι + κ) % 2 , κ > 2
2

707


µn,κ = µ̃n−1,κ \ ij : i ∈ {1, .., κ2 }, j = ιn,κ (i) ∪ {ij : i = n, j ∈ (∪ι{1,.., κ } {ι, ιn,κ (ι)})}
2

708
709
710
711
712
713
714
715
716

We now show that if κ ≥ 2 it follows that µ̃n,κ is connected. Assume that n is
even and suppose κ ≤ n2 ; for any i ∈ N : i < n2 where i0 = i + 1 and let j = n2 + i + 1
where ij, i0 j ∈ µ̃n,κ ; thus for all i, i0 ∈ {1, .., n2 } it holds that pii0 (µ̃n,κ ) < ∞. In
addition, as for any i ∈ N : i ≤ n2 , j = n2 + i it holds that ij ∈ µ̃n,κ it follows that µ̃n,κ
is connected. If instead κ > n2 then by construction ii0 ∈ µ̃n,κ if either max(i, i0 ) ≤ n2
or min(i, i0 ) > n2 as ii0 ∈
/ µ̂n,n−κ−1 . Moreover, for i ∈ N : i < n2 and j = n2 +(i+κ) % n2
it holds that ij ∈
/ µ̂n,n−κ−1 ; thus ij ∈ µ̃n,κ . Therefore µ̃n,κ must be connected.
Assume instead that n is odd. By the above argument there are at least two
connected subnetworks consisting of agents in ∪ι{1,.., κ } {ι, ιn,κ (ι)} and agents who are
2

717

connected through agent, n, i.e. N \(∪ι{1,.., κ } {ι, ιn,κ (ι)}). If κ ≤
2

718
719
720

721
722
723
724
725

726
727

n−1
2

where i = κ2 ,

i0 = κ2 + 1 and j = n−1
+ κ2 + 1 then ij, i0 j ∈ µ̃n,κ and thus µ̃n,κ is connected. If
2
n−1
κ
0
κ > 2 where i = 2 , i = κ2 + 1 and j = n−1
+ (ι + κ + 1) % n−1
then ij, i0 j ∈ µ̃n,κ
2
2
and thus µ̃n,κ is connected.
Lemma 3. Suppose that minx∈X nx > κ, κ ≥ 2. If ∃i ∈ N such that:
a) |{i0 ∈ νi (µ) : xi0 = xi }| ≤ nx − 2;
b) mini0 ∈Nx \νi (µ) ki0 (µ) = κ, and;
c) maxi0 ∈Nx \νi (µ) |{i00 ∈ νi0 (µ) : xi00 6= x}| = 0;
then ∃i0 , i00 ∈ µ such that i0 , i00 ∈
/ νi (µ) and pi0 i00 (µ\{i0 i00 }) < ∞
Proof. Suppose that for i ∈ N the conditions a)-c) are met but the lemma is not
true. If i0 ∈ Nx and ii0 ∈
/ µ then there must exist some i00 ∈ Nx such that i0 i00 ∈ µ and
25

728
729
730
731
732
733
734
735
736
737
738
739
740
741
742
743
744
745

746
747
748
749
750
751

752

753
754
755
756
757
758
759
760
761
762

i00 ∈
/ νi (µ) due to conditions a)-c). If pi0 i00 (µ\{i0 i00 }) < ∞ then the proof is terminated
so we must assume pi0 i00 (µ\{i0 i00 }) = ∞.
As pi0 i00 (µ\{i0 i00 }) = ∞ then the network µ\{i0 i00 } has two components, µ0 , µ00 ⊆
µ\({i0 i00 }, where in each component µ0 or µ00 there are at least κ + 1 agents of type
x (as for any ι ∈ (νi0 (µ) ∪ νi00 (µ)) it holds that xι = x).
Agent i can at most be connected to one of i0 , i00 in µ\({i0 i00 }) as otherwise i0 , i00
would be connected in µ\{i0 i00 }. Denote the in subnetwork of {µ0 , µ00 } where i is part
of as µ̃ and define Ñ = {ι ∈ Nx \νi (µ) : ∃ι0 ∈ N : ιι0 ∈ µ̃}.
Let ι0 ∈ arg maxι∈i0 ,i00 pιi and iteratively ιl ∈ νιl−1 (µ), l ∈ N. Moreover, there must
be a unique path in µ\{i0 i00 } between any two agents ι, ι0 ∈ Ñ as otherwise iι, iι0 ∈
/µ
0
00
0
00
0
but pιι0 (µ̃\{i i }) < ∞; by changing the labels we could denote i = ι and i = ι and
we would have shown the existence of the desired pair of agents.
The fact here isP
a unique path between any twoPagents in Ñ entails that at level l
or below there are lq=0 (κ−1)q agents; thus nx ≥ lq=0 (κ−1)q . Let l be the minimal
q such that ∀ ∈ ι ∈ Ñ : piι ≤ q; as nx is finite such a q must exist. In addition, as
there is a unique path between agents in µ then any agent ι ∈ Ñ : pιι0 = l has only
one link, and thus its degree is less than κ (as κ ≥ 2). This violates the condition
that all i0 ∈ N where xi0 = x has ki0 = κ.
Proof Proposition 3.. The sufficiency of the conditions follows from Lemma 2 which
can be applied to the subset of agents associated with each type as ∀x ∈ X : nx > κ
and κ · nx ∈ 2N.
The necessity of the conditions are straighforward. If either condition i) or iii)
are violated then perfect sorting is not consistent with no-link surplus. If condition
ii) is violated then there can be no type connectivity. 
Proof Theorem 1..
Networks with sorted connectivity are stable Suppose µ that has sorted
connectivity. We will demonstrate there are thresholds on δ such that µ has pairwise
stability. We’re only interested in the minimal thresholds such that for all values of
externalities below those then stability holds. Thus it is sufficient to evaluate the
deviations from the network where the net gains are highest.
The losses from breaking a link ij ∈ µ can be shown to have bounded from below
such that: ≥ δ · (1 − Z(x, x)). Suppose that nx = κ + 1, x ∈ X then {ij ∈ µ :
xi = x, xi0 = x} is a clique (i.e. any i, i0 of type x are linked). This entails that
pii0 (µ\{ii0 }) = 2 and thus pii0 (µ\{ii0 }) < ∞. Suppose instead that nx > κ + 1, x ∈ X
then by Lemma 3 there exists some i, i0 , both of type x such that pii0 (µ\{ii0 }) < ∞.
26

763
764
765
766
767
768
769
770
771
772

Thus when evaluating losses at the threshold we can assume that when deleting some
link ij that i, j are connected in µ\{ij}. Although the length of the shortest paths
may increase, there will still be an indirect connection and therefore no loss of utility
for anyone but the two agents who lose their link. Therefore we assume throughout
that when evaluating thresholds if ii0 is deleted in a sort-connected network then
only agents i, i0 , who must be of same type, will each lose (1 − δ) · z(x, x) while no
other agents incur a loss.
Suppose two agents i, j of distinct types respectively x, x̃ deviate by forming a
link and delete a link each from µ. The total loss for i and j for deleting a link each
is:
(1 − δ) · [z(x, x) + z(x̃, x̃)] = (1 − δ) · (Ẑx,x̃ + 1) · Z(x, x̃).

773
774
775

The benefit gained for agent i for establishing a link to j is [1 + (nx̃ − 1) · (1 −
δ)] · z(x, x̃). Thus the total benefits gained for i and j from pairwise deviation can
be bounded as follows:
[1 + (nx − 1) · δ] · z(x, x̃) + [1 + (nx̃ − 1) · δ] · z(x̃, x),
= h1 + [max(nx , nx̃ ) − |nx − nx̃ | · ẑx,x̃ − 1] · δi · Z(x, x̃).

776
777
778

where ẑx,x̃ =

z(arg minx,x̃ nx , arg maxx,x̃ nx )
.
Z(x,x̃)

We can derive the threshold for pairwise stability, see definition of Ẑ from Eq.
(7). :
(1 − δ) · (Ẑx,x̃ + 1) · Z(x, x̃) = h1 + [max(nx , nx̃ ) − |nx − nx̃ | · ẑx,x̃ − 1] · δi · Z(x, x̃),
(1 − δ) · (Ẑx,x̃ + 1) = h1 + [max(nx , nx̃ ) − |nx − nx̃ | · ẑx,x̃ − 1] · δi ,
h
i
Ẑx,x̃ = max(nx , nx̃ ) − |nx − nx̃ | · ẑx,x̃ + Ẑx,x̃ · δ,
δ =

779
780
781

Ẑx,x̃
max(nx , nx̃ ) − |nx − nx̃ | · ẑx,x̃ + Ẑx,x̃

783
784

(A.1)

Thus we can establish a lower bound for δ stab (i.e. the upper bound in δ for
pairwise stability of µ) by taking theminimum of right-hand-side
 in Equation A.1;
Ẑx,x̃
stab
. 
thus it follows that: δ
= minx,x̃∈X max(n ,n )−|n −n |·ẑ +Ẑ
x

782

.

x̃

x

x̃

x,x̃

x,x̃

Pairwise stable networks have sorted connectivity when there are two
types We need to show that every pairwise stable network is sort-connected. As
there are only two types it holds that X = {x, x}. The outline of the proof is the
27

785
786

we show the conditions in the following order; we begin with perfect sorting, then
no link surplus, and finally type connectedness.

787
788
789
790
791

Perfect sorting We begin by supposing that µ is not perfectly sorted. We will
construct a sequence of feasible deviations and show that they are profitable. As this
part of the proof has considerable length it will be split into multiple sub-parts with
a label that makes it easier to navigate.

792
793
794
795
796
797
798
799
800
801
802
803
804
805
806
807

808
809
810

811
812
813

Sequence of deviations The sequence of feasible deviations will consist of splitting
up links between agents of different type and matching at even steps agents of type
x and at odd steps agents of type x̃.
We first define sequences of agents and of deviations as steps q = 1, 2, .., l where
l is the number of steps. At each step we define the types as xq = x, x̃q = x̃ if q is
even else vice versa.
Let the sequence of agent pairs, i0 j0 , i1 j1 , ... be defined as follows. Let agents
i0 , j0 ∈ N be such that xi 6= xj and ij ∈ µ; such i0 , j0 must exist if µ is not perfectly
sorted. Without loss of generality let xi0 = x and xj0 = x̃ where x, x̃ ∈ X. At step
q ∈ N let ιq = iq−1 if q is even else denote ιq = jq−1 . Also let ηq ∈ {iq−1 , jq−1 } : ηq 6= ιq .
The advantage of this notation it is easier to define which links are formed between
same type agents. Note that by construction we have that ι1 = i0 and η1 = j0 as
well as xιq = xq and xηq = xq .
Using the sequence of agent pairs we construct the sequence of deviations as
follows.
• At every step q = 1, .., l a link is ιq ηq (=iq jq ) is broken. We assume that broken
links are elements of the original set, i.e. ιq ηq ∈ µ and can only be broken once
ιq ηq ∈
/ ∪q−1
m=1 {ιm ηm }.
/ µ. This corresponds to iq iq−1 ∈
/µ
• At every step q = 1, .., l a link is formed ιq ι0q ∈
if q is odd and jq jq−1 ∈
/ µ if q is even. We assume that formed links are not
0
part of the original set µ and can only be formed once ιq ι0q ∈
/ ∪q−1
m=1 {ιm ιm }..
• Combining the broken and formed links we get the coalitional move relative to
µ:
∆µq =µ ∪ {ιq ι0q }\{ιq ηq , ι0q ηq0 }, q = 1, .., l − 1
(
µ ∪ {ιl ι0l }\{ιl ηl , ι0l ηl0 }, kιl (µ) = κ
∆µl =
µ ∪ {ιl ι0l }\{ιl ηl }, kι0l (µ) < κ
28

(A.2)
(A.3)

814
815

We note that the above sequence exists as we can always pick l = 1 and the
assumption of having a broken link and link formed are satisfied by assumption.

816
817
818

Feasible partners We have defined the sequences of agents and deviations. We
now restrict the set of partners at each step q for agent ιq for q = 1, .., l:
Nq = {ι ∈ N : xι = xq }
N̂q = {ι ∈ Nq \{ιq } : ιιq ∈
/ µ}

819
820

821
822
823
824

A property of N̂q is that N̂q 6= ∅; this follows as minx̂∈X nx̂ ≥ κ + 1. We will now
show that our restrictions on partner set has implications at each step q = 1, .., l:
• Let ι0q ∈ N̂q ; this implies that Eq. (A.4) holds. This follows as a violation of
Eq. (A.4) would imply that some agent ι00q of type xq would connected only
through ηq ; thus ιq could link with ι00q instead of ι0q and thus ιq can keep all its
connections to agents who it was already connected to via ηq .
|{ι ∈ N : xι = xq ∧ pιιq (µ) < ∞ ∧ pιιq (µ ∪ {ιq ι0q }\{ηq ιq }) = ∞}| = 0 (A.4)

825
826

• Suppose that Equation A.5 is violated for for q ∈ {1, .., l}. This is equivalent to
it holds for any ι0q ∈ N̂q where ηq0 ∈ νι0q (µ) that there is some other ι00q ∈ N̂q such
(1)

827

that pι0q ι00q (∆µq ) = ∞. Let ιq = ι0q . As Equation A.5 must hold for any ι0q ∈ N̂q
(m)

828
829
830

we can reproduce the argument iteratively and thus for ιq ∈ N̂q , q ∈ N there
(m)
(m+1)
(1)
(m)
is some ηq ∈ νι(m)
(µ) such that for some ιq
∈ N̂q \{ιq , .., ιq } it holds
q
that pι(1)
(m+1) (∆µq ) = ∞. However, as n < ∞ it follows that there for some
q ιq
(1)

831
832

(m)

(m)

q ∈ N that N̂q \{ιq , .., ιq } = ∅. Thus let instead ι0q = ιq ; for any ηq0 ∈ νι0q (µ)
there is no ι00q ∈ N̂q such that pι0q ι00q (µ) = ∞. This contradicts that Equation
(m)

833

A.5 is violated for agent ι0q = ιq .
|{ι ∈ N : xι = xq ∧ pιι0q (µ) < ∞ ∧ pιι0q (∆µq ) = ∞}| = 0

834
835
836
837
838

(A.5)

• Suppose Eq. (A.4) and (A.5) hold. We can demonstrate a variation of Eq.
(A.4) where pιιq (∆µq ) < ∞, i.e. the ι and ιq are connected despite the deletion
of ηq0 ι0q , see Eq. (A.6) below. The argument why Eq. (A.6) holds is as follows.
Suppose ∃ι ∈ N : pιιq (µ ∪ {ιq ι0q }\{ιq ηq }) < ∞ and pιιq (∆µq ) = ∞ and xι = xq .
If pιq ι0q (µ) < ∞ then as it also holds that pιq ι0q (∆µq ) < ∞ it follows that
29

839
840
841

pιι0q (µ) < ∞ and pιι0q (∆µq ) = ∞ which violates Eq. (A.5). Thus it must
be that pιq ι0q (µ) = ∞. Suppose instead pιq ι0q (µ) = ∞. Then it must be that
pιηq0 (µ) < ∞ and thus pιι0q (µ) < ∞ as ι0q ηq0 ∈ µ which violates that pιq ι00q (µ) = ∞.
|{ι ∈ N : xι = xq ∧ pιιq (µ) < ∞ ∧ pιιq (∆µq ) = ∞}| = 0

842
843

Gains from deviation We now move on to describing the gains to individuals from
deviating. We assume initial transfers satisfy:
−τi0 j0 > (1 − δ) · z(x̃, x̃) − [1 + (nx̃ − 1) · δ] · z(x̃, x).

844
845
846

q=l0

848

∆Uq =

l−2
X

∆Ûq + uι0l−1 (∆µl−1 ) − uι0l−1 (µ) + uιl0 (∆µl0 ) − uιl0 (µ)

/ νιq (µ), xι0l = xl and let
Suppose that at every q ∈ N : q < l it holds that ι0q ∈
0
ηl ∈ νι0l (µ). ) and let:
∆Ûq = uiq (∆µq+1q:even ) − uiq (µ) + ujq (∆µq+1q:odd ) − ujq (µ)

850

851
852
853
854
855

(A.8)

q=l0

∆Uq = uιq (∆µq ) − uιq (µ) + uι0q (∆µq ) − uι0q (µ)

849

(A.7)

The above inequality must hold for either type x or x̃ as we substitute labels for
i, j as well as x, x̃ due to Υ > 0.
By inserting i, j for ι, η we yield the following expression:
l−1
X

847

(A.6)

(A.9)
(A.10)

We define the auxiliary term Υ below which is useful for bounding the gains from
deviation. As δ < δ stab it follows from Equation A.1 that Υ > 0.
Υ = (1−δ)·[z(x̄, x̄)+z(x, x)]−[1+(nx −1)·δ]·z(x, x̄)−[1+(nx̄ −1)·δ]·z(x̄, x). (A.11)
¯
¯ ¯
¯
¯
Gains for ιl : As Eq. (A.4) holds it follows that net gains for ιq from deleting the
link with ηq while forming a link together with ι0q can be bounded: the upper bound
of losses is when a connection is lost to all agents of type x̃q : [1+(nq −1)·δ]·z(xq , xq );
the lower bound of gains is (1 − δ) · z(xq , x̃q ) as the distance between ιq ι0q is shortened
to 1.
uιq (µ ∪ {ιq ι0q }\{ιq ηq }) − uιq (µ) ≥ (1 − δ) · z(xq , xq ) − [1 + (nq − 1) · δ] · z(x(A.12)
q , x̃q )

856
857

Analogue to the derivation of Ineq. (A.12) the net gains are bounded when Eqs.
(A.5) and (A.6) are satisfied:
min [uι (∆µq ) − uι (µ)] ≥ (1 − δ) · z(xq , xq ) − [1 + (nq − 1) · δ] · z(xq , x̃q ), (A.13)

ι∈{ιq ,ι0q }

30

859

The first and foremost implication of Ineq. (A.13) and the fact that xiq =
6 xjq is
that:
uiq (∆µq+1odd (q) ) − uiq (µ) + ujq (∆µq+1even (q) ) − ujq (µ) ≥ Υ.
(A.14)

860

Another implication of Ineq. (A.7) when combined with Ineq. (A.13) is that:

858

uι1 (∆µ1 ) − uι1 (µ) − τι1 η1 ≥ (1 − δ) · z(x, x) − [1 + (nx − 1) · δ] · z(x, x̃) − τi0 j0
uι1 (∆µ1 ) − uι1 (µ) − τι1 η1 ≥ Υ
(A.15)
861
862

Furthermore, we can restrict transfers as follows. In order for ∆µq not to be a
profitable pairwise deviation it must hold that:
uιq (µ) + uι0q (µ) + τι0q ηq0 + τιq ηq ≥ uιq (∆µq ) + uι0q (∆µq )
τι0q ηq0 ≥ ∆Uq + τηq ιq

863
864
865

0
= ιq and thus
We can rewrite the above inequality using that ι0q−1 = ηq , ηq−1
0
= τηq ιq . We also substitute in Equation A.9 and assume the above inequality
τι0q−1 ηq−1
holds for any q < l:
0
0
τι0l−1 ηl−1
≥ ∆Ul−1 + τι0l−2 ηl−2

0
≥
τι0l−1 ηl−1

l−1
X

∆Uq + τι0l0 −1 ηl00 −1

(A.16)

q=l0
866

0
As τηl ιl = τι0l−1 ηl−1
and −τιl ηl = τηl ιl it follows that using Equation A.8:

−τιl ηl ≥

l−1
X

∆Uq + τι0l0 −1 ηl00 −1

q=1

=

l−2
X

∆Ûq + uι0l−1 (∆µl−1 ) − uι0l−1 (µ) + uι1 (∆µ1 ) − uι1 (µ) + τι00 η00

q=1

=

l−2
X

∆Ûq + uηl (∆µl−1 ) − uηl (µ) + uι1 (∆µ1 ) − uι1 (µ) − τι1 η1

(A.17)

q=1
867
868
869

Gains for partners of ιl : link surplus We will now examine and find bounds on
the benefits of deviating when we assume that kι0l (µ) < κ. As Eq. (A.4) holds it
follows that
uι0l (µ ∪ {ιl ι0l }\{ιl ηl }) − uι0l (µ) ≥ (1 − δ) · z(xl , xl ),
31

870

and thus uι0l (µ ∪ {ιl ι0l }\{ιl ηl }) > 0.
uιl (∆µl ) − uιl (µ) − τιl ηl ,
≥ uιl (∆µl ) − uιl (µ) + uηl (∆µl−1 ) − uηl (µ) +

l−2
X

∆Ûq + uι1 (∆µ1 ) − uι1 (µ) − τι1 η1 ,

q=1

≥

l−1
X

∆Ûq + uι1 (∆µ1 ) − uι1 (µ) − τι1 η1 .

(A.18)

q=1
871
872
873

We now apply Ineqs. (A.14) and (A.15) to the above expression which implies
that the gains for ιl from deviating are bounded below by l · Υ. As we have that
Υ > 0 it follows that:
uιl (µ ∪ {ιl ι0l }\{ιl ηl }) − uιl (µ) − τιl ηl > 0

874
875

(A.19)

Combining that both ιl , ι0l have incentive to deviate it follows their joint deviation
is profitable which violates pairwise stability. Thus it must be that kι0l (µ) = κ.

876

Gains for partners of ιl : dropping same type partner with no loss of connectivity
Suppose there exists ι0l ∈ N̂l , ι00l ∈ N̂l \{ι0l } such that ι0l ι00l ∈ µ, pι0l ι00l (µ\{ιl ηl , ι0l ι00l }) <
∞ and τι0l ι00l ≤ 0. This entails that uι0l (∆µ̂l ) − uι0l (µ) ≥ 0 where ∆µ̂l = µ ∪
{ιl ι0l }\{ιl ηl , ι0l ι00l }. This follows from uι0l (∆µ̂l ) − uι0l (µ) = uι0l (∆µ̂l ) − uι0l (µ ∩ ∆µ̂l ) −
[uι0l (µ ∩ ∆µ̂l ) − uι0l (µ)] and uι0l (∆µ̂l ) − uι0l (µ ∩ ∆µ̂l ) ≥ 1 − z(x, x) and uι0l (µ ∩ ∆µ̂l ) −
uι0l (µ) = 1 − z(x, x). As τι0l ι00l ≤ 0 it follows that that utility for ι0l is:
uι0l (∆µ̂l ) − uι0l (µ) − τι0l ι00l ≥ 0.
877
878

And utility for ιl can bounded be as follows using Inequality A.12 for uιl (∆µ̂l ) −
uιl (µ) as Equation A.4 holds :
uιl (∆µ̂l ) − uιl (µ) − τιl ηl
= uιl (∆µ̂l ) − uιl (µ) + τηl ιl
l−1
X
≥
∆Uq + uιl (∆µ̂l ) − uιl (µ) + τj0 i0
q=1

=

l−2
X

∆Ûq + uιl (∆µ̂l ) − uιl (µ) + uηl (∆µl−1 ) − uηl (µ) + ui0 (∆µ1 ) − ui0 (µ) − τi0 j0

q=1

≥ l·Υ
> 0

(A.20)
32

879
880
881

The above inequalities entails that ιl , ι0l can deviate profitably pairwise; this is a
violation of pairwise stability and thus cannot be true. Thus there exists no ι0l ι00l ∈ µ
such that ι0l ∈ N̂l , ι00l ∈ N̂l \{ι0l } as well as pι0l ι00l (µ\{ιl ηl , ι0l ι00l }) < ∞ and τι0l ι00l ≤ 0.

882
883
884
885
886
887
888

Gains for partners of ιl : only same type partners. Suppose that ∀ι0l ∈ N̂l : @ηl0 ∈
νι0l (µ\ ∪lq=1 {ιq ηq }) : xηl0 6= xl . This entails that ∀ι0l ∈ N̂l : @ηl0 ∈ νι0l (µ) : xηl0 6= xl
as kι0l (µ\ ∪lq=1 {ιq ηq }) = kι0l (µ). By Lemma 3 it follows there exists ι0l , ι00l ∈ N̂l \νi (µ)
such that pι0l ι00l (µ\{ι0l ι00l }) < ∞, ι0l ι00l ∈ µ and τι0l ι00l ≤ 0 which by the arguments above
cannot be true. Therefore there has to exist some ι0l ∈ N̂l for which there is an agent
ηl0 ∈ νι0l (µ\ ∪lq=1 {ιq ηq }) where it holds that xηl0 6= xl .

889
890
891
892
893
894
895
896
897

Gains for partners of ιl : link is already broken. We shown above that there must
exist some partner ηq0 of different type than ι0q such that ι0q ηq0 ∈ µ. However, there
can only be a finite number of such links. Therefore, after a number of broken links
there will be only be duplicate links left, i.e. ι0l , ηl0 ∈ (µ ∩ ∪lq=1 {ιq ηq }). That is for
some l0 < l it holds that either ιl , ηl = ιl0 , ηl0 if l − l0 is even or ιl , ηl = ηl0 , ιl0 if l − l0
is odd.
0
If l − l0 is odd, then τι0l0 −1 ηl00 −1 = −τι0l−1 ηl−1
and therefore we can reduce the Inequality A.16:
0 ≥

l−1
X

[uιq (∆µq ) − uιq (µ) + uι0q (∆µq ) − uι0q (µ)] + 2τι0l0 −1 ηl00 −1

q=l0

=

l−2
X

∆Ûq + uι0l−1 (∆µl−1 ) − uι0l−1 (µ) + uιl0 (∆µl0 ) − uιl0 (µ) + 2τι0l0 −1 ηl00 −1

q=l0

=

l−2
X

D

∆Ûq + 2 · u

ηl00 −1

(∆µ ) − u
l0

ηl00 −1

E

(µ) + τ

ι0l0 −1 ηl00 −1

q=l0

=

l−2
X

0

*
∆Ûq + 2 ·

uηl00 −1 (∆µl0 ) − uηl00 −1 (µ) +

q=l0

=

l−2
X

l −1
X

+
∆Uq + τι00 η00

q=1

∆Ûq + 2 ·

q=l0

l0 −1
X

∆Ûq + 2 · [uι1 (∆µ1 ) − uι1 (µ) − τι1 η1 ]

q=1
0

≥ (l + l ) · Υ
> 0,
898

thus there must be a feasible pairwise deviation for some agent pair ιl , ι0l where
33

899
900
901

q ∈ [[1, l]].
0
If l − l0 is even then τι0l−1 ηl−1
= τι0l0 −1 ηl0 −1 ; thus Inequality A.16 for no pairwise
Pl−1
deviation becomes: 0 ≥ q=l0 ∆Uq . This can in turn be rewritten as follows:
0≥

l−2
X

∆Ûq + uι0l−1 (∆µl−1 ) − uι0l−1 (µ) + uιl0 (∆µl0 ) − uιl0 (µ)

q=l0
902
903
904
905

P
0
0
Using that ιq = ηq−1
and ηl00 −1 = ηl−1
we get: 0 ≥ l−1
q=l0 ∆Ûq . Recall that for all
q ∈ N : q < l it holds that ∆Ûq ≥ Υ where Υ > 0. Thus there must be a feasible
pairwise deviation.
We have now shown that the network µ has perfect sorting.

906
907
908
909
910
911
912
913

No link surplus Suppose that µ has link surplus. This would entail that ∃i ∈ N :
0
0
ki (µ) < κ. As
/ µ. Suppose that
P nx > κ it must0 be that ∃i ∈ N : xi0 = 0xi , ii ∈
ki0 < κ then ι∈{i,i0 } [uι (µ ∪ {ii }) − uι (µ)] > 0 and thus ii can be formed profitably
pairwise. Moreover, as ki0 (µ) = κ it follows that ∃i00 ∈ νi0 : ii00 ∈
/ µ, xi00 = xi . By
Lemma 3 it follows there exists ι, ι0 ∈ Ñ \νi (µ) such that pιι0 (µ\{ιι0 }) < ∞, ιι0 ∈ µ
andPτιι0 ≤ 0. This entails that uι (µ) − uι (µ\{ιι0 }) + τιι0 ≤ (1 − δ)z(x, x). Moreover,
as j∈{i,ι} [uj (µ ∪ {iι}\{ιι0 }) − uj (µ\{ιι0 })] ≥ (1 − δ) · Z(x, x) it holds that:
X
[uj (µ ∪ {iι}\{ιι0 }) − uj (µ)] − τιι0 ≥ (1 − δ) · z(x, x)
j∈{i,ι}

914
915
916

.
Thus i, ι can deviate profitably pairwise which contradicts pairwise Nash stability. Therefore it must be that that µ has no link-surplus.

917
918
919
920
921

Type connected Suppose that µ is not type connected. As µ we have established
perfect sorting and no-link surplus there exist i, i0 , j, j 0 ∈ N : xi = xi0 = xj = xj 0 and
ij, i0 j 0 ∈ µ and pii0 (µ) = ∞. Without loss of generality we assume that τij , τi0 j 0 ≤ 0
(otherwise we could simply switch identities some i’s and j’s). This entails:
min [uι (µ\{ij, i0 j 0 }) − uι (µ)] + τij + τi0 j 0 ≤ 2(1 − δ) · z(x, x)

ι∈{i,i0 }
922

Also we have that:
min0 [uι (µ ∪ {ii0 }\{ij, i0 j 0 }) − uι (µ\{ij, i0 j 0 })] ≥ (κ + 1) · (1 − δ) · z(x, x)

ι∈{i,i }
923
924
925

P
This entails that ι∈{i,i0 } [uι (µ ∪ {ii0 }\{ij, i0 j 0 }) − uι (µ)] − τij − τi0 j 0 ≥ κ · (1 − δ) ·
Z(x, x); thus i, i0 can deviate profitably. Thus we have established each of the three
properties are necessary for pairwise stability. 
34

926

927
928
929
930
931
932
933
934
935

Proof of Theorem 2.
Inefficiency of sort-connected networks We aim to prove that there exists
a threshold δ opt such that if δ > δ opt then there exists a network which has higher
aggregate utility than any network with sorted connectivity.
Suppose µ is sort-connected and let µ̂ be a bridged, sort-connected network such
that only two distinct types x, x̃ have links across. Denote two agents of type x
who link across types as i, i0 and those of type x̃ who link as j, j 0 . This entails that
µ̂ = µ ∪ {ij, i0 j 0 }\{ii0 , jj 0 }. It follows that the loss in aggregate utility is captured
by Eq. (A.21). The gain in aggregate utility follows Eq. (A.22). The aggregate
net-gain in utility is captured by Eq. (A.23).
U (µ\{ii0 , jj 0 }) − U (µ) = − (1 − δ)[Z(x, x) + Z(x̃, x̃)]
(A.21)
0
0
U (µ̂) − U (µ\{ii , jj }) =[δ · (nx nx̃ − 2) + 2] · Z(x, x̃)
(A.22)
U (µ̂) − U (µ) = − (1 − δ)[Z(x, x) + Z(x̃, x̃) − 2Z(x, x̃)] + δnx nx̃ · Z(x, x̃)
(A.23)

936
937
938
939
940
941
942
943

The derivative of Eq. (A.23) wrt. δ is Z(x, x) + Z(x̃, x̃) − 2Z(x, x̃) + nx nx̃ · Z(x, x̃)
Due to supermodularity it holds that Z(x, x) + Z(x̃, x̃) − 2Z(x, x̃) > 0. Therefore,
U (µ̂) − U (µ) is monotone increasing in δ. Moreover, U (µ̂) − U (µ) = nx nx̃ Z(x, x̃) > 0
when δ = 1 and (µ̂)−U (µ) = −[Z(x, x)+Z(x̃, x̃)−2Z(x, x̃)] < 0 when δ = 0. As both
aggregate losses and gains are continuous in δ it follows by the intermediate value
theorem that that there exist a threshold δ opt such that if δ > δ opt then U (µ̂) > U (µ).
opt
For any two types we can compute a threshold δx,x̃
where gains equal losses as
below. We use definition of Ẑ from Eq. (7).
(nx · nx̃ ) · Z(x, x̃) · δ = 2(1 − δ) · (Ẑx,x̃ ) · Z(x, x̃),
(Ẑx,x̃ + 12 nx · nx̃ ) · δ = Ẑx,x̃ ,
δ =

944
945

Ẑx,x̃
Ẑx,x̃ + 12 nx · nx̃

.

(A.24)

stab
For each pair of types we can compare with the threshold for stability δx,x̃
from
Eq. (A.1).

35

opt
stab
δx,x̃
>δx,x̃


Ẑx,x̃
Ẑx,x̃
>
Ẑx,x̃ +max(nx ,nx̃ )−|nx −nx̃ |·ẑx,x̃
Ẑx,x̃ + 12 nx · nx̃
1
nx · nx̃ > max(nx , nx̃ ) − |nx − nx̃ | · ẑx,x̃
2
1
nx · nx̃ + |nx − nx̃ | · ẑx,x̃ > max(nx , nx̃ )
2
946
947
948
949
950
951

952
953
954
955
956
957
958
959
960
961
962
963

As it holds both that ẑx,x̃ > 0 and that nx ·nx̃ > max nx , nx̃ (because min nx , nx̃ >=
opt
opt
stab
2) it follows that δx,x̃
< δx,x̃
. As a consequence it must be that minx6=x̃ δx,x̃
<
stab
minx6=x̃ δx,x̃ . In other words, this implies that the dominance hold globally for the
threshold δ̄ opt < δ stab . As we only evaluated bridged, sort-connected networks where
two types link across there may exist lower thresholds for optimality δ opt ≤ δ̄ opt . By
construction it holds that δ opt < δ stab .
Efficiency of networks Our next aim is to show the following properties when
there are only two types: (i) δ opt = δ̄ opt ; (ii) for δ ≤ δ opt it holds that any sortconnected network is efficient; and (iii) for δ ≥ δ opt any bridged, sort-connected
network is efficient.
Property (i). As there are only two types it follows that the only kind of bridged,
sort-connected network is one where two agents of each of the two types break a
link and form new links across. The threshold for optimality for this bridged, sortconnected can be computed from Eq. (A.24).
In order to prove properties (ii) and (iii) we want to show there are only two
classes of networks which can be efficient: the sort-connected and the bridged, sortconnected. We begin by noting that utility under hyperbolic decay (from Equation
3) can be expressed as:
wij (µ) = (1 − δ)1=1 (pij (µ)) + δ · 1∈[1,∞) (pij (µ)).

964

Thus total utility from the network has the following form:
X X 

U (µ) =
(1 − δ) · 1=1 (pij (µ)) + δ · 1∈[1,∞) (pij (µ)) · z(xi , xj ).

(A.25)

(A.26)

i∈N j∈N,j6=i
965
966

The form for aggregate utility in Equation A.26 has the advantage that it is easier
to perform optimization on. From inspection we see that if a network is connected
36

967
968
969
970
971
972
973
974
975
976
977
978
979
980
981
982
983
984
985
986
987
988
989
990
991
992
993
994
995
996
997
998
999
1000
1001
1002
1003
1004

then indirect term in the weights, δ · 1∈[1,∞) (pij (µ)), is one for all edges, and as a
consequence the aggregate utility attains its maximal value.
We first restrict ourselves to look at perfectly sorted networks. If it holds that each
subnetwork µx ⊆ µ consisting of all links within a given type is connected then the
argument made above, that the aggregate utility from indirect links (i.e. stemming
from δ · 1∈[1,∞) (pij (µx )) = 1 for xi = xj , i 6= j in Equation A.26), is maximized
(conditional on perfect sorting). Finally, it must be that each subnetwork has no
link surplus. This follows as there exists a subnetwork µ̃x with no link surplus which
is connected from Lemma 2. Thus any link surplus would imply inefficiency of µx
as it would hold P
that the number of links
P between type x would be lower than
1
(p
(µ̃
))
>
the possible, i.e.
x
ij∈µx 1=1 (pij (µx )), and thus provide lower
ij∈µ̃x =1 ij
welfare by Equation A.26. As any network with sorted connectivity obtains exactly
the same utility we know that this set constitutes the set of networks with highest
aggregate utility among networks with perfect sorting. We know from Proposition 3
that the set of networks with sorted connectivity is non-empty. We have thus shown
that the set of networks with sorted connectivity are efficient among perfectly sorted
networks.
We proceeed with analyzing efficient networks among those without perfect sorting. Assume that a network µ is not perfectly sorted. Suppose further that µ is connected. Then the total utility from indirect links is maximized as 1∈[1,∞) (pij (µ)) = 1
for every i 6= j. The utility accruing from (direct) links stems from the term
1=1 (pij (µ)) in Equation A.26. Due to supermodularity the utility from (direct) linking will be maximized if there is perfect sorting, however, this is not feasible as we
require links across the two types. The minimal required links across types are two
for every type. This follows as at least one link across types is required and thus the
number of same type links must be at least one lower. Therefore, the highest attainable number of links within same type is nx2κ −1 with two links across. Having nx2κ −1
same type links and two cross-type links as well as type connectivity correspond exactly to the definition of bridged, sort-connected networks. Any other network which
is not perfectly sorted can also at most have nx2κ −1 same type links. This implies that
the bridged, sort-connected has maximal benefits possible from direct (links) subject
to being perfectly sorted. Due to being connected it also has the maximum number of indirect benefits. It remains to show that the set of bridged, sort-connected
networks is non-empty; we can construct a bridged, sort-connected network from a
sort-connected network as µ̂ = µ̂ ∪ {ij, i0 j 0 }\{ii0 , jj 0 } where xi = xi0 , xj = xj 0 , xi 6= xj
and µ is sort-connected. We verify the that by construction µ̂ the has the feature of
being connected (as the subnetworks for each type are connected if we choose each
subnetwork using Lemma 2) and there are exactly nx2κ − 1 links of same type links
37

1005
1006
1007
1008
1009
1010
1011

1012
1013
1014
1015

for each type. Thus, we have determined that the bridged, sort-connected network
must maximize aggregate utility among networks that are not-perfectly sorted.
We have established there are only two networks which can be efficient. We know
from Eq. (A.24) that if δ < δ opt then the payoff from sort-connected network exceeds
the payoff from bridged, sort-connected networks and vice versa. Therefore, when
δ ≤ δ opt then the sort-connected network is efficient, however, when δ ≥ δ opt then
the bridged, sort-connected network is efficient. 
Proof Proposition 4.. Let µ ∈ M̂ and δ < δ stab . By construction there exists a
network µ̃ which has higher aggregate utility. Let the two pairs of agents ii0 , jj 0 be
agents such that µ̃ = µ ∪ {ij, i0 j 0 }\{ii0 , jj 0 } and xi = xi0 = x and xj = xj 0 = x.
Specify a link-contingent contract to i, j where µ̂ = µ ∪ {ij}\{ii0 , jj 0 } such that:
∀ιι0 ∈ {ij, i0 j 0 } :
0

0 0

Cιι0 + Cι0 ι ≥
0 0

∀ιι ∈
/ {ij, ji, i j , j i } :
1016
1017
1018

Cιι0

1
2 [Z(x, x)

+ Z(x̃, x̃) − 2Z(x, x̃)],

= 0.

(A.27)
(A.28)

By Theorem 1 we know that µ is pairwise stable. Pairwise stability implies that
+ Z(x̃, x̃) − 2Z(x, x̃)] > ui (µ) − ui (µ̂) + uj (µ) − uj (µ̂) as deviation is not
profitable. Using this fact together with Inequality A.27 it follows that:
1
[Z(x, x)
2

Cij + Cji > ui (µ) − bi (µ̂) + uj (µ) − uj (µ̂).
1019
1020
1021
1022
1023
1024
1025
1026
1027
1028
1029
1030
1031
1032
1033
1034
1035

The above inequality entails agents i, j are a blocking coalition that can gain by
deviating to µ̂; this blocking move is also the only profitable move for i, j due to
pairwise stability of µ and Equation A.28.
In network µ̂ agents i0 , j 0 have an incentive to form a link with one another as
both have surplus link capacity (i.e. degree below the quota) and forming a link is
profitable from Inequality A.27. Moreover, we show in the following that this move
is the one that ensures the highest aggregate net benefits to i0 , j 0 .
We begin with showing that linking across types to other agents of type x, x̃ is
not profitable. Suppose i0 links across types to another agent j 00 ∈ {ι 6= j 0 : xι = xj 0 }.
First, note the pairwise deviation from µ to form i0 j 00 is unprofitable (due to pairwise
stability), thus it less profitable than forming i0 j 0 from µ (which is profitable by
Inequality A.27). Second, the net-increase in value of the pairwise deviation to form
i0 j 0 over i0 j 00 increases from µ to µ̂ - this is true as j 0 loses the link with i from µ while
j 00 has an unchanged number - thus j 0 will have a weakly lower opportunity cost of
deleting links in µ̂. The same argument can be applied to j 0 for i00 ∈ {ι 6= i0 : xι = xi0 }.
We turn to showing that linking to other agents of same type (staying sorted)
is not more profitable as well. Suppose i0 and j 0 link to same types as themselves
38

1036
1037
1038
1039
1040
1041

respectively, i.e. i00 ∈ {ι 6= i0 : xι = xi0 } and j 00 ∈ {ι 6= j 0 : xι = xj 0 }. Suppose ii00 ∈ µ
then no feasible pairwise moves to same type can exist in µ̂ as the move can only
involve deleting links; same is true if jj 00 ∈ µ. Thus instead we use ii00 , jj 00 ∈
/ µ. It
00
00
must be that any pairwise deviation forming either ii or jj from µ is unprofitable
(as µ is pairwise stable); this implies that for any ι ∈ νi00 (µ̂) and ι0 ∈ νj 00 (µ̂) it holds
that:
ui0 (µ̂ ∪ {i0 i00 }\{i00 ι}) − ui0 (µ̂) + ui00 (µ̂ ∪ {i0 i00 }\{i00 ι}) − ui00 (µ̂) − τi00 ι ≤ z(x,
(A.29)
x),
0 00
00 0
0 00
00 0
uj 0 (µ̂ ∪ {j j }\{j ι }) − uj 0 (µ̂) + uj 00 (µ̂ ∪ {j j }\{j ι }) − uj 00 (µ̂) − τj 00 ι0 ≤ z(x̃,
(A.30)
x̃).

1042

As ui0 (µ̃) − ui0 (µ̂) + uj 0 (µ̃) − uj 0 (µ̂) = z(x, x̃) + z(x̃, x) it follows that
ui0 (µ̃) − ui0 (µ̂) + uj 0 (µ̃) − uj 0 (µ̂) + Ci0 j 0 + Cj 0 i0 > z(x, x) + z(x̃, x̃).

1043
1044
1045
1046
1047
1048
1049
1050
1051
1052
1053
1054

1055
1056
1057

1058
1059
1060

The above inequality implies together with Inequalities A.29 and A.30 that the
total gains for i0 and j 0 exceeds the total value that could be generated from alternative deviations. Thus there are two pairwise moves from µ to µ̂ and from µ̂ to µ̃
which both provide strictly higher utility to the deviating agents.
Pairwise stability follows from three arguments. First, all deviations among
agents where only links in µ̃ ∩ µ are deleted will provide at most the same value
in µ̃ that the deviations did in µ - this follows as these agents all have the same links
and in µ̃ all agents are connected in µ̃ and thus only direct links matter. This upper
limit too gains from deviations implies none of these moves can be profitable as they
were unprofitable form µ. Second, deviations that involve deletion of links in µ̃\µ
are shown above to provide strictly higher value than any other deviations - thus
deviating from µ̃ must also provide strictly lower value. 
Proof of Proposition 5.. Under asymptotic independence it follows that average per
agent utility for type x under asymptotic perfect sorting converges to (using a geometric series):
(κ − 1) δ
z(x, x)
1 − (κ − 1) δ
Let ωxx̃ = κ · E[δ pij |xi = x, xj = x̃]. Suppose that for two types, x, x̃ there is not
perfect sorting, and in particular there is some mixing between them, i.e. ωxx̃ > 0;
the average per agent utility is:


(κ − 1) δ
− ωx · z(x, x) + ωx · z(x, x̃).
1 − (κ − 1) δ

39

1061
1062
1063
1064
1065
1066
1067
1068
1069
1070

1071
1072
1073

1074
1075

1076
1077
1078
1079
1080
1081
1082
1083

1084
1085
1086
1087
1088
1089
1090
1091

Each agent will almost surely have κ links as it is assumed that each link adds
positive value and there are asymptotic infinite agents (only a finite number can then
not fulfill the degree quota).
As we have a finite set of types we can assume then for large populations there
is a subset of types, X̂ ⊆ X, where for every type x ∈ X̂ it holds that there is an
asymptotic strictly positive share of the total number of agents of that type, i.e.,
limn→∞ (|{i ∈ Nn }xi =x |/n) > 0. If there is only one such type, i.e. |X̂| = 1, then
asymptotic perfect sorting follows by assumption as the asymptotic number of links
is κ.
For any two types x, x̃ ∈ X̂ which are mixing their average utility is:




nx · z(x, x) + nx̃ · z(x̃, x̃)
1 nx · ωxx̃
(κ − 1) δ
− ·
· [Z(x, x) + Z(x̃, x̃) − 2Z(x, x̃)].
1 − (κ − 1) δ
nx + nx̃
2 nx + nx̃
As there is supermodularity it follows that Z(x, x) + Z(x̃, x̃) − 2Z(x, x̃) > 0 and
thus mixing must decrease utility. The same argument can be applied by mixing
between multiple types. 
Appendix B. Supplementary appendix: finite poulation and constant decay in spillovers
This appendix extends the analysis of sorted networks with finite number of
agents to a setting where decay is constant. We prove properties of stability and efficiency for a sub-class of sort-connected networks under constant decay. Specifically
we show that certain network with sorted connectivity are pairwise stable for low to
moderate spillovers. We also show that these network are suboptimal for moderate
to high spillovers.
The appendix is split into two sub-appendices, Appendix B.1 which contains the
main results and Appendix B.2 which only contains auxiliary results.
Appendix B.1. Suboptimal sorting in local trees
We begin by describing the sub-class of sort-connected networks. Informally put,
the sub-class has the added requirement that networks are not only connected within
each type, but also resembles a certain tree structure. We define a tree as a network
where every pair of agents are connected by a unique path. The structure of each
subnetwork is such that from the perspective of every agent (i.e. the ego-network)
each subnetwork appears as a tree locally. That is, the network becomes a tree if
we remove all links for the agents furthest away from the considered agent which are

40

1092
1093
1094
1095
1096

1097

not on their shortest path(s) to the considered agent. Therefore the networks have
a local tree structure but not a global one.
The formal definition of local trees is described below. The definition employs
the network diameter which is the maximum distance between any two agents, i.e.
m(µ) = supi,j∈N pij (µ).
Definition 11. A network µ is a local tree when each agent i has κ links where:

1100

• for each other agent j 6= i at distance pij (µ) ≤ mn,κ − 2 there are κ − 1 links
between agent j and j 0 such that j 0 is one step further away, i.e. pij (µ) =
pij 0 (µ) − 1;

1101

• the network diameter m(µ) = mn,κ ,

1098
1099

l−1
mn,κ = arg min{m : Σm
) + 1 ≥ n}.
l=1 (κ(κ − 1)
m

1102
1103
1104
1105
1106
1107
1108
1109
1110
1111
1112
1113
1114
1115
1116
1117
1118
1119

(B.1)

The structure of local trees entails that each agent has κ · (κ P
− 1)p−1 agents at
l−1
distance p < m, where m = mn,κ . At distance p = m there are n− m−1
l=1 κ·(κ−1)
(all remaining agents). This structure implies that every agent’s utility is maximized
subject to the constraint of all agents having at most κ links;20 a side effect is that
utility before transfers is symmetric.
A necessary condition for local trees to exist is that there is no link surplus, i.e.
degree quota is binding (∀i ∈ N : ki = κ). Note this binding condition is only
possible when n · κ is even.
P
l−1
then it is an exact local
When a local tree network fulfills n = m
l=1 κ · (κ − 1)
tree. See the next sub-appendix for an elaborate treatment of structure of exactly
local trees. Two subclasses of exact local trees which are worth mentioning. The
first is a network known as a cycle or a ring. The cycle is characterized by having
a minimal
degree quota (κ = 2) among local trees and a maximal diameter
 n−1 possible

(m = 2 ). The second is a clique where all agents are linked, i.e. the complete
network. Cliques have maximal degree quotas (κ = n − 1) and minimal diameters
(m = 1). Both subclasses has a network which exists for any n. Note that in Example
1 each of the two components is both a cycle and a clique. Note that there exist
non-trivial networks beyond the cycle and the clique.21
20

The maximization of utility follows from the observation that each agent has at most κ links,
so at distance p there can be at most κ · (κ − 1)p−1 agents.
21
An example is {i1 i2 , i1 i3 , i1 i4 , i2 i5 , i2 i6 , i3 i7 , i3 i8 , i4 i9 , i4 i10 , i5 i7 , i5 i9 , i6 i8 , i6 i10 , i7 i9 , i8 i10 } when
n = 10, κ = 3 and N = {i1 , i2 , .., i10 }.

41

1120
1121
1122
1123

1124
1125

1126
1127
1128
1129
1130
1131
1132
1133

1134
1135
1136
1137

1138
1139
1140
1141
1142
1143
1144
1145
1146
1147
1148
1149
1150
1151
1152
1153
1154
1155

In order to derive our results it is necessary to restrict ourselves to a subset of
local trees. The subset are those local trees where the deletion of links leads to equal
losses to both of agents whose link is deleted; thus we refer to these local trees as
having symmetric losses:
Definition 12. A local tree µ has symmetric losses when at every distance p =
1, .., m it holds that |{i ∈ N : pιi (µ\{ιι0 }) = p}| = |{i ∈ N : pι0 i (µ\{ιι0 }) = p}|.
Whether or not symmetric losses is a generic property for all local trees is an open
question. However, in simulations that we perform it holds all network configurations
which are local trees up to size n = 10 have symmetric losses (see result below and
proof for exhibition of examples). In addition, for size up to n = 16 it has been
shown to hold for any networks examined in the simulation.
A generalization of stable but suboptimal sorting under constant decay is expressed below. While allowing for constant decay rather than hyperbolic it the set
of networks are further restricted.
Theorem 3. Suppose there is supermodularity, a degree quota κ and each type has
equal number of agents. It follows that any network which is sort-connected and
consist of symmetric local trees is also: (i) pairwise stable if δ < δ stab ; and, (ii)
inefficient if δ > δ opt . The thresholds satisfy δ opt , δ stab ∈ (0, 1) where δ opt < δ stab
Proof. We show properties (i) and (ii) together. Let µ be a network which is perfectly
sorted into |X| components, one for each type. Each component is a local tree with
n/|X| agents. Let there be no transfers between any agents.
As each subnetwork for a given type is a local tree it is stable against deviations by
agents of the same type - this follows as local trees provides maximal possible benefits
among feasible structures of the subnetwork for all agents in the subnetwork. Thus
only two agents of different types may have a profitable deviation which is feasible.
Let ι, j be agents of respectively types x and x̃. These two agents can deviate by
each deleting a link to ι0 and j 0 respectively while jointly forming a link. The new
network resulting from deletion is denoted µ̂ = µ\{ιι0 , jj 0 }. The move resulting from
deletion and forming a link is denoted µ̆ = µ̂ ∪ {ιj}. An alternative network is µ̃,
the type-bridged network of µ, where the links ιι0 , jj 0 are removed while the links
ιj, ι0 , j 0 have been formed; thus µ̃ = µ̂ ∪ {ιj, ι0 j 0 }.
Define the gross loss of benefits for i as ui (µ̂) − ui (µ) while the gross gains are
ui (µ̃)−ui (µ̂). There must exist a threshold of externalities δ stab ∈ (0, 1) where µ is no
longer pairwise stable as cost of deviation monotonically decreases and approaches
zero as δ → 1 while gains are monotonically increasing. The monotonicity of losses is
a consequence of the fact that gross loss consists of shortest paths from µ, where ιι0 is
42

1156
1157
1158
1159
1160
1161
1162

included in the shortest path, which have longer length in µ̂ and thus are discounted
more. Therefore the gross loss is mitigated by a higher δ as the longer shortest paths
are punished less. The monotonicity of gains follows as the gains consist of new
shortest paths to agents of type x̃ through ιj and j 0 ι0 the value of these increases for
higher δ.
Exploiting the that Fact 1 and 2 from Appendix Appendix B.2 hold for local
trees it follows that for any other agent i of type x (i.e. i is in N \{ι, ι0 } and xi = x):
ui (µ̃) − ui (µ) > δ min(piι (µ̃),piι0 (µ̃)) [uι (µ̆) − uι (µ)].

1163

Aggregating for all agents this implies:
U (µ̃) − U (µ) > [uι (µ̆) − uι (µ)] ·

X

δ min(piι (µ̃),piι0 (µ̃)) + [uj (µ̆) − uj (µ)] ·

1165
1166
1167
1168
1169
1170
1171
1172

δ min(pij (µ),pij 0 (µ)) .

x0i =x̃

xi =x
1164

X

where m = mn,κ . The inequality above implies the following: if U (µ̃) − U (µ) = 0
then uι (µ̆) − uι (µ) + uj (µ̆) − uj (µ) < 0; U (µ̃) − U (µ) > 0 when uι (µ̆) − uι (µ) +
uj (µ̆) − uj (µ) = 0. It can also be argued that there must exist a threshold, δ opt ,
such that when δ = δ opt then U (µ̃) − U (µ) = 0 and that δ opt < δ stab . This follows as
U (µ̃)−U (µ) < 0 for δ = 0 and U (µ̃)−U (µ) > 0 when uι (µ̃)−uι (µ)+uj (µ̃)−uj (µ) = 0
as well as continuity of U (µ̃) − U (µ) in δ.
This entails that for δ > δ opt then µ̃ provide higher aggregate payoff. Moreover
we showed previously that for δ < δ stab then µ is pairwise (Nash) stable. Thus we
have proven properties (i) and (ii).

1173

1174
1175
1176
1177
1178
1179
1180
1181
1182
1183
1184
1185
1186

For constant decay the thresholds governing when sorting is respectively suboptimal and stable, i.e. δ opt , δ stab , can be determined explicitly by solving polynomial
equations for every deviation. Moreover, for exact local trees there is a unique solution. In Figure B.3 the two thresholds from Theorem 3, δ opt (Ẑ), δ stab (Ẑ).
The plots in Figure B.3 are made for variations of exact local trees. The upper
plots corresponds to cliques with various sizes. The lower plot have fixed degree quota
(κ=100) and the threshold is simulated using pattern in utility that is demonstrated
in Appendix Appendix B.2. The plots show the scope for inefficiency, i.e. the
gap between δ opt (Ẑ), δ stab (Ẑ), increases with the number of agents involved. This
makes sense intuitively as the two agents forming the link will fail to account for an
increasing number of indirect connections between the two groups. As the number of
indirect connections increases at with the squared with total number of agents then
larger populations will lead to larger gaps of inefficiency.
43

= 2, m = 1

Connecting threshold,

100
10
10

1

100

Connecting threshold,

100
10

1

10

2

10

Stability
Efficiency

2

101

100

1

10

2

10

3

100
100

Stability
Efficiency
101

10

102

= 100, m = 2

3

102

= 10, m = 1

100

Strength of complentarity, Z

10

1

10

2

100

100

Stability
Efficiency
101

1

10

2

10

3

10

4

102

100

= 100, m = 3

100

Stability
Efficiency
101

10

102

Strength of complentarity, Z

10

1

10

2

100

= 100, m = 1

Stability
Efficiency
101

102

= 100, m = 4

Stability
Efficiency
101

102

Strength of complentarity, Z

Figure B.3: Visualization of thresholds for connecting from Theorem 3.
The upper diagrams correspond to cliques and the lower ones to exact local trees (where thresholds
stem from Equations B.4, B.5, B.10, B.11).

1187
1188
1189
1190
1191
1192
1193
1194

1195
1196
1197
1198

1199
1200
1201

1202
1203

Appendix B.2. Local trees
This sub-appendix provides auxiliary results for deriving the generalization of
suboptimal sorting. We begin our focus on exact local trees and subsequently more
generally in local tree networks, see Definition 11 in the previous sub-appendix.
We will examine a generic network µ which is perfectly sorted and assume that
the subset of links for each type is a component that can be classified as either a local
tree or an exact local tree. Let networks µx and µx̃ be the components associated
with respectively types x, x̃ ∈ X. We will focus on three particular moves:
• Pairwise deletion of a link : Suppose two links ιι0 , jj 0 ∈ µ are deleted and agents
ι and j have respectively type x and x̃; thus the two links are not from the
same component. Let the new network that results from removal of the links
be denoted µ̂ = µ\{ιι0 , jj 0 }.
• Pairwise formation of a link across types: This move presumes that both agents
are also deleting a link. We denote this as a move where agents ι and j form
a link: µ̆ = µ̂ ∪ {ιj}.
• Double pairwise formation of a link across types: When two links are formed
across types in µ this corresponds to a non-pairwise deviation as it requires

44

1204
1205

1206
1207
1208

1209
1210
1211
1212

four coalition members. We denote this as a move where both agents ι and j
as well as ι0 and j 0 form a link: µ̃ = µ̂ ∪ {ιj, ι0 j 0 }.
Finally let i denote a generic agent of type x. Let the shortest path in µ from
i to either ι or ι0 be denoted p̂i where p̂i = min(piι (µ̂), piι0 (µ̂)). When p̂i = 0 then
either i = ι or i = ι0 .
Basic properties. We exploit that µ is a local tree (see Definition 11). Throughout
the remainder of the paper let m = mn,κ (see Equation B.1). We express each agent’s
number of paths of length p as a function of the number of agents and the degree
quota:
#pi (µ)

p−1

= κ(κ−1)

m
X
∆#(n, κ) =
(κ·(κ−1)l−1 )−n, (B.2)

−1=m (p)·∆#(n, κ),

l=1
1213
1214

where 1=m (p) is the Dirac measure of whether p = m. Using the local tree
structure we can express utility without transfers of each agent:
ui (µ) =

m
X

#li (µ) · δ l · z(x, x).

l=1
1215
1216
1217
1218
1219
1220
1221
1222
1223
1224
1225
1226
1227

1228
1229
1230
1231
1232

Exact local trees
Recall exact local trees are local trees where ∆#(n, κ) = 0. We will argue that
this entails that exact local trees have the essential property that for every pair of
agents there is a unique shortest path of at most length m and the number of paths
for every agent is prescribed by Equation B.2. This can be deducted as follows.
Note first that the fact that theP
number of walks with at most length m starting
p
in a given agent i cannot exceed m
p=1 #i (·). Recall also that local trees has the
property that all agents are reached within distance m. Moreover
exact local trees
P
p
#
has the property that for any agent i it holds that n − 1 = m
i (µ); thus every
p=1
shortest path with distances less than or equal to m must be a unique path between
the two particular agents.
The uniqueness and countability of paths can be used to infer the losses when
links are either removed or added to an exact local tree.
Exact local trees - loss from deletion. In order to examine the impact of deletion of
a link it is sufficient to analyze what happens to one component of types. This is
sufficient as other components as the conclusions are valid for all.
The deletion of link ιι0 implies that any pair of agents i, i0 whose (unique) shortest
path in µ includes the link ιι0 will have a new shortest routing path. For exact local
45

1233
1234
1235
1236
1237
1238
1239
1240
1241

trees we can exactly determine the length of the new path. Let i be the agent
whose distance to ι is least and let i0 be the agent whose distance to ι0 is least, i.e.
piι (µ) < piι0 (µ) and pi0 ι0 (µ) < pi0 ι (µ).
First when link ιι0 is deleted we can show there is no shortest path between i and
i0 in µ̂ with length below 2m − p̂i − p̂i0 ; that is there is no ii0 whose shortest path
in µ includes ιι0 such that pii0 (µ̂) < 2m − p̂i − p̂i0 . Suppose this was not true. Then
there would exist an agent j who (1) is on the new shortest path between i and i0
in µ̂ and (2) whose shortest path to agents ι and ι0 does not include the link ιι0 and
(3) such that
pji (µ̂) + pji0 (µ̂) < 2m − p̂i − p̂i0 ,
pji (µ̂) + pji0 (µ̂) < 2m − min(piι (µ), piι0 (µ)) − min(pi0 ι (µ), pi0 ι0 (µ)).

1242
1243
1244
1245

As by construction piι (µ) < piι0 (µ) and pi0 ι0 (µ) < pi0 ι (µ) then the expression above
is equivalent to: pji (µ̂)+pji0 (µ̂) < 2m−piι (µ)−pi0 ι0 (µ). As the shortest path between
i and ι as well as between i0 and ι0 are unchanged from µ to µ̂ it follows that we can
further rewrite into:
pji (µ̂) + pji0 (µ̂) < 2m − piι (µ̂) − pi0 ι0 (µ̂)

1246
1247
1248
1249
1250
1251
1252
1253
1254
1255
1256
1257
1258
1259
1260
1261
1262
1263

However, the above statement implies that in network µ that either ι or ι0 has
two paths with lengths of at most m but this violates the definition of exact local
trees.
We can now show that when link ιι0 is deleted the new shortest path between i
and i0 in µ̂ has a length of exactly 2m− p̂i − p̂i0 . This is shown by demonstrating there
is an agent j such that pji (µ̂) = m − p̂i and pji0 (µ̂) = m − p̂i0 . This can be shown
follows. Suppose that pji (µ̂) = m − p̂i . We will demonstrate that pji0 (µ̂) = m − p̂i0 .
As pji (µ̂) = m − p̂i it follows that pjι (µ̂) = m. From the definition of exact local
trees there must exist a path of length less than m between j and ι0 in network µ.
As argued in the paragraph above neither of these paths can be strictly shorter than
m and consequently they must both be exactly m.
The number of shortest paths of length p which become altered for agent i is
(κ − 1)p−p̂i −1 for p = p̂i , .., m − 2, m − 1. This can be demonstrated as follows. If
agent piι (µ) = m and piι0 (µ) = m then no shortest paths are altered; this is clear as
agent i as none of the unique shortest paths includes ιι0 as they have at most length
m. If instead piι (µ) = m − 1 then the unique shortest path from i to ι0 includes ιι0 is
the last link; this implies a new shortest path if ιι0 is deleted. Thus if piι (µ) = m − 1
then one shortest path of length m is lost. When piι (µ) = m − 2 then one path of
46

1264
1265
1266
1267

length m − 1 is lost by the same argument; moreover κ − 1 paths that has ιι0 as the
second last link. By induction this can be done at higher order and thus for shorter
distances. Using the number of rerouted paths shown above we can establish the
total number of shortest paths in network µ̂ for agent i that has a length of p:

#pi (µ̂)
1268
1269
1270

(
κ(κ − 1)p−1 − 1>p̂i (p) · (κ − 1)p−p̂i −1 , p ≤ m
=
(κ − 1)2m−p̂i −p ,
p ∈ (m, 2m − p̂i ].

(B.3)

By combining the count of shortest paths rerouted with their new length we can
generalize the loss for any agent from the deletion of link ιι0 when all agents are
homogeneous of type x:
m−p̂i

ui (µ) − ui (µ̂) =

X

(κ − 1)l−1 · δ l−1+p̂i − δ 2m−(l−1)−p̂i · z(x, x).

(B.4)

l=1
1271
1272

We can aggregate the losses across homogeneous agents of type x and we arrive
at the following expression:

U (µ) − U (µ̂) =

m
X


2l · (κ − 1)l−1 · δ l−1 − δ 2m−(l−1)



· z(x, x).

(B.5)

l=1
1273
1274
1275
1276
1277
1278
1279

Exact local trees - gains from linking across types. We move on to establishing the
gains of establishing a link in a perfectly sorted network where each component is
an exact local tree.
The gains to agents ι and j of forming a link ιj are direct benefits and the new
indirect connections that are accessed through the link ιj. For agent ι the benefits
from forming a link with j can be computed with Equation B.3 where the input length
is added one (as ιj is added to the shortest path). Recall µ̆ = µ ∪ {ιj}\{ιι0 , jj 0 }.
"
uι (µ̆) − uι (µ) =

m
X
l=0

1280
1281
1282
1283
1284

(κ − 1)l · δ l +

m−1
X

#

(κ − 1)l · δ 2m−l · z(x, x̃).

(B.6)

l=0

The above expression is relevant for evaluating the pairwise gains as it captures
individual benefits for a pairwise formation of a link by ι and j. However, we are also
interested in the sub-connected network as it allows to assess the efficiency. Suppose
instead now that ι0 and j 0 also form a link; thus ιj, ι0 j 0 are formed while ιι0 , jj 0 are
deleted. Let µ̃ = µ ∪ {ιj, ι0 j 0 }\{ιι0 , jj 0 }.
47

1285
1286
1287
1288
1289
1290
1291

Let i be an agent of type x and let p̂i still denote the least distance to either ι or
ι . We can calculate the benefits for i when ιj, ι0 j 0 are formed. The benefits are the
indirect connections to agents of type x̃ with whom agent i has no connections in µ.
The aim is to count the number of paths of a given length.
For a given agent i0 of the other type x̃ it must hold that the shortest path in µ̃
between i, i0 either contains the link ιj or the link ι0 j 0 , and thus the distance can be
computed as follows:
0

pii0 (µ̃) = min[pij (µ̃) + pi0 j (µ̃), pij 0 (µ̃) + pi0 j 0 (µ̃)]
1292
1293
1294
1295
1296

We further restrict the above expression. We can use that i and i0 of type x̃
can be at most 2m + 1 away from each other. This follows from the fact that
piι (µ̃) + piι0 (µ̃) = 2m and pi0 j (µ̃) + pi0 j 0 (µ̃) = 2m. As piι (µ̃) + piι0 (µ̃) = 2m and
ιj, ι0 j 0 ∈ µ̃ then it must be that pij + pij 0 = 2m + 2. These facts together entail we
can rewrite Equation B.7:
pii0 (µ̃) = min[pij (µ̃) + pi0 j (µ̃), pij 0 (µ̃) + pi0 j 0 (µ̃)]
= min[pij (µ̃) + pi0 j (µ̃), 4m + 2 − pij (µ̃) − pi0 j (µ̃)].

1297
1298
1299
1300

• for distance p ∈ {1 + p̂i , ..., m + 1 + p̂i } there are (κ − 1)p−1−p̂i agents;

1302

• for distance p ∈ {m + 2 + p̂i , ..., 2m + 1} there are (κ − 1)2m+1−(p−1−p̂i ) .

1304
1305
1306
1307

(B.8)

From the above expression it follows that pii0 ≤ 2m + 1 as the expression is
maximized for pij + pi0 j = 2m + 1.
The number of shortest paths from i through ιj to agents of the other type x̃ can
be found using Equation B.3 for agent ι adding extra distance 1 + p̂i :22

1301

1303

(B.7)

The shortest paths from i not routed through ι but instead through ι0 are those
where p + 1 + p̂i > 2m + 1; from Equation B.8 we know the new shortest path length
is 4m + 2 − p − 1 − p̂i . The number of shortest paths through ι0 in network µ̃ will be
(κ − 1)2m+1−(p−1−p̂i ) and the new length 4m + 2 − p − 1 − p̂i . These facts together
imply:

p−1−p̂i

,
p ∈ {p̂i + 1, .., m + 1 + p̂i },
(κ − 1)
p
p
2m+1−p−
p̂i
#i (µ̃) − #i (µ̂) = (κ − 1)
, p ∈ {m + p̂i + 2, .., 2m + 1},


(κ − 1)p+p̂i −2m−1 , p ∈ {2m + 1 − p̂i , .., 2m}.

22

(B.9)

Shortest paths from i must contain both ιj and every link in the shortest path from i to j.

48

1308
1309

From the number of paths above we can derive the change in utility from when
ιj, ι0 j 0 are added to the network for a given agent i of type x.
Pm

(κ − 1)l · δ l+p̂i
Pl=0
m−1
l
2m−l+p̂i 
· z(x, x̃).
ui (µ̃) − ui (µ̂) =  +
p̂i (κ − 1) · δ
Pl=
p̂i −1
l
2m+l−p̂i
+
(κ
−
1)
·
δ
l=0


1310
1311

By aggregating over all agents of type the gain in benefits by forming ιj, ι0 j 0 is as
follows:

U (µ̃)−U (µ̂) =

m
X

1313
1314
1315
1316
1317
1318
1319
1320
1321
1322
1323
1324
1325
1326




p=0

1312

(B.10)



1<m (p) · 2 · (κ − 1)p +
Pm−1
1=m (p) · (n − 2 · l=1 (κ − 1)l )




· +
+

Pm

l
l+p
l=0 (κ − 1) · δ
Pm−1
(κ − 1)l · δ 2m−l+p ·Z(x, x̃).
Pl=p
p−1
l
2m+l−p
l=0 (κ − 1) · δ
(B.11)

Local trees
We can use the analysis above on exact local trees to bound the gains and
losses for (non-exact) local trees. Recall that exact local trees has the property
that ∆#(n, κ) = 0 and for non-exact local trees ∆#(n, κ) > 0. Thus the difference
between exact and non-exact local trees is that for a given agent the number of
connected other agents at exactly distance m is lower for non-exact local trees.
Using the analysis of exact local trees we can compute the bounds on loss of
utility for a given agent in the local when a link is deleted - this is done by reusing
Equation B.3 as follows.
We can discount the number of agents initially at distance m by ∆#(n, κ). Moreover, the new distance between agents i and i0 after deletion of the link ιι0 is at least
min(pii0 , 2m − 2 − p̂i − p̂i0 ) at most 2m − p̂i − p̂i0 .23 From these two facts we can derive
the bound in loss of utility when ιι0 is deleted. The upper bound of loss (in terms of
magnitude) is found when new shortest paths have most distance, i.e. 2m − p̂i − p̂i0 ;
the lower bound is found when new distance is least, i.e. min(pii0 , 2m − 2 − p̂i − p̂i0 ):
The upper bound follows from the fact that for any two agents i and i0 in the local tree there
is still always an agent j at distances pij = m − p̂i and pi0 j = m − p̂i0 . The lower bound can
be established by repeating an argument used for exact local trees. If the new distance between
two agents i and i0 after deletion of ιι0 had been less than min(pii0 (µ), 2m − 2 − p̂i − p̂i0 ) then the
following would be true. There would be multiple shortest paths of length less than or equal to
m − 1 between either (ι and j) or (ι0 and j). This would violate the property of local trees that all
shortest paths of length ≤ m − 1 are unique.
23

49

ui (µ) − ui (µ̂) ≤

m−
Xp̂i

h
i

max(0, (κ − 1)l−1 − 1=m (l) · ∆#(n, κ)) δ l−1+p̂i − δ 2m−(l−1)−p̂i · z(x,
(B.12)
x),

l=1

ui (µ) − ui (µ̂) ≥

m̃ h
X

i

(κ − 1)l−1 · δ l−1+p̂i − δ 2m−(l+1)−p̂i · z(x, x),

m̃ = min(m − 1, m −(B.13)
p̂i ).

l=1
1327
1328

Fact 1. If µ is perfectly sorted and consists of |X| components that each constitute
a local tree with n/|X| agents, then for any agent i of type x where p̂i > 0:
ui (µ̂) − ui (µ) > δ p̂i · [uι (µ̂) − uι (µ)],

1329
1330
1331


i m−

i
Xp̂i h
(κ − 1)l−1 · δ l−1 − δ 2m−(l+1) −
(κ − 1)l−1 δ l−1+p̂i − δ 2m−(l−1)−p̂i

m−1
Xh
l=1

m−
Xp̂i

1334
1335
1336

1337
1338
1339

h

i
(κ − 1)l−1 · δ 2m−(l+1)−p̂i − δ 2m−(l+1)+p̂i +

1341

m−1
X

h


i
(κ − 1)l−1 δ l−1+p̂i − δ 2m−(l−1)−p̂i

l=m−p̂i +1

As it holds that 2m − (l + 1) − p̂i < 2m − (l + 1) + p̂i and it holds that l − 1 + p̂i <
2m − (l − 1) − p̂i (equivalent to l < m + 1 − p̂i ) the above inequality is satisfied.
We can also derive bounds on the gains from connecting across types for local
trees. We will not do this explicitly but instead use Definition 12 on symmetric losses
in local trees. This allows to express our next result:
Fact 2. For the perfectly sorted network µ which consists of |X| network components
which each constitute a local tree of n/|X| agents that has symmetric losses then it
holds that for agents i, ι of type x and p̂i > 0
ui (µ̃) − ui (µ̂) ≥ δ p̂i · [uι (µ̆) − uι (µ̂)],

1340

p̂i = min(piι (µ̂), piι0 (µ̂)).

1343

(B.15)

Proof. It holds that uι (µ̃) − uι (µ̂) ≥ uι (µ̆) − uι (µ̂) as µ̃ ⊆ µ̆ (thus all shortest paths
in µ̃ cannot have a length that exceeds that in µ̆). Therefore it suffices to show:
ui (µ̃) − ui (µ̂) ≥ δ p̂i · [uι (µ̃) − uι (µ̂)].

1342

>

0,

>

0.

l=1

l=1

1333

(B.14)

Proof. Inequality B.14 can be rewritten into: δ p̂i ·[uι (µ)−uι (µ̂)]−[ui (µ)−ui (µ̂)] > 0.
This inequality is equivalent to the expression below (derived by substituting in
Inequality B.13 for agent ι and Inequality B.12 for agent i):
δ p̂i ·

1332

p̂i = min(piι (µ̂), piι0 (µ̂)).

(B.16)

As the local tree has symmetric losses it follows that uι (µ̃)−uι (µ̂) = uι0 (µ̃)−uι0 (µ̂);
this follows from the fact that they both gain an equal number of new shortest paths
50

1344
1345
1346
1347
1348
1349
1350

through j, j 0 , this follows as as j, j 0 have same number of paths after deletion of jj 0
due to symmetric losses. This entails that without loss of generality we can assume
that piι = p̂i as otherwise we could substitute ι with ι0 and conduct the analysis
again.
For ι and some agent i0 of type x̃ it holds that pii0 (µ̃) ≤ pιi0 (µ̃) + p̂i . This follows
as there exists a path between i, ι and ι, i0 with respectively lengths pιi0 (µ̃) and p̂i ;
thus pii0 (µ̃) ≤ pιi0 (µ̃) + p̂i . This implies the following inequality must hold:
X
X
δ pii0 (µ̃) ≥ δ pιi (µ̃) ·
δ pιi0 (µ̃) .
xi0 =x̃

1351
1352

xi0 =x̃

Qpιi0 (µ̃)

As uι (µ̃)−uι (µ̂) = xi =x̃ l=1 δ rl ·z(x, x̃) and ui (µ̃)−ui (µ̂) =
z(x, x̃) it follows that Inequality B.16 holds which proves our fact.
P

P

xi =x̃

Qpii0 (µ̃)
l=1

δ rl ·

1353

1354

1355
1356

1357
1358

1359
1360

1361
1362

1363
1364

1365
1366

1367
1368
1369

1370
1371

References
G. S. Becker, A Theory of Marriage: Part I, Journal of Political Economy 81 (1973)
813–846.
A. Bjerre-Nielsen, Sorting in networks: Adversity and structure, arXiv preprint
arXiv:1503.07389 (2015).
M. O. Jackson, The Human Network: How Your Social Position Determines Your
Power, Beliefs, and Behaviors, Pantheon Books, United States of America, 2019.
M. McPherson, L. Smith-Lovin, J. M. Cook, Birds of a Feather: Homophily in Social
Networks, Annual Review of Sociology 27 (2001) 415–444.
M. O. Jackson, A. Wolinsky, A Strategic Model of Social and Economic Networks,
Journal of Economic Theory 71 (1996) 44–74.
J. Ugander, B. Karrer, L. Backstrom, C. Marlow, The anatomy of the facebook
social graph, arXiv preprint arXiv:1111.4503 (2011).
G. Miritello, E. Moro, R. Lara, R. Martinez-Lopez, J. Belchamber, S. G. Roberts,
R. I. Dunbar, Time as a limited resource: Communication strategy in mobile
phone networks, Social Networks 35 (2013) 89–95.
J. Church, I. King, Bilingualism and network externalities, Canadian Journal of
Economics (1993) 337–345.
51

1372
1373

1374
1375

1376
1377

1378
1379

1380
1381

1382
1383

1384
1385

1386
1387

1388
1389

1390
1391

1392
1393

M. Kremer, The O-ring theory of economic development, The Quarterly Journal of
Economics 108 (1993) 551–575.
P. S. Park, J. E. Blumenstock, M. W. Macy, The strength of long-range ties in
population-scale social networks, Science 362 (2018) 1410–1413.
T. C. Schelling, Models of segregation, The American Economic Review 59 (1969)
488–493.
T. C. Schelling, Dynamic models of segregation, Journal of Mathematical Sociology
1 (1971) 143–186.
R. Shimer, L. Smith, Assortative matching and search, Econometrica 68 (2000)
343–369.
H. Chade, J. Eeckhout, L. Smith, Sorting through search and matching models in
economics, Journal of Economic Literature 55 (2017) 493–544.
J. Farrell, S. Scotchmer, Partnerships, The Quarterly Journal of Economics 103
(1988) 279–297.
S. N. Durlauf, A. Seshadri, Is assortative matching efficient?, Economic Theory 21
(2003) 475–493.
P. Legros, A. F. Newman, Assortative Matching in a Non-Transferable World, SSRN
Scholarly Paper ID 328460, Social Science Research Network, Rochester, NY, 2002.
M. Pycia, Stability and preference alignment in matching and coalition formation,
Econometrica 80 (2012) 323–362.
M. Baccara, L. Yariv, Homophily in peer groups, American Economic Journal:
Microeconomics 5 (2013) 69–96.

1396

Y. Xing, Essays in microeconomic theory and the economics of networks, Ph.D.
thesis, Stanford University, 2016. Chapter 1: Who Shares Risk with Whom and
How? Endogenous Matching and Selection of Risk Sharing Equilibria.

1397

J. M. Buchanan, An economic theory of clubs, Economica 32 (1965) 1–14.

1394
1395

1398
1399

J. de Martı́, Y. Zenou, Segregation in friendship networks, The Scandinavian Journal
of Economics 119 (2017) 656–708.

52

1400
1401

1402
1403

1404
1405

1406
1407

1408
1409

1410
1411

1412
1413

1414
1415
1416

1417
1418
1419

F. Bloch, M. O. Jackson, The formation of networks with transfers among players,
Journal of Economic Theory 133 (2007) 83–110.
T. C. Koopmans, M. Beckmann, Assignment problems and the location of economic
activities, Econometrica 25 (1957) 53–76.
C. Johnson, R. P. Gilles, Spatial social networks., Review of Economic Design 5
(2000) 273–299.
M. O. Jackson, B. W. Rogers, The economics of small worlds, Journal of the
European Economic Association 3 (2005) 617–627.
A. Galeotti, S. Goyal, J. Kamphorst, Network formation with heterogeneous players,
Games and Economic Behavior 54 (2006) 353–372.
V. Bala, S. Goyal, A noncooperative model of network formation, Econometrica 68
(2000) 1181–1229.
S. Currarini, M. O. Jackson, P. Pin, An economic model of friendship: Homophily,
minorities, and segregation, Econometrica 77 (2009) 1003–1045.
S. Currarini, M. O. Jackson, P. Pin, Identifying the roles of race-based choice and
chance in high school friendship network formation, Proceedings of the National
Academy of Sciences 107 (2010) 4857–4861.
Y. Bramoullé, S. Currarini, M. O. Jackson, P. Pin, B. W. Rogers, Homophily and
long-run integration in social networks, Journal of Economic Theory 147 (2012)
1754–1786.

1421

J. D. Montgomery, Social networks and labor-market outcomes: Toward an economic
analysis, The American Economic Review 81 (1991) 1408–1418.

1422

M. Galenianos, Referral networks and inequality, Available at SSRN 2768083 (2018).

1420

1423
1424

1425
1426

1427
1428

S. Goyal, F. Vega-Redondo, Structural holes in social networks, Journal of Economic
Theory 137 (2007) 460–492.
P. Legros, A. F. Newman, Beauty Is a Beast, Frog Is a Prince: Assortative Matching
with Nontransferabilities, Econometrica 75 (2007) 1073–1102.
A. S. J. Kelso, V. P. Crawford, Job matching, coalition formation, and gross substitutes, Econometrica 50 (1982) 1483–1504.
53

1429
1430

1431
1432

1433
1434

1435
1436
1437
1438

1439
1440

M. S.-Y. Chwe, Farsighted coalitional stability, Journal of Economic Theory 63
(1994) 299–325.
B. Dutta, S. Ghosal, D. Ray, Farsighted network formation, Journal of Economic
Theory 122 (2005) 143–164.
P. J.-J. Herings, A. Mauleon, V. Vannetelbosch, Farsightedly stable networks, Games
and Economic Behavior 67 (2009) 526–541.
Y. Bachrach, E. Elkind, R. Meir, D. Pasechnik, M. Zuckerman, J. Rothe, J. S.
Rosenschein, The cost of stability in coalitional games, in: M. Mavronicolas, V. G.
Papadopoulou (Eds.), Algorithmic Game Theory, Springer, Berlin, Heidelberg,
2009, pp. 122–134.
B. Klaus, M. Walzl, Stable many-to-many matchings with contracts, Journal of
Mathematical Economics 45 (2009) 422–434.

54

