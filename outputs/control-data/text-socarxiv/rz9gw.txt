Running Head: POWER & DISCOURSE IN COMPUTER SCIENCE EDUCATION

Power, Discourse, and Knowledge in Computer Science Education Advocacy:
An Analysis of Popular Code.org Videos
Sara Vogel
The Graduate Center of the City University of New York
December 2016

1

POWER & DISCOURSE IN COMPUTER SCIENCE EDUCATION

2

Abstract
Universal computer science education (CS for All) policies have been gaining momentum in
localities across the United States. The value of CS education is often presented to the public as
non-partisan and non-controversial. To uncover the kinds of discourses about CS education that
have become “discursive facts,” and how they define and frame notions of “equity” within CS
for All initiatives, I apply theories from poststructural, deconstructionist, and critical traditions to
the analysis of two different versions of a popular CS education advocacy video created by the
non-profit Code.org. Arguments for computer science education offered in these texts merge
historical and traditional views of “science” as apolitical and objective with ​neoliberal notions
about competition​,​ personal agency and individualism, constructions that view programming as
tools to further an omniscient male gaze, and programmers themselves as “magic.” By ​reifying
neoliberal and gendered subject positions, such discursive moves in CS ed advocacy potentially
hinder equity work in the long-run.

POWER & DISCOURSE IN COMPUTER SCIENCE EDUCATION

3

Power, Discourse, and Knowledge in Computer Science Education Advocacy:
An Analysis of Popular Code.org Videos
Universal computer science education (CS for All) policies have been gaining
momentum in localities across the United States. While for decades, computer science (CS)
remained at the fringes of K-12 educational policy, mostly reaching elite white male students,
over the last 2 years, governments as well as advocacy and professional organizations,
educational agencies, and leaders in the technology industry have underscored the importance of
incorporating this particular discipline into the formal school day for all children, projecting and
foreseeing a range of benefits. CS education is now enjoying increased public and private
funding for technologies, implementation, professional development, and research. Several state
departments of education across the United States have mandated that computer science get
integrated into the “core” academic subjects; and networks such as the National CS for All
Consortium are coalescing around these efforts in order to bring them to fruition.
Despite the policy shifts that may occur at the federal level due to the recent presidential
election, discourse around the value of CS education to individuals and societies has made such a
claim on truth, that endorsing such a claim is almost non-controversial -- the cause is shockingly
bipartisan, with a page on the Code.org advocacy website boasting supporters including
President Bill Clinton (D), Senator Marco Rubio (R), Randi Weingarten, the president of the
teacher’s union, and NBA basketball star Chris Bosh (​https://code.org/promote​).
What kinds of discourses about CS education have become non-controversial truth
claims? How and why have those discourses become “discursive facts?” How are these

POWER & DISCOURSE IN COMPUTER SCIENCE EDUCATION

4

discourses defining and framing notions of “equity” within CS for All initiatives? To begin
answering those questions, I seek to apply a number of theories from poststructural,
deconstructionist, and critical traditions about the relationship between power, discourse, and
knowledge, to the analysis of text which advocates for computer science education: two different
versions of a video created by Code.org, one titled “​What Most Schools Don’t Teach​” and “​Code
Stars​,” which have been watched on YouTube more than 3 million and more than 1.5 million
times, respectively.
I will first read Code.org’s general project and context through the lens of Foucault’s
theories on power, knowledge, and discourse, Allen’s feminist-poststructuralist lenses, and
Derrida’s deconstructionism, and then will use theory to seek answers to the question: How do
these videos frame the object of study of computer science and its utility/value for diverse
populations of students that would learn this subject?
Literature Review
Context on Code.org and its CS Education Advocacy Work
Code.org is the leading CS education advocacy organization in the United States. It
frames its mission as “​expanding access to computer science, and increasing participation by
women and underrepresented minorities” (Code.org, 2016). To accomplish this mission,
Code.org creates and hosts curricula and digital tools to teach children concepts in CS (mainly
how to program) and to support CS teachers. The group’s political strategy includes raising
awareness about CS education through their “hour of code” campaign, which they report has
reached 338,566,282 students in 180 countries (​https://code.org/about​). They also create
materials that can be used to lobby or advocate for CS education at local, state, and federal

POWER & DISCOURSE IN COMPUTER SCIENCE EDUCATION

5

levels. The organization is funded by a host of corporate and family foundations including
Google, Microsoft, Facebook, Bill & Melinda Gates, Jeff Bezos of Amazon, and many others
(​https://code.org/about/donors​). It has also partnered with over 100 school districts and dozens of
corporate and non-for-profit organizations which produce their content and tutorials, disseminate
their materials, and promote their work in the United States and abroad
(​https://code.org/about/partners​).
Code.org has become​ an increasingly important node in an international network which
includes actors from the technology industry, government, non-profits, and foundations. Given
the organization’s reach​, even if it is not an official policy-making body, the advocacy texts it
produces are an example of discourse that, in the words of American poststructural critical
theorist, Elizabeth Allan, is still “actively shaping and producing subject positions and the
material realities in which we find ourselves” (2008, pg. 52).
Theoretical Framework
I take up Foucault’s ideas (1990) and his theories as they were later built upon by Allen
(2008) because they help, as Foucault wrote, “unmask” “the political violence which has always
exercised itself obscurely through” society’s institutions (Chomsky & Foucault, 2006). While
using a term like political violence to describe discourses in computer science education may
seem like an exaggeration, Allen reminds us that policy (and in this case policy advocacy)
“discourses produce particular versions of reality and subject positions with material effects”
(2008, pg. 15). Dominant discourses about what it means to be a computer scientist and who can
be one, have contributed to the exclusionary nature of this field in the present day, and must be
challenged, reimagined, and recast in order to truly promote equity in this field. I also draw on

POWER & DISCOURSE IN COMPUTER SCIENCE EDUCATION

6

the writing of French theorist Jacques Derrida, whose method of highlighting, problematizing,
and reimagining the false binaries in texts brought forth deconstructionist methodologies for
textual analysis.
Lenses from Foucault
In laying out the project of his book ​The History of Sexuality, ​French theorist Michel
Foucault states that his aim is not to determine whether discourse and the effects of power it
engenders lead to the “truth” about sex but rather to, “bring out the will to knowledge that serves
as both their support and their instrument” (1990, 12). He writes that he is looking to:
“account for the fact that [sex] is spoken about, to discover who does the speaking, the
positions and viewpoints from which they speak, the institutions which prompt people to
speak about it and which store and distribute the things that are said. What is at issue,
briefly, is the over-all ‘discursive fact,’ the way in which sex is ‘put into discourse.’
Hence, too, my main concern will be to locate the forms of power, the channels it takes,
and the discourses it permeates in order to reach the most tenuous and individual modes
of behavior, the paths that give it access to the rare or scarcely perceivable forms of
desire, how it penetrates and controls everyday pleasure-all this entailing effects that may
be those of refusal, blockage, and invalidation, but also incitement and intensification: in
short, the ‘polymorphous techniques of power’" (1990, pg 11).
According to Foucault, based on the way power is exercised at particular moments, by
complexes of actors, certain discourses and subject positions become institutionalized to the
degree that they seem natural and normal -- for instance, in ​History of Sexuality,​ he traces how
fields such as psychology, medicine, education, and others in the 19th century brought sex into

POWER & DISCOURSE IN COMPUTER SCIENCE EDUCATION

7

discourse in ways that attempted to classify and rationalize it, casting certain sexual behaviors as
abnormal, and certain kinds of people as sexual deviants (1990, pg 69). Those provoked
particular management apparatuses to deal with those perceived abnormalities, continuing to
reproduce sexuality “types” as societal problems. ​Following Foucault’s methodology to an
extent, I seek to discover who speaks about computer science education in Code.org advocacy
materials, who does not speak, the institutions that support speakers, and how power permeates
discourses about CS education to imbue certain definitions of CS, pedagogies, policies, and
practices with legitimacy and to normalize certain subject positions.
As Foucault writes in ​History of Sexuality,​ power is not an institution, or a binary, or an
“all encompassing opposition between rulers and ruled” (1990, pg. 94), but rather is “the name
that one attributes to a complex strategical situation in a particular society” (1990, pg 93) a
“process which, through ceaseless struggles and confrontations, transforms, strengthens, or
reverses force relations” (1990, pg 92). Foucault’s theories of power are particularly apt for
application to Computer Science education policy because the expansion of CS ed at the K-12
levels is being implemented by a broad network of actors, rather than one agent of the state.
These actors exercise power when their strategic actions and relations support each other,
forming a system, or contradict each other and “isolate them from one another” (pg. 93). Even as
federal funding for CS education is in doubt as the new presidential administration transitions to
power, members of the CS for All National Consortium -- including funders, content providers,
local education associations, and researchers -- are able to mobilize their resources to continue
implementing and advocating (​http://www.csforall.org/members/​). In New York City, Mayor
Bill De Blasio has engaged a public-private partnership to fund the initiative, with the

POWER & DISCOURSE IN COMPUTER SCIENCE EDUCATION

8

Foundation for Computer Science NYC coordinating the efforts of multiple public and private
actors. The nuts and bolts of the policy are being worked out through what the NYC Department
of Education has called a “participatory” process which has engaged educators, staffers and
policymakers from the public school system, and actors from industry, foundations and
academia. The network metaphorically demonstrates Foucault’s contention that power is diffuse
-- “produced in every relation from one point to another” (1990, pg 93) -- and productive, able to
create knowledge. It offers a particularly ready formulation for Foucauldian-style analyses.
Lenses from Elizabeth Allen
Foucauldian poststructural approaches to discourse analysis have come under criticism
from critical theorists, who, as Allen writes, seek to use their scholarship to recognize the
ideologies and structures that oppress particular peoples, and to use that work to take a stand on
societal injustices (2008, pg. 7). For critical theorists, Foucauldian poststructuralism’s notion that
power and its natural oppositionary force, resistance, are diffuse, and that their ultimate effects
are never fully known, does not leave much space for systematic resistance and human agency.
Allen has attempted to infuse the human agency implied by critical theory to the
Foucault-inspired poststructural framework, proposing a feminist-poststructuralism. She posits
that “​discourses coalesce to make particular subject positions more prominent than others...” (pg
52). True to Foucault’s notions about the diffuse, strategic nature of power, those dominant
discourses are not set up in some grand opposition to excluded discourses​, but rather, “​some
discourses appear to be dominant because they tend to obscure other discourses that may offer
alternative interpretations” (2008, pg. 21). When women understand how dominant social
structures and processes create new modes of subjectivity and subject positions, Allan argues,

POWER & DISCOURSE IN COMPUTER SCIENCE EDUCATION

9

this perspective can offer them an opportunity to negotiate various discourses. She quotes Mills
(1991), who writes that while discourses "actively constitute us as subjects; individuals have
some part to play in this process, both challenging and rewriting some of the positions within
discourse" (as cited in Allan, 2008, pg 20).
I can use this lens to interpret discourses in computer science education. Not all
interpretations and visions for CS education receive equal weight in public discourse on the
subject. Much of the rhetoric rationalizing CS education policies (as evidenced by media
coverage and government press releases) draws on reasoning that foresees economic and
workforce development related impacts. For example, in President Obama’s CS4All policy
announcement, he repeated the well-worn argument that CS education will help students become
“job-ready on Day 1” (Office of the Press Secretary, 2016). At the local level, politicians such as
New York City mayor, Bill De Blasio, also argue that CS education might continue to attract
employers offering high-paying STEM jobs to New York. While economic and workforce
related computer science education discourses may be dominant in traditional media spaces,
preliminary results of a study I have been conducting with colleagues at the New York
City-based Hive Research Lab suggest that computer science educators in formal and informal
settings, however, have a range of alternative visions for and ideologies around CS education.
Their visions index impacts related to social justice, civics and civic participation, school reform,
skills and competencies, personal agency, and social and technical innovation, in addition to
economic and workforce development (Vogel, Santo, Ching, forthcoming). By highlighting the
dominant, often exclusionary discourses that have been “naturalized” in CS ed, and surfacing

POWER & DISCOURSE IN COMPUTER SCIENCE EDUCATION

10

and elevating alternative discourses, students, teachers, and policymakers will be able to
negotiate more inclusive subject positions for themselves in the field.
Lenses from Derrida
The French philosopher, Jacques Derrida’s book, ​Of Grammatology​ models and puts
forth a methodology for textual analysis that relies on deconstructing the many false hierarchical
dichotomies, or false differences, that exist in texts written in Western contexts and from
Western perspectives -- for example, dichotomies like black/white, poor/rich, woman/man, etc.
Derrida highlights moments in text where the implied hierarchy of the terms in these binaries flip
and the de-privileged term is, for a moment, valued above the traditionally privileged term. He
uses those moments of instability to reconceptualize the relationship between those terms, and
their very existence, demonstrating the multifaceted and unstable nature of meaning, even as he
recognizes the ways that essentialist / dichotomous terminology has been sedimented in our
language and worldviews (Derrida, 2016).
Researchers of equity in computer science education, strive towards a world where all
students engage in fulfilling, enriching ways with the field, no matter the class, race and
gender-based categories they fall into. Those categories have real material effects, but they are,
in essence, social constructions. The deconstructionist method allows us to see the limitations of
those categories, and to, for instance, seek those moments in texts that position students who
have been traditionally minoritized -- labeled with de-privileged terms -- as having assets and
resources that other children do not have. Deconstruction would then have us use those moments
to destabilize and call into question the whole system of simplified dichotomies. Derrida, at the

POWER & DISCOURSE IN COMPUTER SCIENCE EDUCATION

11

same time, recognizes that these categories are hard to shake, and that the goal isn’t to do away
with them, but to problematize them.
Discourse Analysis of Code.org Videos Methodology
As previously mentioned, Allan writes, “policy discourse analysis provides an
opportunity to examine ways in which discourses coalesce to make particular subject positions
more prominent than others via policy” (2008, pg. 52). I watched two of Code.org’s videos,
titled “​What Most Schools Don’t Teach​” and “​Code Stars​,” which have been watched on
YouTube more than 3 million and more than 1.5 million times, respectively. I​ transcribed the
text of the videos, and coded the text based using the CS education visions framework (Vogel,
Santo, Ching, 2017) to categorize statements in terms of their rhetorical center. I also interpreted
the speech and images I viewed through the lenses of the theories presented above in order to
look for the dominant subject positions they promote, and to answer a key question about how
they frame the object of study of computer science for the diverse populations of students they
hope to attract to the discipline. I understand myself to be the instrument of interpretation, which
means that in addition to reading with the theories in mind, I also bring my experiences
negotiating the world as a white, upper middle class woman who has worked in education and
with educational technologies, a vantage point which provides affordances as well as blind-spots
and limitations. This work is just a first step -- there are many ideas, especially regarding
gendered and raced subject positions, which I hope to write about in a future work.
Some of Code.org’s videos are meant to be student-facing, while others are meant for
educators, policymakers, or other adult stakeholders. The two videos I examined ​were​ designed
to appeal to both young people and adults. Students are often addressed directly and cartoon

POWER & DISCOURSE IN COMPUTER SCIENCE EDUCATION

12

images, sports, music, food, games, and gadgets are used as persuasive devices. At the same
time, for Code.org, it is probably more important that these videos appeal to teachers -- if
educators approve of the video, they will show it to their students, who wouldn’t ordinarily seek
out the material.
An important caveat to mention: Code.org publishes dozens of videos and advocacy
materials. Since these two videos were brought online in 2013, there have been many others
produced, some of which more consciously engage with particular racialized and gendered
subject positions in ways the videos I examine do not. For example in a recently published video,
the actress Octavia Spencer promotes Code.org and universal computer science education by
making reference to the new movie ​Hidden Figures​, where she played one of the pioneering
African-American women who worked for NASA as “human computers” in the 1950s. Since I
only look at two videos, there are dynamics in the larger corpus of discourse that this analysis
naturally overlooks.
Findings
Tensions between an “objective” framing and neoliberal values
The popularity of Code.org’s message across political party lines, and the wide popularity
of its videos suggests computer science education advocacy discourse reproduces and reflects
other dominant discourses, which impacts how the object of study of computer science and its
value for diverse populations is cast. On the one hand, discourse around computer science
education has been interpreted as non-controversial / bipartisan and status quo because evoking
the discipline calls on a history and tradition of “science” as something apolitical, objective, and

POWER & DISCOURSE IN COMPUTER SCIENCE EDUCATION

13

fundamentally true.1 This pattern of revealing how discourses get normalized when they become
incorporated into science is a consistent one throughout poststructuralist and deconstructionist
tradition. Foucault wrote about how, the “rarefied and neutral viewpoint of science” (Foucault,
1990, p 53), reinforced truth claims about aberrations and sexual perversions. French theorist
Jacques Derrida wrote of the ways that scientific discourse picked up Greek and Christian
notions of ​logos​ (translated as both spoken words and rationality) to demonstrate the
fundamental nature of the knowledge gained through scientific study (2016). By evoking
“science,” this discipline is able to couch itself in apolitical discourses, and therefore enjoys the
support of many actors.
Simultaneously as CS education is constructed as “objective science” discourses relating
to broader ideological and economic systems, such as neoliberalism, are also prevalent in this
video. As education theorist, Stephen J. Ball defines it, neoliberalism is the “...complex, often
incoherent, unstable, and even contradictory set of practices that are organized around a certain
imagination of the ‘market’ as a basis for ‘the universalisation of market-based social relations,
with the corresponding penetration in almost every single aspect of our lives…” (Ball 2012,
citing Shamir 2008 and Carvalho and Rodrigues, 2006, citing Wood 1997). CS education, as cast
by Code.org in these videos, is a site where the value of people’s skills and knowledge are
interpreted as human capital, revealing the neoliberal logics at the heart of this discourse.
Themes of neoliberalism are revealed at several moments in the videos.
Students as “future workers”

1

Thank you to Michael Mena for his support in helping me formulate these ideas

POWER & DISCOURSE IN COMPUTER SCIENCE EDUCATION

14

The video begins with shots of elementary and middle school students (most of them
students of color) stating what they want to be when they grow up (a chef, a doctor, a teacher,
etc). These shots, meant to demonstrate these students’ future potential, focus on the economic
actors they will become as adults, rather than their actions or knowledge in this present moment,
or their future potential outside of the workforce. At one moment in the video, a student states
she wants to be a “mermaid.” Perhaps meant to provide comic relief, using Derrida’s lens, I
might interpret this as one of those moments in text where, for an instant, the system reflected in
the video is challenged, demonstrating its logics are not as coherent as one would expect. The
truth claim that the video implies regarding the primacy of the economic rationale for driving
especially CS elementary education, is thrown into question. The student, in saying she wants to
be a mermaid, bucks the idea that young people should be viewed through the prism of their
future potential in the workforce. Even if her laughter implies she knows she is in a sense
“joking,” she is operating with her own ideas about her potential -- not the system’s.
That moment is fairly short lived, however. Throughout the video, several other
comments connect computer science skills to success in the technology industry and the
workforce, presenting human capital rationales for computer science education. A cartoon
character of a young white woman asks viewers:
“Well if it's fairly simple, why aren't there more of us doing it [computer science]? Over
the next 10 years there will be 1.4 million jobs in CS and only about 400,000 people
qualified to do those jobs. That's a shortage of 1 million people. So how do you start?”
Later in the video, Mark Zuckerberg, CEO of Facebook, states:

POWER & DISCOURSE IN COMPUTER SCIENCE EDUCATION

15

“Our policy is literally to hire as many talented engineers as we can find. The whole limit
in the system is that there just aren't enough people who are trained and have these skills
today.”
Bronwen Grimes, a technical artist at the technology company, Valve, asks the question:
“Computers are everywhere. You want to work in agriculture [small chuckle] do you
want to work in entertainment? Do you want to work in manufacturing? It's just all over.”
Reducing CS to programming
The students of color that kick off the “Code Stars” video are also asked the question
“what is a computer programmer?” As stated earlier, Code.org frames itself as an advocacy
organization for computer science education. In framing the central question of their promotional
video this way, however, computer science as a discipline is conceived solely as what a
computer programmer does.​ Computer science education scholar, Peter Denning, (2004),
reasoned that the popular conception of CS as just programming largely reflects the needs of
industry, and argues for a wider view in defining what should be taught in computing courses.
He advocates that programming become just one of four principles students study, along with
systems, modeling, and innovating. The recently published K-12 Framework for Computer
Science education has also conceived of a whole range of concepts and practices that count as
computer science education, including values such as analyzing the impacts of computing
innovations in society, and developing inclusive computing cultures and collaboration. But the
testimonials offered in the videos by ​well-known Silicon Valley figures such as Bill Gates and
Mark Zuckerberg -- whose company foundations are first-tier sponsors of Code.org -- focus on
programming, an application of CS that most directly benefits their industries. Ball, who also

POWER & DISCOURSE IN COMPUTER SCIENCE EDUCATION

16

uses a Foucauldian definition of power, describes how “neoliberalism is a process, not something
that is realized as a set of grand strategies and ruptural changes but rather made up of numerous
moves, incremental reforms, displacements and reinscriptions, complicated and stuttering
trajectories of small changes and tactics which work together on systems, organizations and
individuals…” (2012). The quotes and examples above are examples of the subtle ways
neoliberalism has shaped and been shaped by computer science education advocacy discourse,
normalizing the connection between specific skills and knowledges of human beings and
economic productivity.
Personal agency and individualism
The first two comments quoted above, however, offer up slightly different “flavors” of
the economic and workforce rationale than the last quote. As we (Vogel, Santo and Ching,
forthcoming), discovered in our analysis of reasoning for computer science education, arguments
rarely presume just one kind of impact, and rather index multiple areas of impact. For example,
while the cartoon and Zuckerberg speak from the perspective of the industry about a scarcity of
workers, the female designer speaks about how such skills might provide an individual with
more choices for their future employment, indexing themes of personal agency. Those values -tenets of neoliberalism -- are prevalent in these videos. As Zuckerberg says in the video:
“Programming is one of the only things in the world you can do where you can sit down and
make something from scratch, whatever you want.” CEO of Dropbox.com, Drew Houston takes
that point further, emphasizing the reach that one individual can potentially have through
computer programming: “to be able to actually come up with an idea and then see it in your

POWER & DISCOURSE IN COMPUTER SCIENCE EDUCATION

17

hands and then be able to press a button and have it be in millions of people's hands, we're the
first generation in the world that's really had that kind of experience.”
In suggesting that programmers work independently to make influential products “from
scratch” these comments elide the real material and intellectual conditions and supports that are
in fact needed to create and spread technological innovations. Those include early access to
hardware, software, computing communities and education, access to venture capital, and even
friendly regulatory and tax environments for start-ups and technology companies. Conceiving of
the starting condition as a blank slate also neglects to acknowledge how simply embodying
particular racial, gender, class, sexual orientation, language and ability identities affords some
programmers privileges over others, especially in what have often been found to be hostile
monocultural technology companies.
An omniscient male gaze
Another common pattern within the broader theme of personal agency was the notion that
programming affords its practitioners a sense of omniscience. This idea was expressed in
comments such as those posited by Jack Dorsey, of Twitter, who describes one of his early
desires as a child: to be able to program a map that would allow him to “​see what was happening
in the city, how it lived, how it breathed.”​ Comments indexing this “omniscience” also reinforce
patriarchal discourse and gendered
subject positions within CS education.
Even as both women and men describe
the value of computer science skills
and knowledge for them throughout

POWER & DISCOURSE IN COMPUTER SCIENCE EDUCATION

18

the video, and women are depicted as programmers in the workplace, Bill Gates of Microsoft
describes one of his early motivations for learning to code as being able to know which girls
would be in his classes with him. The video highlights this point with an animation of a school
desks from above -- Bill’s in Green and then those of the “girls in his class” in pink.​ Even though
this video was ostensibly produced by Code.org to welcome more women into the field, the idea
of the objectifying male gaze which has pervaded literature, film, and art (Mulvey, 1975),
demonstrates its continued presence in computer science education discourse.
Coding as magic, programmers as wizards
As previously mentioned, the popularity of computer science education may stem from
it’s supposed “scientificity,” which places it discursively outside of politics in the realm of the
objectively “logical” and “rational.” But one interesting contradiction in the discourse branching
off from personal agency and omniscience was the association made between coding and magic.
Houston of Dropbox commented, “it's amazing. I think it's the closest thing we have to a
superpower.” Fortifying the idea that computer programming is magical are the video’s images
of floating drones playing the piano, levitating farm equipment, a car that transforms and folds
up into itself, a robot doing the robot, a man strapped into a contraption that allows him to do
acrobatics at the shoreline. These are certainly images of real-world applications of computing,
but they do not demonstrate the most common, pervasive, and impactful ways this technology
has become embedded into human bodies, politics, economics, sociality and experiences. Within
the CS education scholarly community, there is much talk about the importance of recognizing
skills like computational thinking as something ​humans​ rather than machines, do (Wing, 2006),
but in presenting technology as disconnected from humans and social concerns, these videos

POWER & DISCOURSE IN COMPUTER SCIENCE EDUCATION

19

fetishize it. Students are meant to marvel at the magical, futuristic nature of these images, a
contradiction with the videos’ aims to position young people as human makers of this
technology.
This discourse on personal agency, individualism, omniscience, and magic merges with
neoliberal notions about competition, as crystallized in comments such as one uttered by Gabe
Newell, the founder of the gaming company, Valve: “The programmers of tomorrow are the
wizards of the future. You know you are going to look like you have magic powers compared to
everybody else.” This comment reveals another important contradiction within computer science
education advocacy discourse. The organization’s mission statement of ​“​expanding access to
computer science, and increasing participation by women and underrepresented minorities”
(Code.org, 2016) may index the value of equity -- framed as equal access to resources and
opportunities “for all.” And yet their tactics draw on discourse about competitiveness which view
the projected neoliberal subject watching the video (“you”) as achieving computer science
fluency and literacy above “everyone else.”
Tensions with equity
This contradiction between equity on the one hand, and neoliberal ideas on the other
hand, is also demonstrated in the section of the video kicked off by Houston’s comment: “there's
a much greater need in the world for engineers and people who can write code then there ever
will be supply. We all live very charmed lives.” From there, interviewees comment on the
amenities extended to employees at the largest technology companies, including food, laundry
services, video games and gadgets. There are shots of company cafeterias, employees riding
around on scooters, and playing ping pong. Those perks are often used to entice “the very best”

POWER & DISCOURSE IN COMPUTER SCIENCE EDUCATION

20

employees to work in the technology field. They are of course, not offered to all. Technology
companies have been criticized for creating their own separate, rarefied campuses and the private
transportation systems that link their employees to them (see Crucchiola, 2016; and Roose, 2012
for examples). These Code.org videos celebrate those corporate spaces, rather than consider how
computer science education might help students gain a critical eye about the material impacts of
the technology industry; including the wide reach of their products into all aspects of people’s
lives, concerns over privacy and surveillance, and the acceleration of displacement and
gentrification in many cities thanks to burgeoning tech industries. Given the technology
industry’s support for Code.org, and the political work this organization is involved in, the
presence of these ideas in their promotional videos is not surprising.
Importantly, in those shots of technology employees working and enjoying themselves in
company offices, the viewer’s perspective on those scenes is almost always from behind glass
walls and windows. This image provides a metaphor for what Code.org’s videos are
communicating about “access” and “participation” for underrepresented groups in computer
science education: look, but don’t touch.
Conclusion
Code.org attempts to imagine spaces for young women and students of color in computer
science. ​Analyzing the group’s mission and materials through Foucauldian, feminist
poststructuralist and deconstructionist lenses has helped me uncover the ways that the language
and visuals used in some of their advocacy work, ​reify neoliberal and gendered subject positions,
potentially hindering their equity work in the long-run. Code.org’s mission promoting “access”
and “participation” imagines a future where a select few “wizard” members of underrepresented

POWER & DISCOURSE IN COMPUTER SCIENCE EDUCATION

21

groups assimilate into pre-existing cultures of the technology industry -- cultures which place
limits on not just who counts in computing, but what counts as computing.
Even as these lenses should caution the policy-makers and educators implementing
universal CS education using Code.org materials, these theories also offer up hope. If as Judith
Butler writes, “​we are beings who require language in order to be” (1997, pgs. 1-2), discourse
and language are tools to​ promote computer science education policies, pedagogies and practices
that include a diverse range of subject positions for young people of different backgrounds to
experiment with and to inhabit, eventually leading to broader transformation in industry and
computing cultures, and even transformations in the types of technological innovations that
result from applying CS knowledge.

References
A Framework for K-12 Computer Science Education. (2016). Retrieved July 21, 2016, from
https://k12cs.org/
Allan, E. J. (2008). ​Policy discourses, gender, and education: Constructing women’s status​ (Vol. 11).
Routledge.
Ball, S. J. (2012). ​Global Education Inc.: New Policy Networks and the Neoliberal Imaginary​ (1
edition). Abingdon, Oxon ; New York: Routledge.
Butler, J. (1997). ​Excitable speech: A politics of the performative.​ Psychology Press.
Chomsky, N., & Foucault, M. (2006). ​The Chomsky-Foucault Debate: On Human Nature.​ New
York: New Press, The.

POWER & DISCOURSE IN COMPUTER SCIENCE EDUCATION

22

Code.org. (2013a). ​“Code Stars” - Short Film.​ Retrieved from
https://www.youtube.com/watch?v=dU1xS07N-FA&t=27s
Code.org. (2013b). ​What Most Schools Don’t Teach.​ Retrieved from
https://www.youtube.com/watch?v=nKIu9yen5nc
Code.org. (2015). Partners. Retrieved October 8, 2015, from https://code.org/about/partners
Code.org. (n.d.). About Us. Retrieved December 25, 2016, from https://code.org/about
Crucchiola, J. (2016, February 17). SF’s Tech Bus Problem Isn’t About Buses. It’s About Housing.
WIRED​. Retrieved from
https://www.wired.com/2016/02/sfs-tech-bus-problem-isnt-about-buses-its-about-housing/
CSforAll Consortium. (n.d.). Retrieved December 25, 2016, from http://www.csforall.org/
Denning, P. J. (2004). The field of programmers myth. ​Communications of the ACM,​ ​47(​ 7), 15–20.
Derrida, J. (2016). ​Of grammatology​. JHU Press. Retrieved from
https://books.google.com/books?hl=en&lr=&id=r11eCwAAQBAJ&oi=fnd&pg=PT24&ots=H9T
jwx79Jy&sig=6gi5y_Qa-Mq3dM1HQU2nwEJYEDs
DiSalvo, B., Guzdial, M., Bruckman, A., & McKlin, T. (2014). Saving face while geeking out: Video
game testing as a justification for learning computer science. ​Journal of the Learning Sciences​,
23​(3), 272–315.
DiSalvo, B., Yardi, S., Guzdial, M., McKlin, T., Meadows, C., Perry, K., & Bruckman, A. (2011).
African American Men Constructing Computing Identity. In ​Proceedings of the SIGCHI
Conference on Human Factors in Computing Systems​ (pp. 2967–2970). New York, NY, USA:
ACM. https://doi.org/10.1145/1978942.1979381

POWER & DISCOURSE IN COMPUTER SCIENCE EDUCATION

23

Foucault, M. (1990). ​The History of Sexuality, Vol. 1: An Introduction​. (R. Hurley, Trans.) (Reissue
edition). New York: Vintage.
Mulvey, L. (1989). Visual pleasure and narrative cinema. In ​Visual and other pleasures​ (pp. 14–26).
Springer. Retrieved from http://link.springer.com/chapter/10.1007/978-1-349-19798-9_3
Office of the Press Secretary. (2016). ​FACT SHEET: President Obama Announces Computer Science
For All Initiative.​ Washington D.C.: The White House. Retrieved from
https://www.whitehouse.gov/the-press-office/2016/01/30/fact-sheet-president-obama-announcescomputer-science-all-initiative-0
Ogbu, J. U. (2004). Collective Identity and the Burden of “Acting White” in Black History,
Community, and Education. ​The Urban Review​, ​36​(1), 1–35.
https://doi.org/10.1023/B:URRE.0000042734.83194.f6
Roose, K. (2012, December 26). The Commuter Kings: Riding Along on Silicon Valley’s Exclusive
Shuttles. ​New York Magazine​. Retrieved from
http://nymag.com/daily/intelligencer/2012/12/silicon-valleys-exclusive-shuttles.html
Vogel, S., Santo, R., & Ching, D. (Forthcoming). Visions of Computer Science Education:
Unpacking Arguments for and Projected Impacts of CS4All Initiatives. In ​Proceedings of the
47th ACM Technical Symposium on Computing Science Education.​ Seattle, WA: ACM.

